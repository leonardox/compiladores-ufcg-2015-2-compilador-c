/*
 * generated by Xtext 2.9.1
 */
grammar InternalAnsic;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package org.xtext.example.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.services.AnsicGrammarAccess;

}
@parser::members {
	private AnsicGrammarAccess grammarAccess;

	public void setGrammarAccess(AnsicGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleDomainModel
entryRuleDomainModel
:
{ before(grammarAccess.getDomainModelRule()); }
	 ruleDomainModel
{ after(grammarAccess.getDomainModelRule()); } 
	 EOF 
;

// Rule DomainModel
ruleDomainModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDomainModelAccess().getGeetingsAssignment()); }
		(rule__DomainModel__GeetingsAssignment)
		{ after(grammarAccess.getDomainModelAccess().getGeetingsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleprimary_expression
entryRuleprimary_expression
:
{ before(grammarAccess.getPrimary_expressionRule()); }
	 ruleprimary_expression
{ after(grammarAccess.getPrimary_expressionRule()); } 
	 EOF 
;

// Rule primary_expression
ruleprimary_expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimary_expressionAccess().getAlternatives()); }
		(rule__Primary_expression__Alternatives)
		{ after(grammarAccess.getPrimary_expressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulepostfix_expressionL
entryRulepostfix_expressionL
:
{ before(grammarAccess.getPostfix_expressionLRule()); }
	 rulepostfix_expressionL
{ after(grammarAccess.getPostfix_expressionLRule()); } 
	 EOF 
;

// Rule postfix_expressionL
rulepostfix_expressionL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPostfix_expressionLAccess().getAlternatives()); }
		(rule__Postfix_expressionL__Alternatives)
		{ after(grammarAccess.getPostfix_expressionLAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulepostfix_expression
entryRulepostfix_expression
:
{ before(grammarAccess.getPostfix_expressionRule()); }
	 rulepostfix_expression
{ after(grammarAccess.getPostfix_expressionRule()); } 
	 EOF 
;

// Rule postfix_expression
rulepostfix_expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPostfix_expressionAccess().getGroup()); }
		(rule__Postfix_expression__Group__0)
		{ after(grammarAccess.getPostfix_expressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleargument_expression_listI
entryRuleargument_expression_listI
:
{ before(grammarAccess.getArgument_expression_listIRule()); }
	 ruleargument_expression_listI
{ after(grammarAccess.getArgument_expression_listIRule()); } 
	 EOF 
;

// Rule argument_expression_listI
ruleargument_expression_listI 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgument_expression_listIAccess().getGroup()); }
		(rule__Argument_expression_listI__Group__0)?
		{ after(grammarAccess.getArgument_expression_listIAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleargument_expression_list
entryRuleargument_expression_list
:
{ before(grammarAccess.getArgument_expression_listRule()); }
	 ruleargument_expression_list
{ after(grammarAccess.getArgument_expression_listRule()); } 
	 EOF 
;

// Rule argument_expression_list
ruleargument_expression_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgument_expression_listAccess().getGroup()); }
		(rule__Argument_expression_list__Group__0)
		{ after(grammarAccess.getArgument_expression_listAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleunary_expression
entryRuleunary_expression
:
{ before(grammarAccess.getUnary_expressionRule()); }
	 ruleunary_expression
{ after(grammarAccess.getUnary_expressionRule()); } 
	 EOF 
;

// Rule unary_expression
ruleunary_expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnary_expressionAccess().getAlternatives()); }
		(rule__Unary_expression__Alternatives)
		{ after(grammarAccess.getUnary_expressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleunary_operator
entryRuleunary_operator
:
{ before(grammarAccess.getUnary_operatorRule()); }
	 ruleunary_operator
{ after(grammarAccess.getUnary_operatorRule()); } 
	 EOF 
;

// Rule unary_operator
ruleunary_operator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnary_operatorAccess().getAlternatives()); }
		(rule__Unary_operator__Alternatives)
		{ after(grammarAccess.getUnary_operatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecast_expression
entryRulecast_expression
:
{ before(grammarAccess.getCast_expressionRule()); }
	 rulecast_expression
{ after(grammarAccess.getCast_expressionRule()); } 
	 EOF 
;

// Rule cast_expression
rulecast_expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCast_expressionAccess().getAlternatives()); }
		(rule__Cast_expression__Alternatives)
		{ after(grammarAccess.getCast_expressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulemultiplicative_expressionI
entryRulemultiplicative_expressionI
:
{ before(grammarAccess.getMultiplicative_expressionIRule()); }
	 rulemultiplicative_expressionI
{ after(grammarAccess.getMultiplicative_expressionIRule()); } 
	 EOF 
;

// Rule multiplicative_expressionI
rulemultiplicative_expressionI 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicative_expressionIAccess().getAlternatives()); }
		(rule__Multiplicative_expressionI__Alternatives)
		{ after(grammarAccess.getMultiplicative_expressionIAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulemultiplicative_expression
entryRulemultiplicative_expression
:
{ before(grammarAccess.getMultiplicative_expressionRule()); }
	 rulemultiplicative_expression
{ after(grammarAccess.getMultiplicative_expressionRule()); } 
	 EOF 
;

// Rule multiplicative_expression
rulemultiplicative_expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicative_expressionAccess().getGroup()); }
		(rule__Multiplicative_expression__Group__0)
		{ after(grammarAccess.getMultiplicative_expressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleadditive_expression
entryRuleadditive_expression
:
{ before(grammarAccess.getAdditive_expressionRule()); }
	 ruleadditive_expression
{ after(grammarAccess.getAdditive_expressionRule()); } 
	 EOF 
;

// Rule additive_expression
ruleadditive_expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditive_expressionAccess().getGroup()); }
		(rule__Additive_expression__Group__0)
		{ after(grammarAccess.getAdditive_expressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleshift_expression
entryRuleshift_expression
:
{ before(grammarAccess.getShift_expressionRule()); }
	 ruleshift_expression
{ after(grammarAccess.getShift_expressionRule()); } 
	 EOF 
;

// Rule shift_expression
ruleshift_expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShift_expressionAccess().getGroup()); }
		(rule__Shift_expression__Group__0)
		{ after(grammarAccess.getShift_expressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerelational_expression
entryRulerelational_expression
:
{ before(grammarAccess.getRelational_expressionRule()); }
	 rulerelational_expression
{ after(grammarAccess.getRelational_expressionRule()); } 
	 EOF 
;

// Rule relational_expression
rulerelational_expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelational_expressionAccess().getGroup()); }
		(rule__Relational_expression__Group__0)
		{ after(grammarAccess.getRelational_expressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleequality_expression
entryRuleequality_expression
:
{ before(grammarAccess.getEquality_expressionRule()); }
	 ruleequality_expression
{ after(grammarAccess.getEquality_expressionRule()); } 
	 EOF 
;

// Rule equality_expression
ruleequality_expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEquality_expressionAccess().getGroup()); }
		(rule__Equality_expression__Group__0)
		{ after(grammarAccess.getEquality_expressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleand_expression
entryRuleand_expression
:
{ before(grammarAccess.getAnd_expressionRule()); }
	 ruleand_expression
{ after(grammarAccess.getAnd_expressionRule()); } 
	 EOF 
;

// Rule and_expression
ruleand_expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnd_expressionAccess().getGroup()); }
		(rule__And_expression__Group__0)
		{ after(grammarAccess.getAnd_expressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexclusive_or_expression
entryRuleexclusive_or_expression
:
{ before(grammarAccess.getExclusive_or_expressionRule()); }
	 ruleexclusive_or_expression
{ after(grammarAccess.getExclusive_or_expressionRule()); } 
	 EOF 
;

// Rule exclusive_or_expression
ruleexclusive_or_expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExclusive_or_expressionAccess().getGroup()); }
		(rule__Exclusive_or_expression__Group__0)
		{ after(grammarAccess.getExclusive_or_expressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleinclusive_or_expression
entryRuleinclusive_or_expression
:
{ before(grammarAccess.getInclusive_or_expressionRule()); }
	 ruleinclusive_or_expression
{ after(grammarAccess.getInclusive_or_expressionRule()); } 
	 EOF 
;

// Rule inclusive_or_expression
ruleinclusive_or_expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInclusive_or_expressionAccess().getGroup()); }
		(rule__Inclusive_or_expression__Group__0)
		{ after(grammarAccess.getInclusive_or_expressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulelogical_and_expression
entryRulelogical_and_expression
:
{ before(grammarAccess.getLogical_and_expressionRule()); }
	 rulelogical_and_expression
{ after(grammarAccess.getLogical_and_expressionRule()); } 
	 EOF 
;

// Rule logical_and_expression
rulelogical_and_expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogical_and_expressionAccess().getGroup()); }
		(rule__Logical_and_expression__Group__0)
		{ after(grammarAccess.getLogical_and_expressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulelogical_or_expression
entryRulelogical_or_expression
:
{ before(grammarAccess.getLogical_or_expressionRule()); }
	 rulelogical_or_expression
{ after(grammarAccess.getLogical_or_expressionRule()); } 
	 EOF 
;

// Rule logical_or_expression
rulelogical_or_expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogical_or_expressionAccess().getGroup()); }
		(rule__Logical_or_expression__Group__0)
		{ after(grammarAccess.getLogical_or_expressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleconditional_expression
entryRuleconditional_expression
:
{ before(grammarAccess.getConditional_expressionRule()); }
	 ruleconditional_expression
{ after(grammarAccess.getConditional_expressionRule()); } 
	 EOF 
;

// Rule conditional_expression
ruleconditional_expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditional_expressionAccess().getGroup()); }
		(rule__Conditional_expression__Group__0)
		{ after(grammarAccess.getConditional_expressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleassignment_expression
entryRuleassignment_expression
:
{ before(grammarAccess.getAssignment_expressionRule()); }
	 ruleassignment_expression
{ after(grammarAccess.getAssignment_expressionRule()); } 
	 EOF 
;

// Rule assignment_expression
ruleassignment_expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignment_expressionAccess().getAlternatives()); }
		(rule__Assignment_expression__Alternatives)
		{ after(grammarAccess.getAssignment_expressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexpression
entryRuleexpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleexpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule expression
ruleexpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getGroup()); }
		(rule__Expression__Group__0)
		{ after(grammarAccess.getExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleassignment_operator
entryRuleassignment_operator
:
{ before(grammarAccess.getAssignment_operatorRule()); }
	 ruleassignment_operator
{ after(grammarAccess.getAssignment_operatorRule()); } 
	 EOF 
;

// Rule assignment_operator
ruleassignment_operator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignment_operatorAccess().getAlternatives()); }
		(rule__Assignment_operator__Alternatives)
		{ after(grammarAccess.getAssignment_operatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleconstant_expression
entryRuleconstant_expression
:
{ before(grammarAccess.getConstant_expressionRule()); }
	 ruleconstant_expression
{ after(grammarAccess.getConstant_expressionRule()); } 
	 EOF 
;

// Rule constant_expression
ruleconstant_expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstant_expressionAccess().getConditional_expressionParserRuleCall()); }
		ruleconditional_expression
		{ after(grammarAccess.getConstant_expressionAccess().getConditional_expressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledeclaration
entryRuledeclaration
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruledeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule declaration
ruledeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclarationAccess().getGroup()); }
		(rule__Declaration__Group__0)
		{ after(grammarAccess.getDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledeclaration_specifiers
entryRuledeclaration_specifiers
:
{ before(grammarAccess.getDeclaration_specifiersRule()); }
	 ruledeclaration_specifiers
{ after(grammarAccess.getDeclaration_specifiersRule()); } 
	 EOF 
;

// Rule declaration_specifiers
ruledeclaration_specifiers 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclaration_specifiersAccess().getAlternatives()); }
		(rule__Declaration_specifiers__Alternatives)
		{ after(grammarAccess.getDeclaration_specifiersAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleinit_declarator_list
entryRuleinit_declarator_list
:
{ before(grammarAccess.getInit_declarator_listRule()); }
	 ruleinit_declarator_list
{ after(grammarAccess.getInit_declarator_listRule()); } 
	 EOF 
;

// Rule init_declarator_list
ruleinit_declarator_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInit_declarator_listAccess().getGroup()); }
		(rule__Init_declarator_list__Group__0)
		{ after(grammarAccess.getInit_declarator_listAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleinit_declarator
entryRuleinit_declarator
:
{ before(grammarAccess.getInit_declaratorRule()); }
	 ruleinit_declarator
{ after(grammarAccess.getInit_declaratorRule()); } 
	 EOF 
;

// Rule init_declarator
ruleinit_declarator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInit_declaratorAccess().getGroup()); }
		(rule__Init_declarator__Group__0)
		{ after(grammarAccess.getInit_declaratorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestorage_class_specifier
entryRulestorage_class_specifier
:
{ before(grammarAccess.getStorage_class_specifierRule()); }
	 rulestorage_class_specifier
{ after(grammarAccess.getStorage_class_specifierRule()); } 
	 EOF 
;

// Rule storage_class_specifier
rulestorage_class_specifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStorage_class_specifierAccess().getAlternatives()); }
		(rule__Storage_class_specifier__Alternatives)
		{ after(grammarAccess.getStorage_class_specifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletype_specifier
entryRuletype_specifier
:
{ before(grammarAccess.getType_specifierRule()); }
	 ruletype_specifier
{ after(grammarAccess.getType_specifierRule()); } 
	 EOF 
;

// Rule type_specifier
ruletype_specifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getType_specifierAccess().getAlternatives()); }
		(rule__Type_specifier__Alternatives)
		{ after(grammarAccess.getType_specifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestruct_or_union_specifier
entryRulestruct_or_union_specifier
:
{ before(grammarAccess.getStruct_or_union_specifierRule()); }
	 rulestruct_or_union_specifier
{ after(grammarAccess.getStruct_or_union_specifierRule()); } 
	 EOF 
;

// Rule struct_or_union_specifier
rulestruct_or_union_specifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStruct_or_union_specifierAccess().getAlternatives()); }
		(rule__Struct_or_union_specifier__Alternatives)
		{ after(grammarAccess.getStruct_or_union_specifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestruct_or_union
entryRulestruct_or_union
:
{ before(grammarAccess.getStruct_or_unionRule()); }
	 rulestruct_or_union
{ after(grammarAccess.getStruct_or_unionRule()); } 
	 EOF 
;

// Rule struct_or_union
rulestruct_or_union 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStruct_or_unionAccess().getAlternatives()); }
		(rule__Struct_or_union__Alternatives)
		{ after(grammarAccess.getStruct_or_unionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestruct_declaration_list
entryRulestruct_declaration_list
:
{ before(grammarAccess.getStruct_declaration_listRule()); }
	 rulestruct_declaration_list
{ after(grammarAccess.getStruct_declaration_listRule()); } 
	 EOF 
;

// Rule struct_declaration_list
rulestruct_declaration_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getStruct_declaration_listAccess().getStruct_declarationParserRuleCall()); }
			(rulestruct_declaration)
			{ after(grammarAccess.getStruct_declaration_listAccess().getStruct_declarationParserRuleCall()); }
		)
		(
			{ before(grammarAccess.getStruct_declaration_listAccess().getStruct_declarationParserRuleCall()); }
			(rulestruct_declaration)*
			{ after(grammarAccess.getStruct_declaration_listAccess().getStruct_declarationParserRuleCall()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestruct_declaration
entryRulestruct_declaration
:
{ before(grammarAccess.getStruct_declarationRule()); }
	 rulestruct_declaration
{ after(grammarAccess.getStruct_declarationRule()); } 
	 EOF 
;

// Rule struct_declaration
rulestruct_declaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStruct_declarationAccess().getGroup()); }
		(rule__Struct_declaration__Group__0)
		{ after(grammarAccess.getStruct_declarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulespecifier_qualifier_list
entryRulespecifier_qualifier_list
:
{ before(grammarAccess.getSpecifier_qualifier_listRule()); }
	 rulespecifier_qualifier_list
{ after(grammarAccess.getSpecifier_qualifier_listRule()); } 
	 EOF 
;

// Rule specifier_qualifier_list
rulespecifier_qualifier_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSpecifier_qualifier_listAccess().getAlternatives()); }
		(rule__Specifier_qualifier_list__Alternatives)
		{ after(grammarAccess.getSpecifier_qualifier_listAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestruct_declarator_list
entryRulestruct_declarator_list
:
{ before(grammarAccess.getStruct_declarator_listRule()); }
	 rulestruct_declarator_list
{ after(grammarAccess.getStruct_declarator_listRule()); } 
	 EOF 
;

// Rule struct_declarator_list
rulestruct_declarator_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStruct_declarator_listAccess().getGroup()); }
		(rule__Struct_declarator_list__Group__0)
		{ after(grammarAccess.getStruct_declarator_listAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestruct_declarator
entryRulestruct_declarator
:
{ before(grammarAccess.getStruct_declaratorRule()); }
	 rulestruct_declarator
{ after(grammarAccess.getStruct_declaratorRule()); } 
	 EOF 
;

// Rule struct_declarator
rulestruct_declarator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStruct_declaratorAccess().getAlternatives()); }
		(rule__Struct_declarator__Alternatives)
		{ after(grammarAccess.getStruct_declaratorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleenum_specifier
entryRuleenum_specifier
:
{ before(grammarAccess.getEnum_specifierRule()); }
	 ruleenum_specifier
{ after(grammarAccess.getEnum_specifierRule()); } 
	 EOF 
;

// Rule enum_specifier
ruleenum_specifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnum_specifierAccess().getAlternatives()); }
		(rule__Enum_specifier__Alternatives)
		{ after(grammarAccess.getEnum_specifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleenumerator_list
entryRuleenumerator_list
:
{ before(grammarAccess.getEnumerator_listRule()); }
	 ruleenumerator_list
{ after(grammarAccess.getEnumerator_listRule()); } 
	 EOF 
;

// Rule enumerator_list
ruleenumerator_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumerator_listAccess().getGroup()); }
		(rule__Enumerator_list__Group__0)
		{ after(grammarAccess.getEnumerator_listAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleenumerator
entryRuleenumerator
:
{ before(grammarAccess.getEnumeratorRule()); }
	 ruleenumerator
{ after(grammarAccess.getEnumeratorRule()); } 
	 EOF 
;

// Rule enumerator
ruleenumerator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumeratorAccess().getAlternatives()); }
		(rule__Enumerator__Alternatives)
		{ after(grammarAccess.getEnumeratorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletype_qualifier
entryRuletype_qualifier
:
{ before(grammarAccess.getType_qualifierRule()); }
	 ruletype_qualifier
{ after(grammarAccess.getType_qualifierRule()); } 
	 EOF 
;

// Rule type_qualifier
ruletype_qualifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getType_qualifierAccess().getAlternatives()); }
		(rule__Type_qualifier__Alternatives)
		{ after(grammarAccess.getType_qualifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledeclarator
entryRuledeclarator
:
{ before(grammarAccess.getDeclaratorRule()); }
	 ruledeclarator
{ after(grammarAccess.getDeclaratorRule()); } 
	 EOF 
;

// Rule declarator
ruledeclarator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclaratorAccess().getAlternatives()); }
		(rule__Declarator__Alternatives)
		{ after(grammarAccess.getDeclaratorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledirect_declarator
entryRuledirect_declarator
:
{ before(grammarAccess.getDirect_declaratorRule()); }
	 ruledirect_declarator
{ after(grammarAccess.getDirect_declaratorRule()); } 
	 EOF 
;

// Rule direct_declarator
ruledirect_declarator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDirect_declaratorAccess().getAlternatives()); }
		(rule__Direct_declarator__Alternatives)
		{ after(grammarAccess.getDirect_declaratorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledirect_declaratorI
entryRuledirect_declaratorI
:
{ before(grammarAccess.getDirect_declaratorIRule()); }
	 ruledirect_declaratorI
{ after(grammarAccess.getDirect_declaratorIRule()); } 
	 EOF 
;

// Rule direct_declaratorI
ruledirect_declaratorI 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDirect_declaratorIAccess().getAlternatives()); }
		(rule__Direct_declaratorI__Alternatives)
		{ after(grammarAccess.getDirect_declaratorIAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulepointer
entryRulepointer
:
{ before(grammarAccess.getPointerRule()); }
	 rulepointer
{ after(grammarAccess.getPointerRule()); } 
	 EOF 
;

// Rule pointer
rulepointer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPointerAccess().getAlternatives()); }
		(rule__Pointer__Alternatives)
		{ after(grammarAccess.getPointerAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletype_qualifier_list
entryRuletype_qualifier_list
:
{ before(grammarAccess.getType_qualifier_listRule()); }
	 ruletype_qualifier_list
{ after(grammarAccess.getType_qualifier_listRule()); } 
	 EOF 
;

// Rule type_qualifier_list
ruletype_qualifier_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getType_qualifier_listAccess().getType_qualifierParserRuleCall()); }
			(ruletype_qualifier)
			{ after(grammarAccess.getType_qualifier_listAccess().getType_qualifierParserRuleCall()); }
		)
		(
			{ before(grammarAccess.getType_qualifier_listAccess().getType_qualifierParserRuleCall()); }
			(ruletype_qualifier)*
			{ after(grammarAccess.getType_qualifier_listAccess().getType_qualifierParserRuleCall()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleparameter_type_list
entryRuleparameter_type_list
:
{ before(grammarAccess.getParameter_type_listRule()); }
	 ruleparameter_type_list
{ after(grammarAccess.getParameter_type_listRule()); } 
	 EOF 
;

// Rule parameter_type_list
ruleparameter_type_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameter_type_listAccess().getGroup()); }
		(rule__Parameter_type_list__Group__0)
		{ after(grammarAccess.getParameter_type_listAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleparameter_list
entryRuleparameter_list
:
{ before(grammarAccess.getParameter_listRule()); }
	 ruleparameter_list
{ after(grammarAccess.getParameter_listRule()); } 
	 EOF 
;

// Rule parameter_list
ruleparameter_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameter_listAccess().getGroup()); }
		(rule__Parameter_list__Group__0)
		{ after(grammarAccess.getParameter_listAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleparameter_declaration
entryRuleparameter_declaration
:
{ before(grammarAccess.getParameter_declarationRule()); }
	 ruleparameter_declaration
{ after(grammarAccess.getParameter_declarationRule()); } 
	 EOF 
;

// Rule parameter_declaration
ruleparameter_declaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameter_declarationAccess().getAlternatives()); }
		(rule__Parameter_declaration__Alternatives)
		{ after(grammarAccess.getParameter_declarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleidentifier_list
entryRuleidentifier_list
:
{ before(grammarAccess.getIdentifier_listRule()); }
	 ruleidentifier_list
{ after(grammarAccess.getIdentifier_listRule()); } 
	 EOF 
;

// Rule identifier_list
ruleidentifier_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdentifier_listAccess().getGroup()); }
		(rule__Identifier_list__Group__0)
		{ after(grammarAccess.getIdentifier_listAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletype_name
entryRuletype_name
:
{ before(grammarAccess.getType_nameRule()); }
	 ruletype_name
{ after(grammarAccess.getType_nameRule()); } 
	 EOF 
;

// Rule type_name
ruletype_name 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getType_nameAccess().getGroup()); }
		(rule__Type_name__Group__0)
		{ after(grammarAccess.getType_nameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleabstract_declarator
entryRuleabstract_declarator
:
{ before(grammarAccess.getAbstract_declaratorRule()); }
	 ruleabstract_declarator
{ after(grammarAccess.getAbstract_declaratorRule()); } 
	 EOF 
;

// Rule abstract_declarator
ruleabstract_declarator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstract_declaratorAccess().getAlternatives()); }
		(rule__Abstract_declarator__Alternatives)
		{ after(grammarAccess.getAbstract_declaratorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledirect_abstract_declarator
entryRuledirect_abstract_declarator
:
{ before(grammarAccess.getDirect_abstract_declaratorRule()); }
	 ruledirect_abstract_declarator
{ after(grammarAccess.getDirect_abstract_declaratorRule()); } 
	 EOF 
;

// Rule direct_abstract_declarator
ruledirect_abstract_declarator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDirect_abstract_declaratorAccess().getAlternatives()); }
		(rule__Direct_abstract_declarator__Alternatives)
		{ after(grammarAccess.getDirect_abstract_declaratorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledirect_abstract_declaratorI
entryRuledirect_abstract_declaratorI
:
{ before(grammarAccess.getDirect_abstract_declaratorIRule()); }
	 ruledirect_abstract_declaratorI
{ after(grammarAccess.getDirect_abstract_declaratorIRule()); } 
	 EOF 
;

// Rule direct_abstract_declaratorI
ruledirect_abstract_declaratorI 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDirect_abstract_declaratorIAccess().getAlternatives()); }
		(rule__Direct_abstract_declaratorI__Alternatives)
		{ after(grammarAccess.getDirect_abstract_declaratorIAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleinitializer
entryRuleinitializer
:
{ before(grammarAccess.getInitializerRule()); }
	 ruleinitializer
{ after(grammarAccess.getInitializerRule()); } 
	 EOF 
;

// Rule initializer
ruleinitializer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitializerAccess().getAlternatives()); }
		(rule__Initializer__Alternatives)
		{ after(grammarAccess.getInitializerAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleinitializer_list
entryRuleinitializer_list
:
{ before(grammarAccess.getInitializer_listRule()); }
	 ruleinitializer_list
{ after(grammarAccess.getInitializer_listRule()); } 
	 EOF 
;

// Rule initializer_list
ruleinitializer_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitializer_listAccess().getGroup()); }
		(rule__Initializer_list__Group__0)
		{ after(grammarAccess.getInitializer_listAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestatement
entryRulestatement
:
{ before(grammarAccess.getStatementRule()); }
	 rulestatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule statement
rulestatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulelabeled_statement
entryRulelabeled_statement
:
{ before(grammarAccess.getLabeled_statementRule()); }
	 rulelabeled_statement
{ after(grammarAccess.getLabeled_statementRule()); } 
	 EOF 
;

// Rule labeled_statement
rulelabeled_statement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLabeled_statementAccess().getAlternatives()); }
		(rule__Labeled_statement__Alternatives)
		{ after(grammarAccess.getLabeled_statementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecompound_statement
entryRulecompound_statement
:
{ before(grammarAccess.getCompound_statementRule()); }
	 rulecompound_statement
{ after(grammarAccess.getCompound_statementRule()); } 
	 EOF 
;

// Rule compound_statement
rulecompound_statement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompound_statementAccess().getAlternatives()); }
		(rule__Compound_statement__Alternatives)
		{ after(grammarAccess.getCompound_statementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledeclaration_list
entryRuledeclaration_list
:
{ before(grammarAccess.getDeclaration_listRule()); }
	 ruledeclaration_list
{ after(grammarAccess.getDeclaration_listRule()); } 
	 EOF 
;

// Rule declaration_list
ruledeclaration_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getDeclaration_listAccess().getDeclarationParserRuleCall()); }
			(ruledeclaration)
			{ after(grammarAccess.getDeclaration_listAccess().getDeclarationParserRuleCall()); }
		)
		(
			{ before(grammarAccess.getDeclaration_listAccess().getDeclarationParserRuleCall()); }
			(ruledeclaration)*
			{ after(grammarAccess.getDeclaration_listAccess().getDeclarationParserRuleCall()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestatement_list
entryRulestatement_list
:
{ before(grammarAccess.getStatement_listRule()); }
	 rulestatement_list
{ after(grammarAccess.getStatement_listRule()); } 
	 EOF 
;

// Rule statement_list
rulestatement_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getStatement_listAccess().getStatementParserRuleCall()); }
			(rulestatement)
			{ after(grammarAccess.getStatement_listAccess().getStatementParserRuleCall()); }
		)
		(
			{ before(grammarAccess.getStatement_listAccess().getStatementParserRuleCall()); }
			(rulestatement)*
			{ after(grammarAccess.getStatement_listAccess().getStatementParserRuleCall()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexpression_statement
entryRuleexpression_statement
:
{ before(grammarAccess.getExpression_statementRule()); }
	 ruleexpression_statement
{ after(grammarAccess.getExpression_statementRule()); } 
	 EOF 
;

// Rule expression_statement
ruleexpression_statement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpression_statementAccess().getAlternatives()); }
		(rule__Expression_statement__Alternatives)
		{ after(grammarAccess.getExpression_statementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleselection_statement
entryRuleselection_statement
:
{ before(grammarAccess.getSelection_statementRule()); }
	 ruleselection_statement
{ after(grammarAccess.getSelection_statementRule()); } 
	 EOF 
;

// Rule selection_statement
ruleselection_statement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelection_statementAccess().getAlternatives()); }
		(rule__Selection_statement__Alternatives)
		{ after(grammarAccess.getSelection_statementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleiteration_statement
entryRuleiteration_statement
:
{ before(grammarAccess.getIteration_statementRule()); }
	 ruleiteration_statement
{ after(grammarAccess.getIteration_statementRule()); } 
	 EOF 
;

// Rule iteration_statement
ruleiteration_statement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIteration_statementAccess().getAlternatives()); }
		(rule__Iteration_statement__Alternatives)
		{ after(grammarAccess.getIteration_statementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulejump_statement
entryRulejump_statement
:
{ before(grammarAccess.getJump_statementRule()); }
	 rulejump_statement
{ after(grammarAccess.getJump_statementRule()); } 
	 EOF 
;

// Rule jump_statement
rulejump_statement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJump_statementAccess().getAlternatives()); }
		(rule__Jump_statement__Alternatives)
		{ after(grammarAccess.getJump_statementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletranslation_unit
entryRuletranslation_unit
:
{ before(grammarAccess.getTranslation_unitRule()); }
	 ruletranslation_unit
{ after(grammarAccess.getTranslation_unitRule()); } 
	 EOF 
;

// Rule translation_unit
ruletranslation_unit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getTranslation_unitAccess().getExternal_declarationParserRuleCall()); }
			(ruleexternal_declaration)
			{ after(grammarAccess.getTranslation_unitAccess().getExternal_declarationParserRuleCall()); }
		)
		(
			{ before(grammarAccess.getTranslation_unitAccess().getExternal_declarationParserRuleCall()); }
			(ruleexternal_declaration)*
			{ after(grammarAccess.getTranslation_unitAccess().getExternal_declarationParserRuleCall()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexternal_declaration
entryRuleexternal_declaration
:
{ before(grammarAccess.getExternal_declarationRule()); }
	 ruleexternal_declaration
{ after(grammarAccess.getExternal_declarationRule()); } 
	 EOF 
;

// Rule external_declaration
ruleexternal_declaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExternal_declarationAccess().getAlternatives()); }
		(rule__External_declaration__Alternatives)
		{ after(grammarAccess.getExternal_declarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefunction_definition
entryRulefunction_definition
:
{ before(grammarAccess.getFunction_definitionRule()); }
	 rulefunction_definition
{ after(grammarAccess.getFunction_definitionRule()); } 
	 EOF 
;

// Rule function_definition
rulefunction_definition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunction_definitionAccess().getAlternatives()); }
		(rule__Function_definition__Alternatives)
		{ after(grammarAccess.getFunction_definitionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIDENTIFIER
entryRuleIDENTIFIER
:
{ before(grammarAccess.getIDENTIFIERRule()); }
	 ruleIDENTIFIER
{ after(grammarAccess.getIDENTIFIERRule()); } 
	 EOF 
;

// Rule IDENTIFIER
ruleIDENTIFIER 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIDENTIFIERAccess().getIDTerminalRuleCall()); }
		RULE_ID
		{ after(grammarAccess.getIDENTIFIERAccess().getIDTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTYPE_NAMEE
entryRuleTYPE_NAMEE
:
{ before(grammarAccess.getTYPE_NAMEERule()); }
	 ruleTYPE_NAMEE
{ after(grammarAccess.getTYPE_NAMEERule()); } 
	 EOF 
;

// Rule TYPE_NAMEE
ruleTYPE_NAMEE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTYPE_NAMEEAccess().getIDTerminalRuleCall()); }
		RULE_ID
		{ after(grammarAccess.getTYPE_NAMEEAccess().getIDTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSTRING_LITERAL
entryRuleSTRING_LITERAL
:
{ before(grammarAccess.getSTRING_LITERALRule()); }
	 ruleSTRING_LITERAL
{ after(grammarAccess.getSTRING_LITERALRule()); } 
	 EOF 
;

// Rule STRING_LITERAL
ruleSTRING_LITERAL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSTRING_LITERALAccess().getSTRINGTerminalRuleCall()); }
		RULE_STRING
		{ after(grammarAccess.getSTRING_LITERALAccess().getSTRINGTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFS
entryRuleFS
:
{ before(grammarAccess.getFSRule()); }
	 ruleFS
{ after(grammarAccess.getFSRule()); } 
	 EOF 
;

// Rule FS
ruleFS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFSAccess().getAlternatives()); }
		(rule__FS__Alternatives)
		{ after(grammarAccess.getFSAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIS
entryRuleIS
:
{ before(grammarAccess.getISRule()); }
	 ruleIS
{ after(grammarAccess.getISRule()); } 
	 EOF 
;

// Rule IS
ruleIS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getISAccess().getAlternatives()); }
			(rule__IS__Alternatives)
			{ after(grammarAccess.getISAccess().getAlternatives()); }
		)
		(
			{ before(grammarAccess.getISAccess().getAlternatives()); }
			(rule__IS__Alternatives)*
			{ after(grammarAccess.getISAccess().getAlternatives()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCONSTANT
entryRuleCONSTANT
:
{ before(grammarAccess.getCONSTANTRule()); }
	 ruleCONSTANT
{ after(grammarAccess.getCONSTANTRule()); } 
	 EOF 
;

// Rule CONSTANT
ruleCONSTANT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCONSTANTAccess().getAlternatives()); }
		(rule__CONSTANT__Alternatives)
		{ after(grammarAccess.getCONSTANTAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimary_expressionAccess().getIDENTIFIERParserRuleCall_0()); }
		ruleIDENTIFIER
		{ after(grammarAccess.getPrimary_expressionAccess().getIDENTIFIERParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_expressionAccess().getCONSTANTParserRuleCall_1()); }
		ruleCONSTANT
		{ after(grammarAccess.getPrimary_expressionAccess().getCONSTANTParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_expressionAccess().getSTRING_LITERALParserRuleCall_2()); }
		ruleSTRING_LITERAL
		{ after(grammarAccess.getPrimary_expressionAccess().getSTRING_LITERALParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimary_expressionAccess().getGroup_3()); }
		(rule__Primary_expression__Group_3__0)
		{ after(grammarAccess.getPrimary_expressionAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionL__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfix_expressionLAccess().getGroup_0()); }
		(rule__Postfix_expressionL__Group_0__0)
		{ after(grammarAccess.getPostfix_expressionLAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPostfix_expressionLAccess().getGroup_1()); }
		(rule__Postfix_expressionL__Group_1__0)
		{ after(grammarAccess.getPostfix_expressionLAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPostfix_expressionLAccess().getGroup_2()); }
		(rule__Postfix_expressionL__Group_2__0)
		{ after(grammarAccess.getPostfix_expressionLAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getPostfix_expressionLAccess().getGroup_3()); }
		(rule__Postfix_expressionL__Group_3__0)
		{ after(grammarAccess.getPostfix_expressionLAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getPostfix_expressionLAccess().getGroup_4()); }
		(rule__Postfix_expressionL__Group_4__0)
		{ after(grammarAccess.getPostfix_expressionLAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getPostfix_expressionLAccess().getGroup_5()); }
		(rule__Postfix_expressionL__Group_5__0)
		{ after(grammarAccess.getPostfix_expressionLAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getPostfix_expressionLAccess().getGroup_6()); }
		(rule__Postfix_expressionL__Group_6__0)?
		{ after(grammarAccess.getPostfix_expressionLAccess().getGroup_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnary_expressionAccess().getPostfix_expressionParserRuleCall_0()); }
		rulepostfix_expression
		{ after(grammarAccess.getUnary_expressionAccess().getPostfix_expressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnary_expressionAccess().getGroup_1()); }
		(rule__Unary_expression__Group_1__0)
		{ after(grammarAccess.getUnary_expressionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnary_expressionAccess().getGroup_2()); }
		(rule__Unary_expression__Group_2__0)
		{ after(grammarAccess.getUnary_expressionAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getUnary_expressionAccess().getGroup_3()); }
		(rule__Unary_expression__Group_3__0)
		{ after(grammarAccess.getUnary_expressionAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getUnary_expressionAccess().getGroup_4()); }
		(rule__Unary_expression__Group_4__0)
		{ after(grammarAccess.getUnary_expressionAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getUnary_expressionAccess().getGroup_5()); }
		(rule__Unary_expression__Group_5__0)
		{ after(grammarAccess.getUnary_expressionAccess().getGroup_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_operator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnary_operatorAccess().getAmpersandKeyword_0()); }
		'&'
		{ after(grammarAccess.getUnary_operatorAccess().getAmpersandKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnary_operatorAccess().getAsteriskKeyword_1()); }
		'*'
		{ after(grammarAccess.getUnary_operatorAccess().getAsteriskKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnary_operatorAccess().getPlusSignKeyword_2()); }
		'+'
		{ after(grammarAccess.getUnary_operatorAccess().getPlusSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getUnary_operatorAccess().getHyphenMinusKeyword_3()); }
		'-'
		{ after(grammarAccess.getUnary_operatorAccess().getHyphenMinusKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getUnary_operatorAccess().getTildeKeyword_4()); }
		'~'
		{ after(grammarAccess.getUnary_operatorAccess().getTildeKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getUnary_operatorAccess().getExclamationMarkKeyword_5()); }
		'!'
		{ after(grammarAccess.getUnary_operatorAccess().getExclamationMarkKeyword_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCast_expressionAccess().getUnary_expressionParserRuleCall_0()); }
		ruleunary_expression
		{ after(grammarAccess.getCast_expressionAccess().getUnary_expressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCast_expressionAccess().getGroup_1()); }
		(rule__Cast_expression__Group_1__0)
		{ after(grammarAccess.getCast_expressionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expressionI__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicative_expressionIAccess().getGroup_0()); }
		(rule__Multiplicative_expressionI__Group_0__0)
		{ after(grammarAccess.getMultiplicative_expressionIAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicative_expressionIAccess().getGroup_1()); }
		(rule__Multiplicative_expressionI__Group_1__0)
		{ after(grammarAccess.getMultiplicative_expressionIAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicative_expressionIAccess().getGroup_2()); }
		(rule__Multiplicative_expressionI__Group_2__0)?
		{ after(grammarAccess.getMultiplicative_expressionIAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_expression__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditive_expressionAccess().getPlusSignKeyword_1_0_0()); }
		'+'
		{ after(grammarAccess.getAdditive_expressionAccess().getPlusSignKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdditive_expressionAccess().getHyphenMinusKeyword_1_0_1()); }
		'-'
		{ after(grammarAccess.getAdditive_expressionAccess().getHyphenMinusKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_expression__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShift_expressionAccess().getLEFT_OPTerminalRuleCall_1_0_0()); }
		RULE_LEFT_OP
		{ after(grammarAccess.getShift_expressionAccess().getLEFT_OPTerminalRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getShift_expressionAccess().getRIGHT_OPTerminalRuleCall_1_0_1()); }
		RULE_RIGHT_OP
		{ after(grammarAccess.getShift_expressionAccess().getRIGHT_OPTerminalRuleCall_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expression__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelational_expressionAccess().getLessThanSignKeyword_1_0_0()); }
		'<'
		{ after(grammarAccess.getRelational_expressionAccess().getLessThanSignKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelational_expressionAccess().getGreaterThanSignKeyword_1_0_1()); }
		'>'
		{ after(grammarAccess.getRelational_expressionAccess().getGreaterThanSignKeyword_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelational_expressionAccess().getLE_OPTerminalRuleCall_1_0_2()); }
		RULE_LE_OP
		{ after(grammarAccess.getRelational_expressionAccess().getLE_OPTerminalRuleCall_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getRelational_expressionAccess().getGE_OPTerminalRuleCall_1_0_3()); }
		RULE_GE_OP
		{ after(grammarAccess.getRelational_expressionAccess().getGE_OPTerminalRuleCall_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expression__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquality_expressionAccess().getEQ_OPTerminalRuleCall_1_0_0()); }
		RULE_EQ_OP
		{ after(grammarAccess.getEquality_expressionAccess().getEQ_OPTerminalRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEquality_expressionAccess().getNE_OPTerminalRuleCall_1_0_1()); }
		RULE_NE_OP
		{ after(grammarAccess.getEquality_expressionAccess().getNE_OPTerminalRuleCall_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignment_expressionAccess().getConditional_expressionParserRuleCall_0()); }
		ruleconditional_expression
		{ after(grammarAccess.getAssignment_expressionAccess().getConditional_expressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssignment_expressionAccess().getGroup_1()); }
		(rule__Assignment_expression__Group_1__0)
		{ after(grammarAccess.getAssignment_expressionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_operator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignment_operatorAccess().getEqualsSignKeyword_0()); }
		'='
		{ after(grammarAccess.getAssignment_operatorAccess().getEqualsSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssignment_operatorAccess().getMUL_ASSIGNTerminalRuleCall_1()); }
		RULE_MUL_ASSIGN
		{ after(grammarAccess.getAssignment_operatorAccess().getMUL_ASSIGNTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAssignment_operatorAccess().getDIV_ASSIGNTerminalRuleCall_2()); }
		RULE_DIV_ASSIGN
		{ after(grammarAccess.getAssignment_operatorAccess().getDIV_ASSIGNTerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getAssignment_operatorAccess().getMOD_ASSIGNTerminalRuleCall_3()); }
		RULE_MOD_ASSIGN
		{ after(grammarAccess.getAssignment_operatorAccess().getMOD_ASSIGNTerminalRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getAssignment_operatorAccess().getADD_ASSIGNTerminalRuleCall_4()); }
		RULE_ADD_ASSIGN
		{ after(grammarAccess.getAssignment_operatorAccess().getADD_ASSIGNTerminalRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getAssignment_operatorAccess().getSUB_ASSIGNTerminalRuleCall_5()); }
		RULE_SUB_ASSIGN
		{ after(grammarAccess.getAssignment_operatorAccess().getSUB_ASSIGNTerminalRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getAssignment_operatorAccess().getLEFT_ASSIGNTerminalRuleCall_6()); }
		RULE_LEFT_ASSIGN
		{ after(grammarAccess.getAssignment_operatorAccess().getLEFT_ASSIGNTerminalRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getAssignment_operatorAccess().getRIGHT_ASSIGNTerminalRuleCall_7()); }
		RULE_RIGHT_ASSIGN
		{ after(grammarAccess.getAssignment_operatorAccess().getRIGHT_ASSIGNTerminalRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getAssignment_operatorAccess().getAND_ASSIGNTerminalRuleCall_8()); }
		RULE_AND_ASSIGN
		{ after(grammarAccess.getAssignment_operatorAccess().getAND_ASSIGNTerminalRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getAssignment_operatorAccess().getXOR_ASSIGNTerminalRuleCall_9()); }
		RULE_XOR_ASSIGN
		{ after(grammarAccess.getAssignment_operatorAccess().getXOR_ASSIGNTerminalRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getAssignment_operatorAccess().getOR_ASSIGNTerminalRuleCall_10()); }
		RULE_OR_ASSIGN
		{ after(grammarAccess.getAssignment_operatorAccess().getOR_ASSIGNTerminalRuleCall_10()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_specifiers__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclaration_specifiersAccess().getGroup_0()); }
		(rule__Declaration_specifiers__Group_0__0)
		{ after(grammarAccess.getDeclaration_specifiersAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeclaration_specifiersAccess().getGroup_1()); }
		(rule__Declaration_specifiers__Group_1__0)
		{ after(grammarAccess.getDeclaration_specifiersAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getDeclaration_specifiersAccess().getGroup_2()); }
		(rule__Declaration_specifiers__Group_2__0)
		{ after(grammarAccess.getDeclaration_specifiersAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Storage_class_specifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStorage_class_specifierAccess().getTYPEDEFTerminalRuleCall_0()); }
		RULE_TYPEDEF
		{ after(grammarAccess.getStorage_class_specifierAccess().getTYPEDEFTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStorage_class_specifierAccess().getEXTERNTerminalRuleCall_1()); }
		RULE_EXTERN
		{ after(grammarAccess.getStorage_class_specifierAccess().getEXTERNTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStorage_class_specifierAccess().getSTATICTerminalRuleCall_2()); }
		RULE_STATIC
		{ after(grammarAccess.getStorage_class_specifierAccess().getSTATICTerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getStorage_class_specifierAccess().getAUTOTerminalRuleCall_3()); }
		RULE_AUTO
		{ after(grammarAccess.getStorage_class_specifierAccess().getAUTOTerminalRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getStorage_class_specifierAccess().getREGISTERTerminalRuleCall_4()); }
		RULE_REGISTER
		{ after(grammarAccess.getStorage_class_specifierAccess().getREGISTERTerminalRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_specifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_specifierAccess().getVOIDTerminalRuleCall_0()); }
		RULE_VOID
		{ after(grammarAccess.getType_specifierAccess().getVOIDTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getType_specifierAccess().getCharzKeyword_1()); }
		'charz'
		{ after(grammarAccess.getType_specifierAccess().getCharzKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getType_specifierAccess().getSHORTTerminalRuleCall_2()); }
		RULE_SHORT
		{ after(grammarAccess.getType_specifierAccess().getSHORTTerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getType_specifierAccess().getINTTerminalRuleCall_3()); }
		RULE_INT
		{ after(grammarAccess.getType_specifierAccess().getINTTerminalRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getType_specifierAccess().getLONGTerminalRuleCall_4()); }
		RULE_LONG
		{ after(grammarAccess.getType_specifierAccess().getLONGTerminalRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getType_specifierAccess().getFLOATTerminalRuleCall_5()); }
		RULE_FLOAT
		{ after(grammarAccess.getType_specifierAccess().getFLOATTerminalRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getType_specifierAccess().getDOUBLETerminalRuleCall_6()); }
		RULE_DOUBLE
		{ after(grammarAccess.getType_specifierAccess().getDOUBLETerminalRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getType_specifierAccess().getSIGNEDTerminalRuleCall_7()); }
		RULE_SIGNED
		{ after(grammarAccess.getType_specifierAccess().getSIGNEDTerminalRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getType_specifierAccess().getUNSIGNEDTerminalRuleCall_8()); }
		RULE_UNSIGNED
		{ after(grammarAccess.getType_specifierAccess().getUNSIGNEDTerminalRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getType_specifierAccess().getStruct_or_union_specifierParserRuleCall_9()); }
		rulestruct_or_union_specifier
		{ after(grammarAccess.getType_specifierAccess().getStruct_or_union_specifierParserRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getType_specifierAccess().getEnum_specifierParserRuleCall_10()); }
		ruleenum_specifier
		{ after(grammarAccess.getType_specifierAccess().getEnum_specifierParserRuleCall_10()); }
	)
	|
	(
		{ before(grammarAccess.getType_specifierAccess().getTYPE_NAMEEParserRuleCall_11()); }
		ruleTYPE_NAMEE
		{ after(grammarAccess.getType_specifierAccess().getTYPE_NAMEEParserRuleCall_11()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStruct_or_union_specifierAccess().getGroup_0()); }
		(rule__Struct_or_union_specifier__Group_0__0)
		{ after(grammarAccess.getStruct_or_union_specifierAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getStruct_or_union_specifierAccess().getGroup_1()); }
		(rule__Struct_or_union_specifier__Group_1__0)
		{ after(grammarAccess.getStruct_or_union_specifierAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getStruct_or_union_specifierAccess().getGroup_2()); }
		(rule__Struct_or_union_specifier__Group_2__0)
		{ after(grammarAccess.getStruct_or_union_specifierAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStruct_or_unionAccess().getSTRUCTTerminalRuleCall_0()); }
		RULE_STRUCT
		{ after(grammarAccess.getStruct_or_unionAccess().getSTRUCTTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStruct_or_unionAccess().getUNIONTerminalRuleCall_1()); }
		RULE_UNION
		{ after(grammarAccess.getStruct_or_unionAccess().getUNIONTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Specifier_qualifier_list__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecifier_qualifier_listAccess().getGroup_0()); }
		(rule__Specifier_qualifier_list__Group_0__0)
		{ after(grammarAccess.getSpecifier_qualifier_listAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSpecifier_qualifier_listAccess().getType_specifierParserRuleCall_1()); }
		ruletype_specifier
		{ after(grammarAccess.getSpecifier_qualifier_listAccess().getType_specifierParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getSpecifier_qualifier_listAccess().getGroup_2()); }
		(rule__Specifier_qualifier_list__Group_2__0)
		{ after(grammarAccess.getSpecifier_qualifier_listAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getSpecifier_qualifier_listAccess().getType_qualifierParserRuleCall_3()); }
		ruletype_qualifier
		{ after(grammarAccess.getSpecifier_qualifier_listAccess().getType_qualifierParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declarator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStruct_declaratorAccess().getDeclaratorParserRuleCall_0()); }
		ruledeclarator
		{ after(grammarAccess.getStruct_declaratorAccess().getDeclaratorParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStruct_declaratorAccess().getGroup_1()); }
		(rule__Struct_declarator__Group_1__0)
		{ after(grammarAccess.getStruct_declaratorAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getStruct_declaratorAccess().getGroup_2()); }
		(rule__Struct_declarator__Group_2__0)
		{ after(grammarAccess.getStruct_declaratorAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum_specifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnum_specifierAccess().getGroup_0()); }
		(rule__Enum_specifier__Group_0__0)
		{ after(grammarAccess.getEnum_specifierAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getEnum_specifierAccess().getGroup_1()); }
		(rule__Enum_specifier__Group_1__0)
		{ after(grammarAccess.getEnum_specifierAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getEnum_specifierAccess().getGroup_2()); }
		(rule__Enum_specifier__Group_2__0)
		{ after(grammarAccess.getEnum_specifierAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumeratorAccess().getIDENTIFIERParserRuleCall_0()); }
		ruleIDENTIFIER
		{ after(grammarAccess.getEnumeratorAccess().getIDENTIFIERParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEnumeratorAccess().getGroup_1()); }
		(rule__Enumerator__Group_1__0)
		{ after(grammarAccess.getEnumeratorAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_qualifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_qualifierAccess().getCONSTTerminalRuleCall_0()); }
		RULE_CONST
		{ after(grammarAccess.getType_qualifierAccess().getCONSTTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getType_qualifierAccess().getVOLATILETerminalRuleCall_1()); }
		RULE_VOLATILE
		{ after(grammarAccess.getType_qualifierAccess().getVOLATILETerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclaratorAccess().getGroup_0()); }
		(rule__Declarator__Group_0__0)
		{ after(grammarAccess.getDeclaratorAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeclaratorAccess().getDirect_declaratorParserRuleCall_1()); }
		ruledirect_declarator
		{ after(grammarAccess.getDeclaratorAccess().getDirect_declaratorParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declarator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirect_declaratorAccess().getGroup_0()); }
		(rule__Direct_declarator__Group_0__0)
		{ after(grammarAccess.getDirect_declaratorAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getDirect_declaratorAccess().getGroup_1()); }
		(rule__Direct_declarator__Group_1__0)
		{ after(grammarAccess.getDirect_declaratorAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorI__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirect_declaratorIAccess().getGroup_0()); }
		(rule__Direct_declaratorI__Group_0__0)
		{ after(grammarAccess.getDirect_declaratorIAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getDirect_declaratorIAccess().getGroup_1()); }
		(rule__Direct_declaratorI__Group_1__0)
		{ after(grammarAccess.getDirect_declaratorIAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getDirect_declaratorIAccess().getGroup_2()); }
		(rule__Direct_declaratorI__Group_2__0)
		{ after(grammarAccess.getDirect_declaratorIAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getDirect_declaratorIAccess().getGroup_3()); }
		(rule__Direct_declaratorI__Group_3__0)
		{ after(grammarAccess.getDirect_declaratorIAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getDirect_declaratorIAccess().getGroup_4()); }
		(rule__Direct_declaratorI__Group_4__0)?
		{ after(grammarAccess.getDirect_declaratorIAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointerAccess().getAsteriskKeyword_0()); }
		'*'
		{ after(grammarAccess.getPointerAccess().getAsteriskKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getPointerAccess().getGroup_1()); }
		(rule__Pointer__Group_1__0)
		{ after(grammarAccess.getPointerAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPointerAccess().getGroup_2()); }
		(rule__Pointer__Group_2__0)
		{ after(grammarAccess.getPointerAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getPointerAccess().getGroup_3()); }
		(rule__Pointer__Group_3__0)
		{ after(grammarAccess.getPointerAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_declaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameter_declarationAccess().getGroup_0()); }
		(rule__Parameter_declaration__Group_0__0)
		{ after(grammarAccess.getParameter_declarationAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getParameter_declarationAccess().getGroup_1()); }
		(rule__Parameter_declaration__Group_1__0)
		{ after(grammarAccess.getParameter_declarationAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getParameter_declarationAccess().getDeclaration_specifiersParserRuleCall_2()); }
		ruledeclaration_specifiers
		{ after(grammarAccess.getParameter_declarationAccess().getDeclaration_specifiersParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Abstract_declarator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstract_declaratorAccess().getDirect_abstract_declaratorParserRuleCall_0()); }
		ruledirect_abstract_declarator
		{ after(grammarAccess.getAbstract_declaratorAccess().getDirect_abstract_declaratorParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstract_declaratorAccess().getGroup_1()); }
		(rule__Abstract_declarator__Group_1__0)
		{ after(grammarAccess.getAbstract_declaratorAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declarator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirect_abstract_declaratorAccess().getGroup_0()); }
		(rule__Direct_abstract_declarator__Group_0__0)
		{ after(grammarAccess.getDirect_abstract_declaratorAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getDirect_abstract_declaratorAccess().getGroup_1()); }
		(rule__Direct_abstract_declarator__Group_1__0)
		{ after(grammarAccess.getDirect_abstract_declaratorAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getDirect_abstract_declaratorAccess().getGroup_2()); }
		(rule__Direct_abstract_declarator__Group_2__0)
		{ after(grammarAccess.getDirect_abstract_declaratorAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getDirect_abstract_declaratorAccess().getGroup_3()); }
		(rule__Direct_abstract_declarator__Group_3__0)
		{ after(grammarAccess.getDirect_abstract_declaratorAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getDirect_abstract_declaratorAccess().getGroup_4()); }
		(rule__Direct_abstract_declarator__Group_4__0)
		{ after(grammarAccess.getDirect_abstract_declaratorAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declaratorI__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirect_abstract_declaratorIAccess().getGroup_0()); }
		(rule__Direct_abstract_declaratorI__Group_0__0)
		{ after(grammarAccess.getDirect_abstract_declaratorIAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getDirect_abstract_declaratorIAccess().getGroup_1()); }
		(rule__Direct_abstract_declaratorI__Group_1__0)
		{ after(grammarAccess.getDirect_abstract_declaratorIAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getDirect_abstract_declaratorIAccess().getGroup_2()); }
		(rule__Direct_abstract_declaratorI__Group_2__0)
		{ after(grammarAccess.getDirect_abstract_declaratorIAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getDirect_abstract_declaratorIAccess().getGroup_3()); }
		(rule__Direct_abstract_declaratorI__Group_3__0)
		{ after(grammarAccess.getDirect_abstract_declaratorIAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitializerAccess().getAssignment_expressionParserRuleCall_0()); }
		ruleassignment_expression
		{ after(grammarAccess.getInitializerAccess().getAssignment_expressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getInitializerAccess().getGroup_1()); }
		(rule__Initializer__Group_1__0)
		{ after(grammarAccess.getInitializerAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getInitializerAccess().getGroup_2()); }
		(rule__Initializer__Group_2__0)
		{ after(grammarAccess.getInitializerAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getLabeled_statementParserRuleCall_0()); }
		rulelabeled_statement
		{ after(grammarAccess.getStatementAccess().getLabeled_statementParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getCompound_statementParserRuleCall_1()); }
		rulecompound_statement
		{ after(grammarAccess.getStatementAccess().getCompound_statementParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getExpression_statementParserRuleCall_2()); }
		ruleexpression_statement
		{ after(grammarAccess.getStatementAccess().getExpression_statementParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSelection_statementParserRuleCall_3()); }
		ruleselection_statement
		{ after(grammarAccess.getStatementAccess().getSelection_statementParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getIteration_statementParserRuleCall_4()); }
		ruleiteration_statement
		{ after(grammarAccess.getStatementAccess().getIteration_statementParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getJump_statementParserRuleCall_5()); }
		rulejump_statement
		{ after(grammarAccess.getStatementAccess().getJump_statementParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabeled_statementAccess().getGroup_0()); }
		(rule__Labeled_statement__Group_0__0)
		{ after(grammarAccess.getLabeled_statementAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getLabeled_statementAccess().getGroup_1()); }
		(rule__Labeled_statement__Group_1__0)
		{ after(grammarAccess.getLabeled_statementAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getLabeled_statementAccess().getGroup_2()); }
		(rule__Labeled_statement__Group_2__0)
		{ after(grammarAccess.getLabeled_statementAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompound_statementAccess().getGroup_0()); }
		(rule__Compound_statement__Group_0__0)
		{ after(grammarAccess.getCompound_statementAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getCompound_statementAccess().getGroup_1()); }
		(rule__Compound_statement__Group_1__0)
		{ after(grammarAccess.getCompound_statementAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getCompound_statementAccess().getGroup_2()); }
		(rule__Compound_statement__Group_2__0)
		{ after(grammarAccess.getCompound_statementAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getCompound_statementAccess().getGroup_3()); }
		(rule__Compound_statement__Group_3__0)
		{ after(grammarAccess.getCompound_statementAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpression_statementAccess().getSemicolonKeyword_0()); }
		';'
		{ after(grammarAccess.getExpression_statementAccess().getSemicolonKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpression_statementAccess().getGroup_1()); }
		(rule__Expression_statement__Group_1__0)
		{ after(grammarAccess.getExpression_statementAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelection_statementAccess().getGroup_0()); }
		(rule__Selection_statement__Group_0__0)
		{ after(grammarAccess.getSelection_statementAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelection_statementAccess().getGroup_1()); }
		(rule__Selection_statement__Group_1__0)
		{ after(grammarAccess.getSelection_statementAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getSelection_statementAccess().getGroup_2()); }
		(rule__Selection_statement__Group_2__0)
		{ after(grammarAccess.getSelection_statementAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIteration_statementAccess().getGroup_0()); }
		(rule__Iteration_statement__Group_0__0)
		{ after(grammarAccess.getIteration_statementAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getIteration_statementAccess().getGroup_1()); }
		(rule__Iteration_statement__Group_1__0)
		{ after(grammarAccess.getIteration_statementAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getIteration_statementAccess().getGroup_2()); }
		(rule__Iteration_statement__Group_2__0)
		{ after(grammarAccess.getIteration_statementAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getIteration_statementAccess().getGroup_3()); }
		(rule__Iteration_statement__Group_3__0)
		{ after(grammarAccess.getIteration_statementAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJump_statementAccess().getGroup_0()); }
		(rule__Jump_statement__Group_0__0)
		{ after(grammarAccess.getJump_statementAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getJump_statementAccess().getGroup_1()); }
		(rule__Jump_statement__Group_1__0)
		{ after(grammarAccess.getJump_statementAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getJump_statementAccess().getGroup_2()); }
		(rule__Jump_statement__Group_2__0)
		{ after(grammarAccess.getJump_statementAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getJump_statementAccess().getGroup_3()); }
		(rule__Jump_statement__Group_3__0)
		{ after(grammarAccess.getJump_statementAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getJump_statementAccess().getGroup_4()); }
		(rule__Jump_statement__Group_4__0)
		{ after(grammarAccess.getJump_statementAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__External_declaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternal_declarationAccess().getFunction_definitionParserRuleCall_0()); }
		rulefunction_definition
		{ after(grammarAccess.getExternal_declarationAccess().getFunction_definitionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExternal_declarationAccess().getDeclarationParserRuleCall_1()); }
		ruledeclaration
		{ after(grammarAccess.getExternal_declarationAccess().getDeclarationParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunction_definitionAccess().getGroup_0()); }
		(rule__Function_definition__Group_0__0)
		{ after(grammarAccess.getFunction_definitionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunction_definitionAccess().getGroup_1()); }
		(rule__Function_definition__Group_1__0)
		{ after(grammarAccess.getFunction_definitionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getFunction_definitionAccess().getGroup_2()); }
		(rule__Function_definition__Group_2__0)
		{ after(grammarAccess.getFunction_definitionAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getFunction_definitionAccess().getGroup_3()); }
		(rule__Function_definition__Group_3__0)
		{ after(grammarAccess.getFunction_definitionAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FS__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFSAccess().getFKeyword_0()); }
		'f'
		{ after(grammarAccess.getFSAccess().getFKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getFSAccess().getFKeyword_1()); }
		'F'
		{ after(grammarAccess.getFSAccess().getFKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getFSAccess().getLKeyword_2()); }
		'l'
		{ after(grammarAccess.getFSAccess().getLKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getFSAccess().getLKeyword_3()); }
		'L'
		{ after(grammarAccess.getFSAccess().getLKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IS__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getISAccess().getUKeyword_0()); }
		'u'
		{ after(grammarAccess.getISAccess().getUKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getISAccess().getUKeyword_1()); }
		'U'
		{ after(grammarAccess.getISAccess().getUKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getISAccess().getLKeyword_2()); }
		'l'
		{ after(grammarAccess.getISAccess().getLKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getISAccess().getLKeyword_3()); }
		'L'
		{ after(grammarAccess.getISAccess().getLKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CONSTANT__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCONSTANTAccess().getGroup_0()); }
		(rule__CONSTANT__Group_0__0)
		{ after(grammarAccess.getCONSTANTAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getCONSTANTAccess().getGroup_1()); }
		(rule__CONSTANT__Group_1__0)
		{ after(grammarAccess.getCONSTANTAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getCONSTANTAccess().getGroup_2()); }
		(rule__CONSTANT__Group_2__0)
		{ after(grammarAccess.getCONSTANTAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary_expression__Group_3__0__Impl
	rule__Primary_expression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimary_expressionAccess().getLeftParenthesisKeyword_3_0()); }
	'('
	{ after(grammarAccess.getPrimary_expressionAccess().getLeftParenthesisKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary_expression__Group_3__1__Impl
	rule__Primary_expression__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimary_expressionAccess().getExpressionParserRuleCall_3_1()); }
	ruleexpression
	{ after(grammarAccess.getPrimary_expressionAccess().getExpressionParserRuleCall_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary_expression__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimary_expressionAccess().getRightParenthesisKeyword_3_2()); }
	')'
	{ after(grammarAccess.getPrimary_expressionAccess().getRightParenthesisKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix_expressionL__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionL__Group_0__0__Impl
	rule__Postfix_expressionL__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionL__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionLAccess().getLeftSquareBracketKeyword_0_0()); }
	'['
	{ after(grammarAccess.getPostfix_expressionLAccess().getLeftSquareBracketKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionL__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionL__Group_0__1__Impl
	rule__Postfix_expressionL__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionL__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionLAccess().getExpressionParserRuleCall_0_1()); }
	ruleexpression
	{ after(grammarAccess.getPostfix_expressionLAccess().getExpressionParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionL__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionL__Group_0__2__Impl
	rule__Postfix_expressionL__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionL__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionLAccess().getRightSquareBracketKeyword_0_2()); }
	']'
	{ after(grammarAccess.getPostfix_expressionLAccess().getRightSquareBracketKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionL__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionL__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionL__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionLAccess().getPostfix_expressionLParserRuleCall_0_3()); }
	rulepostfix_expressionL
	{ after(grammarAccess.getPostfix_expressionLAccess().getPostfix_expressionLParserRuleCall_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix_expressionL__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionL__Group_1__0__Impl
	rule__Postfix_expressionL__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionL__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionLAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getPostfix_expressionLAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionL__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionL__Group_1__1__Impl
	rule__Postfix_expressionL__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionL__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionLAccess().getRightParenthesisKeyword_1_1()); }
	')'
	{ after(grammarAccess.getPostfix_expressionLAccess().getRightParenthesisKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionL__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionL__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionL__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionLAccess().getPostfix_expressionLParserRuleCall_1_2()); }
	rulepostfix_expressionL
	{ after(grammarAccess.getPostfix_expressionLAccess().getPostfix_expressionLParserRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix_expressionL__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionL__Group_2__0__Impl
	rule__Postfix_expressionL__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionL__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionLAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getPostfix_expressionLAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionL__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionL__Group_2__1__Impl
	rule__Postfix_expressionL__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionL__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionLAccess().getArgument_expression_listParserRuleCall_2_1()); }
	ruleargument_expression_list
	{ after(grammarAccess.getPostfix_expressionLAccess().getArgument_expression_listParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionL__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionL__Group_2__2__Impl
	rule__Postfix_expressionL__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionL__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionLAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getPostfix_expressionLAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionL__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionL__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionL__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionLAccess().getPostfix_expressionLParserRuleCall_2_3()); }
	rulepostfix_expressionL
	{ after(grammarAccess.getPostfix_expressionLAccess().getPostfix_expressionLParserRuleCall_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix_expressionL__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionL__Group_3__0__Impl
	rule__Postfix_expressionL__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionL__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionLAccess().getFullStopKeyword_3_0()); }
	'.'
	{ after(grammarAccess.getPostfix_expressionLAccess().getFullStopKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionL__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionL__Group_3__1__Impl
	rule__Postfix_expressionL__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionL__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionLAccess().getIDENTIFIERParserRuleCall_3_1()); }
	ruleIDENTIFIER
	{ after(grammarAccess.getPostfix_expressionLAccess().getIDENTIFIERParserRuleCall_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionL__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionL__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionL__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionLAccess().getPostfix_expressionLParserRuleCall_3_2()); }
	rulepostfix_expressionL
	{ after(grammarAccess.getPostfix_expressionLAccess().getPostfix_expressionLParserRuleCall_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix_expressionL__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionL__Group_4__0__Impl
	rule__Postfix_expressionL__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionL__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionLAccess().getPTR_OPTerminalRuleCall_4_0()); }
	RULE_PTR_OP
	{ after(grammarAccess.getPostfix_expressionLAccess().getPTR_OPTerminalRuleCall_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionL__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionL__Group_4__1__Impl
	rule__Postfix_expressionL__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionL__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionLAccess().getIDENTIFIERParserRuleCall_4_1()); }
	ruleIDENTIFIER
	{ after(grammarAccess.getPostfix_expressionLAccess().getIDENTIFIERParserRuleCall_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionL__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionL__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionL__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionLAccess().getPostfix_expressionLParserRuleCall_4_2()); }
	rulepostfix_expressionL
	{ after(grammarAccess.getPostfix_expressionLAccess().getPostfix_expressionLParserRuleCall_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix_expressionL__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionL__Group_5__0__Impl
	rule__Postfix_expressionL__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionL__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionLAccess().getINC_OPTerminalRuleCall_5_0()); }
	RULE_INC_OP
	{ after(grammarAccess.getPostfix_expressionLAccess().getINC_OPTerminalRuleCall_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionL__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionL__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionL__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionLAccess().getPostfix_expressionLParserRuleCall_5_1()); }
	rulepostfix_expressionL
	{ after(grammarAccess.getPostfix_expressionLAccess().getPostfix_expressionLParserRuleCall_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix_expressionL__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionL__Group_6__0__Impl
	rule__Postfix_expressionL__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionL__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionLAccess().getDEC_OPTerminalRuleCall_6_0()); }
	RULE_DEC_OP
	{ after(grammarAccess.getPostfix_expressionLAccess().getDEC_OPTerminalRuleCall_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionL__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expressionL__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expressionL__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionLAccess().getPostfix_expressionLParserRuleCall_6_1()); }
	rulepostfix_expressionL
	{ after(grammarAccess.getPostfix_expressionLAccess().getPostfix_expressionLParserRuleCall_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix_expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expression__Group__0__Impl
	rule__Postfix_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionAccess().getPrimary_expressionParserRuleCall_0()); }
	ruleprimary_expression
	{ after(grammarAccess.getPostfix_expressionAccess().getPrimary_expressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Postfix_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix_expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfix_expressionAccess().getPostfix_expressionLParserRuleCall_1()); }
	rulepostfix_expressionL
	{ after(grammarAccess.getPostfix_expressionAccess().getPostfix_expressionLParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Argument_expression_listI__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument_expression_listI__Group__0__Impl
	rule__Argument_expression_listI__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument_expression_listI__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgument_expression_listIAccess().getCommaKeyword_0()); }
	','
	{ after(grammarAccess.getArgument_expression_listIAccess().getCommaKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument_expression_listI__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument_expression_listI__Group__1__Impl
	rule__Argument_expression_listI__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument_expression_listI__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgument_expression_listIAccess().getAssignment_expressionParserRuleCall_1()); }
	ruleassignment_expression
	{ after(grammarAccess.getArgument_expression_listIAccess().getAssignment_expressionParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument_expression_listI__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument_expression_listI__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument_expression_listI__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgument_expression_listIAccess().getArgument_expression_listIParserRuleCall_2()); }
	ruleargument_expression_listI
	{ after(grammarAccess.getArgument_expression_listIAccess().getArgument_expression_listIParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Argument_expression_list__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument_expression_list__Group__0__Impl
	rule__Argument_expression_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument_expression_list__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgument_expression_listAccess().getAssignment_expressionParserRuleCall_0()); }
	ruleassignment_expression
	{ after(grammarAccess.getArgument_expression_listAccess().getAssignment_expressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument_expression_list__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument_expression_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument_expression_list__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgument_expression_listAccess().getArgument_expression_listIParserRuleCall_1()); }
	ruleargument_expression_listI
	{ after(grammarAccess.getArgument_expression_listAccess().getArgument_expression_listIParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Unary_expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unary_expression__Group_1__0__Impl
	rule__Unary_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnary_expressionAccess().getINC_OPTerminalRuleCall_1_0()); }
	RULE_INC_OP
	{ after(grammarAccess.getUnary_expressionAccess().getINC_OPTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unary_expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnary_expressionAccess().getUnary_expressionParserRuleCall_1_1()); }
	ruleunary_expression
	{ after(grammarAccess.getUnary_expressionAccess().getUnary_expressionParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Unary_expression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unary_expression__Group_2__0__Impl
	rule__Unary_expression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnary_expressionAccess().getDEC_OPTerminalRuleCall_2_0()); }
	RULE_DEC_OP
	{ after(grammarAccess.getUnary_expressionAccess().getDEC_OPTerminalRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unary_expression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnary_expressionAccess().getUnary_expressionParserRuleCall_2_1()); }
	ruleunary_expression
	{ after(grammarAccess.getUnary_expressionAccess().getUnary_expressionParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Unary_expression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unary_expression__Group_3__0__Impl
	rule__Unary_expression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnary_expressionAccess().getUnary_operatorParserRuleCall_3_0()); }
	ruleunary_operator
	{ after(grammarAccess.getUnary_expressionAccess().getUnary_operatorParserRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unary_expression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnary_expressionAccess().getCast_expressionParserRuleCall_3_1()); }
	rulecast_expression
	{ after(grammarAccess.getUnary_expressionAccess().getCast_expressionParserRuleCall_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Unary_expression__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unary_expression__Group_4__0__Impl
	rule__Unary_expression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnary_expressionAccess().getSIZEOFTerminalRuleCall_4_0()); }
	RULE_SIZEOF
	{ after(grammarAccess.getUnary_expressionAccess().getSIZEOFTerminalRuleCall_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unary_expression__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnary_expressionAccess().getUnary_expressionParserRuleCall_4_1()); }
	ruleunary_expression
	{ after(grammarAccess.getUnary_expressionAccess().getUnary_expressionParserRuleCall_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Unary_expression__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unary_expression__Group_5__0__Impl
	rule__Unary_expression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnary_expressionAccess().getSIZEOFTerminalRuleCall_5_0()); }
	RULE_SIZEOF
	{ after(grammarAccess.getUnary_expressionAccess().getSIZEOFTerminalRuleCall_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unary_expression__Group_5__1__Impl
	rule__Unary_expression__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnary_expressionAccess().getLeftParenthesisKeyword_5_1()); }
	'('
	{ after(grammarAccess.getUnary_expressionAccess().getLeftParenthesisKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unary_expression__Group_5__2__Impl
	rule__Unary_expression__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnary_expressionAccess().getType_nameParserRuleCall_5_2()); }
	ruletype_name
	{ after(grammarAccess.getUnary_expressionAccess().getType_nameParserRuleCall_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unary_expression__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnary_expressionAccess().getRightParenthesisKeyword_5_3()); }
	')'
	{ after(grammarAccess.getUnary_expressionAccess().getRightParenthesisKeyword_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Cast_expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cast_expression__Group_1__0__Impl
	rule__Cast_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCast_expressionAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getCast_expressionAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cast_expression__Group_1__1__Impl
	rule__Cast_expression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCast_expressionAccess().getType_nameParserRuleCall_1_1()); }
	ruletype_name
	{ after(grammarAccess.getCast_expressionAccess().getType_nameParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cast_expression__Group_1__2__Impl
	rule__Cast_expression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCast_expressionAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getCast_expressionAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cast_expression__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCast_expressionAccess().getCast_expressionParserRuleCall_1_3()); }
	rulecast_expression
	{ after(grammarAccess.getCast_expressionAccess().getCast_expressionParserRuleCall_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicative_expressionI__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicative_expressionI__Group_0__0__Impl
	rule__Multiplicative_expressionI__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expressionI__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicative_expressionIAccess().getAsteriskKeyword_0_0()); }
	'*'
	{ after(grammarAccess.getMultiplicative_expressionIAccess().getAsteriskKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expressionI__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicative_expressionI__Group_0__1__Impl
	rule__Multiplicative_expressionI__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expressionI__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicative_expressionIAccess().getCast_expressionParserRuleCall_0_1()); }
	rulecast_expression
	{ after(grammarAccess.getMultiplicative_expressionIAccess().getCast_expressionParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expressionI__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicative_expressionI__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expressionI__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicative_expressionIAccess().getMultiplicative_expressionIParserRuleCall_0_2()); }
	rulemultiplicative_expressionI
	{ after(grammarAccess.getMultiplicative_expressionIAccess().getMultiplicative_expressionIParserRuleCall_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicative_expressionI__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicative_expressionI__Group_1__0__Impl
	rule__Multiplicative_expressionI__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expressionI__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicative_expressionIAccess().getSolidusKeyword_1_0()); }
	'/'
	{ after(grammarAccess.getMultiplicative_expressionIAccess().getSolidusKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expressionI__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicative_expressionI__Group_1__1__Impl
	rule__Multiplicative_expressionI__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expressionI__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicative_expressionIAccess().getCast_expressionParserRuleCall_1_1()); }
	rulecast_expression
	{ after(grammarAccess.getMultiplicative_expressionIAccess().getCast_expressionParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expressionI__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicative_expressionI__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expressionI__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicative_expressionIAccess().getMultiplicative_expressionIParserRuleCall_1_2()); }
	rulemultiplicative_expressionI
	{ after(grammarAccess.getMultiplicative_expressionIAccess().getMultiplicative_expressionIParserRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicative_expressionI__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicative_expressionI__Group_2__0__Impl
	rule__Multiplicative_expressionI__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expressionI__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicative_expressionIAccess().getPercentSignKeyword_2_0()); }
	'%'
	{ after(grammarAccess.getMultiplicative_expressionIAccess().getPercentSignKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expressionI__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicative_expressionI__Group_2__1__Impl
	rule__Multiplicative_expressionI__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expressionI__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicative_expressionIAccess().getCast_expressionParserRuleCall_2_1()); }
	rulecast_expression
	{ after(grammarAccess.getMultiplicative_expressionIAccess().getCast_expressionParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expressionI__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicative_expressionI__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expressionI__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicative_expressionIAccess().getMultiplicative_expressionIParserRuleCall_2_2()); }
	rulemultiplicative_expressionI
	{ after(grammarAccess.getMultiplicative_expressionIAccess().getMultiplicative_expressionIParserRuleCall_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicative_expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicative_expression__Group__0__Impl
	rule__Multiplicative_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicative_expressionAccess().getCast_expressionParserRuleCall_0()); }
	rulecast_expression
	{ after(grammarAccess.getMultiplicative_expressionAccess().getCast_expressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicative_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicative_expressionAccess().getMultiplicative_expressionIParserRuleCall_1()); }
	rulemultiplicative_expressionI
	{ after(grammarAccess.getMultiplicative_expressionAccess().getMultiplicative_expressionIParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Additive_expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Additive_expression__Group__0__Impl
	rule__Additive_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditive_expressionAccess().getMultiplicative_expressionParserRuleCall_0()); }
	rulemultiplicative_expression
	{ after(grammarAccess.getAdditive_expressionAccess().getMultiplicative_expressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Additive_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditive_expressionAccess().getGroup_1()); }
	(rule__Additive_expression__Group_1__0)*
	{ after(grammarAccess.getAdditive_expressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Additive_expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Additive_expression__Group_1__0__Impl
	rule__Additive_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditive_expressionAccess().getAlternatives_1_0()); }
	(rule__Additive_expression__Alternatives_1_0)
	{ after(grammarAccess.getAdditive_expressionAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Additive_expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditive_expressionAccess().getMultiplicative_expressionParserRuleCall_1_1()); }
	rulemultiplicative_expression
	{ after(grammarAccess.getAdditive_expressionAccess().getMultiplicative_expressionParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Shift_expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shift_expression__Group__0__Impl
	rule__Shift_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShift_expressionAccess().getAdditive_expressionParserRuleCall_0()); }
	ruleadditive_expression
	{ after(grammarAccess.getShift_expressionAccess().getAdditive_expressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shift_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShift_expressionAccess().getGroup_1()); }
	(rule__Shift_expression__Group_1__0)*
	{ after(grammarAccess.getShift_expressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Shift_expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shift_expression__Group_1__0__Impl
	rule__Shift_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShift_expressionAccess().getAlternatives_1_0()); }
	(rule__Shift_expression__Alternatives_1_0)
	{ after(grammarAccess.getShift_expressionAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shift_expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShift_expressionAccess().getAdditive_expressionParserRuleCall_1_1()); }
	ruleadditive_expression
	{ after(grammarAccess.getShift_expressionAccess().getAdditive_expressionParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relational_expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relational_expression__Group__0__Impl
	rule__Relational_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelational_expressionAccess().getShift_expressionParserRuleCall_0()); }
	ruleshift_expression
	{ after(grammarAccess.getRelational_expressionAccess().getShift_expressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relational_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelational_expressionAccess().getGroup_1()); }
	(rule__Relational_expression__Group_1__0)*
	{ after(grammarAccess.getRelational_expressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relational_expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relational_expression__Group_1__0__Impl
	rule__Relational_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelational_expressionAccess().getAlternatives_1_0()); }
	(rule__Relational_expression__Alternatives_1_0)
	{ after(grammarAccess.getRelational_expressionAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relational_expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelational_expressionAccess().getShift_expressionParserRuleCall_1_1()); }
	ruleshift_expression
	{ after(grammarAccess.getRelational_expressionAccess().getShift_expressionParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equality_expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality_expression__Group__0__Impl
	rule__Equality_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquality_expressionAccess().getRelational_expressionParserRuleCall_0()); }
	rulerelational_expression
	{ after(grammarAccess.getEquality_expressionAccess().getRelational_expressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquality_expressionAccess().getGroup_1()); }
	(rule__Equality_expression__Group_1__0)*
	{ after(grammarAccess.getEquality_expressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equality_expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality_expression__Group_1__0__Impl
	rule__Equality_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquality_expressionAccess().getAlternatives_1_0()); }
	(rule__Equality_expression__Alternatives_1_0)
	{ after(grammarAccess.getEquality_expressionAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality_expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquality_expressionAccess().getRelational_expressionParserRuleCall_1_1()); }
	rulerelational_expression
	{ after(grammarAccess.getEquality_expressionAccess().getRelational_expressionParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And_expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_expression__Group__0__Impl
	rule__And_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And_expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_expressionAccess().getEquality_expressionParserRuleCall_0()); }
	ruleequality_expression
	{ after(grammarAccess.getAnd_expressionAccess().getEquality_expressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And_expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_expressionAccess().getGroup_1()); }
	(rule__And_expression__Group_1__0)*
	{ after(grammarAccess.getAnd_expressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And_expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_expression__Group_1__0__Impl
	rule__And_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And_expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_expressionAccess().getAmpersandKeyword_1_0()); }
	'&'
	{ after(grammarAccess.getAnd_expressionAccess().getAmpersandKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And_expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_expressionAccess().getEquality_expressionParserRuleCall_1_1()); }
	ruleequality_expression
	{ after(grammarAccess.getAnd_expressionAccess().getEquality_expressionParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exclusive_or_expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exclusive_or_expression__Group__0__Impl
	rule__Exclusive_or_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exclusive_or_expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExclusive_or_expressionAccess().getAnd_expressionParserRuleCall_0()); }
	ruleand_expression
	{ after(grammarAccess.getExclusive_or_expressionAccess().getAnd_expressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exclusive_or_expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exclusive_or_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exclusive_or_expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExclusive_or_expressionAccess().getGroup_1()); }
	(rule__Exclusive_or_expression__Group_1__0)*
	{ after(grammarAccess.getExclusive_or_expressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exclusive_or_expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exclusive_or_expression__Group_1__0__Impl
	rule__Exclusive_or_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exclusive_or_expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExclusive_or_expressionAccess().getCircumflexAccentKeyword_1_0()); }
	'^'
	{ after(grammarAccess.getExclusive_or_expressionAccess().getCircumflexAccentKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exclusive_or_expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exclusive_or_expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exclusive_or_expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExclusive_or_expressionAccess().getAnd_expressionParserRuleCall_1_1()); }
	ruleand_expression
	{ after(grammarAccess.getExclusive_or_expressionAccess().getAnd_expressionParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inclusive_or_expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inclusive_or_expression__Group__0__Impl
	rule__Inclusive_or_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inclusive_or_expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInclusive_or_expressionAccess().getExclusive_or_expressionParserRuleCall_0()); }
	ruleexclusive_or_expression
	{ after(grammarAccess.getInclusive_or_expressionAccess().getExclusive_or_expressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inclusive_or_expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inclusive_or_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inclusive_or_expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInclusive_or_expressionAccess().getGroup_1()); }
	(rule__Inclusive_or_expression__Group_1__0)*
	{ after(grammarAccess.getInclusive_or_expressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inclusive_or_expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inclusive_or_expression__Group_1__0__Impl
	rule__Inclusive_or_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inclusive_or_expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInclusive_or_expressionAccess().getVerticalLineKeyword_1_0()); }
	'|'
	{ after(grammarAccess.getInclusive_or_expressionAccess().getVerticalLineKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inclusive_or_expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inclusive_or_expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inclusive_or_expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInclusive_or_expressionAccess().getExclusive_or_expressionParserRuleCall_1_1()); }
	ruleexclusive_or_expression
	{ after(grammarAccess.getInclusive_or_expressionAccess().getExclusive_or_expressionParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Logical_and_expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logical_and_expression__Group__0__Impl
	rule__Logical_and_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_and_expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogical_and_expressionAccess().getInclusive_or_expressionParserRuleCall_0()); }
	ruleinclusive_or_expression
	{ after(grammarAccess.getLogical_and_expressionAccess().getInclusive_or_expressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_and_expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logical_and_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_and_expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogical_and_expressionAccess().getGroup_1()); }
	(rule__Logical_and_expression__Group_1__0)*
	{ after(grammarAccess.getLogical_and_expressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Logical_and_expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logical_and_expression__Group_1__0__Impl
	rule__Logical_and_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_and_expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogical_and_expressionAccess().getAND_OPTerminalRuleCall_1_0()); }
	RULE_AND_OP
	{ after(grammarAccess.getLogical_and_expressionAccess().getAND_OPTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_and_expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logical_and_expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_and_expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogical_and_expressionAccess().getInclusive_or_expressionParserRuleCall_1_1()); }
	ruleinclusive_or_expression
	{ after(grammarAccess.getLogical_and_expressionAccess().getInclusive_or_expressionParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Logical_or_expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logical_or_expression__Group__0__Impl
	rule__Logical_or_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_or_expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogical_or_expressionAccess().getLogical_and_expressionParserRuleCall_0()); }
	rulelogical_and_expression
	{ after(grammarAccess.getLogical_or_expressionAccess().getLogical_and_expressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_or_expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logical_or_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_or_expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogical_or_expressionAccess().getGroup_1()); }
	(rule__Logical_or_expression__Group_1__0)*
	{ after(grammarAccess.getLogical_or_expressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Logical_or_expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logical_or_expression__Group_1__0__Impl
	rule__Logical_or_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_or_expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogical_or_expressionAccess().getOR_OPTerminalRuleCall_1_0()); }
	RULE_OR_OP
	{ after(grammarAccess.getLogical_or_expressionAccess().getOR_OPTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_or_expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logical_or_expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_or_expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogical_or_expressionAccess().getLogical_and_expressionParserRuleCall_1_1()); }
	rulelogical_and_expression
	{ after(grammarAccess.getLogical_or_expressionAccess().getLogical_and_expressionParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_expression__Group__0__Impl
	rule__Conditional_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_expressionAccess().getLogical_or_expressionParserRuleCall_0()); }
	rulelogical_or_expression
	{ after(grammarAccess.getConditional_expressionAccess().getLogical_or_expressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_expressionAccess().getGroup_1()); }
	(rule__Conditional_expression__Group_1__0)?
	{ after(grammarAccess.getConditional_expressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_expression__Group_1__0__Impl
	rule__Conditional_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_expressionAccess().getQuestionMarkKeyword_1_0()); }
	'?'
	{ after(grammarAccess.getConditional_expressionAccess().getQuestionMarkKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_expression__Group_1__1__Impl
	rule__Conditional_expression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_expressionAccess().getExpressionParserRuleCall_1_1()); }
	ruleexpression
	{ after(grammarAccess.getConditional_expressionAccess().getExpressionParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_expression__Group_1__2__Impl
	rule__Conditional_expression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_expressionAccess().getColonKeyword_1_2()); }
	':'
	{ after(grammarAccess.getConditional_expressionAccess().getColonKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expression__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional_expression__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expression__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditional_expressionAccess().getConditional_expressionParserRuleCall_1_3()); }
	ruleconditional_expression
	{ after(grammarAccess.getConditional_expressionAccess().getConditional_expressionParserRuleCall_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment_expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment_expression__Group_1__0__Impl
	rule__Assignment_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignment_expressionAccess().getUnary_expressionParserRuleCall_1_0()); }
	ruleunary_expression
	{ after(grammarAccess.getAssignment_expressionAccess().getUnary_expressionParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment_expression__Group_1__1__Impl
	rule__Assignment_expression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignment_expressionAccess().getAssignment_operatorParserRuleCall_1_1()); }
	ruleassignment_operator
	{ after(grammarAccess.getAssignment_expressionAccess().getAssignment_operatorParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_expression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment_expression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_expression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignment_expressionAccess().getAssignment_expressionParserRuleCall_1_2()); }
	ruleassignment_expression
	{ after(grammarAccess.getAssignment_expressionAccess().getAssignment_expressionParserRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getAssignment_expressionParserRuleCall_0()); }
	ruleassignment_expression
	{ after(grammarAccess.getExpressionAccess().getAssignment_expressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getGroup_1()); }
	(rule__Expression__Group_1__0)*
	{ after(grammarAccess.getExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__0__Impl
	rule__Expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getExpressionAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getAssignment_expressionParserRuleCall_1_1()); }
	ruleassignment_expression
	{ after(grammarAccess.getExpressionAccess().getAssignment_expressionParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration__Group__0__Impl
	rule__Declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationAccess().getDeclaration_specifiersParserRuleCall_0()); }
	ruledeclaration_specifiers
	{ after(grammarAccess.getDeclarationAccess().getDeclaration_specifiersParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration__Group__1__Impl
	rule__Declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationAccess().getInit_declarator_listParserRuleCall_1()); }
	(ruleinit_declarator_list)?
	{ after(grammarAccess.getDeclarationAccess().getInit_declarator_listParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getDeclarationAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration_specifiers__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration_specifiers__Group_0__0__Impl
	rule__Declaration_specifiers__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_specifiers__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaration_specifiersAccess().getStorage_class_specifierParserRuleCall_0_0()); }
	rulestorage_class_specifier
	{ after(grammarAccess.getDeclaration_specifiersAccess().getStorage_class_specifierParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_specifiers__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration_specifiers__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_specifiers__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaration_specifiersAccess().getDeclaration_specifiersParserRuleCall_0_1()); }
	(ruledeclaration_specifiers)?
	{ after(grammarAccess.getDeclaration_specifiersAccess().getDeclaration_specifiersParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration_specifiers__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration_specifiers__Group_1__0__Impl
	rule__Declaration_specifiers__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_specifiers__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaration_specifiersAccess().getType_specifierParserRuleCall_1_0()); }
	ruletype_specifier
	{ after(grammarAccess.getDeclaration_specifiersAccess().getType_specifierParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_specifiers__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration_specifiers__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_specifiers__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaration_specifiersAccess().getDeclaration_specifiersParserRuleCall_1_1()); }
	(ruledeclaration_specifiers)?
	{ after(grammarAccess.getDeclaration_specifiersAccess().getDeclaration_specifiersParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration_specifiers__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration_specifiers__Group_2__0__Impl
	rule__Declaration_specifiers__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_specifiers__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaration_specifiersAccess().getType_qualifierParserRuleCall_2_0()); }
	ruletype_qualifier
	{ after(grammarAccess.getDeclaration_specifiersAccess().getType_qualifierParserRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_specifiers__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration_specifiers__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_specifiers__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaration_specifiersAccess().getDeclaration_specifiersParserRuleCall_2_1()); }
	(ruledeclaration_specifiers)?
	{ after(grammarAccess.getDeclaration_specifiersAccess().getDeclaration_specifiersParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Init_declarator_list__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Init_declarator_list__Group__0__Impl
	rule__Init_declarator_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Init_declarator_list__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInit_declarator_listAccess().getInit_declaratorParserRuleCall_0()); }
	ruleinit_declarator
	{ after(grammarAccess.getInit_declarator_listAccess().getInit_declaratorParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Init_declarator_list__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Init_declarator_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Init_declarator_list__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInit_declarator_listAccess().getGroup_1()); }
	(rule__Init_declarator_list__Group_1__0)*
	{ after(grammarAccess.getInit_declarator_listAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Init_declarator_list__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Init_declarator_list__Group_1__0__Impl
	rule__Init_declarator_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Init_declarator_list__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInit_declarator_listAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getInit_declarator_listAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Init_declarator_list__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Init_declarator_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Init_declarator_list__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInit_declarator_listAccess().getInit_declaratorParserRuleCall_1_1()); }
	ruleinit_declarator
	{ after(grammarAccess.getInit_declarator_listAccess().getInit_declaratorParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Init_declarator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Init_declarator__Group__0__Impl
	rule__Init_declarator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Init_declarator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInit_declaratorAccess().getDeclaratorParserRuleCall_0()); }
	ruledeclarator
	{ after(grammarAccess.getInit_declaratorAccess().getDeclaratorParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Init_declarator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Init_declarator__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Init_declarator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInit_declaratorAccess().getGroup_1()); }
	(rule__Init_declarator__Group_1__0)*
	{ after(grammarAccess.getInit_declaratorAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Init_declarator__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Init_declarator__Group_1__0__Impl
	rule__Init_declarator__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Init_declarator__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInit_declaratorAccess().getEqualsSignKeyword_1_0()); }
	'='
	{ after(grammarAccess.getInit_declaratorAccess().getEqualsSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Init_declarator__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Init_declarator__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Init_declarator__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInit_declaratorAccess().getInitializerParserRuleCall_1_1()); }
	ruleinitializer
	{ after(grammarAccess.getInit_declaratorAccess().getInitializerParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Struct_or_union_specifier__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_or_union_specifier__Group_0__0__Impl
	rule__Struct_or_union_specifier__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_or_union_specifierAccess().getStruct_or_unionParserRuleCall_0_0()); }
	rulestruct_or_union
	{ after(grammarAccess.getStruct_or_union_specifierAccess().getStruct_or_unionParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_or_union_specifier__Group_0__1__Impl
	rule__Struct_or_union_specifier__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_or_union_specifierAccess().getIDENTIFIERParserRuleCall_0_1()); }
	ruleIDENTIFIER
	{ after(grammarAccess.getStruct_or_union_specifierAccess().getIDENTIFIERParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_or_union_specifier__Group_0__2__Impl
	rule__Struct_or_union_specifier__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_or_union_specifierAccess().getLeftCurlyBracketKeyword_0_2()); }
	'{'
	{ after(grammarAccess.getStruct_or_union_specifierAccess().getLeftCurlyBracketKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_or_union_specifier__Group_0__3__Impl
	rule__Struct_or_union_specifier__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_or_union_specifierAccess().getStruct_declaration_listParserRuleCall_0_3()); }
	rulestruct_declaration_list
	{ after(grammarAccess.getStruct_or_union_specifierAccess().getStruct_declaration_listParserRuleCall_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_or_union_specifier__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_or_union_specifierAccess().getRightCurlyBracketKeyword_0_4()); }
	'}'
	{ after(grammarAccess.getStruct_or_union_specifierAccess().getRightCurlyBracketKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Struct_or_union_specifier__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_or_union_specifier__Group_1__0__Impl
	rule__Struct_or_union_specifier__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_or_union_specifierAccess().getStruct_or_unionParserRuleCall_1_0()); }
	rulestruct_or_union
	{ after(grammarAccess.getStruct_or_union_specifierAccess().getStruct_or_unionParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_or_union_specifier__Group_1__1__Impl
	rule__Struct_or_union_specifier__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_or_union_specifierAccess().getLeftCurlyBracketKeyword_1_1()); }
	'{'
	{ after(grammarAccess.getStruct_or_union_specifierAccess().getLeftCurlyBracketKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_or_union_specifier__Group_1__2__Impl
	rule__Struct_or_union_specifier__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_or_union_specifierAccess().getStruct_declaration_listParserRuleCall_1_2()); }
	rulestruct_declaration_list
	{ after(grammarAccess.getStruct_or_union_specifierAccess().getStruct_declaration_listParserRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_or_union_specifier__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_or_union_specifierAccess().getRightCurlyBracketKeyword_1_3()); }
	'}'
	{ after(grammarAccess.getStruct_or_union_specifierAccess().getRightCurlyBracketKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Struct_or_union_specifier__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_or_union_specifier__Group_2__0__Impl
	rule__Struct_or_union_specifier__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_or_union_specifierAccess().getStruct_or_unionParserRuleCall_2_0()); }
	rulestruct_or_union
	{ after(grammarAccess.getStruct_or_union_specifierAccess().getStruct_or_unionParserRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_or_union_specifier__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_or_union_specifier__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_or_union_specifierAccess().getIDENTIFIERParserRuleCall_2_1()); }
	ruleIDENTIFIER
	{ after(grammarAccess.getStruct_or_union_specifierAccess().getIDENTIFIERParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Struct_declaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_declaration__Group__0__Impl
	rule__Struct_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_declarationAccess().getSpecifier_qualifier_listParserRuleCall_0()); }
	rulespecifier_qualifier_list
	{ after(grammarAccess.getStruct_declarationAccess().getSpecifier_qualifier_listParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_declaration__Group__1__Impl
	rule__Struct_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_declarationAccess().getStruct_declarator_listParserRuleCall_1()); }
	rulestruct_declarator_list
	{ after(grammarAccess.getStruct_declarationAccess().getStruct_declarator_listParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_declaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_declarationAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getStruct_declarationAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Specifier_qualifier_list__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Specifier_qualifier_list__Group_0__0__Impl
	rule__Specifier_qualifier_list__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Specifier_qualifier_list__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecifier_qualifier_listAccess().getType_specifierParserRuleCall_0_0()); }
	ruletype_specifier
	{ after(grammarAccess.getSpecifier_qualifier_listAccess().getType_specifierParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Specifier_qualifier_list__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Specifier_qualifier_list__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Specifier_qualifier_list__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecifier_qualifier_listAccess().getSpecifier_qualifier_listParserRuleCall_0_1()); }
	rulespecifier_qualifier_list
	{ after(grammarAccess.getSpecifier_qualifier_listAccess().getSpecifier_qualifier_listParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Specifier_qualifier_list__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Specifier_qualifier_list__Group_2__0__Impl
	rule__Specifier_qualifier_list__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Specifier_qualifier_list__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecifier_qualifier_listAccess().getType_qualifierParserRuleCall_2_0()); }
	ruletype_qualifier
	{ after(grammarAccess.getSpecifier_qualifier_listAccess().getType_qualifierParserRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Specifier_qualifier_list__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Specifier_qualifier_list__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Specifier_qualifier_list__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecifier_qualifier_listAccess().getSpecifier_qualifier_listParserRuleCall_2_1()); }
	rulespecifier_qualifier_list
	{ after(grammarAccess.getSpecifier_qualifier_listAccess().getSpecifier_qualifier_listParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Struct_declarator_list__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_declarator_list__Group__0__Impl
	rule__Struct_declarator_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declarator_list__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_declarator_listAccess().getStruct_declaratorParserRuleCall_0()); }
	rulestruct_declarator
	{ after(grammarAccess.getStruct_declarator_listAccess().getStruct_declaratorParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declarator_list__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_declarator_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declarator_list__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_declarator_listAccess().getGroup_1()); }
	(rule__Struct_declarator_list__Group_1__0)*
	{ after(grammarAccess.getStruct_declarator_listAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Struct_declarator_list__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_declarator_list__Group_1__0__Impl
	rule__Struct_declarator_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declarator_list__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_declarator_listAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getStruct_declarator_listAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declarator_list__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_declarator_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declarator_list__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_declarator_listAccess().getStruct_declaratorParserRuleCall_1_1()); }
	rulestruct_declarator
	{ after(grammarAccess.getStruct_declarator_listAccess().getStruct_declaratorParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Struct_declarator__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_declarator__Group_1__0__Impl
	rule__Struct_declarator__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declarator__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_declaratorAccess().getColonKeyword_1_0()); }
	':'
	{ after(grammarAccess.getStruct_declaratorAccess().getColonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declarator__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_declarator__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declarator__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_declaratorAccess().getConstant_expressionParserRuleCall_1_1()); }
	ruleconstant_expression
	{ after(grammarAccess.getStruct_declaratorAccess().getConstant_expressionParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Struct_declarator__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_declarator__Group_2__0__Impl
	rule__Struct_declarator__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declarator__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_declaratorAccess().getDeclaratorParserRuleCall_2_0()); }
	ruledeclarator
	{ after(grammarAccess.getStruct_declaratorAccess().getDeclaratorParserRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declarator__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_declarator__Group_2__1__Impl
	rule__Struct_declarator__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declarator__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_declaratorAccess().getColonKeyword_2_1()); }
	':'
	{ after(grammarAccess.getStruct_declaratorAccess().getColonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declarator__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_declarator__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_declarator__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_declaratorAccess().getConstant_expressionParserRuleCall_2_2()); }
	ruleconstant_expression
	{ after(grammarAccess.getStruct_declaratorAccess().getConstant_expressionParserRuleCall_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Enum_specifier__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enum_specifier__Group_0__0__Impl
	rule__Enum_specifier__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum_specifier__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnum_specifierAccess().getENUMTerminalRuleCall_0_0()); }
	RULE_ENUM
	{ after(grammarAccess.getEnum_specifierAccess().getENUMTerminalRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum_specifier__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enum_specifier__Group_0__1__Impl
	rule__Enum_specifier__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum_specifier__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnum_specifierAccess().getLeftCurlyBracketKeyword_0_1()); }
	'{'
	{ after(grammarAccess.getEnum_specifierAccess().getLeftCurlyBracketKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum_specifier__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enum_specifier__Group_0__2__Impl
	rule__Enum_specifier__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum_specifier__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnum_specifierAccess().getEnumerator_listParserRuleCall_0_2()); }
	ruleenumerator_list
	{ after(grammarAccess.getEnum_specifierAccess().getEnumerator_listParserRuleCall_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum_specifier__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enum_specifier__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum_specifier__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnum_specifierAccess().getRightCurlyBracketKeyword_0_3()); }
	'}'
	{ after(grammarAccess.getEnum_specifierAccess().getRightCurlyBracketKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Enum_specifier__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enum_specifier__Group_1__0__Impl
	rule__Enum_specifier__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum_specifier__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnum_specifierAccess().getENUMTerminalRuleCall_1_0()); }
	RULE_ENUM
	{ after(grammarAccess.getEnum_specifierAccess().getENUMTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum_specifier__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enum_specifier__Group_1__1__Impl
	rule__Enum_specifier__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum_specifier__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnum_specifierAccess().getIDENTIFIERParserRuleCall_1_1()); }
	ruleIDENTIFIER
	{ after(grammarAccess.getEnum_specifierAccess().getIDENTIFIERParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum_specifier__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enum_specifier__Group_1__2__Impl
	rule__Enum_specifier__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum_specifier__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnum_specifierAccess().getLeftCurlyBracketKeyword_1_2()); }
	'{'
	{ after(grammarAccess.getEnum_specifierAccess().getLeftCurlyBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum_specifier__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enum_specifier__Group_1__3__Impl
	rule__Enum_specifier__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum_specifier__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnum_specifierAccess().getEnumerator_listParserRuleCall_1_3()); }
	ruleenumerator_list
	{ after(grammarAccess.getEnum_specifierAccess().getEnumerator_listParserRuleCall_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum_specifier__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enum_specifier__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum_specifier__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnum_specifierAccess().getRightCurlyBracketKeyword_1_4()); }
	'}'
	{ after(grammarAccess.getEnum_specifierAccess().getRightCurlyBracketKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Enum_specifier__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enum_specifier__Group_2__0__Impl
	rule__Enum_specifier__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum_specifier__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnum_specifierAccess().getENUMTerminalRuleCall_2_0()); }
	RULE_ENUM
	{ after(grammarAccess.getEnum_specifierAccess().getENUMTerminalRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum_specifier__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enum_specifier__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum_specifier__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnum_specifierAccess().getIDENTIFIERParserRuleCall_2_1()); }
	ruleIDENTIFIER
	{ after(grammarAccess.getEnum_specifierAccess().getIDENTIFIERParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Enumerator_list__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumerator_list__Group__0__Impl
	rule__Enumerator_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerator_list__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerator_listAccess().getEnumeratorParserRuleCall_0()); }
	ruleenumerator
	{ after(grammarAccess.getEnumerator_listAccess().getEnumeratorParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerator_list__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumerator_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerator_list__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerator_listAccess().getGroup_1()); }
	(rule__Enumerator_list__Group_1__0)*
	{ after(grammarAccess.getEnumerator_listAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Enumerator_list__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumerator_list__Group_1__0__Impl
	rule__Enumerator_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerator_list__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerator_listAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getEnumerator_listAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerator_list__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumerator_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerator_list__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerator_listAccess().getEnumeratorParserRuleCall_1_1()); }
	ruleenumerator
	{ after(grammarAccess.getEnumerator_listAccess().getEnumeratorParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Enumerator__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumerator__Group_1__0__Impl
	rule__Enumerator__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerator__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumeratorAccess().getIDENTIFIERParserRuleCall_1_0()); }
	ruleIDENTIFIER
	{ after(grammarAccess.getEnumeratorAccess().getIDENTIFIERParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerator__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumerator__Group_1__1__Impl
	rule__Enumerator__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerator__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumeratorAccess().getEqualsSignKeyword_1_1()); }
	'='
	{ after(grammarAccess.getEnumeratorAccess().getEqualsSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerator__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumerator__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerator__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumeratorAccess().getConstant_expressionParserRuleCall_1_2()); }
	ruleconstant_expression
	{ after(grammarAccess.getEnumeratorAccess().getConstant_expressionParserRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Declarator__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declarator__Group_0__0__Impl
	rule__Declarator__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaratorAccess().getPointerParserRuleCall_0_0()); }
	rulepointer
	{ after(grammarAccess.getDeclaratorAccess().getPointerParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declarator__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaratorAccess().getDirect_declaratorParserRuleCall_0_1()); }
	ruledirect_declarator
	{ after(grammarAccess.getDeclaratorAccess().getDirect_declaratorParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Direct_declarator__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declarator__Group_0__0__Impl
	rule__Direct_declarator__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declarator__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorAccess().getIDENTIFIERParserRuleCall_0_0()); }
	ruleIDENTIFIER
	{ after(grammarAccess.getDirect_declaratorAccess().getIDENTIFIERParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declarator__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declarator__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declarator__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorAccess().getDirect_declaratorIParserRuleCall_0_1()); }
	ruledirect_declaratorI
	{ after(grammarAccess.getDirect_declaratorAccess().getDirect_declaratorIParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Direct_declarator__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declarator__Group_1__0__Impl
	rule__Direct_declarator__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declarator__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getDirect_declaratorAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declarator__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declarator__Group_1__1__Impl
	rule__Direct_declarator__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declarator__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorAccess().getDeclaratorParserRuleCall_1_1()); }
	ruledeclarator
	{ after(grammarAccess.getDirect_declaratorAccess().getDeclaratorParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declarator__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declarator__Group_1__2__Impl
	rule__Direct_declarator__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declarator__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getDirect_declaratorAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declarator__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declarator__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declarator__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorAccess().getDirect_declaratorIParserRuleCall_1_3()); }
	ruledirect_declaratorI
	{ after(grammarAccess.getDirect_declaratorAccess().getDirect_declaratorIParserRuleCall_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Direct_declaratorI__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorI__Group_0__0__Impl
	rule__Direct_declaratorI__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorI__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorIAccess().getLeftSquareBracketKeyword_0_0()); }
	'['
	{ after(grammarAccess.getDirect_declaratorIAccess().getLeftSquareBracketKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorI__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorI__Group_0__1__Impl
	rule__Direct_declaratorI__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorI__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorIAccess().getConstant_expressionParserRuleCall_0_1()); }
	ruleconstant_expression
	{ after(grammarAccess.getDirect_declaratorIAccess().getConstant_expressionParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorI__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorI__Group_0__2__Impl
	rule__Direct_declaratorI__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorI__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorIAccess().getRightSquareBracketKeyword_0_2()); }
	']'
	{ after(grammarAccess.getDirect_declaratorIAccess().getRightSquareBracketKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorI__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorI__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorI__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorIAccess().getDirect_declaratorIParserRuleCall_0_3()); }
	ruledirect_declaratorI
	{ after(grammarAccess.getDirect_declaratorIAccess().getDirect_declaratorIParserRuleCall_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Direct_declaratorI__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorI__Group_1__0__Impl
	rule__Direct_declaratorI__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorI__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorIAccess().getLeftSquareBracketKeyword_1_0()); }
	'['
	{ after(grammarAccess.getDirect_declaratorIAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorI__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorI__Group_1__1__Impl
	rule__Direct_declaratorI__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorI__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorIAccess().getRightSquareBracketKeyword_1_1()); }
	']'
	{ after(grammarAccess.getDirect_declaratorIAccess().getRightSquareBracketKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorI__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorI__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorI__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorIAccess().getDirect_declaratorIParserRuleCall_1_2()); }
	ruledirect_declaratorI
	{ after(grammarAccess.getDirect_declaratorIAccess().getDirect_declaratorIParserRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Direct_declaratorI__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorI__Group_2__0__Impl
	rule__Direct_declaratorI__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorI__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorIAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getDirect_declaratorIAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorI__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorI__Group_2__1__Impl
	rule__Direct_declaratorI__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorI__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorIAccess().getParameter_type_listParserRuleCall_2_1()); }
	ruleparameter_type_list
	{ after(grammarAccess.getDirect_declaratorIAccess().getParameter_type_listParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorI__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorI__Group_2__2__Impl
	rule__Direct_declaratorI__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorI__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorIAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getDirect_declaratorIAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorI__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorI__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorI__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorIAccess().getDirect_declaratorIParserRuleCall_2_3()); }
	ruledirect_declaratorI
	{ after(grammarAccess.getDirect_declaratorIAccess().getDirect_declaratorIParserRuleCall_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Direct_declaratorI__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorI__Group_3__0__Impl
	rule__Direct_declaratorI__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorI__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorIAccess().getLeftParenthesisKeyword_3_0()); }
	'('
	{ after(grammarAccess.getDirect_declaratorIAccess().getLeftParenthesisKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorI__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorI__Group_3__1__Impl
	rule__Direct_declaratorI__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorI__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorIAccess().getIdentifier_listParserRuleCall_3_1()); }
	ruleidentifier_list
	{ after(grammarAccess.getDirect_declaratorIAccess().getIdentifier_listParserRuleCall_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorI__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorI__Group_3__2__Impl
	rule__Direct_declaratorI__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorI__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorIAccess().getRightParenthesisKeyword_3_2()); }
	')'
	{ after(grammarAccess.getDirect_declaratorIAccess().getRightParenthesisKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorI__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorI__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorI__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorIAccess().getDirect_declaratorIParserRuleCall_3_3()); }
	ruledirect_declaratorI
	{ after(grammarAccess.getDirect_declaratorIAccess().getDirect_declaratorIParserRuleCall_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Direct_declaratorI__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorI__Group_4__0__Impl
	rule__Direct_declaratorI__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorI__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorIAccess().getLeftParenthesisKeyword_4_0()); }
	'('
	{ after(grammarAccess.getDirect_declaratorIAccess().getLeftParenthesisKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorI__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorI__Group_4__1__Impl
	rule__Direct_declaratorI__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorI__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorIAccess().getRightParenthesisKeyword_4_1()); }
	')'
	{ after(grammarAccess.getDirect_declaratorIAccess().getRightParenthesisKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorI__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_declaratorI__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_declaratorI__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_declaratorIAccess().getDirect_declaratorIParserRuleCall_4_2()); }
	ruledirect_declaratorI
	{ after(grammarAccess.getDirect_declaratorIAccess().getDirect_declaratorIParserRuleCall_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pointer__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pointer__Group_1__0__Impl
	rule__Pointer__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointerAccess().getAsteriskKeyword_1_0()); }
	'*'
	{ after(grammarAccess.getPointerAccess().getAsteriskKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pointer__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointerAccess().getType_qualifier_listParserRuleCall_1_1()); }
	ruletype_qualifier_list
	{ after(grammarAccess.getPointerAccess().getType_qualifier_listParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pointer__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pointer__Group_2__0__Impl
	rule__Pointer__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointerAccess().getAsteriskKeyword_2_0()); }
	'*'
	{ after(grammarAccess.getPointerAccess().getAsteriskKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pointer__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointerAccess().getPointerParserRuleCall_2_1()); }
	rulepointer
	{ after(grammarAccess.getPointerAccess().getPointerParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pointer__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pointer__Group_3__0__Impl
	rule__Pointer__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointerAccess().getAsteriskKeyword_3_0()); }
	'*'
	{ after(grammarAccess.getPointerAccess().getAsteriskKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pointer__Group_3__1__Impl
	rule__Pointer__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointerAccess().getType_qualifier_listParserRuleCall_3_1()); }
	ruletype_qualifier_list
	{ after(grammarAccess.getPointerAccess().getType_qualifier_listParserRuleCall_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pointer__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointerAccess().getPointerParserRuleCall_3_2()); }
	rulepointer
	{ after(grammarAccess.getPointerAccess().getPointerParserRuleCall_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter_type_list__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_type_list__Group__0__Impl
	rule__Parameter_type_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_type_list__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_type_listAccess().getParameter_listParserRuleCall_0()); }
	ruleparameter_list
	{ after(grammarAccess.getParameter_type_listAccess().getParameter_listParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_type_list__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_type_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_type_list__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_type_listAccess().getGroup_1()); }
	(rule__Parameter_type_list__Group_1__0)*
	{ after(grammarAccess.getParameter_type_listAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter_type_list__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_type_list__Group_1__0__Impl
	rule__Parameter_type_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_type_list__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_type_listAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getParameter_type_listAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_type_list__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_type_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_type_list__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_type_listAccess().getELLIPSISTerminalRuleCall_1_1()); }
	RULE_ELLIPSIS
	{ after(grammarAccess.getParameter_type_listAccess().getELLIPSISTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter_list__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_list__Group__0__Impl
	rule__Parameter_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_listAccess().getParameter_declarationParserRuleCall_0()); }
	ruleparameter_declaration
	{ after(grammarAccess.getParameter_listAccess().getParameter_declarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_listAccess().getGroup_1()); }
	(rule__Parameter_list__Group_1__0)*
	{ after(grammarAccess.getParameter_listAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter_list__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_list__Group_1__0__Impl
	rule__Parameter_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_listAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getParameter_listAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_listAccess().getParameter_declarationParserRuleCall_1_1()); }
	ruleparameter_declaration
	{ after(grammarAccess.getParameter_listAccess().getParameter_declarationParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter_declaration__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_declaration__Group_0__0__Impl
	rule__Parameter_declaration__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_declaration__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_declarationAccess().getDeclaration_specifiersParserRuleCall_0_0()); }
	ruledeclaration_specifiers
	{ after(grammarAccess.getParameter_declarationAccess().getDeclaration_specifiersParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_declaration__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_declaration__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_declaration__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_declarationAccess().getDeclaratorParserRuleCall_0_1()); }
	ruledeclarator
	{ after(grammarAccess.getParameter_declarationAccess().getDeclaratorParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter_declaration__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_declaration__Group_1__0__Impl
	rule__Parameter_declaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_declaration__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_declarationAccess().getDeclaration_specifiersParserRuleCall_1_0()); }
	ruledeclaration_specifiers
	{ after(grammarAccess.getParameter_declarationAccess().getDeclaration_specifiersParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_declaration__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_declaration__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_declaration__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_declarationAccess().getAbstract_declaratorParserRuleCall_1_1()); }
	ruleabstract_declarator
	{ after(grammarAccess.getParameter_declarationAccess().getAbstract_declaratorParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier_list__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier_list__Group__0__Impl
	rule__Identifier_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifier_listAccess().getIDENTIFIERParserRuleCall_0()); }
	ruleIDENTIFIER
	{ after(grammarAccess.getIdentifier_listAccess().getIDENTIFIERParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifier_listAccess().getGroup_1()); }
	(rule__Identifier_list__Group_1__0)*
	{ after(grammarAccess.getIdentifier_listAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier_list__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier_list__Group_1__0__Impl
	rule__Identifier_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifier_listAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getIdentifier_listAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifier_listAccess().getIDENTIFIERParserRuleCall_1_1()); }
	ruleIDENTIFIER
	{ after(grammarAccess.getIdentifier_listAccess().getIDENTIFIERParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type_name__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type_name__Group__0__Impl
	rule__Type_name__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_name__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getType_nameAccess().getSpecifier_qualifier_listParserRuleCall_0()); }
	rulespecifier_qualifier_list
	{ after(grammarAccess.getType_nameAccess().getSpecifier_qualifier_listParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_name__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type_name__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_name__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getType_nameAccess().getAbstract_declaratorParserRuleCall_1()); }
	(ruleabstract_declarator)?
	{ after(grammarAccess.getType_nameAccess().getAbstract_declaratorParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Abstract_declarator__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Abstract_declarator__Group_1__0__Impl
	rule__Abstract_declarator__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Abstract_declarator__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstract_declaratorAccess().getPointerParserRuleCall_1_0()); }
	rulepointer
	{ after(grammarAccess.getAbstract_declaratorAccess().getPointerParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Abstract_declarator__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Abstract_declarator__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Abstract_declarator__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstract_declaratorAccess().getDirect_abstract_declaratorParserRuleCall_1_1()); }
	(ruledirect_abstract_declarator)?
	{ after(grammarAccess.getAbstract_declaratorAccess().getDirect_abstract_declaratorParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Direct_abstract_declarator__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_abstract_declarator__Group_0__0__Impl
	rule__Direct_abstract_declarator__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declarator__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_abstract_declaratorAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getDirect_abstract_declaratorAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declarator__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_abstract_declarator__Group_0__1__Impl
	rule__Direct_abstract_declarator__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declarator__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_abstract_declaratorAccess().getAbstract_declaratorParserRuleCall_0_1()); }
	ruleabstract_declarator
	{ after(grammarAccess.getDirect_abstract_declaratorAccess().getAbstract_declaratorParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declarator__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_abstract_declarator__Group_0__2__Impl
	rule__Direct_abstract_declarator__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declarator__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_abstract_declaratorAccess().getRightParenthesisKeyword_0_2()); }
	')'
	{ after(grammarAccess.getDirect_abstract_declaratorAccess().getRightParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declarator__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_abstract_declarator__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declarator__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_abstract_declaratorAccess().getDirect_abstract_declaratorIParserRuleCall_0_3()); }
	ruledirect_abstract_declaratorI
	{ after(grammarAccess.getDirect_abstract_declaratorAccess().getDirect_abstract_declaratorIParserRuleCall_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Direct_abstract_declarator__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_abstract_declarator__Group_1__0__Impl
	rule__Direct_abstract_declarator__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declarator__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_abstract_declaratorAccess().getLeftSquareBracketKeyword_1_0()); }
	'['
	{ after(grammarAccess.getDirect_abstract_declaratorAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declarator__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_abstract_declarator__Group_1__1__Impl
	rule__Direct_abstract_declarator__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declarator__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_abstract_declaratorAccess().getRightSquareBracketKeyword_1_1()); }
	']'
	{ after(grammarAccess.getDirect_abstract_declaratorAccess().getRightSquareBracketKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declarator__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_abstract_declarator__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declarator__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_abstract_declaratorAccess().getDirect_abstract_declaratorIParserRuleCall_1_2()); }
	ruledirect_abstract_declaratorI
	{ after(grammarAccess.getDirect_abstract_declaratorAccess().getDirect_abstract_declaratorIParserRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Direct_abstract_declarator__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_abstract_declarator__Group_2__0__Impl
	rule__Direct_abstract_declarator__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declarator__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_abstract_declaratorAccess().getLeftSquareBracketKeyword_2_0()); }
	'['
	{ after(grammarAccess.getDirect_abstract_declaratorAccess().getLeftSquareBracketKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declarator__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_abstract_declarator__Group_2__1__Impl
	rule__Direct_abstract_declarator__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declarator__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_abstract_declaratorAccess().getConstant_expressionParserRuleCall_2_1()); }
	ruleconstant_expression
	{ after(grammarAccess.getDirect_abstract_declaratorAccess().getConstant_expressionParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declarator__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_abstract_declarator__Group_2__2__Impl
	rule__Direct_abstract_declarator__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declarator__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_abstract_declaratorAccess().getRightSquareBracketKeyword_2_2()); }
	']'
	{ after(grammarAccess.getDirect_abstract_declaratorAccess().getRightSquareBracketKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declarator__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_abstract_declarator__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declarator__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_abstract_declaratorAccess().getDirect_abstract_declaratorIParserRuleCall_2_3()); }
	ruledirect_abstract_declaratorI
	{ after(grammarAccess.getDirect_abstract_declaratorAccess().getDirect_abstract_declaratorIParserRuleCall_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Direct_abstract_declarator__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_abstract_declarator__Group_3__0__Impl
	rule__Direct_abstract_declarator__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declarator__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_abstract_declaratorAccess().getLeftParenthesisKeyword_3_0()); }
	'('
	{ after(grammarAccess.getDirect_abstract_declaratorAccess().getLeftParenthesisKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declarator__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_abstract_declarator__Group_3__1__Impl
	rule__Direct_abstract_declarator__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declarator__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_abstract_declaratorAccess().getRightParenthesisKeyword_3_1()); }
	')'
	{ after(grammarAccess.getDirect_abstract_declaratorAccess().getRightParenthesisKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declarator__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_abstract_declarator__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declarator__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_abstract_declaratorAccess().getDirect_abstract_declaratorIParserRuleCall_3_2()); }
	ruledirect_abstract_declaratorI
	{ after(grammarAccess.getDirect_abstract_declaratorAccess().getDirect_abstract_declaratorIParserRuleCall_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Direct_abstract_declarator__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_abstract_declarator__Group_4__0__Impl
	rule__Direct_abstract_declarator__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declarator__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_abstract_declaratorAccess().getLeftParenthesisKeyword_4_0()); }
	'('
	{ after(grammarAccess.getDirect_abstract_declaratorAccess().getLeftParenthesisKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declarator__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_abstract_declarator__Group_4__1__Impl
	rule__Direct_abstract_declarator__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declarator__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_abstract_declaratorAccess().getParameter_type_listParserRuleCall_4_1()); }
	ruleparameter_type_list
	{ after(grammarAccess.getDirect_abstract_declaratorAccess().getParameter_type_listParserRuleCall_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declarator__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_abstract_declarator__Group_4__2__Impl
	rule__Direct_abstract_declarator__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declarator__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_abstract_declaratorAccess().getRightParenthesisKeyword_4_2()); }
	')'
	{ after(grammarAccess.getDirect_abstract_declaratorAccess().getRightParenthesisKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declarator__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_abstract_declarator__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declarator__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_abstract_declaratorAccess().getDirect_abstract_declaratorIParserRuleCall_4_3()); }
	ruledirect_abstract_declaratorI
	{ after(grammarAccess.getDirect_abstract_declaratorAccess().getDirect_abstract_declaratorIParserRuleCall_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Direct_abstract_declaratorI__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_abstract_declaratorI__Group_0__0__Impl
	rule__Direct_abstract_declaratorI__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declaratorI__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_abstract_declaratorIAccess().getLeftSquareBracketKeyword_0_0()); }
	'['
	{ after(grammarAccess.getDirect_abstract_declaratorIAccess().getLeftSquareBracketKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declaratorI__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_abstract_declaratorI__Group_0__1__Impl
	rule__Direct_abstract_declaratorI__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declaratorI__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_abstract_declaratorIAccess().getRightSquareBracketKeyword_0_1()); }
	']'
	{ after(grammarAccess.getDirect_abstract_declaratorIAccess().getRightSquareBracketKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declaratorI__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_abstract_declaratorI__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declaratorI__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_abstract_declaratorIAccess().getDirect_abstract_declaratorIParserRuleCall_0_2()); }
	ruledirect_abstract_declaratorI
	{ after(grammarAccess.getDirect_abstract_declaratorIAccess().getDirect_abstract_declaratorIParserRuleCall_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Direct_abstract_declaratorI__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_abstract_declaratorI__Group_1__0__Impl
	rule__Direct_abstract_declaratorI__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declaratorI__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_abstract_declaratorIAccess().getLeftSquareBracketKeyword_1_0()); }
	'['
	{ after(grammarAccess.getDirect_abstract_declaratorIAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declaratorI__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_abstract_declaratorI__Group_1__1__Impl
	rule__Direct_abstract_declaratorI__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declaratorI__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_abstract_declaratorIAccess().getConstant_expressionParserRuleCall_1_1()); }
	ruleconstant_expression
	{ after(grammarAccess.getDirect_abstract_declaratorIAccess().getConstant_expressionParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declaratorI__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_abstract_declaratorI__Group_1__2__Impl
	rule__Direct_abstract_declaratorI__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declaratorI__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_abstract_declaratorIAccess().getRightSquareBracketKeyword_1_2()); }
	']'
	{ after(grammarAccess.getDirect_abstract_declaratorIAccess().getRightSquareBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declaratorI__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_abstract_declaratorI__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declaratorI__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_abstract_declaratorIAccess().getDirect_abstract_declaratorIParserRuleCall_1_3()); }
	ruledirect_abstract_declaratorI
	{ after(grammarAccess.getDirect_abstract_declaratorIAccess().getDirect_abstract_declaratorIParserRuleCall_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Direct_abstract_declaratorI__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_abstract_declaratorI__Group_2__0__Impl
	rule__Direct_abstract_declaratorI__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declaratorI__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_abstract_declaratorIAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getDirect_abstract_declaratorIAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declaratorI__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_abstract_declaratorI__Group_2__1__Impl
	rule__Direct_abstract_declaratorI__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declaratorI__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_abstract_declaratorIAccess().getRightParenthesisKeyword_2_1()); }
	')'
	{ after(grammarAccess.getDirect_abstract_declaratorIAccess().getRightParenthesisKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declaratorI__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_abstract_declaratorI__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declaratorI__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_abstract_declaratorIAccess().getDirect_abstract_declaratorIParserRuleCall_2_2()); }
	ruledirect_abstract_declaratorI
	{ after(grammarAccess.getDirect_abstract_declaratorIAccess().getDirect_abstract_declaratorIParserRuleCall_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Direct_abstract_declaratorI__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_abstract_declaratorI__Group_3__0__Impl
	rule__Direct_abstract_declaratorI__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declaratorI__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_abstract_declaratorIAccess().getLeftParenthesisKeyword_3_0()); }
	'('
	{ after(grammarAccess.getDirect_abstract_declaratorIAccess().getLeftParenthesisKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declaratorI__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_abstract_declaratorI__Group_3__1__Impl
	rule__Direct_abstract_declaratorI__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declaratorI__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_abstract_declaratorIAccess().getParameter_type_listParserRuleCall_3_1()); }
	ruleparameter_type_list
	{ after(grammarAccess.getDirect_abstract_declaratorIAccess().getParameter_type_listParserRuleCall_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declaratorI__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_abstract_declaratorI__Group_3__2__Impl
	rule__Direct_abstract_declaratorI__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declaratorI__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_abstract_declaratorIAccess().getRightParenthesisKeyword_3_2()); }
	')'
	{ after(grammarAccess.getDirect_abstract_declaratorIAccess().getRightParenthesisKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declaratorI__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Direct_abstract_declaratorI__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct_abstract_declaratorI__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirect_abstract_declaratorIAccess().getDirect_abstract_declaratorIParserRuleCall_3_3()); }
	ruledirect_abstract_declaratorI
	{ after(grammarAccess.getDirect_abstract_declaratorIAccess().getDirect_abstract_declaratorIParserRuleCall_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Initializer__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initializer__Group_1__0__Impl
	rule__Initializer__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializerAccess().getLeftCurlyBracketKeyword_1_0()); }
	'{'
	{ after(grammarAccess.getInitializerAccess().getLeftCurlyBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initializer__Group_1__1__Impl
	rule__Initializer__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializerAccess().getInitializer_listParserRuleCall_1_1()); }
	ruleinitializer_list
	{ after(grammarAccess.getInitializerAccess().getInitializer_listParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initializer__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializerAccess().getRightCurlyBracketKeyword_1_2()); }
	'}'
	{ after(grammarAccess.getInitializerAccess().getRightCurlyBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Initializer__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initializer__Group_2__0__Impl
	rule__Initializer__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializerAccess().getLeftCurlyBracketKeyword_2_0()); }
	'{'
	{ after(grammarAccess.getInitializerAccess().getLeftCurlyBracketKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initializer__Group_2__1__Impl
	rule__Initializer__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializerAccess().getInitializer_listParserRuleCall_2_1()); }
	ruleinitializer_list
	{ after(grammarAccess.getInitializerAccess().getInitializer_listParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initializer__Group_2__2__Impl
	rule__Initializer__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializerAccess().getCommaKeyword_2_2()); }
	','
	{ after(grammarAccess.getInitializerAccess().getCommaKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initializer__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializerAccess().getRightCurlyBracketKeyword_2_3()); }
	'}'
	{ after(grammarAccess.getInitializerAccess().getRightCurlyBracketKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Initializer_list__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initializer_list__Group__0__Impl
	rule__Initializer_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer_list__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializer_listAccess().getInitializerParserRuleCall_0()); }
	ruleinitializer
	{ after(grammarAccess.getInitializer_listAccess().getInitializerParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer_list__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initializer_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer_list__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializer_listAccess().getGroup_1()); }
	(rule__Initializer_list__Group_1__0)*
	{ after(grammarAccess.getInitializer_listAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Initializer_list__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initializer_list__Group_1__0__Impl
	rule__Initializer_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer_list__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializer_listAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getInitializer_listAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer_list__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initializer_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Initializer_list__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializer_listAccess().getInitializerParserRuleCall_1_1()); }
	ruleinitializer
	{ after(grammarAccess.getInitializer_listAccess().getInitializerParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Labeled_statement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Labeled_statement__Group_0__0__Impl
	rule__Labeled_statement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeled_statementAccess().getIDENTIFIERParserRuleCall_0_0()); }
	ruleIDENTIFIER
	{ after(grammarAccess.getLabeled_statementAccess().getIDENTIFIERParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Labeled_statement__Group_0__1__Impl
	rule__Labeled_statement__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeled_statementAccess().getColonKeyword_0_1()); }
	':'
	{ after(grammarAccess.getLabeled_statementAccess().getColonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Labeled_statement__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeled_statementAccess().getStatementParserRuleCall_0_2()); }
	rulestatement
	{ after(grammarAccess.getLabeled_statementAccess().getStatementParserRuleCall_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Labeled_statement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Labeled_statement__Group_1__0__Impl
	rule__Labeled_statement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeled_statementAccess().getCASETerminalRuleCall_1_0()); }
	RULE_CASE
	{ after(grammarAccess.getLabeled_statementAccess().getCASETerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Labeled_statement__Group_1__1__Impl
	rule__Labeled_statement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeled_statementAccess().getConstant_expressionParserRuleCall_1_1()); }
	ruleconstant_expression
	{ after(grammarAccess.getLabeled_statementAccess().getConstant_expressionParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Labeled_statement__Group_1__2__Impl
	rule__Labeled_statement__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeled_statementAccess().getColonKeyword_1_2()); }
	':'
	{ after(grammarAccess.getLabeled_statementAccess().getColonKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Labeled_statement__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeled_statementAccess().getStatementParserRuleCall_1_3()); }
	rulestatement
	{ after(grammarAccess.getLabeled_statementAccess().getStatementParserRuleCall_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Labeled_statement__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Labeled_statement__Group_2__0__Impl
	rule__Labeled_statement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeled_statementAccess().getDEFAULTTerminalRuleCall_2_0()); }
	RULE_DEFAULT
	{ after(grammarAccess.getLabeled_statementAccess().getDEFAULTTerminalRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Labeled_statement__Group_2__1__Impl
	rule__Labeled_statement__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeled_statementAccess().getColonKeyword_2_1()); }
	':'
	{ after(grammarAccess.getLabeled_statementAccess().getColonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Labeled_statement__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeled_statement__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeled_statementAccess().getStatementParserRuleCall_2_2()); }
	rulestatement
	{ after(grammarAccess.getLabeled_statementAccess().getStatementParserRuleCall_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Compound_statement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compound_statement__Group_0__0__Impl
	rule__Compound_statement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompound_statementAccess().getLeftCurlyBracketKeyword_0_0()); }
	'{'
	{ after(grammarAccess.getCompound_statementAccess().getLeftCurlyBracketKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compound_statement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompound_statementAccess().getRightCurlyBracketKeyword_0_1()); }
	'}'
	{ after(grammarAccess.getCompound_statementAccess().getRightCurlyBracketKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Compound_statement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compound_statement__Group_1__0__Impl
	rule__Compound_statement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompound_statementAccess().getLeftCurlyBracketKeyword_1_0()); }
	'{'
	{ after(grammarAccess.getCompound_statementAccess().getLeftCurlyBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compound_statement__Group_1__1__Impl
	rule__Compound_statement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompound_statementAccess().getStatement_listParserRuleCall_1_1()); }
	rulestatement_list
	{ after(grammarAccess.getCompound_statementAccess().getStatement_listParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compound_statement__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompound_statementAccess().getRightCurlyBracketKeyword_1_2()); }
	'}'
	{ after(grammarAccess.getCompound_statementAccess().getRightCurlyBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Compound_statement__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compound_statement__Group_2__0__Impl
	rule__Compound_statement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompound_statementAccess().getLeftCurlyBracketKeyword_2_0()); }
	'{'
	{ after(grammarAccess.getCompound_statementAccess().getLeftCurlyBracketKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compound_statement__Group_2__1__Impl
	rule__Compound_statement__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompound_statementAccess().getDeclaration_listParserRuleCall_2_1()); }
	ruledeclaration_list
	{ after(grammarAccess.getCompound_statementAccess().getDeclaration_listParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compound_statement__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompound_statementAccess().getRightCurlyBracketKeyword_2_2()); }
	'}'
	{ after(grammarAccess.getCompound_statementAccess().getRightCurlyBracketKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Compound_statement__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compound_statement__Group_3__0__Impl
	rule__Compound_statement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompound_statementAccess().getLeftCurlyBracketKeyword_3_0()); }
	'{'
	{ after(grammarAccess.getCompound_statementAccess().getLeftCurlyBracketKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compound_statement__Group_3__1__Impl
	rule__Compound_statement__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompound_statementAccess().getDeclaration_listParserRuleCall_3_1()); }
	ruledeclaration_list
	{ after(grammarAccess.getCompound_statementAccess().getDeclaration_listParserRuleCall_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compound_statement__Group_3__2__Impl
	rule__Compound_statement__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompound_statementAccess().getStatement_listParserRuleCall_3_2()); }
	rulestatement_list
	{ after(grammarAccess.getCompound_statementAccess().getStatement_listParserRuleCall_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compound_statement__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompound_statementAccess().getRightCurlyBracketKeyword_3_3()); }
	'}'
	{ after(grammarAccess.getCompound_statementAccess().getRightCurlyBracketKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_statement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression_statement__Group_1__0__Impl
	rule__Expression_statement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_statement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression_statementAccess().getExpressionParserRuleCall_1_0()); }
	ruleexpression
	{ after(grammarAccess.getExpression_statementAccess().getExpressionParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_statement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression_statement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_statement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression_statementAccess().getSemicolonKeyword_1_1()); }
	';'
	{ after(grammarAccess.getExpression_statementAccess().getSemicolonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Selection_statement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection_statement__Group_0__0__Impl
	rule__Selection_statement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelection_statementAccess().getIFTerminalRuleCall_0_0()); }
	RULE_IF
	{ after(grammarAccess.getSelection_statementAccess().getIFTerminalRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection_statement__Group_0__1__Impl
	rule__Selection_statement__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelection_statementAccess().getLeftParenthesisKeyword_0_1()); }
	'('
	{ after(grammarAccess.getSelection_statementAccess().getLeftParenthesisKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection_statement__Group_0__2__Impl
	rule__Selection_statement__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelection_statementAccess().getExpressionParserRuleCall_0_2()); }
	ruleexpression
	{ after(grammarAccess.getSelection_statementAccess().getExpressionParserRuleCall_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection_statement__Group_0__3__Impl
	rule__Selection_statement__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelection_statementAccess().getRightParenthesisKeyword_0_3()); }
	')'
	{ after(grammarAccess.getSelection_statementAccess().getRightParenthesisKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection_statement__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelection_statementAccess().getStatementParserRuleCall_0_4()); }
	rulestatement
	{ after(grammarAccess.getSelection_statementAccess().getStatementParserRuleCall_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Selection_statement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection_statement__Group_1__0__Impl
	rule__Selection_statement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelection_statementAccess().getIFTerminalRuleCall_1_0()); }
	RULE_IF
	{ after(grammarAccess.getSelection_statementAccess().getIFTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection_statement__Group_1__1__Impl
	rule__Selection_statement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelection_statementAccess().getLeftParenthesisKeyword_1_1()); }
	'('
	{ after(grammarAccess.getSelection_statementAccess().getLeftParenthesisKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection_statement__Group_1__2__Impl
	rule__Selection_statement__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelection_statementAccess().getExpressionParserRuleCall_1_2()); }
	ruleexpression
	{ after(grammarAccess.getSelection_statementAccess().getExpressionParserRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection_statement__Group_1__3__Impl
	rule__Selection_statement__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelection_statementAccess().getRightParenthesisKeyword_1_3()); }
	')'
	{ after(grammarAccess.getSelection_statementAccess().getRightParenthesisKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection_statement__Group_1__4__Impl
	rule__Selection_statement__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelection_statementAccess().getStatementParserRuleCall_1_4()); }
	rulestatement
	{ after(grammarAccess.getSelection_statementAccess().getStatementParserRuleCall_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection_statement__Group_1__5__Impl
	rule__Selection_statement__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelection_statementAccess().getELSETerminalRuleCall_1_5()); }
	RULE_ELSE
	{ after(grammarAccess.getSelection_statementAccess().getELSETerminalRuleCall_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection_statement__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelection_statementAccess().getStatementParserRuleCall_1_6()); }
	rulestatement
	{ after(grammarAccess.getSelection_statementAccess().getStatementParserRuleCall_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Selection_statement__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection_statement__Group_2__0__Impl
	rule__Selection_statement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelection_statementAccess().getSWITCHTerminalRuleCall_2_0()); }
	RULE_SWITCH
	{ after(grammarAccess.getSelection_statementAccess().getSWITCHTerminalRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection_statement__Group_2__1__Impl
	rule__Selection_statement__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelection_statementAccess().getLeftParenthesisKeyword_2_1()); }
	'('
	{ after(grammarAccess.getSelection_statementAccess().getLeftParenthesisKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection_statement__Group_2__2__Impl
	rule__Selection_statement__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelection_statementAccess().getExpressionParserRuleCall_2_2()); }
	ruleexpression
	{ after(grammarAccess.getSelection_statementAccess().getExpressionParserRuleCall_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection_statement__Group_2__3__Impl
	rule__Selection_statement__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelection_statementAccess().getRightParenthesisKeyword_2_3()); }
	')'
	{ after(grammarAccess.getSelection_statementAccess().getRightParenthesisKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection_statement__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection_statement__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelection_statementAccess().getStatementParserRuleCall_2_4()); }
	rulestatement
	{ after(grammarAccess.getSelection_statementAccess().getStatementParserRuleCall_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Iteration_statement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_0__0__Impl
	rule__Iteration_statement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getWHILETerminalRuleCall_0_0()); }
	RULE_WHILE
	{ after(grammarAccess.getIteration_statementAccess().getWHILETerminalRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_0__1__Impl
	rule__Iteration_statement__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getLeftParenthesisKeyword_0_1()); }
	'('
	{ after(grammarAccess.getIteration_statementAccess().getLeftParenthesisKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_0__2__Impl
	rule__Iteration_statement__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getExpressionParserRuleCall_0_2()); }
	ruleexpression
	{ after(grammarAccess.getIteration_statementAccess().getExpressionParserRuleCall_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_0__3__Impl
	rule__Iteration_statement__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getRightParenthesisKeyword_0_3()); }
	')'
	{ after(grammarAccess.getIteration_statementAccess().getRightParenthesisKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getStatementParserRuleCall_0_4()); }
	rulestatement
	{ after(grammarAccess.getIteration_statementAccess().getStatementParserRuleCall_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Iteration_statement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_1__0__Impl
	rule__Iteration_statement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getDOTerminalRuleCall_1_0()); }
	RULE_DO
	{ after(grammarAccess.getIteration_statementAccess().getDOTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_1__1__Impl
	rule__Iteration_statement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getStatementParserRuleCall_1_1()); }
	rulestatement
	{ after(grammarAccess.getIteration_statementAccess().getStatementParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_1__2__Impl
	rule__Iteration_statement__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getWHILETerminalRuleCall_1_2()); }
	RULE_WHILE
	{ after(grammarAccess.getIteration_statementAccess().getWHILETerminalRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_1__3__Impl
	rule__Iteration_statement__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getLeftParenthesisKeyword_1_3()); }
	'('
	{ after(grammarAccess.getIteration_statementAccess().getLeftParenthesisKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_1__4__Impl
	rule__Iteration_statement__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getExpressionParserRuleCall_1_4()); }
	ruleexpression
	{ after(grammarAccess.getIteration_statementAccess().getExpressionParserRuleCall_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_1__5__Impl
	rule__Iteration_statement__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getRightParenthesisKeyword_1_5()); }
	')'
	{ after(grammarAccess.getIteration_statementAccess().getRightParenthesisKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getSemicolonKeyword_1_6()); }
	';'
	{ after(grammarAccess.getIteration_statementAccess().getSemicolonKeyword_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Iteration_statement__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_2__0__Impl
	rule__Iteration_statement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getFORTerminalRuleCall_2_0()); }
	RULE_FOR
	{ after(grammarAccess.getIteration_statementAccess().getFORTerminalRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_2__1__Impl
	rule__Iteration_statement__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getLeftParenthesisKeyword_2_1()); }
	'('
	{ after(grammarAccess.getIteration_statementAccess().getLeftParenthesisKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_2__2__Impl
	rule__Iteration_statement__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getExpression_statementParserRuleCall_2_2()); }
	ruleexpression_statement
	{ after(grammarAccess.getIteration_statementAccess().getExpression_statementParserRuleCall_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_2__3__Impl
	rule__Iteration_statement__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getExpression_statementParserRuleCall_2_3()); }
	ruleexpression_statement
	{ after(grammarAccess.getIteration_statementAccess().getExpression_statementParserRuleCall_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_2__4__Impl
	rule__Iteration_statement__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getRightParenthesisKeyword_2_4()); }
	')'
	{ after(grammarAccess.getIteration_statementAccess().getRightParenthesisKeyword_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_2__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_2__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getStatementParserRuleCall_2_5()); }
	rulestatement
	{ after(grammarAccess.getIteration_statementAccess().getStatementParserRuleCall_2_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Iteration_statement__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_3__0__Impl
	rule__Iteration_statement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getFORTerminalRuleCall_3_0()); }
	RULE_FOR
	{ after(grammarAccess.getIteration_statementAccess().getFORTerminalRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_3__1__Impl
	rule__Iteration_statement__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getLeftParenthesisKeyword_3_1()); }
	'('
	{ after(grammarAccess.getIteration_statementAccess().getLeftParenthesisKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_3__2__Impl
	rule__Iteration_statement__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getExpression_statementParserRuleCall_3_2()); }
	ruleexpression_statement
	{ after(grammarAccess.getIteration_statementAccess().getExpression_statementParserRuleCall_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_3__3__Impl
	rule__Iteration_statement__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getExpression_statementParserRuleCall_3_3()); }
	ruleexpression_statement
	{ after(grammarAccess.getIteration_statementAccess().getExpression_statementParserRuleCall_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_3__4__Impl
	rule__Iteration_statement__Group_3__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getExpressionParserRuleCall_3_4()); }
	ruleexpression
	{ after(grammarAccess.getIteration_statementAccess().getExpressionParserRuleCall_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_3__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_3__5__Impl
	rule__Iteration_statement__Group_3__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_3__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getRightParenthesisKeyword_3_5()); }
	')'
	{ after(grammarAccess.getIteration_statementAccess().getRightParenthesisKeyword_3_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_3__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration_statement__Group_3__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration_statement__Group_3__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIteration_statementAccess().getStatementParserRuleCall_3_6()); }
	rulestatement
	{ after(grammarAccess.getIteration_statementAccess().getStatementParserRuleCall_3_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Jump_statement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Jump_statement__Group_0__0__Impl
	rule__Jump_statement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJump_statementAccess().getGOTOTerminalRuleCall_0_0()); }
	RULE_GOTO
	{ after(grammarAccess.getJump_statementAccess().getGOTOTerminalRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Jump_statement__Group_0__1__Impl
	rule__Jump_statement__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJump_statementAccess().getIDENTIFIERParserRuleCall_0_1()); }
	ruleIDENTIFIER
	{ after(grammarAccess.getJump_statementAccess().getIDENTIFIERParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Jump_statement__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJump_statementAccess().getSemicolonKeyword_0_2()); }
	';'
	{ after(grammarAccess.getJump_statementAccess().getSemicolonKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Jump_statement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Jump_statement__Group_1__0__Impl
	rule__Jump_statement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJump_statementAccess().getCONTINUETerminalRuleCall_1_0()); }
	RULE_CONTINUE
	{ after(grammarAccess.getJump_statementAccess().getCONTINUETerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Jump_statement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJump_statementAccess().getSemicolonKeyword_1_1()); }
	';'
	{ after(grammarAccess.getJump_statementAccess().getSemicolonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Jump_statement__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Jump_statement__Group_2__0__Impl
	rule__Jump_statement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJump_statementAccess().getBREAKTerminalRuleCall_2_0()); }
	RULE_BREAK
	{ after(grammarAccess.getJump_statementAccess().getBREAKTerminalRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Jump_statement__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJump_statementAccess().getSemicolonKeyword_2_1()); }
	';'
	{ after(grammarAccess.getJump_statementAccess().getSemicolonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Jump_statement__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Jump_statement__Group_3__0__Impl
	rule__Jump_statement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJump_statementAccess().getRETURNOTerminalRuleCall_3_0()); }
	RULE_RETURNO
	{ after(grammarAccess.getJump_statementAccess().getRETURNOTerminalRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Jump_statement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJump_statementAccess().getSemicolonKeyword_3_1()); }
	';'
	{ after(grammarAccess.getJump_statementAccess().getSemicolonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Jump_statement__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Jump_statement__Group_4__0__Impl
	rule__Jump_statement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJump_statementAccess().getRETURNOTerminalRuleCall_4_0()); }
	RULE_RETURNO
	{ after(grammarAccess.getJump_statementAccess().getRETURNOTerminalRuleCall_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Jump_statement__Group_4__1__Impl
	rule__Jump_statement__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJump_statementAccess().getExpressionParserRuleCall_4_1()); }
	ruleexpression
	{ after(grammarAccess.getJump_statementAccess().getExpressionParserRuleCall_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Jump_statement__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Jump_statement__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJump_statementAccess().getSemicolonKeyword_4_2()); }
	';'
	{ after(grammarAccess.getJump_statementAccess().getSemicolonKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function_definition__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_definition__Group_0__0__Impl
	rule__Function_definition__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_definitionAccess().getDeclaration_specifiersParserRuleCall_0_0()); }
	ruledeclaration_specifiers
	{ after(grammarAccess.getFunction_definitionAccess().getDeclaration_specifiersParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_definition__Group_0__1__Impl
	rule__Function_definition__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_definitionAccess().getDeclaratorParserRuleCall_0_1()); }
	ruledeclarator
	{ after(grammarAccess.getFunction_definitionAccess().getDeclaratorParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_definition__Group_0__2__Impl
	rule__Function_definition__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_definitionAccess().getDeclaration_listParserRuleCall_0_2()); }
	ruledeclaration_list
	{ after(grammarAccess.getFunction_definitionAccess().getDeclaration_listParserRuleCall_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_definition__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_definitionAccess().getCompound_statementParserRuleCall_0_3()); }
	rulecompound_statement
	{ after(grammarAccess.getFunction_definitionAccess().getCompound_statementParserRuleCall_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function_definition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_definition__Group_1__0__Impl
	rule__Function_definition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_definitionAccess().getDeclaration_specifiersParserRuleCall_1_0()); }
	ruledeclaration_specifiers
	{ after(grammarAccess.getFunction_definitionAccess().getDeclaration_specifiersParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_definition__Group_1__1__Impl
	rule__Function_definition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_definitionAccess().getDeclaratorParserRuleCall_1_1()); }
	ruledeclarator
	{ after(grammarAccess.getFunction_definitionAccess().getDeclaratorParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_definition__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_definitionAccess().getCompound_statementParserRuleCall_1_2()); }
	rulecompound_statement
	{ after(grammarAccess.getFunction_definitionAccess().getCompound_statementParserRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function_definition__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_definition__Group_2__0__Impl
	rule__Function_definition__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_definitionAccess().getDeclaratorParserRuleCall_2_0()); }
	ruledeclarator
	{ after(grammarAccess.getFunction_definitionAccess().getDeclaratorParserRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_definition__Group_2__1__Impl
	rule__Function_definition__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_definitionAccess().getDeclaration_listParserRuleCall_2_1()); }
	ruledeclaration_list
	{ after(grammarAccess.getFunction_definitionAccess().getDeclaration_listParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_definition__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_definitionAccess().getCompound_statementParserRuleCall_2_2()); }
	rulecompound_statement
	{ after(grammarAccess.getFunction_definitionAccess().getCompound_statementParserRuleCall_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function_definition__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_definition__Group_3__0__Impl
	rule__Function_definition__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_definitionAccess().getDeclaratorParserRuleCall_3_0()); }
	ruledeclarator
	{ after(grammarAccess.getFunction_definitionAccess().getDeclaratorParserRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_definition__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_definition__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_definitionAccess().getCompound_statementParserRuleCall_3_1()); }
	rulecompound_statement
	{ after(grammarAccess.getFunction_definitionAccess().getCompound_statementParserRuleCall_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CONSTANT__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CONSTANT__Group_0__0__Impl
	rule__CONSTANT__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CONSTANT__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getCONSTANTAccess().getDTerminalRuleCall_0_0()); }
		(RULE_D)
		{ after(grammarAccess.getCONSTANTAccess().getDTerminalRuleCall_0_0()); }
	)
	(
		{ before(grammarAccess.getCONSTANTAccess().getDTerminalRuleCall_0_0()); }
		(RULE_D)*
		{ after(grammarAccess.getCONSTANTAccess().getDTerminalRuleCall_0_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CONSTANT__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CONSTANT__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CONSTANT__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCONSTANTAccess().getISParserRuleCall_0_1()); }
	(ruleIS)?
	{ after(grammarAccess.getCONSTANTAccess().getISParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CONSTANT__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CONSTANT__Group_1__0__Impl
	rule__CONSTANT__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CONSTANT__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCONSTANTAccess().getDTerminalRuleCall_1_0()); }
	(RULE_D)*
	{ after(grammarAccess.getCONSTANTAccess().getDTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CONSTANT__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CONSTANT__Group_1__1__Impl
	rule__CONSTANT__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CONSTANT__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCONSTANTAccess().getFullStopKeyword_1_1()); }
	'.'
	{ after(grammarAccess.getCONSTANTAccess().getFullStopKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CONSTANT__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CONSTANT__Group_1__2__Impl
	rule__CONSTANT__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CONSTANT__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getCONSTANTAccess().getDTerminalRuleCall_1_2()); }
		(RULE_D)
		{ after(grammarAccess.getCONSTANTAccess().getDTerminalRuleCall_1_2()); }
	)
	(
		{ before(grammarAccess.getCONSTANTAccess().getDTerminalRuleCall_1_2()); }
		(RULE_D)*
		{ after(grammarAccess.getCONSTANTAccess().getDTerminalRuleCall_1_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CONSTANT__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CONSTANT__Group_1__3__Impl
	rule__CONSTANT__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CONSTANT__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCONSTANTAccess().getETerminalRuleCall_1_3()); }
	(RULE_E)?
	{ after(grammarAccess.getCONSTANTAccess().getETerminalRuleCall_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CONSTANT__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CONSTANT__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CONSTANT__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCONSTANTAccess().getFSParserRuleCall_1_4()); }
	(ruleFS)?
	{ after(grammarAccess.getCONSTANTAccess().getFSParserRuleCall_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CONSTANT__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CONSTANT__Group_2__0__Impl
	rule__CONSTANT__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CONSTANT__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getCONSTANTAccess().getDTerminalRuleCall_2_0()); }
		(RULE_D)
		{ after(grammarAccess.getCONSTANTAccess().getDTerminalRuleCall_2_0()); }
	)
	(
		{ before(grammarAccess.getCONSTANTAccess().getDTerminalRuleCall_2_0()); }
		(RULE_D)*
		{ after(grammarAccess.getCONSTANTAccess().getDTerminalRuleCall_2_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CONSTANT__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CONSTANT__Group_2__1__Impl
	rule__CONSTANT__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CONSTANT__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCONSTANTAccess().getFullStopKeyword_2_1()); }
	'.'
	{ after(grammarAccess.getCONSTANTAccess().getFullStopKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CONSTANT__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CONSTANT__Group_2__2__Impl
	rule__CONSTANT__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CONSTANT__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCONSTANTAccess().getETerminalRuleCall_2_2()); }
	(RULE_E)?
	{ after(grammarAccess.getCONSTANTAccess().getETerminalRuleCall_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CONSTANT__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CONSTANT__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CONSTANT__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCONSTANTAccess().getFSParserRuleCall_2_3()); }
	(ruleFS)?
	{ after(grammarAccess.getCONSTANTAccess().getFSParserRuleCall_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DomainModel__GeetingsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainModelAccess().getGeetingsTranslation_unitParserRuleCall_0()); }
		ruletranslation_unit
		{ after(grammarAccess.getDomainModelAccess().getGeetingsTranslation_unitParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_AUTO : 'auto';

RULE_BREAK : 'break';

RULE_CASE : 'case';

RULE_CHAR : 'char';

RULE_CONST : 'const';

RULE_CONTINUE : 'continue';

RULE_DEFAULT : 'default';

RULE_DO : 'do';

RULE_DOUBLE : 'double';

RULE_ELSE : 'else';

RULE_ENUM : 'enum';

RULE_EXTERN : 'extern';

RULE_FLOAT : 'float';

RULE_FOR : 'for';

RULE_GOTO : 'goto';

RULE_IF : 'if';

RULE_INTE : 'int';

RULE_LONG : 'long';

RULE_REGISTER : 'register';

RULE_RETURNO : 'return';

RULE_SHORT : 'short';

RULE_SIGNED : 'signed';

RULE_SIZEOF : 'sizeof';

RULE_STATIC : 'static';

RULE_STRUCT : 'struct';

RULE_SWITCH : 'switch';

RULE_TYPEDEF : 'typedef';

RULE_UNION : 'union';

RULE_UNSIGNED : 'unsigned';

RULE_VOID : 'void';

RULE_VOLATILE : 'volatile';

RULE_WHILE : 'while';

RULE_ELLIPSIS : '...';

RULE_RIGHT_ASSIGN : '>>=';

RULE_LEFT_ASSIGN : '<<=';

RULE_ADD_ASSIGN : '+=';

RULE_SUB_ASSIGN : '-=';

RULE_MUL_ASSIGN : '*=';

RULE_DIV_ASSIGN : '/=';

RULE_MOD_ASSIGN : '%=';

RULE_AND_ASSIGN : '&=';

RULE_XOR_ASSIGN : '^=';

RULE_OR_ASSIGN : '|=';

RULE_RIGHT_OP : '>>';

RULE_LEFT_OP : '<<';

RULE_INC_OP : '++';

RULE_DEC_OP : '--';

RULE_PTR_OP : '->';

RULE_AND_OP : '&&';

RULE_OR_OP : '||';

RULE_LE_OP : '<=';

RULE_GE_OP : '>=';

RULE_EQ_OP : '==';

RULE_NE_OP : '!=';

RULE_D : '0'..'9';

RULE_L : ('a'..'z'|'A'..'Z');

RULE_E : ('E'|'e') ('+'|'-')? RULE_D+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
