/*
 * generated by Xtext 2.9.1
 */
package org.xtext.example.serializer;

import com.google.inject.Inject;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AlternativeAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.GroupAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;
import org.xtext.example.services.AnsicGrammarAccess;

@SuppressWarnings("all")
public class AnsicSyntacticSequencer extends AbstractSyntacticSequencer {

	protected AnsicGrammarAccess grammarAccess;
	protected AbstractElementAlias match_direct_abstract_declarator___LeftParenthesisKeyword_0_9_0_RightParenthesisKeyword_0_9_1___or___LeftSquareBracketKeyword_0_1_0_RightSquareBracketKeyword_0_1_1___or___LeftSquareBracketKeyword_0_2_0_AsteriskKeyword_0_2_1_RightSquareBracketKeyword_0_2_2__;
	protected AbstractElementAlias match_direct_abstract_declarator_complement___LeftParenthesisKeyword_8_0_RightParenthesisKeyword_8_1___or___LeftSquareBracketKeyword_0_0_RightSquareBracketKeyword_0_1___or___LeftSquareBracketKeyword_1_0_AsteriskKeyword_1_1_RightSquareBracketKeyword_1_2__;
	protected AbstractElementAlias match_direct_declarator_complemento___LeftParenthesisKeyword_10_0_RightParenthesisKeyword_10_1___or___LeftSquareBracketKeyword_0_0_RightSquareBracketKeyword_0_1___or___LeftSquareBracketKeyword_1_0_AsteriskKeyword_1_1_RightSquareBracketKeyword_1_2__;
	protected AbstractElementAlias match_jump_statement___BreakKeyword_2_0_SemicolonKeyword_2_1___or___ContinueKeyword_1_0_SemicolonKeyword_1_1___or___ReturnKeyword_3_0_SemicolonKeyword_3_1__;
	protected AbstractElementAlias match_postfix_expression_LeftParenthesisKeyword_1_0_or_LeftParenthesisKeyword_2_0;
	protected AbstractElementAlias match_type_specifier_BoolKeyword_9_or_CharKeyword_1_or_DoubleKeyword_6_or_FloatKeyword_5_or_IntKeyword_3_or_LongKeyword_4_or_ShortKeyword_2_or_SignedKeyword_7_or_TypedefKeyword_15_or_UnsignedKeyword_8_or_VoidKeyword_0_or__ComplexKeyword_10_or__ImaginaryKeyword_11;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (AnsicGrammarAccess) access;
		match_direct_abstract_declarator___LeftParenthesisKeyword_0_9_0_RightParenthesisKeyword_0_9_1___or___LeftSquareBracketKeyword_0_1_0_RightSquareBracketKeyword_0_1_1___or___LeftSquareBracketKeyword_0_2_0_AsteriskKeyword_0_2_1_RightSquareBracketKeyword_0_2_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getDirect_abstract_declaratorAccess().getLeftParenthesisKeyword_0_9_0()), new TokenAlias(false, false, grammarAccess.getDirect_abstract_declaratorAccess().getRightParenthesisKeyword_0_9_1())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getDirect_abstract_declaratorAccess().getLeftSquareBracketKeyword_0_1_0()), new TokenAlias(false, false, grammarAccess.getDirect_abstract_declaratorAccess().getRightSquareBracketKeyword_0_1_1())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getDirect_abstract_declaratorAccess().getLeftSquareBracketKeyword_0_2_0()), new TokenAlias(false, false, grammarAccess.getDirect_abstract_declaratorAccess().getAsteriskKeyword_0_2_1()), new TokenAlias(false, false, grammarAccess.getDirect_abstract_declaratorAccess().getRightSquareBracketKeyword_0_2_2())));
		match_direct_abstract_declarator_complement___LeftParenthesisKeyword_8_0_RightParenthesisKeyword_8_1___or___LeftSquareBracketKeyword_0_0_RightSquareBracketKeyword_0_1___or___LeftSquareBracketKeyword_1_0_AsteriskKeyword_1_1_RightSquareBracketKeyword_1_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getDirect_abstract_declarator_complementAccess().getLeftParenthesisKeyword_8_0()), new TokenAlias(false, false, grammarAccess.getDirect_abstract_declarator_complementAccess().getRightParenthesisKeyword_8_1())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getDirect_abstract_declarator_complementAccess().getLeftSquareBracketKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getDirect_abstract_declarator_complementAccess().getRightSquareBracketKeyword_0_1())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getDirect_abstract_declarator_complementAccess().getLeftSquareBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getDirect_abstract_declarator_complementAccess().getAsteriskKeyword_1_1()), new TokenAlias(false, false, grammarAccess.getDirect_abstract_declarator_complementAccess().getRightSquareBracketKeyword_1_2())));
		match_direct_declarator_complemento___LeftParenthesisKeyword_10_0_RightParenthesisKeyword_10_1___or___LeftSquareBracketKeyword_0_0_RightSquareBracketKeyword_0_1___or___LeftSquareBracketKeyword_1_0_AsteriskKeyword_1_1_RightSquareBracketKeyword_1_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getDirect_declarator_complementoAccess().getLeftParenthesisKeyword_10_0()), new TokenAlias(false, false, grammarAccess.getDirect_declarator_complementoAccess().getRightParenthesisKeyword_10_1())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getDirect_declarator_complementoAccess().getLeftSquareBracketKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getDirect_declarator_complementoAccess().getRightSquareBracketKeyword_0_1())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getDirect_declarator_complementoAccess().getLeftSquareBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getDirect_declarator_complementoAccess().getAsteriskKeyword_1_1()), new TokenAlias(false, false, grammarAccess.getDirect_declarator_complementoAccess().getRightSquareBracketKeyword_1_2())));
		match_jump_statement___BreakKeyword_2_0_SemicolonKeyword_2_1___or___ContinueKeyword_1_0_SemicolonKeyword_1_1___or___ReturnKeyword_3_0_SemicolonKeyword_3_1__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getJump_statementAccess().getBreakKeyword_2_0()), new TokenAlias(false, false, grammarAccess.getJump_statementAccess().getSemicolonKeyword_2_1())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getJump_statementAccess().getContinueKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getJump_statementAccess().getSemicolonKeyword_1_1())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getJump_statementAccess().getReturnKeyword_3_0()), new TokenAlias(false, false, grammarAccess.getJump_statementAccess().getSemicolonKeyword_3_1())));
		match_postfix_expression_LeftParenthesisKeyword_1_0_or_LeftParenthesisKeyword_2_0 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getPostfix_expressionAccess().getLeftParenthesisKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getPostfix_expressionAccess().getLeftParenthesisKeyword_2_0()));
		match_type_specifier_BoolKeyword_9_or_CharKeyword_1_or_DoubleKeyword_6_or_FloatKeyword_5_or_IntKeyword_3_or_LongKeyword_4_or_ShortKeyword_2_or_SignedKeyword_7_or_TypedefKeyword_15_or_UnsignedKeyword_8_or_VoidKeyword_0_or__ComplexKeyword_10_or__ImaginaryKeyword_11 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getType_specifierAccess().getBoolKeyword_9()), new TokenAlias(false, false, grammarAccess.getType_specifierAccess().getCharKeyword_1()), new TokenAlias(false, false, grammarAccess.getType_specifierAccess().getDoubleKeyword_6()), new TokenAlias(false, false, grammarAccess.getType_specifierAccess().getFloatKeyword_5()), new TokenAlias(false, false, grammarAccess.getType_specifierAccess().getIntKeyword_3()), new TokenAlias(false, false, grammarAccess.getType_specifierAccess().getLongKeyword_4()), new TokenAlias(false, false, grammarAccess.getType_specifierAccess().getShortKeyword_2()), new TokenAlias(false, false, grammarAccess.getType_specifierAccess().getSignedKeyword_7()), new TokenAlias(false, false, grammarAccess.getType_specifierAccess().getTypedefKeyword_15()), new TokenAlias(false, false, grammarAccess.getType_specifierAccess().getUnsignedKeyword_8()), new TokenAlias(false, false, grammarAccess.getType_specifierAccess().getVoidKeyword_0()), new TokenAlias(false, false, grammarAccess.getType_specifierAccess().get_ComplexKeyword_10()), new TokenAlias(false, false, grammarAccess.getType_specifierAccess().get_ImaginaryKeyword_11()));
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (ruleCall.getRule() == grammarAccess.getSTRING_LITERALRule())
			return getSTRING_LITERALToken(semanticObject, ruleCall, node);
		return "";
	}
	
	/**
	 * terminal STRING_LITERAL:
	 * 	(SP? '"' (('^' | '\'' | '\\' | '\n') | ES)* '"' WS*)+;
	 */
	protected String getSTRING_LITERALToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "\"\"";
	}
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_direct_abstract_declarator___LeftParenthesisKeyword_0_9_0_RightParenthesisKeyword_0_9_1___or___LeftSquareBracketKeyword_0_1_0_RightSquareBracketKeyword_0_1_1___or___LeftSquareBracketKeyword_0_2_0_AsteriskKeyword_0_2_1_RightSquareBracketKeyword_0_2_2__.equals(syntax))
				emit_direct_abstract_declarator___LeftParenthesisKeyword_0_9_0_RightParenthesisKeyword_0_9_1___or___LeftSquareBracketKeyword_0_1_0_RightSquareBracketKeyword_0_1_1___or___LeftSquareBracketKeyword_0_2_0_AsteriskKeyword_0_2_1_RightSquareBracketKeyword_0_2_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_direct_abstract_declarator_complement___LeftParenthesisKeyword_8_0_RightParenthesisKeyword_8_1___or___LeftSquareBracketKeyword_0_0_RightSquareBracketKeyword_0_1___or___LeftSquareBracketKeyword_1_0_AsteriskKeyword_1_1_RightSquareBracketKeyword_1_2__.equals(syntax))
				emit_direct_abstract_declarator_complement___LeftParenthesisKeyword_8_0_RightParenthesisKeyword_8_1___or___LeftSquareBracketKeyword_0_0_RightSquareBracketKeyword_0_1___or___LeftSquareBracketKeyword_1_0_AsteriskKeyword_1_1_RightSquareBracketKeyword_1_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_direct_declarator_complemento___LeftParenthesisKeyword_10_0_RightParenthesisKeyword_10_1___or___LeftSquareBracketKeyword_0_0_RightSquareBracketKeyword_0_1___or___LeftSquareBracketKeyword_1_0_AsteriskKeyword_1_1_RightSquareBracketKeyword_1_2__.equals(syntax))
				emit_direct_declarator_complemento___LeftParenthesisKeyword_10_0_RightParenthesisKeyword_10_1___or___LeftSquareBracketKeyword_0_0_RightSquareBracketKeyword_0_1___or___LeftSquareBracketKeyword_1_0_AsteriskKeyword_1_1_RightSquareBracketKeyword_1_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_jump_statement___BreakKeyword_2_0_SemicolonKeyword_2_1___or___ContinueKeyword_1_0_SemicolonKeyword_1_1___or___ReturnKeyword_3_0_SemicolonKeyword_3_1__.equals(syntax))
				emit_jump_statement___BreakKeyword_2_0_SemicolonKeyword_2_1___or___ContinueKeyword_1_0_SemicolonKeyword_1_1___or___ReturnKeyword_3_0_SemicolonKeyword_3_1__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_postfix_expression_LeftParenthesisKeyword_1_0_or_LeftParenthesisKeyword_2_0.equals(syntax))
				emit_postfix_expression_LeftParenthesisKeyword_1_0_or_LeftParenthesisKeyword_2_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_type_specifier_BoolKeyword_9_or_CharKeyword_1_or_DoubleKeyword_6_or_FloatKeyword_5_or_IntKeyword_3_or_LongKeyword_4_or_ShortKeyword_2_or_SignedKeyword_7_or_TypedefKeyword_15_or_UnsignedKeyword_8_or_VoidKeyword_0_or__ComplexKeyword_10_or__ImaginaryKeyword_11.equals(syntax))
				emit_type_specifier_BoolKeyword_9_or_CharKeyword_1_or_DoubleKeyword_6_or_FloatKeyword_5_or_IntKeyword_3_or_LongKeyword_4_or_ShortKeyword_2_or_SignedKeyword_7_or_TypedefKeyword_15_or_UnsignedKeyword_8_or_VoidKeyword_0_or__ComplexKeyword_10_or__ImaginaryKeyword_11(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * Ambiguous syntax:
	 *     ('[' '*' ']') | ('[' ']') | ('(' ')')
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) direct_abstract_declarator_linha=direct_abstract_declarator_linha
	 */
	protected void emit_direct_abstract_declarator___LeftParenthesisKeyword_0_9_0_RightParenthesisKeyword_0_9_1___or___LeftSquareBracketKeyword_0_1_0_RightSquareBracketKeyword_0_1_1___or___LeftSquareBracketKeyword_0_2_0_AsteriskKeyword_0_2_1_RightSquareBracketKeyword_0_2_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('[' '*' ']') | ('[' ']') | ('(' ')')
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_direct_abstract_declarator_complement___LeftParenthesisKeyword_8_0_RightParenthesisKeyword_8_1___or___LeftSquareBracketKeyword_0_0_RightSquareBracketKeyword_0_1___or___LeftSquareBracketKeyword_1_0_AsteriskKeyword_1_1_RightSquareBracketKeyword_1_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('[' '*' ']') | ('[' ']') | ('(' ')')
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_direct_declarator_complemento___LeftParenthesisKeyword_10_0_RightParenthesisKeyword_10_1___or___LeftSquareBracketKeyword_0_0_RightSquareBracketKeyword_0_1___or___LeftSquareBracketKeyword_1_0_AsteriskKeyword_1_1_RightSquareBracketKeyword_1_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('continue' ';') | ('break' ';') | ('return' ';')
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_jump_statement___BreakKeyword_2_0_SemicolonKeyword_2_1___or___ContinueKeyword_1_0_SemicolonKeyword_1_1___or___ReturnKeyword_3_0_SemicolonKeyword_3_1__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     '(' | '('
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) specifier_qualifier_list=specifier_qualifier_list
	 */
	protected void emit_postfix_expression_LeftParenthesisKeyword_1_0_or_LeftParenthesisKeyword_2_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (
	  *         'void' | 
	  *         'char' | 
	  *         'short' | 
	  *         'int' | 
	  *         'long' | 
	  *         'float' | 
	  *         'double' | 
	  *         'signed' | 
	  *         'unsigned' | 
	  *         'bool' | 
	  *         '_Complex' | 
	  *         '_Imaginary' | 
	  *         'typedef'
	  *     )
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_type_specifier_BoolKeyword_9_or_CharKeyword_1_or_DoubleKeyword_6_or_FloatKeyword_5_or_IntKeyword_3_or_LongKeyword_4_or_ShortKeyword_2_or_SignedKeyword_7_or_TypedefKeyword_15_or_UnsignedKeyword_8_or_VoidKeyword_0_or__ComplexKeyword_10_or__ImaginaryKeyword_11(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
