/**
 * generated by Xtext 2.9.1
 */
package org.xtext.example.ansic.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.ansic.AnsicPackage;
import org.xtext.example.ansic.declaration;
import org.xtext.example.ansic.declaration_specifiers;
import org.xtext.example.ansic.init_declarator_list;
import org.xtext.example.ansic.static_assert_declaration;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>declaration</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.ansic.impl.declarationImpl#getDeclaration_specifiers <em>Declaration specifiers</em>}</li>
 *   <li>{@link org.xtext.example.ansic.impl.declarationImpl#getInit_declarator_list <em>Init declarator list</em>}</li>
 *   <li>{@link org.xtext.example.ansic.impl.declarationImpl#getStatic_assert_declaration <em>Static assert declaration</em>}</li>
 * </ul>
 *
 * @generated
 */
public class declarationImpl extends MinimalEObjectImpl.Container implements declaration
{
  /**
   * The cached value of the '{@link #getDeclaration_specifiers() <em>Declaration specifiers</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDeclaration_specifiers()
   * @generated
   * @ordered
   */
  protected EList<declaration_specifiers> declaration_specifiers;

  /**
   * The cached value of the '{@link #getInit_declarator_list() <em>Init declarator list</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInit_declarator_list()
   * @generated
   * @ordered
   */
  protected EList<init_declarator_list> init_declarator_list;

  /**
   * The cached value of the '{@link #getStatic_assert_declaration() <em>Static assert declaration</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStatic_assert_declaration()
   * @generated
   * @ordered
   */
  protected static_assert_declaration static_assert_declaration;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected declarationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AnsicPackage.Literals.DECLARATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<declaration_specifiers> getDeclaration_specifiers()
  {
    if (declaration_specifiers == null)
    {
      declaration_specifiers = new EObjectContainmentEList<declaration_specifiers>(declaration_specifiers.class, this, AnsicPackage.DECLARATION__DECLARATION_SPECIFIERS);
    }
    return declaration_specifiers;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<init_declarator_list> getInit_declarator_list()
  {
    if (init_declarator_list == null)
    {
      init_declarator_list = new EObjectContainmentEList<init_declarator_list>(init_declarator_list.class, this, AnsicPackage.DECLARATION__INIT_DECLARATOR_LIST);
    }
    return init_declarator_list;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static_assert_declaration getStatic_assert_declaration()
  {
    return static_assert_declaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStatic_assert_declaration(static_assert_declaration newStatic_assert_declaration, NotificationChain msgs)
  {
    static_assert_declaration oldStatic_assert_declaration = static_assert_declaration;
    static_assert_declaration = newStatic_assert_declaration;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AnsicPackage.DECLARATION__STATIC_ASSERT_DECLARATION, oldStatic_assert_declaration, newStatic_assert_declaration);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStatic_assert_declaration(static_assert_declaration newStatic_assert_declaration)
  {
    if (newStatic_assert_declaration != static_assert_declaration)
    {
      NotificationChain msgs = null;
      if (static_assert_declaration != null)
        msgs = ((InternalEObject)static_assert_declaration).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AnsicPackage.DECLARATION__STATIC_ASSERT_DECLARATION, null, msgs);
      if (newStatic_assert_declaration != null)
        msgs = ((InternalEObject)newStatic_assert_declaration).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AnsicPackage.DECLARATION__STATIC_ASSERT_DECLARATION, null, msgs);
      msgs = basicSetStatic_assert_declaration(newStatic_assert_declaration, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AnsicPackage.DECLARATION__STATIC_ASSERT_DECLARATION, newStatic_assert_declaration, newStatic_assert_declaration));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AnsicPackage.DECLARATION__DECLARATION_SPECIFIERS:
        return ((InternalEList<?>)getDeclaration_specifiers()).basicRemove(otherEnd, msgs);
      case AnsicPackage.DECLARATION__INIT_DECLARATOR_LIST:
        return ((InternalEList<?>)getInit_declarator_list()).basicRemove(otherEnd, msgs);
      case AnsicPackage.DECLARATION__STATIC_ASSERT_DECLARATION:
        return basicSetStatic_assert_declaration(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AnsicPackage.DECLARATION__DECLARATION_SPECIFIERS:
        return getDeclaration_specifiers();
      case AnsicPackage.DECLARATION__INIT_DECLARATOR_LIST:
        return getInit_declarator_list();
      case AnsicPackage.DECLARATION__STATIC_ASSERT_DECLARATION:
        return getStatic_assert_declaration();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AnsicPackage.DECLARATION__DECLARATION_SPECIFIERS:
        getDeclaration_specifiers().clear();
        getDeclaration_specifiers().addAll((Collection<? extends declaration_specifiers>)newValue);
        return;
      case AnsicPackage.DECLARATION__INIT_DECLARATOR_LIST:
        getInit_declarator_list().clear();
        getInit_declarator_list().addAll((Collection<? extends init_declarator_list>)newValue);
        return;
      case AnsicPackage.DECLARATION__STATIC_ASSERT_DECLARATION:
        setStatic_assert_declaration((static_assert_declaration)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AnsicPackage.DECLARATION__DECLARATION_SPECIFIERS:
        getDeclaration_specifiers().clear();
        return;
      case AnsicPackage.DECLARATION__INIT_DECLARATOR_LIST:
        getInit_declarator_list().clear();
        return;
      case AnsicPackage.DECLARATION__STATIC_ASSERT_DECLARATION:
        setStatic_assert_declaration((static_assert_declaration)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AnsicPackage.DECLARATION__DECLARATION_SPECIFIERS:
        return declaration_specifiers != null && !declaration_specifiers.isEmpty();
      case AnsicPackage.DECLARATION__INIT_DECLARATOR_LIST:
        return init_declarator_list != null && !init_declarator_list.isEmpty();
      case AnsicPackage.DECLARATION__STATIC_ASSERT_DECLARATION:
        return static_assert_declaration != null;
    }
    return super.eIsSet(featureID);
  }

} //declarationImpl
