package org.xtext.example.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.services.AnsicGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalAnsicParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_IDZ", "RULE_STRING_LITERAL", "RULE_INT", "RULE_FLOAT", "RULE_CHAR", "RULE_O", "RULE_D", "RULE_NZ", "RULE_L", "RULE_A", "RULE_H", "RULE_HP", "RULE_E", "RULE_P", "RULE_FS", "RULE_ES", "RULE_IS", "RULE_CP", "RULE_SP", "RULE_WS", "RULE_I_CONSTANT", "RULE_F_CONSTANT", "RULE_ID", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_ANY_OTHER", "'inline'", "'_Noreturn'", "'_Alignas'", "'('", "')'", "'const'", "'restrict'", "'volatile'", "'_Atomic'", "'void'", "'char'", "'short'", "'int'", "'long'", "'float'", "'double'", "'signed'", "'unsigned'", "'bool'", "'_Complex'", "'_Imaginary'", "'typedef'", "'enum'", "'{'", "'}'", "','", "'='", "'struct'", "'union'", "';'", "':'", "'extern'", "'static'", "'_Thread_local'", "'auto'", "'register'", "'*'", "'['", "']'", "'...'", "'_Generic'", "'default'", "'.'", "'_Static_assert'", "'->'", "'++'", "'--'", "'sizeof'", "'_Alignof'", "'/'", "'%'", "'+'", "'-'", "'<<'", "'>>'", "'=='", "'!='", "'goto'", "'continue'", "'break'", "'return'", "'while'", "'do'", "'for'", "'if'", "'else'", "'switch'", "'case'", "'&'", "'^'", "'|'", "'and'", "'or'", "'?'", "'*='", "'/='", "'%='", "'+='", "'-='", "'<<='", "'>>='", "'&='", "'^='", "'|='", "'~'", "'!'"
    };
    public static final int RULE_A=13;
    public static final int T__50=50;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=26;
    public static final int RULE_HP=15;
    public static final int RULE_INT=6;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=28;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int RULE_I_CONSTANT=24;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int RULE_IS=20;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int RULE_O=9;
    public static final int RULE_P=17;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int RULE_L=12;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int RULE_FLOAT=7;
    public static final int RULE_F_CONSTANT=25;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int RULE_H=14;
    public static final int T__40=40;
    public static final int RULE_E=16;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int RULE_D=10;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int RULE_CP=21;
    public static final int T__99=99;
    public static final int RULE_CHAR=8;
    public static final int RULE_SP=22;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=27;
    public static final int RULE_ES=19;
    public static final int RULE_STRING_LITERAL=5;
    public static final int RULE_SL_COMMENT=29;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__115=115;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__114=114;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__116=116;
    public static final int T__80=80;
    public static final int T__111=111;
    public static final int T__81=81;
    public static final int T__110=110;
    public static final int T__82=82;
    public static final int T__113=113;
    public static final int T__83=83;
    public static final int T__112=112;
    public static final int RULE_WS=23;
    public static final int RULE_IDZ=4;
    public static final int RULE_FS=18;
    public static final int RULE_ANY_OTHER=30;
    public static final int RULE_NZ=11;
    public static final int T__88=88;
    public static final int T__108=108;
    public static final int T__89=89;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__106=106;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalAnsicParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalAnsicParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalAnsicParser.tokenNames; }
    public String getGrammarFileName() { return "InternalAnsic.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */

     	private AnsicGrammarAccess grammarAccess;

        public InternalAnsicParser(TokenStream input, AnsicGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "DomainModel";
       	}

       	@Override
       	protected AnsicGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleDomainModel"
    // InternalAnsic.g:70:1: entryRuleDomainModel returns [EObject current=null] : iv_ruleDomainModel= ruleDomainModel EOF ;
    public final EObject entryRuleDomainModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDomainModel = null;


        try {
            // InternalAnsic.g:70:52: (iv_ruleDomainModel= ruleDomainModel EOF )
            // InternalAnsic.g:71:2: iv_ruleDomainModel= ruleDomainModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDomainModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDomainModel=ruleDomainModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDomainModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDomainModel"


    // $ANTLR start "ruleDomainModel"
    // InternalAnsic.g:77:1: ruleDomainModel returns [EObject current=null] : ( (lv_geetings_0_0= ruletranslation_unit ) ) ;
    public final EObject ruleDomainModel() throws RecognitionException {
        EObject current = null;

        EObject lv_geetings_0_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:83:2: ( ( (lv_geetings_0_0= ruletranslation_unit ) ) )
            // InternalAnsic.g:84:2: ( (lv_geetings_0_0= ruletranslation_unit ) )
            {
            // InternalAnsic.g:84:2: ( (lv_geetings_0_0= ruletranslation_unit ) )
            // InternalAnsic.g:85:3: (lv_geetings_0_0= ruletranslation_unit )
            {
            // InternalAnsic.g:85:3: (lv_geetings_0_0= ruletranslation_unit )
            // InternalAnsic.g:86:4: lv_geetings_0_0= ruletranslation_unit
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getDomainModelAccess().getGeetingsTranslation_unitParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_geetings_0_0=ruletranslation_unit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getDomainModelRule());
              				}
              				add(
              					current,
              					"geetings",
              					lv_geetings_0_0,
              					"org.xtext.example.Ansic.translation_unit");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDomainModel"


    // $ANTLR start "entryRuletranslation_unit"
    // InternalAnsic.g:106:1: entryRuletranslation_unit returns [EObject current=null] : iv_ruletranslation_unit= ruletranslation_unit EOF ;
    public final EObject entryRuletranslation_unit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletranslation_unit = null;


        try {
            // InternalAnsic.g:106:57: (iv_ruletranslation_unit= ruletranslation_unit EOF )
            // InternalAnsic.g:107:2: iv_ruletranslation_unit= ruletranslation_unit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTranslation_unitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletranslation_unit=ruletranslation_unit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletranslation_unit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletranslation_unit"


    // $ANTLR start "ruletranslation_unit"
    // InternalAnsic.g:113:1: ruletranslation_unit returns [EObject current=null] : ( ( (lv_external_declaration_0_0= ruleexternal_declaration ) ) ( (lv_translation_unit_linha_1_0= ruletranslation_unit_linha ) ) ) ;
    public final EObject ruletranslation_unit() throws RecognitionException {
        EObject current = null;

        EObject lv_external_declaration_0_0 = null;

        EObject lv_translation_unit_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:119:2: ( ( ( (lv_external_declaration_0_0= ruleexternal_declaration ) ) ( (lv_translation_unit_linha_1_0= ruletranslation_unit_linha ) ) ) )
            // InternalAnsic.g:120:2: ( ( (lv_external_declaration_0_0= ruleexternal_declaration ) ) ( (lv_translation_unit_linha_1_0= ruletranslation_unit_linha ) ) )
            {
            // InternalAnsic.g:120:2: ( ( (lv_external_declaration_0_0= ruleexternal_declaration ) ) ( (lv_translation_unit_linha_1_0= ruletranslation_unit_linha ) ) )
            // InternalAnsic.g:121:3: ( (lv_external_declaration_0_0= ruleexternal_declaration ) ) ( (lv_translation_unit_linha_1_0= ruletranslation_unit_linha ) )
            {
            // InternalAnsic.g:121:3: ( (lv_external_declaration_0_0= ruleexternal_declaration ) )
            // InternalAnsic.g:122:4: (lv_external_declaration_0_0= ruleexternal_declaration )
            {
            // InternalAnsic.g:122:4: (lv_external_declaration_0_0= ruleexternal_declaration )
            // InternalAnsic.g:123:5: lv_external_declaration_0_0= ruleexternal_declaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTranslation_unitAccess().getExternal_declarationExternal_declarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_external_declaration_0_0=ruleexternal_declaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTranslation_unitRule());
              					}
              					set(
              						current,
              						"external_declaration",
              						lv_external_declaration_0_0,
              						"org.xtext.example.Ansic.external_declaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:140:3: ( (lv_translation_unit_linha_1_0= ruletranslation_unit_linha ) )
            // InternalAnsic.g:141:4: (lv_translation_unit_linha_1_0= ruletranslation_unit_linha )
            {
            // InternalAnsic.g:141:4: (lv_translation_unit_linha_1_0= ruletranslation_unit_linha )
            // InternalAnsic.g:142:5: lv_translation_unit_linha_1_0= ruletranslation_unit_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTranslation_unitAccess().getTranslation_unit_linhaTranslation_unit_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_translation_unit_linha_1_0=ruletranslation_unit_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTranslation_unitRule());
              					}
              					set(
              						current,
              						"translation_unit_linha",
              						lv_translation_unit_linha_1_0,
              						"org.xtext.example.Ansic.translation_unit_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletranslation_unit"


    // $ANTLR start "entryRuleexternal_declaration"
    // InternalAnsic.g:163:1: entryRuleexternal_declaration returns [EObject current=null] : iv_ruleexternal_declaration= ruleexternal_declaration EOF ;
    public final EObject entryRuleexternal_declaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleexternal_declaration = null;


        try {
            // InternalAnsic.g:163:61: (iv_ruleexternal_declaration= ruleexternal_declaration EOF )
            // InternalAnsic.g:164:2: iv_ruleexternal_declaration= ruleexternal_declaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExternal_declarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleexternal_declaration=ruleexternal_declaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexternal_declaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleexternal_declaration"


    // $ANTLR start "ruleexternal_declaration"
    // InternalAnsic.g:170:1: ruleexternal_declaration returns [EObject current=null] : ( ( (lv_function_definitio_0_0= rulefunction_definition ) ) | ( (lv_declaration_1_0= ruledeclaration ) ) ) ;
    public final EObject ruleexternal_declaration() throws RecognitionException {
        EObject current = null;

        EObject lv_function_definitio_0_0 = null;

        EObject lv_declaration_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:176:2: ( ( ( (lv_function_definitio_0_0= rulefunction_definition ) ) | ( (lv_declaration_1_0= ruledeclaration ) ) ) )
            // InternalAnsic.g:177:2: ( ( (lv_function_definitio_0_0= rulefunction_definition ) ) | ( (lv_declaration_1_0= ruledeclaration ) ) )
            {
            // InternalAnsic.g:177:2: ( ( (lv_function_definitio_0_0= rulefunction_definition ) ) | ( (lv_declaration_1_0= ruledeclaration ) ) )
            int alt1=2;
            alt1 = dfa1.predict(input);
            switch (alt1) {
                case 1 :
                    // InternalAnsic.g:178:3: ( (lv_function_definitio_0_0= rulefunction_definition ) )
                    {
                    // InternalAnsic.g:178:3: ( (lv_function_definitio_0_0= rulefunction_definition ) )
                    // InternalAnsic.g:179:4: (lv_function_definitio_0_0= rulefunction_definition )
                    {
                    // InternalAnsic.g:179:4: (lv_function_definitio_0_0= rulefunction_definition )
                    // InternalAnsic.g:180:5: lv_function_definitio_0_0= rulefunction_definition
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getExternal_declarationAccess().getFunction_definitioFunction_definitionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_definitio_0_0=rulefunction_definition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getExternal_declarationRule());
                      					}
                      					set(
                      						current,
                      						"function_definitio",
                      						lv_function_definitio_0_0,
                      						"org.xtext.example.Ansic.function_definition");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:198:3: ( (lv_declaration_1_0= ruledeclaration ) )
                    {
                    // InternalAnsic.g:198:3: ( (lv_declaration_1_0= ruledeclaration ) )
                    // InternalAnsic.g:199:4: (lv_declaration_1_0= ruledeclaration )
                    {
                    // InternalAnsic.g:199:4: (lv_declaration_1_0= ruledeclaration )
                    // InternalAnsic.g:200:5: lv_declaration_1_0= ruledeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getExternal_declarationAccess().getDeclarationDeclarationParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaration_1_0=ruledeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getExternal_declarationRule());
                      					}
                      					set(
                      						current,
                      						"declaration",
                      						lv_declaration_1_0,
                      						"org.xtext.example.Ansic.declaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleexternal_declaration"


    // $ANTLR start "entryRuledeclaration_specifiers"
    // InternalAnsic.g:221:1: entryRuledeclaration_specifiers returns [EObject current=null] : iv_ruledeclaration_specifiers= ruledeclaration_specifiers EOF ;
    public final EObject entryRuledeclaration_specifiers() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledeclaration_specifiers = null;


        try {
            // InternalAnsic.g:221:63: (iv_ruledeclaration_specifiers= ruledeclaration_specifiers EOF )
            // InternalAnsic.g:222:2: iv_ruledeclaration_specifiers= ruledeclaration_specifiers EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclaration_specifiersRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledeclaration_specifiers=ruledeclaration_specifiers();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledeclaration_specifiers; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledeclaration_specifiers"


    // $ANTLR start "ruledeclaration_specifiers"
    // InternalAnsic.g:228:1: ruledeclaration_specifiers returns [EObject current=null] : ( ( ( (lv_storage_class_specifier_0_0= rulestorage_class_specifier ) ) ( (lv_declaration_specifiers_1_0= ruledeclaration_specifiers ) ) ) | ( (lv_storage_class_specifier_2_0= rulestorage_class_specifier ) ) | ( ( (lv_type_specifier_3_0= ruletype_specifier ) ) ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) ) | ( (lv_type_specifier_5_0= ruletype_specifier ) ) | ( ( (lv_type_qualifier_6_0= ruletype_qualifier ) ) ( (lv_declaration_specifiers_7_0= ruledeclaration_specifiers ) ) ) | ( (lv_type_qualifier_8_0= ruletype_qualifier ) ) | ( ( (lv_function_specifier_9_0= rulefunction_specifier ) ) ( (lv_declaration_specifiers_10_0= ruledeclaration_specifiers ) ) ) | ( (lv_function_specifier_11_0= rulefunction_specifier ) ) | ( ( (lv_alignment_specifier_12_0= rulealignment_specifier ) ) ( (lv_declaration_specifiers_13_0= ruledeclaration_specifiers ) ) ) | ( (lv_alignment_specifier_14_0= rulealignment_specifier ) ) ) ;
    public final EObject ruledeclaration_specifiers() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_storage_class_specifier_0_0 = null;

        EObject lv_declaration_specifiers_1_0 = null;

        AntlrDatatypeRuleToken lv_storage_class_specifier_2_0 = null;

        EObject lv_type_specifier_3_0 = null;

        EObject lv_declaration_specifiers_4_0 = null;

        EObject lv_type_specifier_5_0 = null;

        EObject lv_type_qualifier_6_0 = null;

        EObject lv_declaration_specifiers_7_0 = null;

        EObject lv_type_qualifier_8_0 = null;

        AntlrDatatypeRuleToken lv_function_specifier_9_0 = null;

        EObject lv_declaration_specifiers_10_0 = null;

        AntlrDatatypeRuleToken lv_function_specifier_11_0 = null;

        EObject lv_alignment_specifier_12_0 = null;

        EObject lv_declaration_specifiers_13_0 = null;

        EObject lv_alignment_specifier_14_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:234:2: ( ( ( ( (lv_storage_class_specifier_0_0= rulestorage_class_specifier ) ) ( (lv_declaration_specifiers_1_0= ruledeclaration_specifiers ) ) ) | ( (lv_storage_class_specifier_2_0= rulestorage_class_specifier ) ) | ( ( (lv_type_specifier_3_0= ruletype_specifier ) ) ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) ) | ( (lv_type_specifier_5_0= ruletype_specifier ) ) | ( ( (lv_type_qualifier_6_0= ruletype_qualifier ) ) ( (lv_declaration_specifiers_7_0= ruledeclaration_specifiers ) ) ) | ( (lv_type_qualifier_8_0= ruletype_qualifier ) ) | ( ( (lv_function_specifier_9_0= rulefunction_specifier ) ) ( (lv_declaration_specifiers_10_0= ruledeclaration_specifiers ) ) ) | ( (lv_function_specifier_11_0= rulefunction_specifier ) ) | ( ( (lv_alignment_specifier_12_0= rulealignment_specifier ) ) ( (lv_declaration_specifiers_13_0= ruledeclaration_specifiers ) ) ) | ( (lv_alignment_specifier_14_0= rulealignment_specifier ) ) ) )
            // InternalAnsic.g:235:2: ( ( ( (lv_storage_class_specifier_0_0= rulestorage_class_specifier ) ) ( (lv_declaration_specifiers_1_0= ruledeclaration_specifiers ) ) ) | ( (lv_storage_class_specifier_2_0= rulestorage_class_specifier ) ) | ( ( (lv_type_specifier_3_0= ruletype_specifier ) ) ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) ) | ( (lv_type_specifier_5_0= ruletype_specifier ) ) | ( ( (lv_type_qualifier_6_0= ruletype_qualifier ) ) ( (lv_declaration_specifiers_7_0= ruledeclaration_specifiers ) ) ) | ( (lv_type_qualifier_8_0= ruletype_qualifier ) ) | ( ( (lv_function_specifier_9_0= rulefunction_specifier ) ) ( (lv_declaration_specifiers_10_0= ruledeclaration_specifiers ) ) ) | ( (lv_function_specifier_11_0= rulefunction_specifier ) ) | ( ( (lv_alignment_specifier_12_0= rulealignment_specifier ) ) ( (lv_declaration_specifiers_13_0= ruledeclaration_specifiers ) ) ) | ( (lv_alignment_specifier_14_0= rulealignment_specifier ) ) )
            {
            // InternalAnsic.g:235:2: ( ( ( (lv_storage_class_specifier_0_0= rulestorage_class_specifier ) ) ( (lv_declaration_specifiers_1_0= ruledeclaration_specifiers ) ) ) | ( (lv_storage_class_specifier_2_0= rulestorage_class_specifier ) ) | ( ( (lv_type_specifier_3_0= ruletype_specifier ) ) ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) ) | ( (lv_type_specifier_5_0= ruletype_specifier ) ) | ( ( (lv_type_qualifier_6_0= ruletype_qualifier ) ) ( (lv_declaration_specifiers_7_0= ruledeclaration_specifiers ) ) ) | ( (lv_type_qualifier_8_0= ruletype_qualifier ) ) | ( ( (lv_function_specifier_9_0= rulefunction_specifier ) ) ( (lv_declaration_specifiers_10_0= ruledeclaration_specifiers ) ) ) | ( (lv_function_specifier_11_0= rulefunction_specifier ) ) | ( ( (lv_alignment_specifier_12_0= rulealignment_specifier ) ) ( (lv_declaration_specifiers_13_0= ruledeclaration_specifiers ) ) ) | ( (lv_alignment_specifier_14_0= rulealignment_specifier ) ) )
            int alt2=10;
            alt2 = dfa2.predict(input);
            switch (alt2) {
                case 1 :
                    // InternalAnsic.g:236:3: ( ( (lv_storage_class_specifier_0_0= rulestorage_class_specifier ) ) ( (lv_declaration_specifiers_1_0= ruledeclaration_specifiers ) ) )
                    {
                    // InternalAnsic.g:236:3: ( ( (lv_storage_class_specifier_0_0= rulestorage_class_specifier ) ) ( (lv_declaration_specifiers_1_0= ruledeclaration_specifiers ) ) )
                    // InternalAnsic.g:237:4: ( (lv_storage_class_specifier_0_0= rulestorage_class_specifier ) ) ( (lv_declaration_specifiers_1_0= ruledeclaration_specifiers ) )
                    {
                    // InternalAnsic.g:237:4: ( (lv_storage_class_specifier_0_0= rulestorage_class_specifier ) )
                    // InternalAnsic.g:238:5: (lv_storage_class_specifier_0_0= rulestorage_class_specifier )
                    {
                    // InternalAnsic.g:238:5: (lv_storage_class_specifier_0_0= rulestorage_class_specifier )
                    // InternalAnsic.g:239:6: lv_storage_class_specifier_0_0= rulestorage_class_specifier
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getStorage_class_specifierStorage_class_specifierParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_storage_class_specifier_0_0=rulestorage_class_specifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDeclaration_specifiersRule());
                      						}
                      						set(
                      							current,
                      							"storage_class_specifier",
                      							lv_storage_class_specifier_0_0,
                      							"org.xtext.example.Ansic.storage_class_specifier");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:256:4: ( (lv_declaration_specifiers_1_0= ruledeclaration_specifiers ) )
                    // InternalAnsic.g:257:5: (lv_declaration_specifiers_1_0= ruledeclaration_specifiers )
                    {
                    // InternalAnsic.g:257:5: (lv_declaration_specifiers_1_0= ruledeclaration_specifiers )
                    // InternalAnsic.g:258:6: lv_declaration_specifiers_1_0= ruledeclaration_specifiers
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaration_specifiers_1_0=ruledeclaration_specifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDeclaration_specifiersRule());
                      						}
                      						add(
                      							current,
                      							"declaration_specifiers",
                      							lv_declaration_specifiers_1_0,
                      							"org.xtext.example.Ansic.declaration_specifiers");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:277:3: ( (lv_storage_class_specifier_2_0= rulestorage_class_specifier ) )
                    {
                    // InternalAnsic.g:277:3: ( (lv_storage_class_specifier_2_0= rulestorage_class_specifier ) )
                    // InternalAnsic.g:278:4: (lv_storage_class_specifier_2_0= rulestorage_class_specifier )
                    {
                    // InternalAnsic.g:278:4: (lv_storage_class_specifier_2_0= rulestorage_class_specifier )
                    // InternalAnsic.g:279:5: lv_storage_class_specifier_2_0= rulestorage_class_specifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getStorage_class_specifierStorage_class_specifierParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_storage_class_specifier_2_0=rulestorage_class_specifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDeclaration_specifiersRule());
                      					}
                      					set(
                      						current,
                      						"storage_class_specifier",
                      						lv_storage_class_specifier_2_0,
                      						"org.xtext.example.Ansic.storage_class_specifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:297:3: ( ( (lv_type_specifier_3_0= ruletype_specifier ) ) ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) )
                    {
                    // InternalAnsic.g:297:3: ( ( (lv_type_specifier_3_0= ruletype_specifier ) ) ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) )
                    // InternalAnsic.g:298:4: ( (lv_type_specifier_3_0= ruletype_specifier ) ) ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) )
                    {
                    // InternalAnsic.g:298:4: ( (lv_type_specifier_3_0= ruletype_specifier ) )
                    // InternalAnsic.g:299:5: (lv_type_specifier_3_0= ruletype_specifier )
                    {
                    // InternalAnsic.g:299:5: (lv_type_specifier_3_0= ruletype_specifier )
                    // InternalAnsic.g:300:6: lv_type_specifier_3_0= ruletype_specifier
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getType_specifierType_specifierParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_type_specifier_3_0=ruletype_specifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDeclaration_specifiersRule());
                      						}
                      						set(
                      							current,
                      							"type_specifier",
                      							lv_type_specifier_3_0,
                      							"org.xtext.example.Ansic.type_specifier");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:317:4: ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) )
                    // InternalAnsic.g:318:5: (lv_declaration_specifiers_4_0= ruledeclaration_specifiers )
                    {
                    // InternalAnsic.g:318:5: (lv_declaration_specifiers_4_0= ruledeclaration_specifiers )
                    // InternalAnsic.g:319:6: lv_declaration_specifiers_4_0= ruledeclaration_specifiers
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaration_specifiers_4_0=ruledeclaration_specifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDeclaration_specifiersRule());
                      						}
                      						add(
                      							current,
                      							"declaration_specifiers",
                      							lv_declaration_specifiers_4_0,
                      							"org.xtext.example.Ansic.declaration_specifiers");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalAnsic.g:338:3: ( (lv_type_specifier_5_0= ruletype_specifier ) )
                    {
                    // InternalAnsic.g:338:3: ( (lv_type_specifier_5_0= ruletype_specifier ) )
                    // InternalAnsic.g:339:4: (lv_type_specifier_5_0= ruletype_specifier )
                    {
                    // InternalAnsic.g:339:4: (lv_type_specifier_5_0= ruletype_specifier )
                    // InternalAnsic.g:340:5: lv_type_specifier_5_0= ruletype_specifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getType_specifierType_specifierParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_specifier_5_0=ruletype_specifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDeclaration_specifiersRule());
                      					}
                      					set(
                      						current,
                      						"type_specifier",
                      						lv_type_specifier_5_0,
                      						"org.xtext.example.Ansic.type_specifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalAnsic.g:358:3: ( ( (lv_type_qualifier_6_0= ruletype_qualifier ) ) ( (lv_declaration_specifiers_7_0= ruledeclaration_specifiers ) ) )
                    {
                    // InternalAnsic.g:358:3: ( ( (lv_type_qualifier_6_0= ruletype_qualifier ) ) ( (lv_declaration_specifiers_7_0= ruledeclaration_specifiers ) ) )
                    // InternalAnsic.g:359:4: ( (lv_type_qualifier_6_0= ruletype_qualifier ) ) ( (lv_declaration_specifiers_7_0= ruledeclaration_specifiers ) )
                    {
                    // InternalAnsic.g:359:4: ( (lv_type_qualifier_6_0= ruletype_qualifier ) )
                    // InternalAnsic.g:360:5: (lv_type_qualifier_6_0= ruletype_qualifier )
                    {
                    // InternalAnsic.g:360:5: (lv_type_qualifier_6_0= ruletype_qualifier )
                    // InternalAnsic.g:361:6: lv_type_qualifier_6_0= ruletype_qualifier
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getType_qualifierType_qualifierParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_type_qualifier_6_0=ruletype_qualifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDeclaration_specifiersRule());
                      						}
                      						set(
                      							current,
                      							"type_qualifier",
                      							lv_type_qualifier_6_0,
                      							"org.xtext.example.Ansic.type_qualifier");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:378:4: ( (lv_declaration_specifiers_7_0= ruledeclaration_specifiers ) )
                    // InternalAnsic.g:379:5: (lv_declaration_specifiers_7_0= ruledeclaration_specifiers )
                    {
                    // InternalAnsic.g:379:5: (lv_declaration_specifiers_7_0= ruledeclaration_specifiers )
                    // InternalAnsic.g:380:6: lv_declaration_specifiers_7_0= ruledeclaration_specifiers
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaration_specifiers_7_0=ruledeclaration_specifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDeclaration_specifiersRule());
                      						}
                      						add(
                      							current,
                      							"declaration_specifiers",
                      							lv_declaration_specifiers_7_0,
                      							"org.xtext.example.Ansic.declaration_specifiers");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalAnsic.g:399:3: ( (lv_type_qualifier_8_0= ruletype_qualifier ) )
                    {
                    // InternalAnsic.g:399:3: ( (lv_type_qualifier_8_0= ruletype_qualifier ) )
                    // InternalAnsic.g:400:4: (lv_type_qualifier_8_0= ruletype_qualifier )
                    {
                    // InternalAnsic.g:400:4: (lv_type_qualifier_8_0= ruletype_qualifier )
                    // InternalAnsic.g:401:5: lv_type_qualifier_8_0= ruletype_qualifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getType_qualifierType_qualifierParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_qualifier_8_0=ruletype_qualifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDeclaration_specifiersRule());
                      					}
                      					set(
                      						current,
                      						"type_qualifier",
                      						lv_type_qualifier_8_0,
                      						"org.xtext.example.Ansic.type_qualifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalAnsic.g:419:3: ( ( (lv_function_specifier_9_0= rulefunction_specifier ) ) ( (lv_declaration_specifiers_10_0= ruledeclaration_specifiers ) ) )
                    {
                    // InternalAnsic.g:419:3: ( ( (lv_function_specifier_9_0= rulefunction_specifier ) ) ( (lv_declaration_specifiers_10_0= ruledeclaration_specifiers ) ) )
                    // InternalAnsic.g:420:4: ( (lv_function_specifier_9_0= rulefunction_specifier ) ) ( (lv_declaration_specifiers_10_0= ruledeclaration_specifiers ) )
                    {
                    // InternalAnsic.g:420:4: ( (lv_function_specifier_9_0= rulefunction_specifier ) )
                    // InternalAnsic.g:421:5: (lv_function_specifier_9_0= rulefunction_specifier )
                    {
                    // InternalAnsic.g:421:5: (lv_function_specifier_9_0= rulefunction_specifier )
                    // InternalAnsic.g:422:6: lv_function_specifier_9_0= rulefunction_specifier
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getFunction_specifierFunction_specifierParserRuleCall_6_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_function_specifier_9_0=rulefunction_specifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDeclaration_specifiersRule());
                      						}
                      						set(
                      							current,
                      							"function_specifier",
                      							lv_function_specifier_9_0,
                      							"org.xtext.example.Ansic.function_specifier");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:439:4: ( (lv_declaration_specifiers_10_0= ruledeclaration_specifiers ) )
                    // InternalAnsic.g:440:5: (lv_declaration_specifiers_10_0= ruledeclaration_specifiers )
                    {
                    // InternalAnsic.g:440:5: (lv_declaration_specifiers_10_0= ruledeclaration_specifiers )
                    // InternalAnsic.g:441:6: lv_declaration_specifiers_10_0= ruledeclaration_specifiers
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaration_specifiers_10_0=ruledeclaration_specifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDeclaration_specifiersRule());
                      						}
                      						add(
                      							current,
                      							"declaration_specifiers",
                      							lv_declaration_specifiers_10_0,
                      							"org.xtext.example.Ansic.declaration_specifiers");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalAnsic.g:460:3: ( (lv_function_specifier_11_0= rulefunction_specifier ) )
                    {
                    // InternalAnsic.g:460:3: ( (lv_function_specifier_11_0= rulefunction_specifier ) )
                    // InternalAnsic.g:461:4: (lv_function_specifier_11_0= rulefunction_specifier )
                    {
                    // InternalAnsic.g:461:4: (lv_function_specifier_11_0= rulefunction_specifier )
                    // InternalAnsic.g:462:5: lv_function_specifier_11_0= rulefunction_specifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getFunction_specifierFunction_specifierParserRuleCall_7_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_specifier_11_0=rulefunction_specifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDeclaration_specifiersRule());
                      					}
                      					set(
                      						current,
                      						"function_specifier",
                      						lv_function_specifier_11_0,
                      						"org.xtext.example.Ansic.function_specifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalAnsic.g:480:3: ( ( (lv_alignment_specifier_12_0= rulealignment_specifier ) ) ( (lv_declaration_specifiers_13_0= ruledeclaration_specifiers ) ) )
                    {
                    // InternalAnsic.g:480:3: ( ( (lv_alignment_specifier_12_0= rulealignment_specifier ) ) ( (lv_declaration_specifiers_13_0= ruledeclaration_specifiers ) ) )
                    // InternalAnsic.g:481:4: ( (lv_alignment_specifier_12_0= rulealignment_specifier ) ) ( (lv_declaration_specifiers_13_0= ruledeclaration_specifiers ) )
                    {
                    // InternalAnsic.g:481:4: ( (lv_alignment_specifier_12_0= rulealignment_specifier ) )
                    // InternalAnsic.g:482:5: (lv_alignment_specifier_12_0= rulealignment_specifier )
                    {
                    // InternalAnsic.g:482:5: (lv_alignment_specifier_12_0= rulealignment_specifier )
                    // InternalAnsic.g:483:6: lv_alignment_specifier_12_0= rulealignment_specifier
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getAlignment_specifierAlignment_specifierParserRuleCall_8_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_alignment_specifier_12_0=rulealignment_specifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDeclaration_specifiersRule());
                      						}
                      						set(
                      							current,
                      							"alignment_specifier",
                      							lv_alignment_specifier_12_0,
                      							"org.xtext.example.Ansic.alignment_specifier");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:500:4: ( (lv_declaration_specifiers_13_0= ruledeclaration_specifiers ) )
                    // InternalAnsic.g:501:5: (lv_declaration_specifiers_13_0= ruledeclaration_specifiers )
                    {
                    // InternalAnsic.g:501:5: (lv_declaration_specifiers_13_0= ruledeclaration_specifiers )
                    // InternalAnsic.g:502:6: lv_declaration_specifiers_13_0= ruledeclaration_specifiers
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_8_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaration_specifiers_13_0=ruledeclaration_specifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDeclaration_specifiersRule());
                      						}
                      						add(
                      							current,
                      							"declaration_specifiers",
                      							lv_declaration_specifiers_13_0,
                      							"org.xtext.example.Ansic.declaration_specifiers");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalAnsic.g:521:3: ( (lv_alignment_specifier_14_0= rulealignment_specifier ) )
                    {
                    // InternalAnsic.g:521:3: ( (lv_alignment_specifier_14_0= rulealignment_specifier ) )
                    // InternalAnsic.g:522:4: (lv_alignment_specifier_14_0= rulealignment_specifier )
                    {
                    // InternalAnsic.g:522:4: (lv_alignment_specifier_14_0= rulealignment_specifier )
                    // InternalAnsic.g:523:5: lv_alignment_specifier_14_0= rulealignment_specifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getAlignment_specifierAlignment_specifierParserRuleCall_9_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_alignment_specifier_14_0=rulealignment_specifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDeclaration_specifiersRule());
                      					}
                      					set(
                      						current,
                      						"alignment_specifier",
                      						lv_alignment_specifier_14_0,
                      						"org.xtext.example.Ansic.alignment_specifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledeclaration_specifiers"


    // $ANTLR start "entryRulefunction_specifier"
    // InternalAnsic.g:544:1: entryRulefunction_specifier returns [String current=null] : iv_rulefunction_specifier= rulefunction_specifier EOF ;
    public final String entryRulefunction_specifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulefunction_specifier = null;


        try {
            // InternalAnsic.g:544:58: (iv_rulefunction_specifier= rulefunction_specifier EOF )
            // InternalAnsic.g:545:2: iv_rulefunction_specifier= rulefunction_specifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunction_specifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulefunction_specifier=rulefunction_specifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulefunction_specifier.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulefunction_specifier"


    // $ANTLR start "rulefunction_specifier"
    // InternalAnsic.g:551:1: rulefunction_specifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'inline' | kw= '_Noreturn' ) ;
    public final AntlrDatatypeRuleToken rulefunction_specifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalAnsic.g:557:2: ( (kw= 'inline' | kw= '_Noreturn' ) )
            // InternalAnsic.g:558:2: (kw= 'inline' | kw= '_Noreturn' )
            {
            // InternalAnsic.g:558:2: (kw= 'inline' | kw= '_Noreturn' )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==31) ) {
                alt3=1;
            }
            else if ( (LA3_0==32) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalAnsic.g:559:3: kw= 'inline'
                    {
                    kw=(Token)match(input,31,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFunction_specifierAccess().getInlineKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsic.g:565:3: kw= '_Noreturn'
                    {
                    kw=(Token)match(input,32,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFunction_specifierAccess().get_NoreturnKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulefunction_specifier"


    // $ANTLR start "entryRulealignment_specifier"
    // InternalAnsic.g:574:1: entryRulealignment_specifier returns [EObject current=null] : iv_rulealignment_specifier= rulealignment_specifier EOF ;
    public final EObject entryRulealignment_specifier() throws RecognitionException {
        EObject current = null;

        EObject iv_rulealignment_specifier = null;


        try {
            // InternalAnsic.g:574:60: (iv_rulealignment_specifier= rulealignment_specifier EOF )
            // InternalAnsic.g:575:2: iv_rulealignment_specifier= rulealignment_specifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAlignment_specifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulealignment_specifier=rulealignment_specifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulealignment_specifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulealignment_specifier"


    // $ANTLR start "rulealignment_specifier"
    // InternalAnsic.g:581:1: rulealignment_specifier returns [EObject current=null] : ( (otherlv_0= '_Alignas' otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')' ) | (otherlv_4= '_Alignas' otherlv_5= '(' ( (lv_constant_expression_6_0= ruleconstant_expression ) ) otherlv_7= ')' ) ) ;
    public final EObject rulealignment_specifier() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_type_name_2_0 = null;

        EObject lv_constant_expression_6_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:587:2: ( ( (otherlv_0= '_Alignas' otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')' ) | (otherlv_4= '_Alignas' otherlv_5= '(' ( (lv_constant_expression_6_0= ruleconstant_expression ) ) otherlv_7= ')' ) ) )
            // InternalAnsic.g:588:2: ( (otherlv_0= '_Alignas' otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')' ) | (otherlv_4= '_Alignas' otherlv_5= '(' ( (lv_constant_expression_6_0= ruleconstant_expression ) ) otherlv_7= ')' ) )
            {
            // InternalAnsic.g:588:2: ( (otherlv_0= '_Alignas' otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')' ) | (otherlv_4= '_Alignas' otherlv_5= '(' ( (lv_constant_expression_6_0= ruleconstant_expression ) ) otherlv_7= ')' ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==33) ) {
                int LA4_1 = input.LA(2);

                if ( (LA4_1==34) ) {
                    switch ( input.LA(3) ) {
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 58:
                    case 59:
                        {
                        alt4=1;
                        }
                        break;
                    case 53:
                        {
                        int LA4_4 = input.LA(4);

                        if ( (LA4_4==RULE_IDZ||LA4_4==54) ) {
                            alt4=1;
                        }
                        else if ( ((LA4_4>=34 && LA4_4<=35)||(LA4_4>=67 && LA4_4<=68)||LA4_4==73||(LA4_4>=75 && LA4_4<=77)||(LA4_4>=80 && LA4_4<=87)||(LA4_4>=99 && LA4_4<=104)) ) {
                            alt4=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 4, 4, input);

                            throw nvae;
                        }
                        }
                        break;
                    case RULE_IDZ:
                    case RULE_INT:
                    case RULE_FLOAT:
                    case RULE_CHAR:
                    case 34:
                    case 67:
                    case 71:
                    case 76:
                    case 77:
                    case 78:
                    case 79:
                    case 82:
                    case 83:
                    case 99:
                    case 115:
                    case 116:
                        {
                        alt4=2;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 4, 2, input);

                        throw nvae;
                    }

                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 4, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalAnsic.g:589:3: (otherlv_0= '_Alignas' otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')' )
                    {
                    // InternalAnsic.g:589:3: (otherlv_0= '_Alignas' otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')' )
                    // InternalAnsic.g:590:4: otherlv_0= '_Alignas' otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')'
                    {
                    otherlv_0=(Token)match(input,33,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getAlignment_specifierAccess().get_AlignasKeyword_0_0());
                      			
                    }
                    otherlv_1=(Token)match(input,34,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getAlignment_specifierAccess().getLeftParenthesisKeyword_0_1());
                      			
                    }
                    // InternalAnsic.g:598:4: ( (lv_type_name_2_0= ruletype_name ) )
                    // InternalAnsic.g:599:5: (lv_type_name_2_0= ruletype_name )
                    {
                    // InternalAnsic.g:599:5: (lv_type_name_2_0= ruletype_name )
                    // InternalAnsic.g:600:6: lv_type_name_2_0= ruletype_name
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAlignment_specifierAccess().getType_nameType_nameParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_type_name_2_0=ruletype_name();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAlignment_specifierRule());
                      						}
                      						set(
                      							current,
                      							"type_name",
                      							lv_type_name_2_0,
                      							"org.xtext.example.Ansic.type_name");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,35,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getAlignment_specifierAccess().getRightParenthesisKeyword_0_3());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:623:3: (otherlv_4= '_Alignas' otherlv_5= '(' ( (lv_constant_expression_6_0= ruleconstant_expression ) ) otherlv_7= ')' )
                    {
                    // InternalAnsic.g:623:3: (otherlv_4= '_Alignas' otherlv_5= '(' ( (lv_constant_expression_6_0= ruleconstant_expression ) ) otherlv_7= ')' )
                    // InternalAnsic.g:624:4: otherlv_4= '_Alignas' otherlv_5= '(' ( (lv_constant_expression_6_0= ruleconstant_expression ) ) otherlv_7= ')'
                    {
                    otherlv_4=(Token)match(input,33,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getAlignment_specifierAccess().get_AlignasKeyword_1_0());
                      			
                    }
                    otherlv_5=(Token)match(input,34,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getAlignment_specifierAccess().getLeftParenthesisKeyword_1_1());
                      			
                    }
                    // InternalAnsic.g:632:4: ( (lv_constant_expression_6_0= ruleconstant_expression ) )
                    // InternalAnsic.g:633:5: (lv_constant_expression_6_0= ruleconstant_expression )
                    {
                    // InternalAnsic.g:633:5: (lv_constant_expression_6_0= ruleconstant_expression )
                    // InternalAnsic.g:634:6: lv_constant_expression_6_0= ruleconstant_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAlignment_specifierAccess().getConstant_expressionConstant_expressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_constant_expression_6_0=ruleconstant_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAlignment_specifierRule());
                      						}
                      						set(
                      							current,
                      							"constant_expression",
                      							lv_constant_expression_6_0,
                      							"org.xtext.example.Ansic.constant_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_7=(Token)match(input,35,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getAlignment_specifierAccess().getRightParenthesisKeyword_1_3());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulealignment_specifier"


    // $ANTLR start "entryRuletype_qualifier"
    // InternalAnsic.g:660:1: entryRuletype_qualifier returns [EObject current=null] : iv_ruletype_qualifier= ruletype_qualifier EOF ;
    public final EObject entryRuletype_qualifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletype_qualifier = null;


        try {
            // InternalAnsic.g:660:55: (iv_ruletype_qualifier= ruletype_qualifier EOF )
            // InternalAnsic.g:661:2: iv_ruletype_qualifier= ruletype_qualifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getType_qualifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletype_qualifier=ruletype_qualifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletype_qualifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletype_qualifier"


    // $ANTLR start "ruletype_qualifier"
    // InternalAnsic.g:667:1: ruletype_qualifier returns [EObject current=null] : ( ( (lv_namez_0_0= 'const' ) ) | ( (lv_namez_1_0= 'restrict' ) ) | ( (lv_namez_2_0= 'volatile' ) ) | ( (lv_namez_3_0= '_Atomic' ) ) ) ;
    public final EObject ruletype_qualifier() throws RecognitionException {
        EObject current = null;

        Token lv_namez_0_0=null;
        Token lv_namez_1_0=null;
        Token lv_namez_2_0=null;
        Token lv_namez_3_0=null;


        	enterRule();

        try {
            // InternalAnsic.g:673:2: ( ( ( (lv_namez_0_0= 'const' ) ) | ( (lv_namez_1_0= 'restrict' ) ) | ( (lv_namez_2_0= 'volatile' ) ) | ( (lv_namez_3_0= '_Atomic' ) ) ) )
            // InternalAnsic.g:674:2: ( ( (lv_namez_0_0= 'const' ) ) | ( (lv_namez_1_0= 'restrict' ) ) | ( (lv_namez_2_0= 'volatile' ) ) | ( (lv_namez_3_0= '_Atomic' ) ) )
            {
            // InternalAnsic.g:674:2: ( ( (lv_namez_0_0= 'const' ) ) | ( (lv_namez_1_0= 'restrict' ) ) | ( (lv_namez_2_0= 'volatile' ) ) | ( (lv_namez_3_0= '_Atomic' ) ) )
            int alt5=4;
            switch ( input.LA(1) ) {
            case 36:
                {
                alt5=1;
                }
                break;
            case 37:
                {
                alt5=2;
                }
                break;
            case 38:
                {
                alt5=3;
                }
                break;
            case 39:
                {
                alt5=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }

            switch (alt5) {
                case 1 :
                    // InternalAnsic.g:675:3: ( (lv_namez_0_0= 'const' ) )
                    {
                    // InternalAnsic.g:675:3: ( (lv_namez_0_0= 'const' ) )
                    // InternalAnsic.g:676:4: (lv_namez_0_0= 'const' )
                    {
                    // InternalAnsic.g:676:4: (lv_namez_0_0= 'const' )
                    // InternalAnsic.g:677:5: lv_namez_0_0= 'const'
                    {
                    lv_namez_0_0=(Token)match(input,36,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_namez_0_0, grammarAccess.getType_qualifierAccess().getNamezConstKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getType_qualifierRule());
                      					}
                      					setWithLastConsumed(current, "namez", lv_namez_0_0, "const");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:690:3: ( (lv_namez_1_0= 'restrict' ) )
                    {
                    // InternalAnsic.g:690:3: ( (lv_namez_1_0= 'restrict' ) )
                    // InternalAnsic.g:691:4: (lv_namez_1_0= 'restrict' )
                    {
                    // InternalAnsic.g:691:4: (lv_namez_1_0= 'restrict' )
                    // InternalAnsic.g:692:5: lv_namez_1_0= 'restrict'
                    {
                    lv_namez_1_0=(Token)match(input,37,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_namez_1_0, grammarAccess.getType_qualifierAccess().getNamezRestrictKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getType_qualifierRule());
                      					}
                      					setWithLastConsumed(current, "namez", lv_namez_1_0, "restrict");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:705:3: ( (lv_namez_2_0= 'volatile' ) )
                    {
                    // InternalAnsic.g:705:3: ( (lv_namez_2_0= 'volatile' ) )
                    // InternalAnsic.g:706:4: (lv_namez_2_0= 'volatile' )
                    {
                    // InternalAnsic.g:706:4: (lv_namez_2_0= 'volatile' )
                    // InternalAnsic.g:707:5: lv_namez_2_0= 'volatile'
                    {
                    lv_namez_2_0=(Token)match(input,38,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_namez_2_0, grammarAccess.getType_qualifierAccess().getNamezVolatileKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getType_qualifierRule());
                      					}
                      					setWithLastConsumed(current, "namez", lv_namez_2_0, "volatile");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalAnsic.g:720:3: ( (lv_namez_3_0= '_Atomic' ) )
                    {
                    // InternalAnsic.g:720:3: ( (lv_namez_3_0= '_Atomic' ) )
                    // InternalAnsic.g:721:4: (lv_namez_3_0= '_Atomic' )
                    {
                    // InternalAnsic.g:721:4: (lv_namez_3_0= '_Atomic' )
                    // InternalAnsic.g:722:5: lv_namez_3_0= '_Atomic'
                    {
                    lv_namez_3_0=(Token)match(input,39,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_namez_3_0, grammarAccess.getType_qualifierAccess().getNamez_AtomicKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getType_qualifierRule());
                      					}
                      					setWithLastConsumed(current, "namez", lv_namez_3_0, "_Atomic");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletype_qualifier"


    // $ANTLR start "entryRuletype_specifier"
    // InternalAnsic.g:738:1: entryRuletype_specifier returns [EObject current=null] : iv_ruletype_specifier= ruletype_specifier EOF ;
    public final EObject entryRuletype_specifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletype_specifier = null;


        try {
            // InternalAnsic.g:738:55: (iv_ruletype_specifier= ruletype_specifier EOF )
            // InternalAnsic.g:739:2: iv_ruletype_specifier= ruletype_specifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getType_specifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletype_specifier=ruletype_specifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletype_specifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletype_specifier"


    // $ANTLR start "ruletype_specifier"
    // InternalAnsic.g:745:1: ruletype_specifier returns [EObject current=null] : ( ( (lv_type_name_str_0_0= 'void' ) ) | ( (lv_type_name_str_1_0= 'char' ) ) | ( (lv_type_name_str_2_0= 'short' ) ) | ( (lv_type_name_str_3_0= 'int' ) ) | ( (lv_type_name_str_4_0= 'long' ) ) | ( (lv_type_name_str_5_0= 'float' ) ) | ( (lv_type_name_str_6_0= 'double' ) ) | ( (lv_type_name_str_7_0= 'signed' ) ) | ( (lv_type_name_str_8_0= 'unsigned' ) ) | ( (lv_type_name_str_9_0= 'bool' ) ) | ( (lv_type_name_str_10_0= '_Complex' ) ) | ( (lv_type_name_str_11_0= '_Imaginary' ) ) | ( (lv_atomic_type_specifier_12_0= ruleatomic_type_specifier ) ) | ( (lv_struct_or_union_specifier_13_0= rulestruct_or_union_specifier ) ) | ( (lv_enum_specifier_14_0= ruleenum_specifier ) ) | ( (lv_type_name_str_15_0= 'typedef' ) ) ) ;
    public final EObject ruletype_specifier() throws RecognitionException {
        EObject current = null;

        Token lv_type_name_str_0_0=null;
        Token lv_type_name_str_1_0=null;
        Token lv_type_name_str_2_0=null;
        Token lv_type_name_str_3_0=null;
        Token lv_type_name_str_4_0=null;
        Token lv_type_name_str_5_0=null;
        Token lv_type_name_str_6_0=null;
        Token lv_type_name_str_7_0=null;
        Token lv_type_name_str_8_0=null;
        Token lv_type_name_str_9_0=null;
        Token lv_type_name_str_10_0=null;
        Token lv_type_name_str_11_0=null;
        Token lv_type_name_str_15_0=null;
        EObject lv_atomic_type_specifier_12_0 = null;

        EObject lv_struct_or_union_specifier_13_0 = null;

        EObject lv_enum_specifier_14_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:751:2: ( ( ( (lv_type_name_str_0_0= 'void' ) ) | ( (lv_type_name_str_1_0= 'char' ) ) | ( (lv_type_name_str_2_0= 'short' ) ) | ( (lv_type_name_str_3_0= 'int' ) ) | ( (lv_type_name_str_4_0= 'long' ) ) | ( (lv_type_name_str_5_0= 'float' ) ) | ( (lv_type_name_str_6_0= 'double' ) ) | ( (lv_type_name_str_7_0= 'signed' ) ) | ( (lv_type_name_str_8_0= 'unsigned' ) ) | ( (lv_type_name_str_9_0= 'bool' ) ) | ( (lv_type_name_str_10_0= '_Complex' ) ) | ( (lv_type_name_str_11_0= '_Imaginary' ) ) | ( (lv_atomic_type_specifier_12_0= ruleatomic_type_specifier ) ) | ( (lv_struct_or_union_specifier_13_0= rulestruct_or_union_specifier ) ) | ( (lv_enum_specifier_14_0= ruleenum_specifier ) ) | ( (lv_type_name_str_15_0= 'typedef' ) ) ) )
            // InternalAnsic.g:752:2: ( ( (lv_type_name_str_0_0= 'void' ) ) | ( (lv_type_name_str_1_0= 'char' ) ) | ( (lv_type_name_str_2_0= 'short' ) ) | ( (lv_type_name_str_3_0= 'int' ) ) | ( (lv_type_name_str_4_0= 'long' ) ) | ( (lv_type_name_str_5_0= 'float' ) ) | ( (lv_type_name_str_6_0= 'double' ) ) | ( (lv_type_name_str_7_0= 'signed' ) ) | ( (lv_type_name_str_8_0= 'unsigned' ) ) | ( (lv_type_name_str_9_0= 'bool' ) ) | ( (lv_type_name_str_10_0= '_Complex' ) ) | ( (lv_type_name_str_11_0= '_Imaginary' ) ) | ( (lv_atomic_type_specifier_12_0= ruleatomic_type_specifier ) ) | ( (lv_struct_or_union_specifier_13_0= rulestruct_or_union_specifier ) ) | ( (lv_enum_specifier_14_0= ruleenum_specifier ) ) | ( (lv_type_name_str_15_0= 'typedef' ) ) )
            {
            // InternalAnsic.g:752:2: ( ( (lv_type_name_str_0_0= 'void' ) ) | ( (lv_type_name_str_1_0= 'char' ) ) | ( (lv_type_name_str_2_0= 'short' ) ) | ( (lv_type_name_str_3_0= 'int' ) ) | ( (lv_type_name_str_4_0= 'long' ) ) | ( (lv_type_name_str_5_0= 'float' ) ) | ( (lv_type_name_str_6_0= 'double' ) ) | ( (lv_type_name_str_7_0= 'signed' ) ) | ( (lv_type_name_str_8_0= 'unsigned' ) ) | ( (lv_type_name_str_9_0= 'bool' ) ) | ( (lv_type_name_str_10_0= '_Complex' ) ) | ( (lv_type_name_str_11_0= '_Imaginary' ) ) | ( (lv_atomic_type_specifier_12_0= ruleatomic_type_specifier ) ) | ( (lv_struct_or_union_specifier_13_0= rulestruct_or_union_specifier ) ) | ( (lv_enum_specifier_14_0= ruleenum_specifier ) ) | ( (lv_type_name_str_15_0= 'typedef' ) ) )
            int alt6=16;
            switch ( input.LA(1) ) {
            case 40:
                {
                alt6=1;
                }
                break;
            case 41:
                {
                alt6=2;
                }
                break;
            case 42:
                {
                alt6=3;
                }
                break;
            case 43:
                {
                alt6=4;
                }
                break;
            case 44:
                {
                alt6=5;
                }
                break;
            case 45:
                {
                alt6=6;
                }
                break;
            case 46:
                {
                alt6=7;
                }
                break;
            case 47:
                {
                alt6=8;
                }
                break;
            case 48:
                {
                alt6=9;
                }
                break;
            case 49:
                {
                alt6=10;
                }
                break;
            case 50:
                {
                alt6=11;
                }
                break;
            case 51:
                {
                alt6=12;
                }
                break;
            case 39:
                {
                alt6=13;
                }
                break;
            case 58:
            case 59:
                {
                alt6=14;
                }
                break;
            case 53:
                {
                alt6=15;
                }
                break;
            case 52:
                {
                alt6=16;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }

            switch (alt6) {
                case 1 :
                    // InternalAnsic.g:753:3: ( (lv_type_name_str_0_0= 'void' ) )
                    {
                    // InternalAnsic.g:753:3: ( (lv_type_name_str_0_0= 'void' ) )
                    // InternalAnsic.g:754:4: (lv_type_name_str_0_0= 'void' )
                    {
                    // InternalAnsic.g:754:4: (lv_type_name_str_0_0= 'void' )
                    // InternalAnsic.g:755:5: lv_type_name_str_0_0= 'void'
                    {
                    lv_type_name_str_0_0=(Token)match(input,40,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_name_str_0_0, grammarAccess.getType_specifierAccess().getType_name_strVoidKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getType_specifierRule());
                      					}
                      					setWithLastConsumed(current, "type_name_str", lv_type_name_str_0_0, "void");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:768:3: ( (lv_type_name_str_1_0= 'char' ) )
                    {
                    // InternalAnsic.g:768:3: ( (lv_type_name_str_1_0= 'char' ) )
                    // InternalAnsic.g:769:4: (lv_type_name_str_1_0= 'char' )
                    {
                    // InternalAnsic.g:769:4: (lv_type_name_str_1_0= 'char' )
                    // InternalAnsic.g:770:5: lv_type_name_str_1_0= 'char'
                    {
                    lv_type_name_str_1_0=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_name_str_1_0, grammarAccess.getType_specifierAccess().getType_name_strCharKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getType_specifierRule());
                      					}
                      					setWithLastConsumed(current, "type_name_str", lv_type_name_str_1_0, "char");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:783:3: ( (lv_type_name_str_2_0= 'short' ) )
                    {
                    // InternalAnsic.g:783:3: ( (lv_type_name_str_2_0= 'short' ) )
                    // InternalAnsic.g:784:4: (lv_type_name_str_2_0= 'short' )
                    {
                    // InternalAnsic.g:784:4: (lv_type_name_str_2_0= 'short' )
                    // InternalAnsic.g:785:5: lv_type_name_str_2_0= 'short'
                    {
                    lv_type_name_str_2_0=(Token)match(input,42,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_name_str_2_0, grammarAccess.getType_specifierAccess().getType_name_strShortKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getType_specifierRule());
                      					}
                      					setWithLastConsumed(current, "type_name_str", lv_type_name_str_2_0, "short");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalAnsic.g:798:3: ( (lv_type_name_str_3_0= 'int' ) )
                    {
                    // InternalAnsic.g:798:3: ( (lv_type_name_str_3_0= 'int' ) )
                    // InternalAnsic.g:799:4: (lv_type_name_str_3_0= 'int' )
                    {
                    // InternalAnsic.g:799:4: (lv_type_name_str_3_0= 'int' )
                    // InternalAnsic.g:800:5: lv_type_name_str_3_0= 'int'
                    {
                    lv_type_name_str_3_0=(Token)match(input,43,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_name_str_3_0, grammarAccess.getType_specifierAccess().getType_name_strIntKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getType_specifierRule());
                      					}
                      					setWithLastConsumed(current, "type_name_str", lv_type_name_str_3_0, "int");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalAnsic.g:813:3: ( (lv_type_name_str_4_0= 'long' ) )
                    {
                    // InternalAnsic.g:813:3: ( (lv_type_name_str_4_0= 'long' ) )
                    // InternalAnsic.g:814:4: (lv_type_name_str_4_0= 'long' )
                    {
                    // InternalAnsic.g:814:4: (lv_type_name_str_4_0= 'long' )
                    // InternalAnsic.g:815:5: lv_type_name_str_4_0= 'long'
                    {
                    lv_type_name_str_4_0=(Token)match(input,44,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_name_str_4_0, grammarAccess.getType_specifierAccess().getType_name_strLongKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getType_specifierRule());
                      					}
                      					setWithLastConsumed(current, "type_name_str", lv_type_name_str_4_0, "long");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalAnsic.g:828:3: ( (lv_type_name_str_5_0= 'float' ) )
                    {
                    // InternalAnsic.g:828:3: ( (lv_type_name_str_5_0= 'float' ) )
                    // InternalAnsic.g:829:4: (lv_type_name_str_5_0= 'float' )
                    {
                    // InternalAnsic.g:829:4: (lv_type_name_str_5_0= 'float' )
                    // InternalAnsic.g:830:5: lv_type_name_str_5_0= 'float'
                    {
                    lv_type_name_str_5_0=(Token)match(input,45,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_name_str_5_0, grammarAccess.getType_specifierAccess().getType_name_strFloatKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getType_specifierRule());
                      					}
                      					setWithLastConsumed(current, "type_name_str", lv_type_name_str_5_0, "float");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalAnsic.g:843:3: ( (lv_type_name_str_6_0= 'double' ) )
                    {
                    // InternalAnsic.g:843:3: ( (lv_type_name_str_6_0= 'double' ) )
                    // InternalAnsic.g:844:4: (lv_type_name_str_6_0= 'double' )
                    {
                    // InternalAnsic.g:844:4: (lv_type_name_str_6_0= 'double' )
                    // InternalAnsic.g:845:5: lv_type_name_str_6_0= 'double'
                    {
                    lv_type_name_str_6_0=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_name_str_6_0, grammarAccess.getType_specifierAccess().getType_name_strDoubleKeyword_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getType_specifierRule());
                      					}
                      					setWithLastConsumed(current, "type_name_str", lv_type_name_str_6_0, "double");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalAnsic.g:858:3: ( (lv_type_name_str_7_0= 'signed' ) )
                    {
                    // InternalAnsic.g:858:3: ( (lv_type_name_str_7_0= 'signed' ) )
                    // InternalAnsic.g:859:4: (lv_type_name_str_7_0= 'signed' )
                    {
                    // InternalAnsic.g:859:4: (lv_type_name_str_7_0= 'signed' )
                    // InternalAnsic.g:860:5: lv_type_name_str_7_0= 'signed'
                    {
                    lv_type_name_str_7_0=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_name_str_7_0, grammarAccess.getType_specifierAccess().getType_name_strSignedKeyword_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getType_specifierRule());
                      					}
                      					setWithLastConsumed(current, "type_name_str", lv_type_name_str_7_0, "signed");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalAnsic.g:873:3: ( (lv_type_name_str_8_0= 'unsigned' ) )
                    {
                    // InternalAnsic.g:873:3: ( (lv_type_name_str_8_0= 'unsigned' ) )
                    // InternalAnsic.g:874:4: (lv_type_name_str_8_0= 'unsigned' )
                    {
                    // InternalAnsic.g:874:4: (lv_type_name_str_8_0= 'unsigned' )
                    // InternalAnsic.g:875:5: lv_type_name_str_8_0= 'unsigned'
                    {
                    lv_type_name_str_8_0=(Token)match(input,48,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_name_str_8_0, grammarAccess.getType_specifierAccess().getType_name_strUnsignedKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getType_specifierRule());
                      					}
                      					setWithLastConsumed(current, "type_name_str", lv_type_name_str_8_0, "unsigned");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalAnsic.g:888:3: ( (lv_type_name_str_9_0= 'bool' ) )
                    {
                    // InternalAnsic.g:888:3: ( (lv_type_name_str_9_0= 'bool' ) )
                    // InternalAnsic.g:889:4: (lv_type_name_str_9_0= 'bool' )
                    {
                    // InternalAnsic.g:889:4: (lv_type_name_str_9_0= 'bool' )
                    // InternalAnsic.g:890:5: lv_type_name_str_9_0= 'bool'
                    {
                    lv_type_name_str_9_0=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_name_str_9_0, grammarAccess.getType_specifierAccess().getType_name_strBoolKeyword_9_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getType_specifierRule());
                      					}
                      					setWithLastConsumed(current, "type_name_str", lv_type_name_str_9_0, "bool");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 11 :
                    // InternalAnsic.g:903:3: ( (lv_type_name_str_10_0= '_Complex' ) )
                    {
                    // InternalAnsic.g:903:3: ( (lv_type_name_str_10_0= '_Complex' ) )
                    // InternalAnsic.g:904:4: (lv_type_name_str_10_0= '_Complex' )
                    {
                    // InternalAnsic.g:904:4: (lv_type_name_str_10_0= '_Complex' )
                    // InternalAnsic.g:905:5: lv_type_name_str_10_0= '_Complex'
                    {
                    lv_type_name_str_10_0=(Token)match(input,50,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_name_str_10_0, grammarAccess.getType_specifierAccess().getType_name_str_ComplexKeyword_10_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getType_specifierRule());
                      					}
                      					setWithLastConsumed(current, "type_name_str", lv_type_name_str_10_0, "_Complex");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 12 :
                    // InternalAnsic.g:918:3: ( (lv_type_name_str_11_0= '_Imaginary' ) )
                    {
                    // InternalAnsic.g:918:3: ( (lv_type_name_str_11_0= '_Imaginary' ) )
                    // InternalAnsic.g:919:4: (lv_type_name_str_11_0= '_Imaginary' )
                    {
                    // InternalAnsic.g:919:4: (lv_type_name_str_11_0= '_Imaginary' )
                    // InternalAnsic.g:920:5: lv_type_name_str_11_0= '_Imaginary'
                    {
                    lv_type_name_str_11_0=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_name_str_11_0, grammarAccess.getType_specifierAccess().getType_name_str_ImaginaryKeyword_11_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getType_specifierRule());
                      					}
                      					setWithLastConsumed(current, "type_name_str", lv_type_name_str_11_0, "_Imaginary");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 13 :
                    // InternalAnsic.g:933:3: ( (lv_atomic_type_specifier_12_0= ruleatomic_type_specifier ) )
                    {
                    // InternalAnsic.g:933:3: ( (lv_atomic_type_specifier_12_0= ruleatomic_type_specifier ) )
                    // InternalAnsic.g:934:4: (lv_atomic_type_specifier_12_0= ruleatomic_type_specifier )
                    {
                    // InternalAnsic.g:934:4: (lv_atomic_type_specifier_12_0= ruleatomic_type_specifier )
                    // InternalAnsic.g:935:5: lv_atomic_type_specifier_12_0= ruleatomic_type_specifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getType_specifierAccess().getAtomic_type_specifierAtomic_type_specifierParserRuleCall_12_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_atomic_type_specifier_12_0=ruleatomic_type_specifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getType_specifierRule());
                      					}
                      					set(
                      						current,
                      						"atomic_type_specifier",
                      						lv_atomic_type_specifier_12_0,
                      						"org.xtext.example.Ansic.atomic_type_specifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 14 :
                    // InternalAnsic.g:953:3: ( (lv_struct_or_union_specifier_13_0= rulestruct_or_union_specifier ) )
                    {
                    // InternalAnsic.g:953:3: ( (lv_struct_or_union_specifier_13_0= rulestruct_or_union_specifier ) )
                    // InternalAnsic.g:954:4: (lv_struct_or_union_specifier_13_0= rulestruct_or_union_specifier )
                    {
                    // InternalAnsic.g:954:4: (lv_struct_or_union_specifier_13_0= rulestruct_or_union_specifier )
                    // InternalAnsic.g:955:5: lv_struct_or_union_specifier_13_0= rulestruct_or_union_specifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getType_specifierAccess().getStruct_or_union_specifierStruct_or_union_specifierParserRuleCall_13_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_struct_or_union_specifier_13_0=rulestruct_or_union_specifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getType_specifierRule());
                      					}
                      					set(
                      						current,
                      						"struct_or_union_specifier",
                      						lv_struct_or_union_specifier_13_0,
                      						"org.xtext.example.Ansic.struct_or_union_specifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 15 :
                    // InternalAnsic.g:973:3: ( (lv_enum_specifier_14_0= ruleenum_specifier ) )
                    {
                    // InternalAnsic.g:973:3: ( (lv_enum_specifier_14_0= ruleenum_specifier ) )
                    // InternalAnsic.g:974:4: (lv_enum_specifier_14_0= ruleenum_specifier )
                    {
                    // InternalAnsic.g:974:4: (lv_enum_specifier_14_0= ruleenum_specifier )
                    // InternalAnsic.g:975:5: lv_enum_specifier_14_0= ruleenum_specifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getType_specifierAccess().getEnum_specifierEnum_specifierParserRuleCall_14_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_enum_specifier_14_0=ruleenum_specifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getType_specifierRule());
                      					}
                      					set(
                      						current,
                      						"enum_specifier",
                      						lv_enum_specifier_14_0,
                      						"org.xtext.example.Ansic.enum_specifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 16 :
                    // InternalAnsic.g:993:3: ( (lv_type_name_str_15_0= 'typedef' ) )
                    {
                    // InternalAnsic.g:993:3: ( (lv_type_name_str_15_0= 'typedef' ) )
                    // InternalAnsic.g:994:4: (lv_type_name_str_15_0= 'typedef' )
                    {
                    // InternalAnsic.g:994:4: (lv_type_name_str_15_0= 'typedef' )
                    // InternalAnsic.g:995:5: lv_type_name_str_15_0= 'typedef'
                    {
                    lv_type_name_str_15_0=(Token)match(input,52,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_type_name_str_15_0, grammarAccess.getType_specifierAccess().getType_name_strTypedefKeyword_15_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getType_specifierRule());
                      					}
                      					setWithLastConsumed(current, "type_name_str", lv_type_name_str_15_0, "typedef");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletype_specifier"


    // $ANTLR start "entryRuleenum_specifier"
    // InternalAnsic.g:1011:1: entryRuleenum_specifier returns [EObject current=null] : iv_ruleenum_specifier= ruleenum_specifier EOF ;
    public final EObject entryRuleenum_specifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleenum_specifier = null;


        try {
            // InternalAnsic.g:1011:55: (iv_ruleenum_specifier= ruleenum_specifier EOF )
            // InternalAnsic.g:1012:2: iv_ruleenum_specifier= ruleenum_specifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnum_specifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleenum_specifier=ruleenum_specifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleenum_specifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleenum_specifier"


    // $ANTLR start "ruleenum_specifier"
    // InternalAnsic.g:1018:1: ruleenum_specifier returns [EObject current=null] : ( (otherlv_0= 'enum' otherlv_1= '{' ( (lv_enumerator_list_2_0= ruleenumerator_list ) ) otherlv_3= '}' ) | (otherlv_4= 'enum' otherlv_5= '{' ( (lv_enumerator_list_6_0= ruleenumerator_list ) ) otherlv_7= ',' otherlv_8= '}' ) | (otherlv_9= 'enum' ( (lv_identifier_10_0= RULE_IDZ ) ) otherlv_11= '{' ( (lv_enumerator_list_12_0= ruleenumerator_list ) ) otherlv_13= '}' ) | (otherlv_14= 'enum' ( (lv_identifier_15_0= RULE_IDZ ) ) otherlv_16= '{' ( (lv_enumerator_list_17_0= ruleenumerator_list ) ) otherlv_18= ',' otherlv_19= '}' ) | (otherlv_20= 'enum' ( (lv_identifier_21_0= RULE_IDZ ) ) ) ) ;
    public final EObject ruleenum_specifier() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token lv_identifier_10_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token lv_identifier_15_0=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token lv_identifier_21_0=null;
        EObject lv_enumerator_list_2_0 = null;

        EObject lv_enumerator_list_6_0 = null;

        EObject lv_enumerator_list_12_0 = null;

        EObject lv_enumerator_list_17_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:1024:2: ( ( (otherlv_0= 'enum' otherlv_1= '{' ( (lv_enumerator_list_2_0= ruleenumerator_list ) ) otherlv_3= '}' ) | (otherlv_4= 'enum' otherlv_5= '{' ( (lv_enumerator_list_6_0= ruleenumerator_list ) ) otherlv_7= ',' otherlv_8= '}' ) | (otherlv_9= 'enum' ( (lv_identifier_10_0= RULE_IDZ ) ) otherlv_11= '{' ( (lv_enumerator_list_12_0= ruleenumerator_list ) ) otherlv_13= '}' ) | (otherlv_14= 'enum' ( (lv_identifier_15_0= RULE_IDZ ) ) otherlv_16= '{' ( (lv_enumerator_list_17_0= ruleenumerator_list ) ) otherlv_18= ',' otherlv_19= '}' ) | (otherlv_20= 'enum' ( (lv_identifier_21_0= RULE_IDZ ) ) ) ) )
            // InternalAnsic.g:1025:2: ( (otherlv_0= 'enum' otherlv_1= '{' ( (lv_enumerator_list_2_0= ruleenumerator_list ) ) otherlv_3= '}' ) | (otherlv_4= 'enum' otherlv_5= '{' ( (lv_enumerator_list_6_0= ruleenumerator_list ) ) otherlv_7= ',' otherlv_8= '}' ) | (otherlv_9= 'enum' ( (lv_identifier_10_0= RULE_IDZ ) ) otherlv_11= '{' ( (lv_enumerator_list_12_0= ruleenumerator_list ) ) otherlv_13= '}' ) | (otherlv_14= 'enum' ( (lv_identifier_15_0= RULE_IDZ ) ) otherlv_16= '{' ( (lv_enumerator_list_17_0= ruleenumerator_list ) ) otherlv_18= ',' otherlv_19= '}' ) | (otherlv_20= 'enum' ( (lv_identifier_21_0= RULE_IDZ ) ) ) )
            {
            // InternalAnsic.g:1025:2: ( (otherlv_0= 'enum' otherlv_1= '{' ( (lv_enumerator_list_2_0= ruleenumerator_list ) ) otherlv_3= '}' ) | (otherlv_4= 'enum' otherlv_5= '{' ( (lv_enumerator_list_6_0= ruleenumerator_list ) ) otherlv_7= ',' otherlv_8= '}' ) | (otherlv_9= 'enum' ( (lv_identifier_10_0= RULE_IDZ ) ) otherlv_11= '{' ( (lv_enumerator_list_12_0= ruleenumerator_list ) ) otherlv_13= '}' ) | (otherlv_14= 'enum' ( (lv_identifier_15_0= RULE_IDZ ) ) otherlv_16= '{' ( (lv_enumerator_list_17_0= ruleenumerator_list ) ) otherlv_18= ',' otherlv_19= '}' ) | (otherlv_20= 'enum' ( (lv_identifier_21_0= RULE_IDZ ) ) ) )
            int alt7=5;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==53) ) {
                int LA7_1 = input.LA(2);

                if ( (synpred31_InternalAnsic()) ) {
                    alt7=1;
                }
                else if ( (synpred32_InternalAnsic()) ) {
                    alt7=2;
                }
                else if ( (synpred33_InternalAnsic()) ) {
                    alt7=3;
                }
                else if ( (synpred34_InternalAnsic()) ) {
                    alt7=4;
                }
                else if ( (true) ) {
                    alt7=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 7, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalAnsic.g:1026:3: (otherlv_0= 'enum' otherlv_1= '{' ( (lv_enumerator_list_2_0= ruleenumerator_list ) ) otherlv_3= '}' )
                    {
                    // InternalAnsic.g:1026:3: (otherlv_0= 'enum' otherlv_1= '{' ( (lv_enumerator_list_2_0= ruleenumerator_list ) ) otherlv_3= '}' )
                    // InternalAnsic.g:1027:4: otherlv_0= 'enum' otherlv_1= '{' ( (lv_enumerator_list_2_0= ruleenumerator_list ) ) otherlv_3= '}'
                    {
                    otherlv_0=(Token)match(input,53,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getEnum_specifierAccess().getEnumKeyword_0_0());
                      			
                    }
                    otherlv_1=(Token)match(input,54,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getEnum_specifierAccess().getLeftCurlyBracketKeyword_0_1());
                      			
                    }
                    // InternalAnsic.g:1035:4: ( (lv_enumerator_list_2_0= ruleenumerator_list ) )
                    // InternalAnsic.g:1036:5: (lv_enumerator_list_2_0= ruleenumerator_list )
                    {
                    // InternalAnsic.g:1036:5: (lv_enumerator_list_2_0= ruleenumerator_list )
                    // InternalAnsic.g:1037:6: lv_enumerator_list_2_0= ruleenumerator_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEnum_specifierAccess().getEnumerator_listEnumerator_listParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_enumerator_list_2_0=ruleenumerator_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEnum_specifierRule());
                      						}
                      						set(
                      							current,
                      							"enumerator_list",
                      							lv_enumerator_list_2_0,
                      							"org.xtext.example.Ansic.enumerator_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getEnum_specifierAccess().getRightCurlyBracketKeyword_0_3());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:1060:3: (otherlv_4= 'enum' otherlv_5= '{' ( (lv_enumerator_list_6_0= ruleenumerator_list ) ) otherlv_7= ',' otherlv_8= '}' )
                    {
                    // InternalAnsic.g:1060:3: (otherlv_4= 'enum' otherlv_5= '{' ( (lv_enumerator_list_6_0= ruleenumerator_list ) ) otherlv_7= ',' otherlv_8= '}' )
                    // InternalAnsic.g:1061:4: otherlv_4= 'enum' otherlv_5= '{' ( (lv_enumerator_list_6_0= ruleenumerator_list ) ) otherlv_7= ',' otherlv_8= '}'
                    {
                    otherlv_4=(Token)match(input,53,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getEnum_specifierAccess().getEnumKeyword_1_0());
                      			
                    }
                    otherlv_5=(Token)match(input,54,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getEnum_specifierAccess().getLeftCurlyBracketKeyword_1_1());
                      			
                    }
                    // InternalAnsic.g:1069:4: ( (lv_enumerator_list_6_0= ruleenumerator_list ) )
                    // InternalAnsic.g:1070:5: (lv_enumerator_list_6_0= ruleenumerator_list )
                    {
                    // InternalAnsic.g:1070:5: (lv_enumerator_list_6_0= ruleenumerator_list )
                    // InternalAnsic.g:1071:6: lv_enumerator_list_6_0= ruleenumerator_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEnum_specifierAccess().getEnumerator_listEnumerator_listParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_enumerator_list_6_0=ruleenumerator_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEnum_specifierRule());
                      						}
                      						set(
                      							current,
                      							"enumerator_list",
                      							lv_enumerator_list_6_0,
                      							"org.xtext.example.Ansic.enumerator_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_7=(Token)match(input,56,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getEnum_specifierAccess().getCommaKeyword_1_3());
                      			
                    }
                    otherlv_8=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getEnum_specifierAccess().getRightCurlyBracketKeyword_1_4());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:1098:3: (otherlv_9= 'enum' ( (lv_identifier_10_0= RULE_IDZ ) ) otherlv_11= '{' ( (lv_enumerator_list_12_0= ruleenumerator_list ) ) otherlv_13= '}' )
                    {
                    // InternalAnsic.g:1098:3: (otherlv_9= 'enum' ( (lv_identifier_10_0= RULE_IDZ ) ) otherlv_11= '{' ( (lv_enumerator_list_12_0= ruleenumerator_list ) ) otherlv_13= '}' )
                    // InternalAnsic.g:1099:4: otherlv_9= 'enum' ( (lv_identifier_10_0= RULE_IDZ ) ) otherlv_11= '{' ( (lv_enumerator_list_12_0= ruleenumerator_list ) ) otherlv_13= '}'
                    {
                    otherlv_9=(Token)match(input,53,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getEnum_specifierAccess().getEnumKeyword_2_0());
                      			
                    }
                    // InternalAnsic.g:1103:4: ( (lv_identifier_10_0= RULE_IDZ ) )
                    // InternalAnsic.g:1104:5: (lv_identifier_10_0= RULE_IDZ )
                    {
                    // InternalAnsic.g:1104:5: (lv_identifier_10_0= RULE_IDZ )
                    // InternalAnsic.g:1105:6: lv_identifier_10_0= RULE_IDZ
                    {
                    lv_identifier_10_0=(Token)match(input,RULE_IDZ,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_identifier_10_0, grammarAccess.getEnum_specifierAccess().getIdentifierIDzTerminalRuleCall_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getEnum_specifierRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"identifier",
                      							lv_identifier_10_0,
                      							"org.xtext.example.Ansic.IDz");
                      					
                    }

                    }


                    }

                    otherlv_11=(Token)match(input,54,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getEnum_specifierAccess().getLeftCurlyBracketKeyword_2_2());
                      			
                    }
                    // InternalAnsic.g:1125:4: ( (lv_enumerator_list_12_0= ruleenumerator_list ) )
                    // InternalAnsic.g:1126:5: (lv_enumerator_list_12_0= ruleenumerator_list )
                    {
                    // InternalAnsic.g:1126:5: (lv_enumerator_list_12_0= ruleenumerator_list )
                    // InternalAnsic.g:1127:6: lv_enumerator_list_12_0= ruleenumerator_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEnum_specifierAccess().getEnumerator_listEnumerator_listParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_enumerator_list_12_0=ruleenumerator_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEnum_specifierRule());
                      						}
                      						set(
                      							current,
                      							"enumerator_list",
                      							lv_enumerator_list_12_0,
                      							"org.xtext.example.Ansic.enumerator_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_13=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getEnum_specifierAccess().getRightCurlyBracketKeyword_2_4());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalAnsic.g:1150:3: (otherlv_14= 'enum' ( (lv_identifier_15_0= RULE_IDZ ) ) otherlv_16= '{' ( (lv_enumerator_list_17_0= ruleenumerator_list ) ) otherlv_18= ',' otherlv_19= '}' )
                    {
                    // InternalAnsic.g:1150:3: (otherlv_14= 'enum' ( (lv_identifier_15_0= RULE_IDZ ) ) otherlv_16= '{' ( (lv_enumerator_list_17_0= ruleenumerator_list ) ) otherlv_18= ',' otherlv_19= '}' )
                    // InternalAnsic.g:1151:4: otherlv_14= 'enum' ( (lv_identifier_15_0= RULE_IDZ ) ) otherlv_16= '{' ( (lv_enumerator_list_17_0= ruleenumerator_list ) ) otherlv_18= ',' otherlv_19= '}'
                    {
                    otherlv_14=(Token)match(input,53,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getEnum_specifierAccess().getEnumKeyword_3_0());
                      			
                    }
                    // InternalAnsic.g:1155:4: ( (lv_identifier_15_0= RULE_IDZ ) )
                    // InternalAnsic.g:1156:5: (lv_identifier_15_0= RULE_IDZ )
                    {
                    // InternalAnsic.g:1156:5: (lv_identifier_15_0= RULE_IDZ )
                    // InternalAnsic.g:1157:6: lv_identifier_15_0= RULE_IDZ
                    {
                    lv_identifier_15_0=(Token)match(input,RULE_IDZ,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_identifier_15_0, grammarAccess.getEnum_specifierAccess().getIdentifierIDzTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getEnum_specifierRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"identifier",
                      							lv_identifier_15_0,
                      							"org.xtext.example.Ansic.IDz");
                      					
                    }

                    }


                    }

                    otherlv_16=(Token)match(input,54,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_16, grammarAccess.getEnum_specifierAccess().getLeftCurlyBracketKeyword_3_2());
                      			
                    }
                    // InternalAnsic.g:1177:4: ( (lv_enumerator_list_17_0= ruleenumerator_list ) )
                    // InternalAnsic.g:1178:5: (lv_enumerator_list_17_0= ruleenumerator_list )
                    {
                    // InternalAnsic.g:1178:5: (lv_enumerator_list_17_0= ruleenumerator_list )
                    // InternalAnsic.g:1179:6: lv_enumerator_list_17_0= ruleenumerator_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEnum_specifierAccess().getEnumerator_listEnumerator_listParserRuleCall_3_3_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_enumerator_list_17_0=ruleenumerator_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEnum_specifierRule());
                      						}
                      						set(
                      							current,
                      							"enumerator_list",
                      							lv_enumerator_list_17_0,
                      							"org.xtext.example.Ansic.enumerator_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_18=(Token)match(input,56,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getEnum_specifierAccess().getCommaKeyword_3_4());
                      			
                    }
                    otherlv_19=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_19, grammarAccess.getEnum_specifierAccess().getRightCurlyBracketKeyword_3_5());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalAnsic.g:1206:3: (otherlv_20= 'enum' ( (lv_identifier_21_0= RULE_IDZ ) ) )
                    {
                    // InternalAnsic.g:1206:3: (otherlv_20= 'enum' ( (lv_identifier_21_0= RULE_IDZ ) ) )
                    // InternalAnsic.g:1207:4: otherlv_20= 'enum' ( (lv_identifier_21_0= RULE_IDZ ) )
                    {
                    otherlv_20=(Token)match(input,53,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_20, grammarAccess.getEnum_specifierAccess().getEnumKeyword_4_0());
                      			
                    }
                    // InternalAnsic.g:1211:4: ( (lv_identifier_21_0= RULE_IDZ ) )
                    // InternalAnsic.g:1212:5: (lv_identifier_21_0= RULE_IDZ )
                    {
                    // InternalAnsic.g:1212:5: (lv_identifier_21_0= RULE_IDZ )
                    // InternalAnsic.g:1213:6: lv_identifier_21_0= RULE_IDZ
                    {
                    lv_identifier_21_0=(Token)match(input,RULE_IDZ,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_identifier_21_0, grammarAccess.getEnum_specifierAccess().getIdentifierIDzTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getEnum_specifierRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"identifier",
                      							lv_identifier_21_0,
                      							"org.xtext.example.Ansic.IDz");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleenum_specifier"


    // $ANTLR start "entryRuleenumerator_list"
    // InternalAnsic.g:1234:1: entryRuleenumerator_list returns [EObject current=null] : iv_ruleenumerator_list= ruleenumerator_list EOF ;
    public final EObject entryRuleenumerator_list() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleenumerator_list = null;


        try {
            // InternalAnsic.g:1234:56: (iv_ruleenumerator_list= ruleenumerator_list EOF )
            // InternalAnsic.g:1235:2: iv_ruleenumerator_list= ruleenumerator_list EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumerator_listRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleenumerator_list=ruleenumerator_list();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleenumerator_list; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleenumerator_list"


    // $ANTLR start "ruleenumerator_list"
    // InternalAnsic.g:1241:1: ruleenumerator_list returns [EObject current=null] : ( ( (lv_enumarator_0_0= ruleenumerator ) ) ( (lv_enumerator_list_linha_1_0= ruleenumerator_list_linha ) ) ) ;
    public final EObject ruleenumerator_list() throws RecognitionException {
        EObject current = null;

        EObject lv_enumarator_0_0 = null;

        EObject lv_enumerator_list_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:1247:2: ( ( ( (lv_enumarator_0_0= ruleenumerator ) ) ( (lv_enumerator_list_linha_1_0= ruleenumerator_list_linha ) ) ) )
            // InternalAnsic.g:1248:2: ( ( (lv_enumarator_0_0= ruleenumerator ) ) ( (lv_enumerator_list_linha_1_0= ruleenumerator_list_linha ) ) )
            {
            // InternalAnsic.g:1248:2: ( ( (lv_enumarator_0_0= ruleenumerator ) ) ( (lv_enumerator_list_linha_1_0= ruleenumerator_list_linha ) ) )
            // InternalAnsic.g:1249:3: ( (lv_enumarator_0_0= ruleenumerator ) ) ( (lv_enumerator_list_linha_1_0= ruleenumerator_list_linha ) )
            {
            // InternalAnsic.g:1249:3: ( (lv_enumarator_0_0= ruleenumerator ) )
            // InternalAnsic.g:1250:4: (lv_enumarator_0_0= ruleenumerator )
            {
            // InternalAnsic.g:1250:4: (lv_enumarator_0_0= ruleenumerator )
            // InternalAnsic.g:1251:5: lv_enumarator_0_0= ruleenumerator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEnumerator_listAccess().getEnumaratorEnumeratorParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_12);
            lv_enumarator_0_0=ruleenumerator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEnumerator_listRule());
              					}
              					set(
              						current,
              						"enumarator",
              						lv_enumarator_0_0,
              						"org.xtext.example.Ansic.enumerator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:1268:3: ( (lv_enumerator_list_linha_1_0= ruleenumerator_list_linha ) )
            // InternalAnsic.g:1269:4: (lv_enumerator_list_linha_1_0= ruleenumerator_list_linha )
            {
            // InternalAnsic.g:1269:4: (lv_enumerator_list_linha_1_0= ruleenumerator_list_linha )
            // InternalAnsic.g:1270:5: lv_enumerator_list_linha_1_0= ruleenumerator_list_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEnumerator_listAccess().getEnumerator_list_linhaEnumerator_list_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_enumerator_list_linha_1_0=ruleenumerator_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEnumerator_listRule());
              					}
              					set(
              						current,
              						"enumerator_list_linha",
              						lv_enumerator_list_linha_1_0,
              						"org.xtext.example.Ansic.enumerator_list_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleenumerator_list"


    // $ANTLR start "entryRuleenumerator_list_linha"
    // InternalAnsic.g:1291:1: entryRuleenumerator_list_linha returns [EObject current=null] : iv_ruleenumerator_list_linha= ruleenumerator_list_linha EOF ;
    public final EObject entryRuleenumerator_list_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleenumerator_list_linha = null;


        try {
            // InternalAnsic.g:1291:62: (iv_ruleenumerator_list_linha= ruleenumerator_list_linha EOF )
            // InternalAnsic.g:1292:2: iv_ruleenumerator_list_linha= ruleenumerator_list_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumerator_list_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleenumerator_list_linha=ruleenumerator_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleenumerator_list_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleenumerator_list_linha"


    // $ANTLR start "ruleenumerator_list_linha"
    // InternalAnsic.g:1298:1: ruleenumerator_list_linha returns [EObject current=null] : ( () (otherlv_1= ',' ( (lv_enumerator_2_0= ruleenumerator ) ) ( (lv_enumerator_list_linha_3_0= ruleenumerator_list_linha ) ) )? ) ;
    public final EObject ruleenumerator_list_linha() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_enumerator_2_0 = null;

        EObject lv_enumerator_list_linha_3_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:1304:2: ( ( () (otherlv_1= ',' ( (lv_enumerator_2_0= ruleenumerator ) ) ( (lv_enumerator_list_linha_3_0= ruleenumerator_list_linha ) ) )? ) )
            // InternalAnsic.g:1305:2: ( () (otherlv_1= ',' ( (lv_enumerator_2_0= ruleenumerator ) ) ( (lv_enumerator_list_linha_3_0= ruleenumerator_list_linha ) ) )? )
            {
            // InternalAnsic.g:1305:2: ( () (otherlv_1= ',' ( (lv_enumerator_2_0= ruleenumerator ) ) ( (lv_enumerator_list_linha_3_0= ruleenumerator_list_linha ) ) )? )
            // InternalAnsic.g:1306:3: () (otherlv_1= ',' ( (lv_enumerator_2_0= ruleenumerator ) ) ( (lv_enumerator_list_linha_3_0= ruleenumerator_list_linha ) ) )?
            {
            // InternalAnsic.g:1306:3: ()
            // InternalAnsic.g:1307:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getEnumerator_list_linhaAccess().getEnumeratorListLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:1316:3: (otherlv_1= ',' ( (lv_enumerator_2_0= ruleenumerator ) ) ( (lv_enumerator_list_linha_3_0= ruleenumerator_list_linha ) ) )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==56) ) {
                int LA8_1 = input.LA(2);

                if ( (LA8_1==RULE_IDZ) ) {
                    alt8=1;
                }
            }
            switch (alt8) {
                case 1 :
                    // InternalAnsic.g:1317:4: otherlv_1= ',' ( (lv_enumerator_2_0= ruleenumerator ) ) ( (lv_enumerator_list_linha_3_0= ruleenumerator_list_linha ) )
                    {
                    otherlv_1=(Token)match(input,56,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getEnumerator_list_linhaAccess().getCommaKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:1321:4: ( (lv_enumerator_2_0= ruleenumerator ) )
                    // InternalAnsic.g:1322:5: (lv_enumerator_2_0= ruleenumerator )
                    {
                    // InternalAnsic.g:1322:5: (lv_enumerator_2_0= ruleenumerator )
                    // InternalAnsic.g:1323:6: lv_enumerator_2_0= ruleenumerator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEnumerator_list_linhaAccess().getEnumeratorEnumeratorParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_enumerator_2_0=ruleenumerator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEnumerator_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"enumerator",
                      							lv_enumerator_2_0,
                      							"org.xtext.example.Ansic.enumerator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:1340:4: ( (lv_enumerator_list_linha_3_0= ruleenumerator_list_linha ) )
                    // InternalAnsic.g:1341:5: (lv_enumerator_list_linha_3_0= ruleenumerator_list_linha )
                    {
                    // InternalAnsic.g:1341:5: (lv_enumerator_list_linha_3_0= ruleenumerator_list_linha )
                    // InternalAnsic.g:1342:6: lv_enumerator_list_linha_3_0= ruleenumerator_list_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEnumerator_list_linhaAccess().getEnumerator_list_linhaEnumerator_list_linhaParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_enumerator_list_linha_3_0=ruleenumerator_list_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEnumerator_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"enumerator_list_linha",
                      							lv_enumerator_list_linha_3_0,
                      							"org.xtext.example.Ansic.enumerator_list_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleenumerator_list_linha"


    // $ANTLR start "entryRuleenumerator"
    // InternalAnsic.g:1364:1: entryRuleenumerator returns [EObject current=null] : iv_ruleenumerator= ruleenumerator EOF ;
    public final EObject entryRuleenumerator() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleenumerator = null;


        try {
            // InternalAnsic.g:1364:51: (iv_ruleenumerator= ruleenumerator EOF )
            // InternalAnsic.g:1365:2: iv_ruleenumerator= ruleenumerator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumeratorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleenumerator=ruleenumerator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleenumerator; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleenumerator"


    // $ANTLR start "ruleenumerator"
    // InternalAnsic.g:1371:1: ruleenumerator returns [EObject current=null] : ( ( ( (lv_enumeration_constant_0_0= ruleenumeration_constant ) ) otherlv_1= '=' ( (lv_conditional_expression_2_0= ruleconstant_expression ) ) ) | ( (lv_enumeration_constant_3_0= ruleenumeration_constant ) ) ) ;
    public final EObject ruleenumerator() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_enumeration_constant_0_0 = null;

        EObject lv_conditional_expression_2_0 = null;

        EObject lv_enumeration_constant_3_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:1377:2: ( ( ( ( (lv_enumeration_constant_0_0= ruleenumeration_constant ) ) otherlv_1= '=' ( (lv_conditional_expression_2_0= ruleconstant_expression ) ) ) | ( (lv_enumeration_constant_3_0= ruleenumeration_constant ) ) ) )
            // InternalAnsic.g:1378:2: ( ( ( (lv_enumeration_constant_0_0= ruleenumeration_constant ) ) otherlv_1= '=' ( (lv_conditional_expression_2_0= ruleconstant_expression ) ) ) | ( (lv_enumeration_constant_3_0= ruleenumeration_constant ) ) )
            {
            // InternalAnsic.g:1378:2: ( ( ( (lv_enumeration_constant_0_0= ruleenumeration_constant ) ) otherlv_1= '=' ( (lv_conditional_expression_2_0= ruleconstant_expression ) ) ) | ( (lv_enumeration_constant_3_0= ruleenumeration_constant ) ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==RULE_IDZ) ) {
                int LA9_1 = input.LA(2);

                if ( (LA9_1==57) ) {
                    alt9=1;
                }
                else if ( (LA9_1==EOF||(LA9_1>=55 && LA9_1<=56)) ) {
                    alt9=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 9, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalAnsic.g:1379:3: ( ( (lv_enumeration_constant_0_0= ruleenumeration_constant ) ) otherlv_1= '=' ( (lv_conditional_expression_2_0= ruleconstant_expression ) ) )
                    {
                    // InternalAnsic.g:1379:3: ( ( (lv_enumeration_constant_0_0= ruleenumeration_constant ) ) otherlv_1= '=' ( (lv_conditional_expression_2_0= ruleconstant_expression ) ) )
                    // InternalAnsic.g:1380:4: ( (lv_enumeration_constant_0_0= ruleenumeration_constant ) ) otherlv_1= '=' ( (lv_conditional_expression_2_0= ruleconstant_expression ) )
                    {
                    // InternalAnsic.g:1380:4: ( (lv_enumeration_constant_0_0= ruleenumeration_constant ) )
                    // InternalAnsic.g:1381:5: (lv_enumeration_constant_0_0= ruleenumeration_constant )
                    {
                    // InternalAnsic.g:1381:5: (lv_enumeration_constant_0_0= ruleenumeration_constant )
                    // InternalAnsic.g:1382:6: lv_enumeration_constant_0_0= ruleenumeration_constant
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEnumeratorAccess().getEnumeration_constantEnumeration_constantParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_13);
                    lv_enumeration_constant_0_0=ruleenumeration_constant();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEnumeratorRule());
                      						}
                      						set(
                      							current,
                      							"enumeration_constant",
                      							lv_enumeration_constant_0_0,
                      							"org.xtext.example.Ansic.enumeration_constant");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,57,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getEnumeratorAccess().getEqualsSignKeyword_0_1());
                      			
                    }
                    // InternalAnsic.g:1403:4: ( (lv_conditional_expression_2_0= ruleconstant_expression ) )
                    // InternalAnsic.g:1404:5: (lv_conditional_expression_2_0= ruleconstant_expression )
                    {
                    // InternalAnsic.g:1404:5: (lv_conditional_expression_2_0= ruleconstant_expression )
                    // InternalAnsic.g:1405:6: lv_conditional_expression_2_0= ruleconstant_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEnumeratorAccess().getConditional_expressionConstant_expressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_conditional_expression_2_0=ruleconstant_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEnumeratorRule());
                      						}
                      						set(
                      							current,
                      							"conditional_expression",
                      							lv_conditional_expression_2_0,
                      							"org.xtext.example.Ansic.constant_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:1424:3: ( (lv_enumeration_constant_3_0= ruleenumeration_constant ) )
                    {
                    // InternalAnsic.g:1424:3: ( (lv_enumeration_constant_3_0= ruleenumeration_constant ) )
                    // InternalAnsic.g:1425:4: (lv_enumeration_constant_3_0= ruleenumeration_constant )
                    {
                    // InternalAnsic.g:1425:4: (lv_enumeration_constant_3_0= ruleenumeration_constant )
                    // InternalAnsic.g:1426:5: lv_enumeration_constant_3_0= ruleenumeration_constant
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getEnumeratorAccess().getEnumeration_constantEnumeration_constantParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_enumeration_constant_3_0=ruleenumeration_constant();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getEnumeratorRule());
                      					}
                      					set(
                      						current,
                      						"enumeration_constant",
                      						lv_enumeration_constant_3_0,
                      						"org.xtext.example.Ansic.enumeration_constant");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleenumerator"


    // $ANTLR start "entryRuleatomic_type_specifier"
    // InternalAnsic.g:1447:1: entryRuleatomic_type_specifier returns [EObject current=null] : iv_ruleatomic_type_specifier= ruleatomic_type_specifier EOF ;
    public final EObject entryRuleatomic_type_specifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleatomic_type_specifier = null;


        try {
            // InternalAnsic.g:1447:62: (iv_ruleatomic_type_specifier= ruleatomic_type_specifier EOF )
            // InternalAnsic.g:1448:2: iv_ruleatomic_type_specifier= ruleatomic_type_specifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAtomic_type_specifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleatomic_type_specifier=ruleatomic_type_specifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleatomic_type_specifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleatomic_type_specifier"


    // $ANTLR start "ruleatomic_type_specifier"
    // InternalAnsic.g:1454:1: ruleatomic_type_specifier returns [EObject current=null] : (otherlv_0= '_Atomic' otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')' ) ;
    public final EObject ruleatomic_type_specifier() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_type_name_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:1460:2: ( (otherlv_0= '_Atomic' otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')' ) )
            // InternalAnsic.g:1461:2: (otherlv_0= '_Atomic' otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')' )
            {
            // InternalAnsic.g:1461:2: (otherlv_0= '_Atomic' otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')' )
            // InternalAnsic.g:1462:3: otherlv_0= '_Atomic' otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')'
            {
            otherlv_0=(Token)match(input,39,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAtomic_type_specifierAccess().get_AtomicKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,34,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAtomic_type_specifierAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalAnsic.g:1470:3: ( (lv_type_name_2_0= ruletype_name ) )
            // InternalAnsic.g:1471:4: (lv_type_name_2_0= ruletype_name )
            {
            // InternalAnsic.g:1471:4: (lv_type_name_2_0= ruletype_name )
            // InternalAnsic.g:1472:5: lv_type_name_2_0= ruletype_name
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAtomic_type_specifierAccess().getType_nameType_nameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_7);
            lv_type_name_2_0=ruletype_name();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAtomic_type_specifierRule());
              					}
              					set(
              						current,
              						"type_name",
              						lv_type_name_2_0,
              						"org.xtext.example.Ansic.type_name");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,35,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getAtomic_type_specifierAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleatomic_type_specifier"


    // $ANTLR start "entryRulestruct_or_union_specifier"
    // InternalAnsic.g:1497:1: entryRulestruct_or_union_specifier returns [EObject current=null] : iv_rulestruct_or_union_specifier= rulestruct_or_union_specifier EOF ;
    public final EObject entryRulestruct_or_union_specifier() throws RecognitionException {
        EObject current = null;

        EObject iv_rulestruct_or_union_specifier = null;


        try {
            // InternalAnsic.g:1497:66: (iv_rulestruct_or_union_specifier= rulestruct_or_union_specifier EOF )
            // InternalAnsic.g:1498:2: iv_rulestruct_or_union_specifier= rulestruct_or_union_specifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStruct_or_union_specifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulestruct_or_union_specifier=rulestruct_or_union_specifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulestruct_or_union_specifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulestruct_or_union_specifier"


    // $ANTLR start "rulestruct_or_union_specifier"
    // InternalAnsic.g:1504:1: rulestruct_or_union_specifier returns [EObject current=null] : ( ( ( (lv_struct_or_union_0_0= rulestruct_or_union ) ) otherlv_1= '{' ( (lv_struct_declaration_list_2_0= rulestruct_declaration_list ) ) otherlv_3= '}' ) | ( ( (lv_struct_or_union_4_0= rulestruct_or_union ) ) ( (lv_identifier_5_0= RULE_IDZ ) ) ( (lv_struct_or_union_specifier_complement_6_0= rulestruct_or_union_specifier_complement ) ) ) ) ;
    public final EObject rulestruct_or_union_specifier() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_identifier_5_0=null;
        AntlrDatatypeRuleToken lv_struct_or_union_0_0 = null;

        EObject lv_struct_declaration_list_2_0 = null;

        AntlrDatatypeRuleToken lv_struct_or_union_4_0 = null;

        EObject lv_struct_or_union_specifier_complement_6_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:1510:2: ( ( ( ( (lv_struct_or_union_0_0= rulestruct_or_union ) ) otherlv_1= '{' ( (lv_struct_declaration_list_2_0= rulestruct_declaration_list ) ) otherlv_3= '}' ) | ( ( (lv_struct_or_union_4_0= rulestruct_or_union ) ) ( (lv_identifier_5_0= RULE_IDZ ) ) ( (lv_struct_or_union_specifier_complement_6_0= rulestruct_or_union_specifier_complement ) ) ) ) )
            // InternalAnsic.g:1511:2: ( ( ( (lv_struct_or_union_0_0= rulestruct_or_union ) ) otherlv_1= '{' ( (lv_struct_declaration_list_2_0= rulestruct_declaration_list ) ) otherlv_3= '}' ) | ( ( (lv_struct_or_union_4_0= rulestruct_or_union ) ) ( (lv_identifier_5_0= RULE_IDZ ) ) ( (lv_struct_or_union_specifier_complement_6_0= rulestruct_or_union_specifier_complement ) ) ) )
            {
            // InternalAnsic.g:1511:2: ( ( ( (lv_struct_or_union_0_0= rulestruct_or_union ) ) otherlv_1= '{' ( (lv_struct_declaration_list_2_0= rulestruct_declaration_list ) ) otherlv_3= '}' ) | ( ( (lv_struct_or_union_4_0= rulestruct_or_union ) ) ( (lv_identifier_5_0= RULE_IDZ ) ) ( (lv_struct_or_union_specifier_complement_6_0= rulestruct_or_union_specifier_complement ) ) ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==58) ) {
                int LA10_1 = input.LA(2);

                if ( (LA10_1==54) ) {
                    alt10=1;
                }
                else if ( (LA10_1==RULE_IDZ) ) {
                    alt10=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA10_0==59) ) {
                int LA10_2 = input.LA(2);

                if ( (LA10_2==54) ) {
                    alt10=1;
                }
                else if ( (LA10_2==RULE_IDZ) ) {
                    alt10=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalAnsic.g:1512:3: ( ( (lv_struct_or_union_0_0= rulestruct_or_union ) ) otherlv_1= '{' ( (lv_struct_declaration_list_2_0= rulestruct_declaration_list ) ) otherlv_3= '}' )
                    {
                    // InternalAnsic.g:1512:3: ( ( (lv_struct_or_union_0_0= rulestruct_or_union ) ) otherlv_1= '{' ( (lv_struct_declaration_list_2_0= rulestruct_declaration_list ) ) otherlv_3= '}' )
                    // InternalAnsic.g:1513:4: ( (lv_struct_or_union_0_0= rulestruct_or_union ) ) otherlv_1= '{' ( (lv_struct_declaration_list_2_0= rulestruct_declaration_list ) ) otherlv_3= '}'
                    {
                    // InternalAnsic.g:1513:4: ( (lv_struct_or_union_0_0= rulestruct_or_union ) )
                    // InternalAnsic.g:1514:5: (lv_struct_or_union_0_0= rulestruct_or_union )
                    {
                    // InternalAnsic.g:1514:5: (lv_struct_or_union_0_0= rulestruct_or_union )
                    // InternalAnsic.g:1515:6: lv_struct_or_union_0_0= rulestruct_or_union
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStruct_or_union_specifierAccess().getStruct_or_unionStruct_or_unionParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    lv_struct_or_union_0_0=rulestruct_or_union();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStruct_or_union_specifierRule());
                      						}
                      						set(
                      							current,
                      							"struct_or_union",
                      							lv_struct_or_union_0_0,
                      							"org.xtext.example.Ansic.struct_or_union");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,54,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getStruct_or_union_specifierAccess().getLeftCurlyBracketKeyword_0_1());
                      			
                    }
                    // InternalAnsic.g:1536:4: ( (lv_struct_declaration_list_2_0= rulestruct_declaration_list ) )
                    // InternalAnsic.g:1537:5: (lv_struct_declaration_list_2_0= rulestruct_declaration_list )
                    {
                    // InternalAnsic.g:1537:5: (lv_struct_declaration_list_2_0= rulestruct_declaration_list )
                    // InternalAnsic.g:1538:6: lv_struct_declaration_list_2_0= rulestruct_declaration_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStruct_or_union_specifierAccess().getStruct_declaration_listStruct_declaration_listParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_struct_declaration_list_2_0=rulestruct_declaration_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStruct_or_union_specifierRule());
                      						}
                      						set(
                      							current,
                      							"struct_declaration_list",
                      							lv_struct_declaration_list_2_0,
                      							"org.xtext.example.Ansic.struct_declaration_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getStruct_or_union_specifierAccess().getRightCurlyBracketKeyword_0_3());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:1561:3: ( ( (lv_struct_or_union_4_0= rulestruct_or_union ) ) ( (lv_identifier_5_0= RULE_IDZ ) ) ( (lv_struct_or_union_specifier_complement_6_0= rulestruct_or_union_specifier_complement ) ) )
                    {
                    // InternalAnsic.g:1561:3: ( ( (lv_struct_or_union_4_0= rulestruct_or_union ) ) ( (lv_identifier_5_0= RULE_IDZ ) ) ( (lv_struct_or_union_specifier_complement_6_0= rulestruct_or_union_specifier_complement ) ) )
                    // InternalAnsic.g:1562:4: ( (lv_struct_or_union_4_0= rulestruct_or_union ) ) ( (lv_identifier_5_0= RULE_IDZ ) ) ( (lv_struct_or_union_specifier_complement_6_0= rulestruct_or_union_specifier_complement ) )
                    {
                    // InternalAnsic.g:1562:4: ( (lv_struct_or_union_4_0= rulestruct_or_union ) )
                    // InternalAnsic.g:1563:5: (lv_struct_or_union_4_0= rulestruct_or_union )
                    {
                    // InternalAnsic.g:1563:5: (lv_struct_or_union_4_0= rulestruct_or_union )
                    // InternalAnsic.g:1564:6: lv_struct_or_union_4_0= rulestruct_or_union
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStruct_or_union_specifierAccess().getStruct_or_unionStruct_or_unionParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_10);
                    lv_struct_or_union_4_0=rulestruct_or_union();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStruct_or_union_specifierRule());
                      						}
                      						set(
                      							current,
                      							"struct_or_union",
                      							lv_struct_or_union_4_0,
                      							"org.xtext.example.Ansic.struct_or_union");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:1581:4: ( (lv_identifier_5_0= RULE_IDZ ) )
                    // InternalAnsic.g:1582:5: (lv_identifier_5_0= RULE_IDZ )
                    {
                    // InternalAnsic.g:1582:5: (lv_identifier_5_0= RULE_IDZ )
                    // InternalAnsic.g:1583:6: lv_identifier_5_0= RULE_IDZ
                    {
                    lv_identifier_5_0=(Token)match(input,RULE_IDZ,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_identifier_5_0, grammarAccess.getStruct_or_union_specifierAccess().getIdentifierIDzTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getStruct_or_union_specifierRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"identifier",
                      							lv_identifier_5_0,
                      							"org.xtext.example.Ansic.IDz");
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:1599:4: ( (lv_struct_or_union_specifier_complement_6_0= rulestruct_or_union_specifier_complement ) )
                    // InternalAnsic.g:1600:5: (lv_struct_or_union_specifier_complement_6_0= rulestruct_or_union_specifier_complement )
                    {
                    // InternalAnsic.g:1600:5: (lv_struct_or_union_specifier_complement_6_0= rulestruct_or_union_specifier_complement )
                    // InternalAnsic.g:1601:6: lv_struct_or_union_specifier_complement_6_0= rulestruct_or_union_specifier_complement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStruct_or_union_specifierAccess().getStruct_or_union_specifier_complementStruct_or_union_specifier_complementParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_struct_or_union_specifier_complement_6_0=rulestruct_or_union_specifier_complement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStruct_or_union_specifierRule());
                      						}
                      						set(
                      							current,
                      							"struct_or_union_specifier_complement",
                      							lv_struct_or_union_specifier_complement_6_0,
                      							"org.xtext.example.Ansic.struct_or_union_specifier_complement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulestruct_or_union_specifier"


    // $ANTLR start "entryRulestruct_or_union"
    // InternalAnsic.g:1623:1: entryRulestruct_or_union returns [String current=null] : iv_rulestruct_or_union= rulestruct_or_union EOF ;
    public final String entryRulestruct_or_union() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulestruct_or_union = null;


        try {
            // InternalAnsic.g:1623:55: (iv_rulestruct_or_union= rulestruct_or_union EOF )
            // InternalAnsic.g:1624:2: iv_rulestruct_or_union= rulestruct_or_union EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStruct_or_unionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulestruct_or_union=rulestruct_or_union();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulestruct_or_union.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulestruct_or_union"


    // $ANTLR start "rulestruct_or_union"
    // InternalAnsic.g:1630:1: rulestruct_or_union returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'struct' | kw= 'union' ) ;
    public final AntlrDatatypeRuleToken rulestruct_or_union() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalAnsic.g:1636:2: ( (kw= 'struct' | kw= 'union' ) )
            // InternalAnsic.g:1637:2: (kw= 'struct' | kw= 'union' )
            {
            // InternalAnsic.g:1637:2: (kw= 'struct' | kw= 'union' )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==58) ) {
                alt11=1;
            }
            else if ( (LA11_0==59) ) {
                alt11=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalAnsic.g:1638:3: kw= 'struct'
                    {
                    kw=(Token)match(input,58,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getStruct_or_unionAccess().getStructKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsic.g:1644:3: kw= 'union'
                    {
                    kw=(Token)match(input,59,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getStruct_or_unionAccess().getUnionKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulestruct_or_union"


    // $ANTLR start "entryRulestruct_or_union_specifier_complement"
    // InternalAnsic.g:1653:1: entryRulestruct_or_union_specifier_complement returns [EObject current=null] : iv_rulestruct_or_union_specifier_complement= rulestruct_or_union_specifier_complement EOF ;
    public final EObject entryRulestruct_or_union_specifier_complement() throws RecognitionException {
        EObject current = null;

        EObject iv_rulestruct_or_union_specifier_complement = null;


        try {
            // InternalAnsic.g:1653:77: (iv_rulestruct_or_union_specifier_complement= rulestruct_or_union_specifier_complement EOF )
            // InternalAnsic.g:1654:2: iv_rulestruct_or_union_specifier_complement= rulestruct_or_union_specifier_complement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStruct_or_union_specifier_complementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulestruct_or_union_specifier_complement=rulestruct_or_union_specifier_complement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulestruct_or_union_specifier_complement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulestruct_or_union_specifier_complement"


    // $ANTLR start "rulestruct_or_union_specifier_complement"
    // InternalAnsic.g:1660:1: rulestruct_or_union_specifier_complement returns [EObject current=null] : ( () (otherlv_1= '{' ( (lv_struct_declaration_list_2_0= rulestruct_declaration_list ) ) otherlv_3= '}' )? ) ;
    public final EObject rulestruct_or_union_specifier_complement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_struct_declaration_list_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:1666:2: ( ( () (otherlv_1= '{' ( (lv_struct_declaration_list_2_0= rulestruct_declaration_list ) ) otherlv_3= '}' )? ) )
            // InternalAnsic.g:1667:2: ( () (otherlv_1= '{' ( (lv_struct_declaration_list_2_0= rulestruct_declaration_list ) ) otherlv_3= '}' )? )
            {
            // InternalAnsic.g:1667:2: ( () (otherlv_1= '{' ( (lv_struct_declaration_list_2_0= rulestruct_declaration_list ) ) otherlv_3= '}' )? )
            // InternalAnsic.g:1668:3: () (otherlv_1= '{' ( (lv_struct_declaration_list_2_0= rulestruct_declaration_list ) ) otherlv_3= '}' )?
            {
            // InternalAnsic.g:1668:3: ()
            // InternalAnsic.g:1669:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getStruct_or_union_specifier_complementAccess().getStructOrUnionSpecifierComplementActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:1678:3: (otherlv_1= '{' ( (lv_struct_declaration_list_2_0= rulestruct_declaration_list ) ) otherlv_3= '}' )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==54) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // InternalAnsic.g:1679:4: otherlv_1= '{' ( (lv_struct_declaration_list_2_0= rulestruct_declaration_list ) ) otherlv_3= '}'
                    {
                    otherlv_1=(Token)match(input,54,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getStruct_or_union_specifier_complementAccess().getLeftCurlyBracketKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:1683:4: ( (lv_struct_declaration_list_2_0= rulestruct_declaration_list ) )
                    // InternalAnsic.g:1684:5: (lv_struct_declaration_list_2_0= rulestruct_declaration_list )
                    {
                    // InternalAnsic.g:1684:5: (lv_struct_declaration_list_2_0= rulestruct_declaration_list )
                    // InternalAnsic.g:1685:6: lv_struct_declaration_list_2_0= rulestruct_declaration_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStruct_or_union_specifier_complementAccess().getStruct_declaration_listStruct_declaration_listParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_struct_declaration_list_2_0=rulestruct_declaration_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStruct_or_union_specifier_complementRule());
                      						}
                      						set(
                      							current,
                      							"struct_declaration_list",
                      							lv_struct_declaration_list_2_0,
                      							"org.xtext.example.Ansic.struct_declaration_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getStruct_or_union_specifier_complementAccess().getRightCurlyBracketKeyword_1_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulestruct_or_union_specifier_complement"


    // $ANTLR start "entryRulestruct_declaration_list"
    // InternalAnsic.g:1711:1: entryRulestruct_declaration_list returns [EObject current=null] : iv_rulestruct_declaration_list= rulestruct_declaration_list EOF ;
    public final EObject entryRulestruct_declaration_list() throws RecognitionException {
        EObject current = null;

        EObject iv_rulestruct_declaration_list = null;


        try {
            // InternalAnsic.g:1711:64: (iv_rulestruct_declaration_list= rulestruct_declaration_list EOF )
            // InternalAnsic.g:1712:2: iv_rulestruct_declaration_list= rulestruct_declaration_list EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStruct_declaration_listRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulestruct_declaration_list=rulestruct_declaration_list();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulestruct_declaration_list; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulestruct_declaration_list"


    // $ANTLR start "rulestruct_declaration_list"
    // InternalAnsic.g:1718:1: rulestruct_declaration_list returns [EObject current=null] : ( ( (lv_struct_declaration_0_0= rulestruct_declaration ) ) ( (lv_struct_declaration_list_linha_1_0= rulestruct_declaration_list_linha ) ) ) ;
    public final EObject rulestruct_declaration_list() throws RecognitionException {
        EObject current = null;

        EObject lv_struct_declaration_0_0 = null;

        EObject lv_struct_declaration_list_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:1724:2: ( ( ( (lv_struct_declaration_0_0= rulestruct_declaration ) ) ( (lv_struct_declaration_list_linha_1_0= rulestruct_declaration_list_linha ) ) ) )
            // InternalAnsic.g:1725:2: ( ( (lv_struct_declaration_0_0= rulestruct_declaration ) ) ( (lv_struct_declaration_list_linha_1_0= rulestruct_declaration_list_linha ) ) )
            {
            // InternalAnsic.g:1725:2: ( ( (lv_struct_declaration_0_0= rulestruct_declaration ) ) ( (lv_struct_declaration_list_linha_1_0= rulestruct_declaration_list_linha ) ) )
            // InternalAnsic.g:1726:3: ( (lv_struct_declaration_0_0= rulestruct_declaration ) ) ( (lv_struct_declaration_list_linha_1_0= rulestruct_declaration_list_linha ) )
            {
            // InternalAnsic.g:1726:3: ( (lv_struct_declaration_0_0= rulestruct_declaration ) )
            // InternalAnsic.g:1727:4: (lv_struct_declaration_0_0= rulestruct_declaration )
            {
            // InternalAnsic.g:1727:4: (lv_struct_declaration_0_0= rulestruct_declaration )
            // InternalAnsic.g:1728:5: lv_struct_declaration_0_0= rulestruct_declaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStruct_declaration_listAccess().getStruct_declarationStruct_declarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_struct_declaration_0_0=rulestruct_declaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStruct_declaration_listRule());
              					}
              					set(
              						current,
              						"struct_declaration",
              						lv_struct_declaration_0_0,
              						"org.xtext.example.Ansic.struct_declaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:1745:3: ( (lv_struct_declaration_list_linha_1_0= rulestruct_declaration_list_linha ) )
            // InternalAnsic.g:1746:4: (lv_struct_declaration_list_linha_1_0= rulestruct_declaration_list_linha )
            {
            // InternalAnsic.g:1746:4: (lv_struct_declaration_list_linha_1_0= rulestruct_declaration_list_linha )
            // InternalAnsic.g:1747:5: lv_struct_declaration_list_linha_1_0= rulestruct_declaration_list_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStruct_declaration_listAccess().getStruct_declaration_list_linhaStruct_declaration_list_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_struct_declaration_list_linha_1_0=rulestruct_declaration_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStruct_declaration_listRule());
              					}
              					set(
              						current,
              						"struct_declaration_list_linha",
              						lv_struct_declaration_list_linha_1_0,
              						"org.xtext.example.Ansic.struct_declaration_list_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulestruct_declaration_list"


    // $ANTLR start "entryRulestruct_declaration_list_linha"
    // InternalAnsic.g:1768:1: entryRulestruct_declaration_list_linha returns [EObject current=null] : iv_rulestruct_declaration_list_linha= rulestruct_declaration_list_linha EOF ;
    public final EObject entryRulestruct_declaration_list_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_rulestruct_declaration_list_linha = null;


        try {
            // InternalAnsic.g:1768:70: (iv_rulestruct_declaration_list_linha= rulestruct_declaration_list_linha EOF )
            // InternalAnsic.g:1769:2: iv_rulestruct_declaration_list_linha= rulestruct_declaration_list_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStruct_declaration_list_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulestruct_declaration_list_linha=rulestruct_declaration_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulestruct_declaration_list_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulestruct_declaration_list_linha"


    // $ANTLR start "rulestruct_declaration_list_linha"
    // InternalAnsic.g:1775:1: rulestruct_declaration_list_linha returns [EObject current=null] : ( () ( ( (lv_struct_declaration_1_0= rulestruct_declaration ) ) ( (lv_struct_declaration_list_linha_2_0= rulestruct_declaration_list_linha ) ) )? ) ;
    public final EObject rulestruct_declaration_list_linha() throws RecognitionException {
        EObject current = null;

        EObject lv_struct_declaration_1_0 = null;

        EObject lv_struct_declaration_list_linha_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:1781:2: ( ( () ( ( (lv_struct_declaration_1_0= rulestruct_declaration ) ) ( (lv_struct_declaration_list_linha_2_0= rulestruct_declaration_list_linha ) ) )? ) )
            // InternalAnsic.g:1782:2: ( () ( ( (lv_struct_declaration_1_0= rulestruct_declaration ) ) ( (lv_struct_declaration_list_linha_2_0= rulestruct_declaration_list_linha ) ) )? )
            {
            // InternalAnsic.g:1782:2: ( () ( ( (lv_struct_declaration_1_0= rulestruct_declaration ) ) ( (lv_struct_declaration_list_linha_2_0= rulestruct_declaration_list_linha ) ) )? )
            // InternalAnsic.g:1783:3: () ( ( (lv_struct_declaration_1_0= rulestruct_declaration ) ) ( (lv_struct_declaration_list_linha_2_0= rulestruct_declaration_list_linha ) ) )?
            {
            // InternalAnsic.g:1783:3: ()
            // InternalAnsic.g:1784:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getStruct_declaration_list_linhaAccess().getStructDeclarationListLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:1793:3: ( ( (lv_struct_declaration_1_0= rulestruct_declaration ) ) ( (lv_struct_declaration_list_linha_2_0= rulestruct_declaration_list_linha ) ) )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( ((LA13_0>=36 && LA13_0<=53)||(LA13_0>=58 && LA13_0<=59)||LA13_0==74) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // InternalAnsic.g:1794:4: ( (lv_struct_declaration_1_0= rulestruct_declaration ) ) ( (lv_struct_declaration_list_linha_2_0= rulestruct_declaration_list_linha ) )
                    {
                    // InternalAnsic.g:1794:4: ( (lv_struct_declaration_1_0= rulestruct_declaration ) )
                    // InternalAnsic.g:1795:5: (lv_struct_declaration_1_0= rulestruct_declaration )
                    {
                    // InternalAnsic.g:1795:5: (lv_struct_declaration_1_0= rulestruct_declaration )
                    // InternalAnsic.g:1796:6: lv_struct_declaration_1_0= rulestruct_declaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStruct_declaration_list_linhaAccess().getStruct_declarationStruct_declarationParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_3);
                    lv_struct_declaration_1_0=rulestruct_declaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStruct_declaration_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"struct_declaration",
                      							lv_struct_declaration_1_0,
                      							"org.xtext.example.Ansic.struct_declaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:1813:4: ( (lv_struct_declaration_list_linha_2_0= rulestruct_declaration_list_linha ) )
                    // InternalAnsic.g:1814:5: (lv_struct_declaration_list_linha_2_0= rulestruct_declaration_list_linha )
                    {
                    // InternalAnsic.g:1814:5: (lv_struct_declaration_list_linha_2_0= rulestruct_declaration_list_linha )
                    // InternalAnsic.g:1815:6: lv_struct_declaration_list_linha_2_0= rulestruct_declaration_list_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStruct_declaration_list_linhaAccess().getStruct_declaration_list_linhaStruct_declaration_list_linhaParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_struct_declaration_list_linha_2_0=rulestruct_declaration_list_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStruct_declaration_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"struct_declaration_list_linha",
                      							lv_struct_declaration_list_linha_2_0,
                      							"org.xtext.example.Ansic.struct_declaration_list_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulestruct_declaration_list_linha"


    // $ANTLR start "entryRulestruct_declaration"
    // InternalAnsic.g:1837:1: entryRulestruct_declaration returns [EObject current=null] : iv_rulestruct_declaration= rulestruct_declaration EOF ;
    public final EObject entryRulestruct_declaration() throws RecognitionException {
        EObject current = null;

        EObject iv_rulestruct_declaration = null;


        try {
            // InternalAnsic.g:1837:59: (iv_rulestruct_declaration= rulestruct_declaration EOF )
            // InternalAnsic.g:1838:2: iv_rulestruct_declaration= rulestruct_declaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStruct_declarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulestruct_declaration=rulestruct_declaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulestruct_declaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulestruct_declaration"


    // $ANTLR start "rulestruct_declaration"
    // InternalAnsic.g:1844:1: rulestruct_declaration returns [EObject current=null] : ( ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) otherlv_1= ';' ) | ( ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) ) ( (lv_struct_declarator_list_3_0= rulestruct_declarator_list ) ) otherlv_4= ';' ) | ( (lv_static_assert_declaration_5_0= rulestatic_assert_declaration ) ) ) ;
    public final EObject rulestruct_declaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        EObject lv_specifier_qualifier_list_0_0 = null;

        EObject lv_specifier_qualifier_list_2_0 = null;

        EObject lv_struct_declarator_list_3_0 = null;

        EObject lv_static_assert_declaration_5_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:1850:2: ( ( ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) otherlv_1= ';' ) | ( ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) ) ( (lv_struct_declarator_list_3_0= rulestruct_declarator_list ) ) otherlv_4= ';' ) | ( (lv_static_assert_declaration_5_0= rulestatic_assert_declaration ) ) ) )
            // InternalAnsic.g:1851:2: ( ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) otherlv_1= ';' ) | ( ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) ) ( (lv_struct_declarator_list_3_0= rulestruct_declarator_list ) ) otherlv_4= ';' ) | ( (lv_static_assert_declaration_5_0= rulestatic_assert_declaration ) ) )
            {
            // InternalAnsic.g:1851:2: ( ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) otherlv_1= ';' ) | ( ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) ) ( (lv_struct_declarator_list_3_0= rulestruct_declarator_list ) ) otherlv_4= ';' ) | ( (lv_static_assert_declaration_5_0= rulestatic_assert_declaration ) ) )
            int alt14=3;
            alt14 = dfa14.predict(input);
            switch (alt14) {
                case 1 :
                    // InternalAnsic.g:1852:3: ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) otherlv_1= ';' )
                    {
                    // InternalAnsic.g:1852:3: ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) otherlv_1= ';' )
                    // InternalAnsic.g:1853:4: ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) otherlv_1= ';'
                    {
                    // InternalAnsic.g:1853:4: ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) )
                    // InternalAnsic.g:1854:5: (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list )
                    {
                    // InternalAnsic.g:1854:5: (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list )
                    // InternalAnsic.g:1855:6: lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStruct_declarationAccess().getSpecifier_qualifier_listSpecifier_qualifier_listParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_14);
                    lv_specifier_qualifier_list_0_0=rulespecifier_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStruct_declarationRule());
                      						}
                      						set(
                      							current,
                      							"specifier_qualifier_list",
                      							lv_specifier_qualifier_list_0_0,
                      							"org.xtext.example.Ansic.specifier_qualifier_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getStruct_declarationAccess().getSemicolonKeyword_0_1());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:1878:3: ( ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) ) ( (lv_struct_declarator_list_3_0= rulestruct_declarator_list ) ) otherlv_4= ';' )
                    {
                    // InternalAnsic.g:1878:3: ( ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) ) ( (lv_struct_declarator_list_3_0= rulestruct_declarator_list ) ) otherlv_4= ';' )
                    // InternalAnsic.g:1879:4: ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) ) ( (lv_struct_declarator_list_3_0= rulestruct_declarator_list ) ) otherlv_4= ';'
                    {
                    // InternalAnsic.g:1879:4: ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) )
                    // InternalAnsic.g:1880:5: (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list )
                    {
                    // InternalAnsic.g:1880:5: (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list )
                    // InternalAnsic.g:1881:6: lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStruct_declarationAccess().getSpecifier_qualifier_listSpecifier_qualifier_listParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_15);
                    lv_specifier_qualifier_list_2_0=rulespecifier_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStruct_declarationRule());
                      						}
                      						set(
                      							current,
                      							"specifier_qualifier_list",
                      							lv_specifier_qualifier_list_2_0,
                      							"org.xtext.example.Ansic.specifier_qualifier_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:1898:4: ( (lv_struct_declarator_list_3_0= rulestruct_declarator_list ) )
                    // InternalAnsic.g:1899:5: (lv_struct_declarator_list_3_0= rulestruct_declarator_list )
                    {
                    // InternalAnsic.g:1899:5: (lv_struct_declarator_list_3_0= rulestruct_declarator_list )
                    // InternalAnsic.g:1900:6: lv_struct_declarator_list_3_0= rulestruct_declarator_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStruct_declarationAccess().getStruct_declarator_listStruct_declarator_listParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_14);
                    lv_struct_declarator_list_3_0=rulestruct_declarator_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStruct_declarationRule());
                      						}
                      						set(
                      							current,
                      							"struct_declarator_list",
                      							lv_struct_declarator_list_3_0,
                      							"org.xtext.example.Ansic.struct_declarator_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getStruct_declarationAccess().getSemicolonKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:1923:3: ( (lv_static_assert_declaration_5_0= rulestatic_assert_declaration ) )
                    {
                    // InternalAnsic.g:1923:3: ( (lv_static_assert_declaration_5_0= rulestatic_assert_declaration ) )
                    // InternalAnsic.g:1924:4: (lv_static_assert_declaration_5_0= rulestatic_assert_declaration )
                    {
                    // InternalAnsic.g:1924:4: (lv_static_assert_declaration_5_0= rulestatic_assert_declaration )
                    // InternalAnsic.g:1925:5: lv_static_assert_declaration_5_0= rulestatic_assert_declaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStruct_declarationAccess().getStatic_assert_declarationStatic_assert_declarationParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_static_assert_declaration_5_0=rulestatic_assert_declaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStruct_declarationRule());
                      					}
                      					set(
                      						current,
                      						"static_assert_declaration",
                      						lv_static_assert_declaration_5_0,
                      						"org.xtext.example.Ansic.static_assert_declaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulestruct_declaration"


    // $ANTLR start "entryRulestruct_declarator_list"
    // InternalAnsic.g:1946:1: entryRulestruct_declarator_list returns [EObject current=null] : iv_rulestruct_declarator_list= rulestruct_declarator_list EOF ;
    public final EObject entryRulestruct_declarator_list() throws RecognitionException {
        EObject current = null;

        EObject iv_rulestruct_declarator_list = null;


        try {
            // InternalAnsic.g:1946:63: (iv_rulestruct_declarator_list= rulestruct_declarator_list EOF )
            // InternalAnsic.g:1947:2: iv_rulestruct_declarator_list= rulestruct_declarator_list EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStruct_declarator_listRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulestruct_declarator_list=rulestruct_declarator_list();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulestruct_declarator_list; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulestruct_declarator_list"


    // $ANTLR start "rulestruct_declarator_list"
    // InternalAnsic.g:1953:1: rulestruct_declarator_list returns [EObject current=null] : ( ( (lv_struct_declarator_0_0= rulestruct_declarator ) ) ( (lv_struct_declarator_list_linha_1_0= rulestruct_declarator_list_linha ) ) ) ;
    public final EObject rulestruct_declarator_list() throws RecognitionException {
        EObject current = null;

        EObject lv_struct_declarator_0_0 = null;

        EObject lv_struct_declarator_list_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:1959:2: ( ( ( (lv_struct_declarator_0_0= rulestruct_declarator ) ) ( (lv_struct_declarator_list_linha_1_0= rulestruct_declarator_list_linha ) ) ) )
            // InternalAnsic.g:1960:2: ( ( (lv_struct_declarator_0_0= rulestruct_declarator ) ) ( (lv_struct_declarator_list_linha_1_0= rulestruct_declarator_list_linha ) ) )
            {
            // InternalAnsic.g:1960:2: ( ( (lv_struct_declarator_0_0= rulestruct_declarator ) ) ( (lv_struct_declarator_list_linha_1_0= rulestruct_declarator_list_linha ) ) )
            // InternalAnsic.g:1961:3: ( (lv_struct_declarator_0_0= rulestruct_declarator ) ) ( (lv_struct_declarator_list_linha_1_0= rulestruct_declarator_list_linha ) )
            {
            // InternalAnsic.g:1961:3: ( (lv_struct_declarator_0_0= rulestruct_declarator ) )
            // InternalAnsic.g:1962:4: (lv_struct_declarator_0_0= rulestruct_declarator )
            {
            // InternalAnsic.g:1962:4: (lv_struct_declarator_0_0= rulestruct_declarator )
            // InternalAnsic.g:1963:5: lv_struct_declarator_0_0= rulestruct_declarator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStruct_declarator_listAccess().getStruct_declaratorStruct_declaratorParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_12);
            lv_struct_declarator_0_0=rulestruct_declarator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStruct_declarator_listRule());
              					}
              					set(
              						current,
              						"struct_declarator",
              						lv_struct_declarator_0_0,
              						"org.xtext.example.Ansic.struct_declarator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:1980:3: ( (lv_struct_declarator_list_linha_1_0= rulestruct_declarator_list_linha ) )
            // InternalAnsic.g:1981:4: (lv_struct_declarator_list_linha_1_0= rulestruct_declarator_list_linha )
            {
            // InternalAnsic.g:1981:4: (lv_struct_declarator_list_linha_1_0= rulestruct_declarator_list_linha )
            // InternalAnsic.g:1982:5: lv_struct_declarator_list_linha_1_0= rulestruct_declarator_list_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStruct_declarator_listAccess().getStruct_declarator_list_linhaStruct_declarator_list_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_struct_declarator_list_linha_1_0=rulestruct_declarator_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStruct_declarator_listRule());
              					}
              					set(
              						current,
              						"struct_declarator_list_linha",
              						lv_struct_declarator_list_linha_1_0,
              						"org.xtext.example.Ansic.struct_declarator_list_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulestruct_declarator_list"


    // $ANTLR start "entryRulestruct_declarator_list_linha"
    // InternalAnsic.g:2003:1: entryRulestruct_declarator_list_linha returns [EObject current=null] : iv_rulestruct_declarator_list_linha= rulestruct_declarator_list_linha EOF ;
    public final EObject entryRulestruct_declarator_list_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_rulestruct_declarator_list_linha = null;


        try {
            // InternalAnsic.g:2003:69: (iv_rulestruct_declarator_list_linha= rulestruct_declarator_list_linha EOF )
            // InternalAnsic.g:2004:2: iv_rulestruct_declarator_list_linha= rulestruct_declarator_list_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStruct_declarator_list_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulestruct_declarator_list_linha=rulestruct_declarator_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulestruct_declarator_list_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulestruct_declarator_list_linha"


    // $ANTLR start "rulestruct_declarator_list_linha"
    // InternalAnsic.g:2010:1: rulestruct_declarator_list_linha returns [EObject current=null] : ( () (otherlv_1= ',' ( (lv_struct_declarator_2_0= rulestruct_declarator ) ) ( (lv_struct_declarator_list_linha_3_0= rulestruct_declarator_list_linha ) ) )? ) ;
    public final EObject rulestruct_declarator_list_linha() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_struct_declarator_2_0 = null;

        EObject lv_struct_declarator_list_linha_3_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:2016:2: ( ( () (otherlv_1= ',' ( (lv_struct_declarator_2_0= rulestruct_declarator ) ) ( (lv_struct_declarator_list_linha_3_0= rulestruct_declarator_list_linha ) ) )? ) )
            // InternalAnsic.g:2017:2: ( () (otherlv_1= ',' ( (lv_struct_declarator_2_0= rulestruct_declarator ) ) ( (lv_struct_declarator_list_linha_3_0= rulestruct_declarator_list_linha ) ) )? )
            {
            // InternalAnsic.g:2017:2: ( () (otherlv_1= ',' ( (lv_struct_declarator_2_0= rulestruct_declarator ) ) ( (lv_struct_declarator_list_linha_3_0= rulestruct_declarator_list_linha ) ) )? )
            // InternalAnsic.g:2018:3: () (otherlv_1= ',' ( (lv_struct_declarator_2_0= rulestruct_declarator ) ) ( (lv_struct_declarator_list_linha_3_0= rulestruct_declarator_list_linha ) ) )?
            {
            // InternalAnsic.g:2018:3: ()
            // InternalAnsic.g:2019:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getStruct_declarator_list_linhaAccess().getStructDeclaratorListLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:2028:3: (otherlv_1= ',' ( (lv_struct_declarator_2_0= rulestruct_declarator ) ) ( (lv_struct_declarator_list_linha_3_0= rulestruct_declarator_list_linha ) ) )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==56) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // InternalAnsic.g:2029:4: otherlv_1= ',' ( (lv_struct_declarator_2_0= rulestruct_declarator ) ) ( (lv_struct_declarator_list_linha_3_0= rulestruct_declarator_list_linha ) )
                    {
                    otherlv_1=(Token)match(input,56,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getStruct_declarator_list_linhaAccess().getCommaKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:2033:4: ( (lv_struct_declarator_2_0= rulestruct_declarator ) )
                    // InternalAnsic.g:2034:5: (lv_struct_declarator_2_0= rulestruct_declarator )
                    {
                    // InternalAnsic.g:2034:5: (lv_struct_declarator_2_0= rulestruct_declarator )
                    // InternalAnsic.g:2035:6: lv_struct_declarator_2_0= rulestruct_declarator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStruct_declarator_list_linhaAccess().getStruct_declaratorStruct_declaratorParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_struct_declarator_2_0=rulestruct_declarator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStruct_declarator_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"struct_declarator",
                      							lv_struct_declarator_2_0,
                      							"org.xtext.example.Ansic.struct_declarator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:2052:4: ( (lv_struct_declarator_list_linha_3_0= rulestruct_declarator_list_linha ) )
                    // InternalAnsic.g:2053:5: (lv_struct_declarator_list_linha_3_0= rulestruct_declarator_list_linha )
                    {
                    // InternalAnsic.g:2053:5: (lv_struct_declarator_list_linha_3_0= rulestruct_declarator_list_linha )
                    // InternalAnsic.g:2054:6: lv_struct_declarator_list_linha_3_0= rulestruct_declarator_list_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStruct_declarator_list_linhaAccess().getStruct_declarator_list_linhaStruct_declarator_list_linhaParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_struct_declarator_list_linha_3_0=rulestruct_declarator_list_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStruct_declarator_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"struct_declarator_list_linha",
                      							lv_struct_declarator_list_linha_3_0,
                      							"org.xtext.example.Ansic.struct_declarator_list_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulestruct_declarator_list_linha"


    // $ANTLR start "entryRulestruct_declarator"
    // InternalAnsic.g:2076:1: entryRulestruct_declarator returns [EObject current=null] : iv_rulestruct_declarator= rulestruct_declarator EOF ;
    public final EObject entryRulestruct_declarator() throws RecognitionException {
        EObject current = null;

        EObject iv_rulestruct_declarator = null;


        try {
            // InternalAnsic.g:2076:58: (iv_rulestruct_declarator= rulestruct_declarator EOF )
            // InternalAnsic.g:2077:2: iv_rulestruct_declarator= rulestruct_declarator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStruct_declaratorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulestruct_declarator=rulestruct_declarator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulestruct_declarator; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulestruct_declarator"


    // $ANTLR start "rulestruct_declarator"
    // InternalAnsic.g:2083:1: rulestruct_declarator returns [EObject current=null] : ( (otherlv_0= ':' ( (lv_constant_expression_1_0= ruleconstant_expression ) ) ) | ( ( (lv_declarator_2_0= ruledeclarator ) ) otherlv_3= ':' ( (lv_constant_expression_4_0= ruleconstant_expression ) ) ) | ( (lv_declarator_5_0= ruledeclarator ) ) ) ;
    public final EObject rulestruct_declarator() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        EObject lv_constant_expression_1_0 = null;

        EObject lv_declarator_2_0 = null;

        EObject lv_constant_expression_4_0 = null;

        EObject lv_declarator_5_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:2089:2: ( ( (otherlv_0= ':' ( (lv_constant_expression_1_0= ruleconstant_expression ) ) ) | ( ( (lv_declarator_2_0= ruledeclarator ) ) otherlv_3= ':' ( (lv_constant_expression_4_0= ruleconstant_expression ) ) ) | ( (lv_declarator_5_0= ruledeclarator ) ) ) )
            // InternalAnsic.g:2090:2: ( (otherlv_0= ':' ( (lv_constant_expression_1_0= ruleconstant_expression ) ) ) | ( ( (lv_declarator_2_0= ruledeclarator ) ) otherlv_3= ':' ( (lv_constant_expression_4_0= ruleconstant_expression ) ) ) | ( (lv_declarator_5_0= ruledeclarator ) ) )
            {
            // InternalAnsic.g:2090:2: ( (otherlv_0= ':' ( (lv_constant_expression_1_0= ruleconstant_expression ) ) ) | ( ( (lv_declarator_2_0= ruledeclarator ) ) otherlv_3= ':' ( (lv_constant_expression_4_0= ruleconstant_expression ) ) ) | ( (lv_declarator_5_0= ruledeclarator ) ) )
            int alt16=3;
            switch ( input.LA(1) ) {
            case 61:
                {
                alt16=1;
                }
                break;
            case 67:
                {
                int LA16_2 = input.LA(2);

                if ( (synpred45_InternalAnsic()) ) {
                    alt16=2;
                }
                else if ( (true) ) {
                    alt16=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 16, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_IDZ:
                {
                int LA16_3 = input.LA(2);

                if ( (synpred45_InternalAnsic()) ) {
                    alt16=2;
                }
                else if ( (true) ) {
                    alt16=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 16, 3, input);

                    throw nvae;
                }
                }
                break;
            case 34:
                {
                int LA16_4 = input.LA(2);

                if ( (synpred45_InternalAnsic()) ) {
                    alt16=2;
                }
                else if ( (true) ) {
                    alt16=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 16, 4, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }

            switch (alt16) {
                case 1 :
                    // InternalAnsic.g:2091:3: (otherlv_0= ':' ( (lv_constant_expression_1_0= ruleconstant_expression ) ) )
                    {
                    // InternalAnsic.g:2091:3: (otherlv_0= ':' ( (lv_constant_expression_1_0= ruleconstant_expression ) ) )
                    // InternalAnsic.g:2092:4: otherlv_0= ':' ( (lv_constant_expression_1_0= ruleconstant_expression ) )
                    {
                    otherlv_0=(Token)match(input,61,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getStruct_declaratorAccess().getColonKeyword_0_0());
                      			
                    }
                    // InternalAnsic.g:2096:4: ( (lv_constant_expression_1_0= ruleconstant_expression ) )
                    // InternalAnsic.g:2097:5: (lv_constant_expression_1_0= ruleconstant_expression )
                    {
                    // InternalAnsic.g:2097:5: (lv_constant_expression_1_0= ruleconstant_expression )
                    // InternalAnsic.g:2098:6: lv_constant_expression_1_0= ruleconstant_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStruct_declaratorAccess().getConstant_expressionConstant_expressionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_constant_expression_1_0=ruleconstant_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStruct_declaratorRule());
                      						}
                      						set(
                      							current,
                      							"constant_expression",
                      							lv_constant_expression_1_0,
                      							"org.xtext.example.Ansic.constant_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:2117:3: ( ( (lv_declarator_2_0= ruledeclarator ) ) otherlv_3= ':' ( (lv_constant_expression_4_0= ruleconstant_expression ) ) )
                    {
                    // InternalAnsic.g:2117:3: ( ( (lv_declarator_2_0= ruledeclarator ) ) otherlv_3= ':' ( (lv_constant_expression_4_0= ruleconstant_expression ) ) )
                    // InternalAnsic.g:2118:4: ( (lv_declarator_2_0= ruledeclarator ) ) otherlv_3= ':' ( (lv_constant_expression_4_0= ruleconstant_expression ) )
                    {
                    // InternalAnsic.g:2118:4: ( (lv_declarator_2_0= ruledeclarator ) )
                    // InternalAnsic.g:2119:5: (lv_declarator_2_0= ruledeclarator )
                    {
                    // InternalAnsic.g:2119:5: (lv_declarator_2_0= ruledeclarator )
                    // InternalAnsic.g:2120:6: lv_declarator_2_0= ruledeclarator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStruct_declaratorAccess().getDeclaratorDeclaratorParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_16);
                    lv_declarator_2_0=ruledeclarator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStruct_declaratorRule());
                      						}
                      						set(
                      							current,
                      							"declarator",
                      							lv_declarator_2_0,
                      							"org.xtext.example.Ansic.declarator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,61,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getStruct_declaratorAccess().getColonKeyword_1_1());
                      			
                    }
                    // InternalAnsic.g:2141:4: ( (lv_constant_expression_4_0= ruleconstant_expression ) )
                    // InternalAnsic.g:2142:5: (lv_constant_expression_4_0= ruleconstant_expression )
                    {
                    // InternalAnsic.g:2142:5: (lv_constant_expression_4_0= ruleconstant_expression )
                    // InternalAnsic.g:2143:6: lv_constant_expression_4_0= ruleconstant_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStruct_declaratorAccess().getConstant_expressionConstant_expressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_constant_expression_4_0=ruleconstant_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStruct_declaratorRule());
                      						}
                      						set(
                      							current,
                      							"constant_expression",
                      							lv_constant_expression_4_0,
                      							"org.xtext.example.Ansic.constant_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:2162:3: ( (lv_declarator_5_0= ruledeclarator ) )
                    {
                    // InternalAnsic.g:2162:3: ( (lv_declarator_5_0= ruledeclarator ) )
                    // InternalAnsic.g:2163:4: (lv_declarator_5_0= ruledeclarator )
                    {
                    // InternalAnsic.g:2163:4: (lv_declarator_5_0= ruledeclarator )
                    // InternalAnsic.g:2164:5: lv_declarator_5_0= ruledeclarator
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStruct_declaratorAccess().getDeclaratorDeclaratorParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_declarator_5_0=ruledeclarator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStruct_declaratorRule());
                      					}
                      					set(
                      						current,
                      						"declarator",
                      						lv_declarator_5_0,
                      						"org.xtext.example.Ansic.declarator");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulestruct_declarator"


    // $ANTLR start "entryRulespecifier_qualifier_list"
    // InternalAnsic.g:2185:1: entryRulespecifier_qualifier_list returns [EObject current=null] : iv_rulespecifier_qualifier_list= rulespecifier_qualifier_list EOF ;
    public final EObject entryRulespecifier_qualifier_list() throws RecognitionException {
        EObject current = null;

        EObject iv_rulespecifier_qualifier_list = null;


        try {
            // InternalAnsic.g:2185:65: (iv_rulespecifier_qualifier_list= rulespecifier_qualifier_list EOF )
            // InternalAnsic.g:2186:2: iv_rulespecifier_qualifier_list= rulespecifier_qualifier_list EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSpecifier_qualifier_listRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulespecifier_qualifier_list=rulespecifier_qualifier_list();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulespecifier_qualifier_list; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulespecifier_qualifier_list"


    // $ANTLR start "rulespecifier_qualifier_list"
    // InternalAnsic.g:2192:1: rulespecifier_qualifier_list returns [EObject current=null] : ( ( ( (lv_type_specifier_0_0= ruletype_specifier ) ) ( (lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list ) ) ) | ( (lv_type_specifier_2_0= ruletype_specifier ) ) | ( ( (lv_type_qualifier_3_0= ruletype_qualifier ) ) ( (lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list ) ) ) | ( (lv_type_qualifier_5_0= ruletype_qualifier ) ) ) ;
    public final EObject rulespecifier_qualifier_list() throws RecognitionException {
        EObject current = null;

        EObject lv_type_specifier_0_0 = null;

        EObject lv_specifier_qualifier_list_1_0 = null;

        EObject lv_type_specifier_2_0 = null;

        EObject lv_type_qualifier_3_0 = null;

        EObject lv_specifier_qualifier_list_4_0 = null;

        EObject lv_type_qualifier_5_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:2198:2: ( ( ( ( (lv_type_specifier_0_0= ruletype_specifier ) ) ( (lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list ) ) ) | ( (lv_type_specifier_2_0= ruletype_specifier ) ) | ( ( (lv_type_qualifier_3_0= ruletype_qualifier ) ) ( (lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list ) ) ) | ( (lv_type_qualifier_5_0= ruletype_qualifier ) ) ) )
            // InternalAnsic.g:2199:2: ( ( ( (lv_type_specifier_0_0= ruletype_specifier ) ) ( (lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list ) ) ) | ( (lv_type_specifier_2_0= ruletype_specifier ) ) | ( ( (lv_type_qualifier_3_0= ruletype_qualifier ) ) ( (lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list ) ) ) | ( (lv_type_qualifier_5_0= ruletype_qualifier ) ) )
            {
            // InternalAnsic.g:2199:2: ( ( ( (lv_type_specifier_0_0= ruletype_specifier ) ) ( (lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list ) ) ) | ( (lv_type_specifier_2_0= ruletype_specifier ) ) | ( ( (lv_type_qualifier_3_0= ruletype_qualifier ) ) ( (lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list ) ) ) | ( (lv_type_qualifier_5_0= ruletype_qualifier ) ) )
            int alt17=4;
            alt17 = dfa17.predict(input);
            switch (alt17) {
                case 1 :
                    // InternalAnsic.g:2200:3: ( ( (lv_type_specifier_0_0= ruletype_specifier ) ) ( (lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list ) ) )
                    {
                    // InternalAnsic.g:2200:3: ( ( (lv_type_specifier_0_0= ruletype_specifier ) ) ( (lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list ) ) )
                    // InternalAnsic.g:2201:4: ( (lv_type_specifier_0_0= ruletype_specifier ) ) ( (lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list ) )
                    {
                    // InternalAnsic.g:2201:4: ( (lv_type_specifier_0_0= ruletype_specifier ) )
                    // InternalAnsic.g:2202:5: (lv_type_specifier_0_0= ruletype_specifier )
                    {
                    // InternalAnsic.g:2202:5: (lv_type_specifier_0_0= ruletype_specifier )
                    // InternalAnsic.g:2203:6: lv_type_specifier_0_0= ruletype_specifier
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSpecifier_qualifier_listAccess().getType_specifierType_specifierParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_6);
                    lv_type_specifier_0_0=ruletype_specifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSpecifier_qualifier_listRule());
                      						}
                      						set(
                      							current,
                      							"type_specifier",
                      							lv_type_specifier_0_0,
                      							"org.xtext.example.Ansic.type_specifier");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:2220:4: ( (lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list ) )
                    // InternalAnsic.g:2221:5: (lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list )
                    {
                    // InternalAnsic.g:2221:5: (lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list )
                    // InternalAnsic.g:2222:6: lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSpecifier_qualifier_listAccess().getSpecifier_qualifier_listSpecifier_qualifier_listParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_specifier_qualifier_list_1_0=rulespecifier_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSpecifier_qualifier_listRule());
                      						}
                      						set(
                      							current,
                      							"specifier_qualifier_list",
                      							lv_specifier_qualifier_list_1_0,
                      							"org.xtext.example.Ansic.specifier_qualifier_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:2241:3: ( (lv_type_specifier_2_0= ruletype_specifier ) )
                    {
                    // InternalAnsic.g:2241:3: ( (lv_type_specifier_2_0= ruletype_specifier ) )
                    // InternalAnsic.g:2242:4: (lv_type_specifier_2_0= ruletype_specifier )
                    {
                    // InternalAnsic.g:2242:4: (lv_type_specifier_2_0= ruletype_specifier )
                    // InternalAnsic.g:2243:5: lv_type_specifier_2_0= ruletype_specifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSpecifier_qualifier_listAccess().getType_specifierType_specifierParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_specifier_2_0=ruletype_specifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSpecifier_qualifier_listRule());
                      					}
                      					set(
                      						current,
                      						"type_specifier",
                      						lv_type_specifier_2_0,
                      						"org.xtext.example.Ansic.type_specifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:2261:3: ( ( (lv_type_qualifier_3_0= ruletype_qualifier ) ) ( (lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list ) ) )
                    {
                    // InternalAnsic.g:2261:3: ( ( (lv_type_qualifier_3_0= ruletype_qualifier ) ) ( (lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list ) ) )
                    // InternalAnsic.g:2262:4: ( (lv_type_qualifier_3_0= ruletype_qualifier ) ) ( (lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list ) )
                    {
                    // InternalAnsic.g:2262:4: ( (lv_type_qualifier_3_0= ruletype_qualifier ) )
                    // InternalAnsic.g:2263:5: (lv_type_qualifier_3_0= ruletype_qualifier )
                    {
                    // InternalAnsic.g:2263:5: (lv_type_qualifier_3_0= ruletype_qualifier )
                    // InternalAnsic.g:2264:6: lv_type_qualifier_3_0= ruletype_qualifier
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSpecifier_qualifier_listAccess().getType_qualifierType_qualifierParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_6);
                    lv_type_qualifier_3_0=ruletype_qualifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSpecifier_qualifier_listRule());
                      						}
                      						set(
                      							current,
                      							"type_qualifier",
                      							lv_type_qualifier_3_0,
                      							"org.xtext.example.Ansic.type_qualifier");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:2281:4: ( (lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list ) )
                    // InternalAnsic.g:2282:5: (lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list )
                    {
                    // InternalAnsic.g:2282:5: (lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list )
                    // InternalAnsic.g:2283:6: lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSpecifier_qualifier_listAccess().getSpecifier_qualifier_listSpecifier_qualifier_listParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_specifier_qualifier_list_4_0=rulespecifier_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSpecifier_qualifier_listRule());
                      						}
                      						set(
                      							current,
                      							"specifier_qualifier_list",
                      							lv_specifier_qualifier_list_4_0,
                      							"org.xtext.example.Ansic.specifier_qualifier_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalAnsic.g:2302:3: ( (lv_type_qualifier_5_0= ruletype_qualifier ) )
                    {
                    // InternalAnsic.g:2302:3: ( (lv_type_qualifier_5_0= ruletype_qualifier ) )
                    // InternalAnsic.g:2303:4: (lv_type_qualifier_5_0= ruletype_qualifier )
                    {
                    // InternalAnsic.g:2303:4: (lv_type_qualifier_5_0= ruletype_qualifier )
                    // InternalAnsic.g:2304:5: lv_type_qualifier_5_0= ruletype_qualifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSpecifier_qualifier_listAccess().getType_qualifierType_qualifierParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_qualifier_5_0=ruletype_qualifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSpecifier_qualifier_listRule());
                      					}
                      					set(
                      						current,
                      						"type_qualifier",
                      						lv_type_qualifier_5_0,
                      						"org.xtext.example.Ansic.type_qualifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulespecifier_qualifier_list"


    // $ANTLR start "entryRulestorage_class_specifier"
    // InternalAnsic.g:2325:1: entryRulestorage_class_specifier returns [String current=null] : iv_rulestorage_class_specifier= rulestorage_class_specifier EOF ;
    public final String entryRulestorage_class_specifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulestorage_class_specifier = null;


        try {
            // InternalAnsic.g:2325:63: (iv_rulestorage_class_specifier= rulestorage_class_specifier EOF )
            // InternalAnsic.g:2326:2: iv_rulestorage_class_specifier= rulestorage_class_specifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStorage_class_specifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulestorage_class_specifier=rulestorage_class_specifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulestorage_class_specifier.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulestorage_class_specifier"


    // $ANTLR start "rulestorage_class_specifier"
    // InternalAnsic.g:2332:1: rulestorage_class_specifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'typedef' | kw= 'extern' | kw= 'static' | kw= '_Thread_local' | kw= 'auto' | kw= 'register' ) ;
    public final AntlrDatatypeRuleToken rulestorage_class_specifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalAnsic.g:2338:2: ( (kw= 'typedef' | kw= 'extern' | kw= 'static' | kw= '_Thread_local' | kw= 'auto' | kw= 'register' ) )
            // InternalAnsic.g:2339:2: (kw= 'typedef' | kw= 'extern' | kw= 'static' | kw= '_Thread_local' | kw= 'auto' | kw= 'register' )
            {
            // InternalAnsic.g:2339:2: (kw= 'typedef' | kw= 'extern' | kw= 'static' | kw= '_Thread_local' | kw= 'auto' | kw= 'register' )
            int alt18=6;
            switch ( input.LA(1) ) {
            case 52:
                {
                alt18=1;
                }
                break;
            case 62:
                {
                alt18=2;
                }
                break;
            case 63:
                {
                alt18=3;
                }
                break;
            case 64:
                {
                alt18=4;
                }
                break;
            case 65:
                {
                alt18=5;
                }
                break;
            case 66:
                {
                alt18=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }

            switch (alt18) {
                case 1 :
                    // InternalAnsic.g:2340:3: kw= 'typedef'
                    {
                    kw=(Token)match(input,52,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getStorage_class_specifierAccess().getTypedefKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsic.g:2346:3: kw= 'extern'
                    {
                    kw=(Token)match(input,62,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getStorage_class_specifierAccess().getExternKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAnsic.g:2352:3: kw= 'static'
                    {
                    kw=(Token)match(input,63,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getStorage_class_specifierAccess().getStaticKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAnsic.g:2358:3: kw= '_Thread_local'
                    {
                    kw=(Token)match(input,64,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getStorage_class_specifierAccess().get_Thread_localKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalAnsic.g:2364:3: kw= 'auto'
                    {
                    kw=(Token)match(input,65,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getStorage_class_specifierAccess().getAutoKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalAnsic.g:2370:3: kw= 'register'
                    {
                    kw=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getStorage_class_specifierAccess().getRegisterKeyword_5());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulestorage_class_specifier"


    // $ANTLR start "entryRuledeclaration"
    // InternalAnsic.g:2379:1: entryRuledeclaration returns [EObject current=null] : iv_ruledeclaration= ruledeclaration EOF ;
    public final EObject entryRuledeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledeclaration = null;


        try {
            // InternalAnsic.g:2379:52: (iv_ruledeclaration= ruledeclaration EOF )
            // InternalAnsic.g:2380:2: iv_ruledeclaration= ruledeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledeclaration=ruledeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledeclaration"


    // $ANTLR start "ruledeclaration"
    // InternalAnsic.g:2386:1: ruledeclaration returns [EObject current=null] : ( ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) otherlv_1= ';' ) | ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_init_declarator_list_3_0= ruleinit_declarator_list ) ) otherlv_4= ';' ) | ( (lv_static_assert_declaration_5_0= rulestatic_assert_declaration ) ) ) ;
    public final EObject ruledeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        EObject lv_declaration_specifiers_0_0 = null;

        EObject lv_declaration_specifiers_2_0 = null;

        EObject lv_init_declarator_list_3_0 = null;

        EObject lv_static_assert_declaration_5_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:2392:2: ( ( ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) otherlv_1= ';' ) | ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_init_declarator_list_3_0= ruleinit_declarator_list ) ) otherlv_4= ';' ) | ( (lv_static_assert_declaration_5_0= rulestatic_assert_declaration ) ) ) )
            // InternalAnsic.g:2393:2: ( ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) otherlv_1= ';' ) | ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_init_declarator_list_3_0= ruleinit_declarator_list ) ) otherlv_4= ';' ) | ( (lv_static_assert_declaration_5_0= rulestatic_assert_declaration ) ) )
            {
            // InternalAnsic.g:2393:2: ( ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) otherlv_1= ';' ) | ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_init_declarator_list_3_0= ruleinit_declarator_list ) ) otherlv_4= ';' ) | ( (lv_static_assert_declaration_5_0= rulestatic_assert_declaration ) ) )
            int alt19=3;
            alt19 = dfa19.predict(input);
            switch (alt19) {
                case 1 :
                    // InternalAnsic.g:2394:3: ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) otherlv_1= ';' )
                    {
                    // InternalAnsic.g:2394:3: ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) otherlv_1= ';' )
                    // InternalAnsic.g:2395:4: ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) otherlv_1= ';'
                    {
                    // InternalAnsic.g:2395:4: ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) )
                    // InternalAnsic.g:2396:5: (lv_declaration_specifiers_0_0= ruledeclaration_specifiers )
                    {
                    // InternalAnsic.g:2396:5: (lv_declaration_specifiers_0_0= ruledeclaration_specifiers )
                    // InternalAnsic.g:2397:6: lv_declaration_specifiers_0_0= ruledeclaration_specifiers
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDeclarationAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_14);
                    lv_declaration_specifiers_0_0=ruledeclaration_specifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"declaration_specifiers",
                      							lv_declaration_specifiers_0_0,
                      							"org.xtext.example.Ansic.declaration_specifiers");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getDeclarationAccess().getSemicolonKeyword_0_1());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:2420:3: ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_init_declarator_list_3_0= ruleinit_declarator_list ) ) otherlv_4= ';' )
                    {
                    // InternalAnsic.g:2420:3: ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_init_declarator_list_3_0= ruleinit_declarator_list ) ) otherlv_4= ';' )
                    // InternalAnsic.g:2421:4: ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_init_declarator_list_3_0= ruleinit_declarator_list ) ) otherlv_4= ';'
                    {
                    // InternalAnsic.g:2421:4: ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) )
                    // InternalAnsic.g:2422:5: (lv_declaration_specifiers_2_0= ruledeclaration_specifiers )
                    {
                    // InternalAnsic.g:2422:5: (lv_declaration_specifiers_2_0= ruledeclaration_specifiers )
                    // InternalAnsic.g:2423:6: lv_declaration_specifiers_2_0= ruledeclaration_specifiers
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDeclarationAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    lv_declaration_specifiers_2_0=ruledeclaration_specifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"declaration_specifiers",
                      							lv_declaration_specifiers_2_0,
                      							"org.xtext.example.Ansic.declaration_specifiers");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:2440:4: ( (lv_init_declarator_list_3_0= ruleinit_declarator_list ) )
                    // InternalAnsic.g:2441:5: (lv_init_declarator_list_3_0= ruleinit_declarator_list )
                    {
                    // InternalAnsic.g:2441:5: (lv_init_declarator_list_3_0= ruleinit_declarator_list )
                    // InternalAnsic.g:2442:6: lv_init_declarator_list_3_0= ruleinit_declarator_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDeclarationAccess().getInit_declarator_listInit_declarator_listParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_14);
                    lv_init_declarator_list_3_0=ruleinit_declarator_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"init_declarator_list",
                      							lv_init_declarator_list_3_0,
                      							"org.xtext.example.Ansic.init_declarator_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getDeclarationAccess().getSemicolonKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:2465:3: ( (lv_static_assert_declaration_5_0= rulestatic_assert_declaration ) )
                    {
                    // InternalAnsic.g:2465:3: ( (lv_static_assert_declaration_5_0= rulestatic_assert_declaration ) )
                    // InternalAnsic.g:2466:4: (lv_static_assert_declaration_5_0= rulestatic_assert_declaration )
                    {
                    // InternalAnsic.g:2466:4: (lv_static_assert_declaration_5_0= rulestatic_assert_declaration )
                    // InternalAnsic.g:2467:5: lv_static_assert_declaration_5_0= rulestatic_assert_declaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDeclarationAccess().getStatic_assert_declarationStatic_assert_declarationParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_static_assert_declaration_5_0=rulestatic_assert_declaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"static_assert_declaration",
                      						lv_static_assert_declaration_5_0,
                      						"org.xtext.example.Ansic.static_assert_declaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledeclaration"


    // $ANTLR start "entryRulefunction_definition"
    // InternalAnsic.g:2488:1: entryRulefunction_definition returns [EObject current=null] : iv_rulefunction_definition= rulefunction_definition EOF ;
    public final EObject entryRulefunction_definition() throws RecognitionException {
        EObject current = null;

        EObject iv_rulefunction_definition = null;


        try {
            // InternalAnsic.g:2488:60: (iv_rulefunction_definition= rulefunction_definition EOF )
            // InternalAnsic.g:2489:2: iv_rulefunction_definition= rulefunction_definition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunction_definitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulefunction_definition=rulefunction_definition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulefunction_definition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulefunction_definition"


    // $ANTLR start "rulefunction_definition"
    // InternalAnsic.g:2495:1: rulefunction_definition returns [EObject current=null] : ( ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) ( (lv_declaration_list_2_0= ruledeclaration_list ) ) ( (lv_compound_statement_3_0= rulecompound_statement ) ) ) | ( ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) ( (lv_declarator_5_0= ruledeclarator ) ) ( (lv_compound_statement_6_0= rulecompound_statement ) ) ) ) ;
    public final EObject rulefunction_definition() throws RecognitionException {
        EObject current = null;

        EObject lv_declaration_specifiers_0_0 = null;

        EObject lv_declarator_1_0 = null;

        EObject lv_declaration_list_2_0 = null;

        EObject lv_compound_statement_3_0 = null;

        EObject lv_declaration_specifiers_4_0 = null;

        EObject lv_declarator_5_0 = null;

        EObject lv_compound_statement_6_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:2501:2: ( ( ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) ( (lv_declaration_list_2_0= ruledeclaration_list ) ) ( (lv_compound_statement_3_0= rulecompound_statement ) ) ) | ( ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) ( (lv_declarator_5_0= ruledeclarator ) ) ( (lv_compound_statement_6_0= rulecompound_statement ) ) ) ) )
            // InternalAnsic.g:2502:2: ( ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) ( (lv_declaration_list_2_0= ruledeclaration_list ) ) ( (lv_compound_statement_3_0= rulecompound_statement ) ) ) | ( ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) ( (lv_declarator_5_0= ruledeclarator ) ) ( (lv_compound_statement_6_0= rulecompound_statement ) ) ) )
            {
            // InternalAnsic.g:2502:2: ( ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) ( (lv_declaration_list_2_0= ruledeclaration_list ) ) ( (lv_compound_statement_3_0= rulecompound_statement ) ) ) | ( ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) ( (lv_declarator_5_0= ruledeclarator ) ) ( (lv_compound_statement_6_0= rulecompound_statement ) ) ) )
            int alt20=2;
            alt20 = dfa20.predict(input);
            switch (alt20) {
                case 1 :
                    // InternalAnsic.g:2503:3: ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) ( (lv_declaration_list_2_0= ruledeclaration_list ) ) ( (lv_compound_statement_3_0= rulecompound_statement ) ) )
                    {
                    // InternalAnsic.g:2503:3: ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) ( (lv_declaration_list_2_0= ruledeclaration_list ) ) ( (lv_compound_statement_3_0= rulecompound_statement ) ) )
                    // InternalAnsic.g:2504:4: ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) ( (lv_declaration_list_2_0= ruledeclaration_list ) ) ( (lv_compound_statement_3_0= rulecompound_statement ) )
                    {
                    // InternalAnsic.g:2504:4: ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) )
                    // InternalAnsic.g:2505:5: (lv_declaration_specifiers_0_0= ruledeclaration_specifiers )
                    {
                    // InternalAnsic.g:2505:5: (lv_declaration_specifiers_0_0= ruledeclaration_specifiers )
                    // InternalAnsic.g:2506:6: lv_declaration_specifiers_0_0= ruledeclaration_specifiers
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunction_definitionAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    lv_declaration_specifiers_0_0=ruledeclaration_specifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunction_definitionRule());
                      						}
                      						add(
                      							current,
                      							"declaration_specifiers",
                      							lv_declaration_specifiers_0_0,
                      							"org.xtext.example.Ansic.declaration_specifiers");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:2523:4: ( (lv_declarator_1_0= ruledeclarator ) )
                    // InternalAnsic.g:2524:5: (lv_declarator_1_0= ruledeclarator )
                    {
                    // InternalAnsic.g:2524:5: (lv_declarator_1_0= ruledeclarator )
                    // InternalAnsic.g:2525:6: lv_declarator_1_0= ruledeclarator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunction_definitionAccess().getDeclaratorDeclaratorParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_3);
                    lv_declarator_1_0=ruledeclarator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunction_definitionRule());
                      						}
                      						set(
                      							current,
                      							"declarator",
                      							lv_declarator_1_0,
                      							"org.xtext.example.Ansic.declarator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:2542:4: ( (lv_declaration_list_2_0= ruledeclaration_list ) )
                    // InternalAnsic.g:2543:5: (lv_declaration_list_2_0= ruledeclaration_list )
                    {
                    // InternalAnsic.g:2543:5: (lv_declaration_list_2_0= ruledeclaration_list )
                    // InternalAnsic.g:2544:6: lv_declaration_list_2_0= ruledeclaration_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunction_definitionAccess().getDeclaration_listDeclaration_listParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    lv_declaration_list_2_0=ruledeclaration_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunction_definitionRule());
                      						}
                      						add(
                      							current,
                      							"declaration_list",
                      							lv_declaration_list_2_0,
                      							"org.xtext.example.Ansic.declaration_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:2561:4: ( (lv_compound_statement_3_0= rulecompound_statement ) )
                    // InternalAnsic.g:2562:5: (lv_compound_statement_3_0= rulecompound_statement )
                    {
                    // InternalAnsic.g:2562:5: (lv_compound_statement_3_0= rulecompound_statement )
                    // InternalAnsic.g:2563:6: lv_compound_statement_3_0= rulecompound_statement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunction_definitionAccess().getCompound_statementCompound_statementParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_compound_statement_3_0=rulecompound_statement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunction_definitionRule());
                      						}
                      						set(
                      							current,
                      							"compound_statement",
                      							lv_compound_statement_3_0,
                      							"org.xtext.example.Ansic.compound_statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:2582:3: ( ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) ( (lv_declarator_5_0= ruledeclarator ) ) ( (lv_compound_statement_6_0= rulecompound_statement ) ) )
                    {
                    // InternalAnsic.g:2582:3: ( ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) ( (lv_declarator_5_0= ruledeclarator ) ) ( (lv_compound_statement_6_0= rulecompound_statement ) ) )
                    // InternalAnsic.g:2583:4: ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) ( (lv_declarator_5_0= ruledeclarator ) ) ( (lv_compound_statement_6_0= rulecompound_statement ) )
                    {
                    // InternalAnsic.g:2583:4: ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) )
                    // InternalAnsic.g:2584:5: (lv_declaration_specifiers_4_0= ruledeclaration_specifiers )
                    {
                    // InternalAnsic.g:2584:5: (lv_declaration_specifiers_4_0= ruledeclaration_specifiers )
                    // InternalAnsic.g:2585:6: lv_declaration_specifiers_4_0= ruledeclaration_specifiers
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunction_definitionAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    lv_declaration_specifiers_4_0=ruledeclaration_specifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunction_definitionRule());
                      						}
                      						add(
                      							current,
                      							"declaration_specifiers",
                      							lv_declaration_specifiers_4_0,
                      							"org.xtext.example.Ansic.declaration_specifiers");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:2602:4: ( (lv_declarator_5_0= ruledeclarator ) )
                    // InternalAnsic.g:2603:5: (lv_declarator_5_0= ruledeclarator )
                    {
                    // InternalAnsic.g:2603:5: (lv_declarator_5_0= ruledeclarator )
                    // InternalAnsic.g:2604:6: lv_declarator_5_0= ruledeclarator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunction_definitionAccess().getDeclaratorDeclaratorParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    lv_declarator_5_0=ruledeclarator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunction_definitionRule());
                      						}
                      						set(
                      							current,
                      							"declarator",
                      							lv_declarator_5_0,
                      							"org.xtext.example.Ansic.declarator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:2621:4: ( (lv_compound_statement_6_0= rulecompound_statement ) )
                    // InternalAnsic.g:2622:5: (lv_compound_statement_6_0= rulecompound_statement )
                    {
                    // InternalAnsic.g:2622:5: (lv_compound_statement_6_0= rulecompound_statement )
                    // InternalAnsic.g:2623:6: lv_compound_statement_6_0= rulecompound_statement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunction_definitionAccess().getCompound_statementCompound_statementParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_compound_statement_6_0=rulecompound_statement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunction_definitionRule());
                      						}
                      						set(
                      							current,
                      							"compound_statement",
                      							lv_compound_statement_6_0,
                      							"org.xtext.example.Ansic.compound_statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulefunction_definition"


    // $ANTLR start "entryRuledeclaration_list"
    // InternalAnsic.g:2645:1: entryRuledeclaration_list returns [EObject current=null] : iv_ruledeclaration_list= ruledeclaration_list EOF ;
    public final EObject entryRuledeclaration_list() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledeclaration_list = null;


        try {
            // InternalAnsic.g:2645:57: (iv_ruledeclaration_list= ruledeclaration_list EOF )
            // InternalAnsic.g:2646:2: iv_ruledeclaration_list= ruledeclaration_list EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclaration_listRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledeclaration_list=ruledeclaration_list();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledeclaration_list; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledeclaration_list"


    // $ANTLR start "ruledeclaration_list"
    // InternalAnsic.g:2652:1: ruledeclaration_list returns [EObject current=null] : ( ( (lv_declaration_0_0= ruledeclaration ) ) ( (lv_declaration_list_linha_1_0= ruledeclaration_list_linha ) ) ) ;
    public final EObject ruledeclaration_list() throws RecognitionException {
        EObject current = null;

        EObject lv_declaration_0_0 = null;

        EObject lv_declaration_list_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:2658:2: ( ( ( (lv_declaration_0_0= ruledeclaration ) ) ( (lv_declaration_list_linha_1_0= ruledeclaration_list_linha ) ) ) )
            // InternalAnsic.g:2659:2: ( ( (lv_declaration_0_0= ruledeclaration ) ) ( (lv_declaration_list_linha_1_0= ruledeclaration_list_linha ) ) )
            {
            // InternalAnsic.g:2659:2: ( ( (lv_declaration_0_0= ruledeclaration ) ) ( (lv_declaration_list_linha_1_0= ruledeclaration_list_linha ) ) )
            // InternalAnsic.g:2660:3: ( (lv_declaration_0_0= ruledeclaration ) ) ( (lv_declaration_list_linha_1_0= ruledeclaration_list_linha ) )
            {
            // InternalAnsic.g:2660:3: ( (lv_declaration_0_0= ruledeclaration ) )
            // InternalAnsic.g:2661:4: (lv_declaration_0_0= ruledeclaration )
            {
            // InternalAnsic.g:2661:4: (lv_declaration_0_0= ruledeclaration )
            // InternalAnsic.g:2662:5: lv_declaration_0_0= ruledeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDeclaration_listAccess().getDeclarationDeclarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_declaration_0_0=ruledeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDeclaration_listRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_0_0,
              						"org.xtext.example.Ansic.declaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:2679:3: ( (lv_declaration_list_linha_1_0= ruledeclaration_list_linha ) )
            // InternalAnsic.g:2680:4: (lv_declaration_list_linha_1_0= ruledeclaration_list_linha )
            {
            // InternalAnsic.g:2680:4: (lv_declaration_list_linha_1_0= ruledeclaration_list_linha )
            // InternalAnsic.g:2681:5: lv_declaration_list_linha_1_0= ruledeclaration_list_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDeclaration_listAccess().getDeclaration_list_linhaDeclaration_list_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_declaration_list_linha_1_0=ruledeclaration_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDeclaration_listRule());
              					}
              					set(
              						current,
              						"declaration_list_linha",
              						lv_declaration_list_linha_1_0,
              						"org.xtext.example.Ansic.declaration_list_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledeclaration_list"


    // $ANTLR start "entryRuledeclaration_list_linha"
    // InternalAnsic.g:2702:1: entryRuledeclaration_list_linha returns [EObject current=null] : iv_ruledeclaration_list_linha= ruledeclaration_list_linha EOF ;
    public final EObject entryRuledeclaration_list_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledeclaration_list_linha = null;


        try {
            // InternalAnsic.g:2702:63: (iv_ruledeclaration_list_linha= ruledeclaration_list_linha EOF )
            // InternalAnsic.g:2703:2: iv_ruledeclaration_list_linha= ruledeclaration_list_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclaration_list_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledeclaration_list_linha=ruledeclaration_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledeclaration_list_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledeclaration_list_linha"


    // $ANTLR start "ruledeclaration_list_linha"
    // InternalAnsic.g:2709:1: ruledeclaration_list_linha returns [EObject current=null] : ( () ( ( (lv_declaration_1_0= ruledeclaration ) ) ( (lv_declaration_list_linha_2_0= ruledeclaration_list_linha ) ) )? ) ;
    public final EObject ruledeclaration_list_linha() throws RecognitionException {
        EObject current = null;

        EObject lv_declaration_1_0 = null;

        EObject lv_declaration_list_linha_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:2715:2: ( ( () ( ( (lv_declaration_1_0= ruledeclaration ) ) ( (lv_declaration_list_linha_2_0= ruledeclaration_list_linha ) ) )? ) )
            // InternalAnsic.g:2716:2: ( () ( ( (lv_declaration_1_0= ruledeclaration ) ) ( (lv_declaration_list_linha_2_0= ruledeclaration_list_linha ) ) )? )
            {
            // InternalAnsic.g:2716:2: ( () ( ( (lv_declaration_1_0= ruledeclaration ) ) ( (lv_declaration_list_linha_2_0= ruledeclaration_list_linha ) ) )? )
            // InternalAnsic.g:2717:3: () ( ( (lv_declaration_1_0= ruledeclaration ) ) ( (lv_declaration_list_linha_2_0= ruledeclaration_list_linha ) ) )?
            {
            // InternalAnsic.g:2717:3: ()
            // InternalAnsic.g:2718:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDeclaration_list_linhaAccess().getDeclarationListLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:2727:3: ( ( (lv_declaration_1_0= ruledeclaration ) ) ( (lv_declaration_list_linha_2_0= ruledeclaration_list_linha ) ) )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( ((LA21_0>=31 && LA21_0<=33)||(LA21_0>=36 && LA21_0<=53)||(LA21_0>=58 && LA21_0<=59)||(LA21_0>=62 && LA21_0<=66)||LA21_0==74) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // InternalAnsic.g:2728:4: ( (lv_declaration_1_0= ruledeclaration ) ) ( (lv_declaration_list_linha_2_0= ruledeclaration_list_linha ) )
                    {
                    // InternalAnsic.g:2728:4: ( (lv_declaration_1_0= ruledeclaration ) )
                    // InternalAnsic.g:2729:5: (lv_declaration_1_0= ruledeclaration )
                    {
                    // InternalAnsic.g:2729:5: (lv_declaration_1_0= ruledeclaration )
                    // InternalAnsic.g:2730:6: lv_declaration_1_0= ruledeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDeclaration_list_linhaAccess().getDeclarationDeclarationParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_3);
                    lv_declaration_1_0=ruledeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDeclaration_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"declaration",
                      							lv_declaration_1_0,
                      							"org.xtext.example.Ansic.declaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:2747:4: ( (lv_declaration_list_linha_2_0= ruledeclaration_list_linha ) )
                    // InternalAnsic.g:2748:5: (lv_declaration_list_linha_2_0= ruledeclaration_list_linha )
                    {
                    // InternalAnsic.g:2748:5: (lv_declaration_list_linha_2_0= ruledeclaration_list_linha )
                    // InternalAnsic.g:2749:6: lv_declaration_list_linha_2_0= ruledeclaration_list_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDeclaration_list_linhaAccess().getDeclaration_list_linhaDeclaration_list_linhaParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaration_list_linha_2_0=ruledeclaration_list_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDeclaration_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"declaration_list_linha",
                      							lv_declaration_list_linha_2_0,
                      							"org.xtext.example.Ansic.declaration_list_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledeclaration_list_linha"


    // $ANTLR start "entryRuledeclarator"
    // InternalAnsic.g:2771:1: entryRuledeclarator returns [EObject current=null] : iv_ruledeclarator= ruledeclarator EOF ;
    public final EObject entryRuledeclarator() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledeclarator = null;


        try {
            // InternalAnsic.g:2771:51: (iv_ruledeclarator= ruledeclarator EOF )
            // InternalAnsic.g:2772:2: iv_ruledeclarator= ruledeclarator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclaratorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledeclarator=ruledeclarator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledeclarator; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledeclarator"


    // $ANTLR start "ruledeclarator"
    // InternalAnsic.g:2778:1: ruledeclarator returns [EObject current=null] : ( ( ( (lv_pointer_0_0= rulepointer ) ) ( (lv_direct_declarator_1_0= ruledirect_declarator ) ) ) | ( (lv_direct_declarator_2_0= ruledirect_declarator ) ) ) ;
    public final EObject ruledeclarator() throws RecognitionException {
        EObject current = null;

        EObject lv_pointer_0_0 = null;

        EObject lv_direct_declarator_1_0 = null;

        EObject lv_direct_declarator_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:2784:2: ( ( ( ( (lv_pointer_0_0= rulepointer ) ) ( (lv_direct_declarator_1_0= ruledirect_declarator ) ) ) | ( (lv_direct_declarator_2_0= ruledirect_declarator ) ) ) )
            // InternalAnsic.g:2785:2: ( ( ( (lv_pointer_0_0= rulepointer ) ) ( (lv_direct_declarator_1_0= ruledirect_declarator ) ) ) | ( (lv_direct_declarator_2_0= ruledirect_declarator ) ) )
            {
            // InternalAnsic.g:2785:2: ( ( ( (lv_pointer_0_0= rulepointer ) ) ( (lv_direct_declarator_1_0= ruledirect_declarator ) ) ) | ( (lv_direct_declarator_2_0= ruledirect_declarator ) ) )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==67) ) {
                alt22=1;
            }
            else if ( (LA22_0==RULE_IDZ||LA22_0==34) ) {
                alt22=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1 :
                    // InternalAnsic.g:2786:3: ( ( (lv_pointer_0_0= rulepointer ) ) ( (lv_direct_declarator_1_0= ruledirect_declarator ) ) )
                    {
                    // InternalAnsic.g:2786:3: ( ( (lv_pointer_0_0= rulepointer ) ) ( (lv_direct_declarator_1_0= ruledirect_declarator ) ) )
                    // InternalAnsic.g:2787:4: ( (lv_pointer_0_0= rulepointer ) ) ( (lv_direct_declarator_1_0= ruledirect_declarator ) )
                    {
                    // InternalAnsic.g:2787:4: ( (lv_pointer_0_0= rulepointer ) )
                    // InternalAnsic.g:2788:5: (lv_pointer_0_0= rulepointer )
                    {
                    // InternalAnsic.g:2788:5: (lv_pointer_0_0= rulepointer )
                    // InternalAnsic.g:2789:6: lv_pointer_0_0= rulepointer
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDeclaratorAccess().getPointerPointerParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    lv_pointer_0_0=rulepointer();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDeclaratorRule());
                      						}
                      						set(
                      							current,
                      							"pointer",
                      							lv_pointer_0_0,
                      							"org.xtext.example.Ansic.pointer");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:2806:4: ( (lv_direct_declarator_1_0= ruledirect_declarator ) )
                    // InternalAnsic.g:2807:5: (lv_direct_declarator_1_0= ruledirect_declarator )
                    {
                    // InternalAnsic.g:2807:5: (lv_direct_declarator_1_0= ruledirect_declarator )
                    // InternalAnsic.g:2808:6: lv_direct_declarator_1_0= ruledirect_declarator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDeclaratorAccess().getDirect_declaratorDirect_declaratorParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_direct_declarator_1_0=ruledirect_declarator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDeclaratorRule());
                      						}
                      						set(
                      							current,
                      							"direct_declarator",
                      							lv_direct_declarator_1_0,
                      							"org.xtext.example.Ansic.direct_declarator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:2827:3: ( (lv_direct_declarator_2_0= ruledirect_declarator ) )
                    {
                    // InternalAnsic.g:2827:3: ( (lv_direct_declarator_2_0= ruledirect_declarator ) )
                    // InternalAnsic.g:2828:4: (lv_direct_declarator_2_0= ruledirect_declarator )
                    {
                    // InternalAnsic.g:2828:4: (lv_direct_declarator_2_0= ruledirect_declarator )
                    // InternalAnsic.g:2829:5: lv_direct_declarator_2_0= ruledirect_declarator
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDeclaratorAccess().getDirect_declaratorDirect_declaratorParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_direct_declarator_2_0=ruledirect_declarator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDeclaratorRule());
                      					}
                      					set(
                      						current,
                      						"direct_declarator",
                      						lv_direct_declarator_2_0,
                      						"org.xtext.example.Ansic.direct_declarator");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledeclarator"


    // $ANTLR start "entryRulepointer"
    // InternalAnsic.g:2850:1: entryRulepointer returns [EObject current=null] : iv_rulepointer= rulepointer EOF ;
    public final EObject entryRulepointer() throws RecognitionException {
        EObject current = null;

        EObject iv_rulepointer = null;


        try {
            // InternalAnsic.g:2850:48: (iv_rulepointer= rulepointer EOF )
            // InternalAnsic.g:2851:2: iv_rulepointer= rulepointer EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPointerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulepointer=rulepointer();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulepointer; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulepointer"


    // $ANTLR start "rulepointer"
    // InternalAnsic.g:2857:1: rulepointer returns [EObject current=null] : ( (otherlv_0= '*' ( (lv_type_qualifier_list_1_0= ruletype_qualifier_list ) ) ( (lv_pointer_2_0= rulepointer ) ) ) | (otherlv_3= '*' ( (lv_type_qualifier_list_4_0= ruletype_qualifier_list ) ) ) | (otherlv_5= '*' ( (lv_pointer_6_0= rulepointer ) ) ) | otherlv_7= '*' ) ;
    public final EObject rulepointer() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_type_qualifier_list_1_0 = null;

        EObject lv_pointer_2_0 = null;

        EObject lv_type_qualifier_list_4_0 = null;

        EObject lv_pointer_6_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:2863:2: ( ( (otherlv_0= '*' ( (lv_type_qualifier_list_1_0= ruletype_qualifier_list ) ) ( (lv_pointer_2_0= rulepointer ) ) ) | (otherlv_3= '*' ( (lv_type_qualifier_list_4_0= ruletype_qualifier_list ) ) ) | (otherlv_5= '*' ( (lv_pointer_6_0= rulepointer ) ) ) | otherlv_7= '*' ) )
            // InternalAnsic.g:2864:2: ( (otherlv_0= '*' ( (lv_type_qualifier_list_1_0= ruletype_qualifier_list ) ) ( (lv_pointer_2_0= rulepointer ) ) ) | (otherlv_3= '*' ( (lv_type_qualifier_list_4_0= ruletype_qualifier_list ) ) ) | (otherlv_5= '*' ( (lv_pointer_6_0= rulepointer ) ) ) | otherlv_7= '*' )
            {
            // InternalAnsic.g:2864:2: ( (otherlv_0= '*' ( (lv_type_qualifier_list_1_0= ruletype_qualifier_list ) ) ( (lv_pointer_2_0= rulepointer ) ) ) | (otherlv_3= '*' ( (lv_type_qualifier_list_4_0= ruletype_qualifier_list ) ) ) | (otherlv_5= '*' ( (lv_pointer_6_0= rulepointer ) ) ) | otherlv_7= '*' )
            int alt23=4;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==67) ) {
                int LA23_1 = input.LA(2);

                if ( (synpred59_InternalAnsic()) ) {
                    alt23=1;
                }
                else if ( (synpred60_InternalAnsic()) ) {
                    alt23=2;
                }
                else if ( (synpred61_InternalAnsic()) ) {
                    alt23=3;
                }
                else if ( (true) ) {
                    alt23=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 23, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalAnsic.g:2865:3: (otherlv_0= '*' ( (lv_type_qualifier_list_1_0= ruletype_qualifier_list ) ) ( (lv_pointer_2_0= rulepointer ) ) )
                    {
                    // InternalAnsic.g:2865:3: (otherlv_0= '*' ( (lv_type_qualifier_list_1_0= ruletype_qualifier_list ) ) ( (lv_pointer_2_0= rulepointer ) ) )
                    // InternalAnsic.g:2866:4: otherlv_0= '*' ( (lv_type_qualifier_list_1_0= ruletype_qualifier_list ) ) ( (lv_pointer_2_0= rulepointer ) )
                    {
                    otherlv_0=(Token)match(input,67,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getPointerAccess().getAsteriskKeyword_0_0());
                      			
                    }
                    // InternalAnsic.g:2870:4: ( (lv_type_qualifier_list_1_0= ruletype_qualifier_list ) )
                    // InternalAnsic.g:2871:5: (lv_type_qualifier_list_1_0= ruletype_qualifier_list )
                    {
                    // InternalAnsic.g:2871:5: (lv_type_qualifier_list_1_0= ruletype_qualifier_list )
                    // InternalAnsic.g:2872:6: lv_type_qualifier_list_1_0= ruletype_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPointerAccess().getType_qualifier_listType_qualifier_listParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    lv_type_qualifier_list_1_0=ruletype_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPointerRule());
                      						}
                      						set(
                      							current,
                      							"type_qualifier_list",
                      							lv_type_qualifier_list_1_0,
                      							"org.xtext.example.Ansic.type_qualifier_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:2889:4: ( (lv_pointer_2_0= rulepointer ) )
                    // InternalAnsic.g:2890:5: (lv_pointer_2_0= rulepointer )
                    {
                    // InternalAnsic.g:2890:5: (lv_pointer_2_0= rulepointer )
                    // InternalAnsic.g:2891:6: lv_pointer_2_0= rulepointer
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPointerAccess().getPointerPointerParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_pointer_2_0=rulepointer();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPointerRule());
                      						}
                      						set(
                      							current,
                      							"pointer",
                      							lv_pointer_2_0,
                      							"org.xtext.example.Ansic.pointer");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:2910:3: (otherlv_3= '*' ( (lv_type_qualifier_list_4_0= ruletype_qualifier_list ) ) )
                    {
                    // InternalAnsic.g:2910:3: (otherlv_3= '*' ( (lv_type_qualifier_list_4_0= ruletype_qualifier_list ) ) )
                    // InternalAnsic.g:2911:4: otherlv_3= '*' ( (lv_type_qualifier_list_4_0= ruletype_qualifier_list ) )
                    {
                    otherlv_3=(Token)match(input,67,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getPointerAccess().getAsteriskKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:2915:4: ( (lv_type_qualifier_list_4_0= ruletype_qualifier_list ) )
                    // InternalAnsic.g:2916:5: (lv_type_qualifier_list_4_0= ruletype_qualifier_list )
                    {
                    // InternalAnsic.g:2916:5: (lv_type_qualifier_list_4_0= ruletype_qualifier_list )
                    // InternalAnsic.g:2917:6: lv_type_qualifier_list_4_0= ruletype_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPointerAccess().getType_qualifier_listType_qualifier_listParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_qualifier_list_4_0=ruletype_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPointerRule());
                      						}
                      						set(
                      							current,
                      							"type_qualifier_list",
                      							lv_type_qualifier_list_4_0,
                      							"org.xtext.example.Ansic.type_qualifier_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:2936:3: (otherlv_5= '*' ( (lv_pointer_6_0= rulepointer ) ) )
                    {
                    // InternalAnsic.g:2936:3: (otherlv_5= '*' ( (lv_pointer_6_0= rulepointer ) ) )
                    // InternalAnsic.g:2937:4: otherlv_5= '*' ( (lv_pointer_6_0= rulepointer ) )
                    {
                    otherlv_5=(Token)match(input,67,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getPointerAccess().getAsteriskKeyword_2_0());
                      			
                    }
                    // InternalAnsic.g:2941:4: ( (lv_pointer_6_0= rulepointer ) )
                    // InternalAnsic.g:2942:5: (lv_pointer_6_0= rulepointer )
                    {
                    // InternalAnsic.g:2942:5: (lv_pointer_6_0= rulepointer )
                    // InternalAnsic.g:2943:6: lv_pointer_6_0= rulepointer
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPointerAccess().getPointerPointerParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_pointer_6_0=rulepointer();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPointerRule());
                      						}
                      						set(
                      							current,
                      							"pointer",
                      							lv_pointer_6_0,
                      							"org.xtext.example.Ansic.pointer");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalAnsic.g:2962:3: otherlv_7= '*'
                    {
                    otherlv_7=(Token)match(input,67,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_7, grammarAccess.getPointerAccess().getAsteriskKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulepointer"


    // $ANTLR start "entryRuletype_qualifier_list"
    // InternalAnsic.g:2970:1: entryRuletype_qualifier_list returns [EObject current=null] : iv_ruletype_qualifier_list= ruletype_qualifier_list EOF ;
    public final EObject entryRuletype_qualifier_list() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletype_qualifier_list = null;


        try {
            // InternalAnsic.g:2970:60: (iv_ruletype_qualifier_list= ruletype_qualifier_list EOF )
            // InternalAnsic.g:2971:2: iv_ruletype_qualifier_list= ruletype_qualifier_list EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getType_qualifier_listRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletype_qualifier_list=ruletype_qualifier_list();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletype_qualifier_list; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletype_qualifier_list"


    // $ANTLR start "ruletype_qualifier_list"
    // InternalAnsic.g:2977:1: ruletype_qualifier_list returns [EObject current=null] : ( ( (lv_type_qualifier_0_0= ruletype_qualifier ) ) ( (lv_type_qualifier_list_linha_1_0= ruletype_qualifier_list_linha ) ) ) ;
    public final EObject ruletype_qualifier_list() throws RecognitionException {
        EObject current = null;

        EObject lv_type_qualifier_0_0 = null;

        EObject lv_type_qualifier_list_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:2983:2: ( ( ( (lv_type_qualifier_0_0= ruletype_qualifier ) ) ( (lv_type_qualifier_list_linha_1_0= ruletype_qualifier_list_linha ) ) ) )
            // InternalAnsic.g:2984:2: ( ( (lv_type_qualifier_0_0= ruletype_qualifier ) ) ( (lv_type_qualifier_list_linha_1_0= ruletype_qualifier_list_linha ) ) )
            {
            // InternalAnsic.g:2984:2: ( ( (lv_type_qualifier_0_0= ruletype_qualifier ) ) ( (lv_type_qualifier_list_linha_1_0= ruletype_qualifier_list_linha ) ) )
            // InternalAnsic.g:2985:3: ( (lv_type_qualifier_0_0= ruletype_qualifier ) ) ( (lv_type_qualifier_list_linha_1_0= ruletype_qualifier_list_linha ) )
            {
            // InternalAnsic.g:2985:3: ( (lv_type_qualifier_0_0= ruletype_qualifier ) )
            // InternalAnsic.g:2986:4: (lv_type_qualifier_0_0= ruletype_qualifier )
            {
            // InternalAnsic.g:2986:4: (lv_type_qualifier_0_0= ruletype_qualifier )
            // InternalAnsic.g:2987:5: lv_type_qualifier_0_0= ruletype_qualifier
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getType_qualifier_listAccess().getType_qualifierType_qualifierParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_18);
            lv_type_qualifier_0_0=ruletype_qualifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getType_qualifier_listRule());
              					}
              					set(
              						current,
              						"type_qualifier",
              						lv_type_qualifier_0_0,
              						"org.xtext.example.Ansic.type_qualifier");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:3004:3: ( (lv_type_qualifier_list_linha_1_0= ruletype_qualifier_list_linha ) )
            // InternalAnsic.g:3005:4: (lv_type_qualifier_list_linha_1_0= ruletype_qualifier_list_linha )
            {
            // InternalAnsic.g:3005:4: (lv_type_qualifier_list_linha_1_0= ruletype_qualifier_list_linha )
            // InternalAnsic.g:3006:5: lv_type_qualifier_list_linha_1_0= ruletype_qualifier_list_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getType_qualifier_listAccess().getType_qualifier_list_linhaType_qualifier_list_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_type_qualifier_list_linha_1_0=ruletype_qualifier_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getType_qualifier_listRule());
              					}
              					set(
              						current,
              						"type_qualifier_list_linha",
              						lv_type_qualifier_list_linha_1_0,
              						"org.xtext.example.Ansic.type_qualifier_list_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletype_qualifier_list"


    // $ANTLR start "entryRuletype_qualifier_list_linha"
    // InternalAnsic.g:3027:1: entryRuletype_qualifier_list_linha returns [EObject current=null] : iv_ruletype_qualifier_list_linha= ruletype_qualifier_list_linha EOF ;
    public final EObject entryRuletype_qualifier_list_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletype_qualifier_list_linha = null;


        try {
            // InternalAnsic.g:3027:66: (iv_ruletype_qualifier_list_linha= ruletype_qualifier_list_linha EOF )
            // InternalAnsic.g:3028:2: iv_ruletype_qualifier_list_linha= ruletype_qualifier_list_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getType_qualifier_list_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletype_qualifier_list_linha=ruletype_qualifier_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletype_qualifier_list_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletype_qualifier_list_linha"


    // $ANTLR start "ruletype_qualifier_list_linha"
    // InternalAnsic.g:3034:1: ruletype_qualifier_list_linha returns [EObject current=null] : ( () ( ( (lv_type_qualifier_1_0= ruletype_qualifier ) ) ( (lv_type_qualifier_list_linha_2_0= ruletype_qualifier_list_linha ) ) )? ) ;
    public final EObject ruletype_qualifier_list_linha() throws RecognitionException {
        EObject current = null;

        EObject lv_type_qualifier_1_0 = null;

        EObject lv_type_qualifier_list_linha_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:3040:2: ( ( () ( ( (lv_type_qualifier_1_0= ruletype_qualifier ) ) ( (lv_type_qualifier_list_linha_2_0= ruletype_qualifier_list_linha ) ) )? ) )
            // InternalAnsic.g:3041:2: ( () ( ( (lv_type_qualifier_1_0= ruletype_qualifier ) ) ( (lv_type_qualifier_list_linha_2_0= ruletype_qualifier_list_linha ) ) )? )
            {
            // InternalAnsic.g:3041:2: ( () ( ( (lv_type_qualifier_1_0= ruletype_qualifier ) ) ( (lv_type_qualifier_list_linha_2_0= ruletype_qualifier_list_linha ) ) )? )
            // InternalAnsic.g:3042:3: () ( ( (lv_type_qualifier_1_0= ruletype_qualifier ) ) ( (lv_type_qualifier_list_linha_2_0= ruletype_qualifier_list_linha ) ) )?
            {
            // InternalAnsic.g:3042:3: ()
            // InternalAnsic.g:3043:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getType_qualifier_list_linhaAccess().getTypeQualifierListLinhaAtionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:3052:3: ( ( (lv_type_qualifier_1_0= ruletype_qualifier ) ) ( (lv_type_qualifier_list_linha_2_0= ruletype_qualifier_list_linha ) ) )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( ((LA24_0>=36 && LA24_0<=39)) ) {
                alt24=1;
            }
            switch (alt24) {
                case 1 :
                    // InternalAnsic.g:3053:4: ( (lv_type_qualifier_1_0= ruletype_qualifier ) ) ( (lv_type_qualifier_list_linha_2_0= ruletype_qualifier_list_linha ) )
                    {
                    // InternalAnsic.g:3053:4: ( (lv_type_qualifier_1_0= ruletype_qualifier ) )
                    // InternalAnsic.g:3054:5: (lv_type_qualifier_1_0= ruletype_qualifier )
                    {
                    // InternalAnsic.g:3054:5: (lv_type_qualifier_1_0= ruletype_qualifier )
                    // InternalAnsic.g:3055:6: lv_type_qualifier_1_0= ruletype_qualifier
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getType_qualifier_list_linhaAccess().getType_qualifierType_qualifierParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_18);
                    lv_type_qualifier_1_0=ruletype_qualifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getType_qualifier_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"type_qualifier",
                      							lv_type_qualifier_1_0,
                      							"org.xtext.example.Ansic.type_qualifier");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:3072:4: ( (lv_type_qualifier_list_linha_2_0= ruletype_qualifier_list_linha ) )
                    // InternalAnsic.g:3073:5: (lv_type_qualifier_list_linha_2_0= ruletype_qualifier_list_linha )
                    {
                    // InternalAnsic.g:3073:5: (lv_type_qualifier_list_linha_2_0= ruletype_qualifier_list_linha )
                    // InternalAnsic.g:3074:6: lv_type_qualifier_list_linha_2_0= ruletype_qualifier_list_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getType_qualifier_list_linhaAccess().getType_qualifier_list_linhaType_qualifier_list_linhaParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_qualifier_list_linha_2_0=ruletype_qualifier_list_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getType_qualifier_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"type_qualifier_list_linha",
                      							lv_type_qualifier_list_linha_2_0,
                      							"org.xtext.example.Ansic.type_qualifier_list_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletype_qualifier_list_linha"


    // $ANTLR start "entryRuledirect_declarator"
    // InternalAnsic.g:3096:1: entryRuledirect_declarator returns [EObject current=null] : iv_ruledirect_declarator= ruledirect_declarator EOF ;
    public final EObject entryRuledirect_declarator() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledirect_declarator = null;


        try {
            // InternalAnsic.g:3096:58: (iv_ruledirect_declarator= ruledirect_declarator EOF )
            // InternalAnsic.g:3097:2: iv_ruledirect_declarator= ruledirect_declarator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDirect_declaratorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledirect_declarator=ruledirect_declarator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledirect_declarator; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledirect_declarator"


    // $ANTLR start "ruledirect_declarator"
    // InternalAnsic.g:3103:1: ruledirect_declarator returns [EObject current=null] : ( ( ( (lv_identifier_0_0= RULE_IDZ ) ) ( (lv_direct_declarator_linha_1_0= ruledirect_declarator_linha ) ) ) | (otherlv_2= '(' ( (lv_declarator_3_0= ruledeclarator ) ) otherlv_4= ')' ( (lv_direct_declarator_linha_5_0= ruledirect_declarator_linha ) ) ) ) ;
    public final EObject ruledirect_declarator() throws RecognitionException {
        EObject current = null;

        Token lv_identifier_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_direct_declarator_linha_1_0 = null;

        EObject lv_declarator_3_0 = null;

        EObject lv_direct_declarator_linha_5_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:3109:2: ( ( ( ( (lv_identifier_0_0= RULE_IDZ ) ) ( (lv_direct_declarator_linha_1_0= ruledirect_declarator_linha ) ) ) | (otherlv_2= '(' ( (lv_declarator_3_0= ruledeclarator ) ) otherlv_4= ')' ( (lv_direct_declarator_linha_5_0= ruledirect_declarator_linha ) ) ) ) )
            // InternalAnsic.g:3110:2: ( ( ( (lv_identifier_0_0= RULE_IDZ ) ) ( (lv_direct_declarator_linha_1_0= ruledirect_declarator_linha ) ) ) | (otherlv_2= '(' ( (lv_declarator_3_0= ruledeclarator ) ) otherlv_4= ')' ( (lv_direct_declarator_linha_5_0= ruledirect_declarator_linha ) ) ) )
            {
            // InternalAnsic.g:3110:2: ( ( ( (lv_identifier_0_0= RULE_IDZ ) ) ( (lv_direct_declarator_linha_1_0= ruledirect_declarator_linha ) ) ) | (otherlv_2= '(' ( (lv_declarator_3_0= ruledeclarator ) ) otherlv_4= ')' ( (lv_direct_declarator_linha_5_0= ruledirect_declarator_linha ) ) ) )
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==RULE_IDZ) ) {
                alt25=1;
            }
            else if ( (LA25_0==34) ) {
                alt25=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }
            switch (alt25) {
                case 1 :
                    // InternalAnsic.g:3111:3: ( ( (lv_identifier_0_0= RULE_IDZ ) ) ( (lv_direct_declarator_linha_1_0= ruledirect_declarator_linha ) ) )
                    {
                    // InternalAnsic.g:3111:3: ( ( (lv_identifier_0_0= RULE_IDZ ) ) ( (lv_direct_declarator_linha_1_0= ruledirect_declarator_linha ) ) )
                    // InternalAnsic.g:3112:4: ( (lv_identifier_0_0= RULE_IDZ ) ) ( (lv_direct_declarator_linha_1_0= ruledirect_declarator_linha ) )
                    {
                    // InternalAnsic.g:3112:4: ( (lv_identifier_0_0= RULE_IDZ ) )
                    // InternalAnsic.g:3113:5: (lv_identifier_0_0= RULE_IDZ )
                    {
                    // InternalAnsic.g:3113:5: (lv_identifier_0_0= RULE_IDZ )
                    // InternalAnsic.g:3114:6: lv_identifier_0_0= RULE_IDZ
                    {
                    lv_identifier_0_0=(Token)match(input,RULE_IDZ,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_identifier_0_0, grammarAccess.getDirect_declaratorAccess().getIdentifierIDzTerminalRuleCall_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDirect_declaratorRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"identifier",
                      							lv_identifier_0_0,
                      							"org.xtext.example.Ansic.IDz");
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:3130:4: ( (lv_direct_declarator_linha_1_0= ruledirect_declarator_linha ) )
                    // InternalAnsic.g:3131:5: (lv_direct_declarator_linha_1_0= ruledirect_declarator_linha )
                    {
                    // InternalAnsic.g:3131:5: (lv_direct_declarator_linha_1_0= ruledirect_declarator_linha )
                    // InternalAnsic.g:3132:6: lv_direct_declarator_linha_1_0= ruledirect_declarator_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_declaratorAccess().getDirect_declarator_linhaDirect_declarator_linhaParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_direct_declarator_linha_1_0=ruledirect_declarator_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_declaratorRule());
                      						}
                      						set(
                      							current,
                      							"direct_declarator_linha",
                      							lv_direct_declarator_linha_1_0,
                      							"org.xtext.example.Ansic.direct_declarator_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:3151:3: (otherlv_2= '(' ( (lv_declarator_3_0= ruledeclarator ) ) otherlv_4= ')' ( (lv_direct_declarator_linha_5_0= ruledirect_declarator_linha ) ) )
                    {
                    // InternalAnsic.g:3151:3: (otherlv_2= '(' ( (lv_declarator_3_0= ruledeclarator ) ) otherlv_4= ')' ( (lv_direct_declarator_linha_5_0= ruledirect_declarator_linha ) ) )
                    // InternalAnsic.g:3152:4: otherlv_2= '(' ( (lv_declarator_3_0= ruledeclarator ) ) otherlv_4= ')' ( (lv_direct_declarator_linha_5_0= ruledirect_declarator_linha ) )
                    {
                    otherlv_2=(Token)match(input,34,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getDirect_declaratorAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:3156:4: ( (lv_declarator_3_0= ruledeclarator ) )
                    // InternalAnsic.g:3157:5: (lv_declarator_3_0= ruledeclarator )
                    {
                    // InternalAnsic.g:3157:5: (lv_declarator_3_0= ruledeclarator )
                    // InternalAnsic.g:3158:6: lv_declarator_3_0= ruledeclarator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_declaratorAccess().getDeclaratorDeclaratorParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_declarator_3_0=ruledeclarator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_declaratorRule());
                      						}
                      						set(
                      							current,
                      							"declarator",
                      							lv_declarator_3_0,
                      							"org.xtext.example.Ansic.declarator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,35,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getDirect_declaratorAccess().getRightParenthesisKeyword_1_2());
                      			
                    }
                    // InternalAnsic.g:3179:4: ( (lv_direct_declarator_linha_5_0= ruledirect_declarator_linha ) )
                    // InternalAnsic.g:3180:5: (lv_direct_declarator_linha_5_0= ruledirect_declarator_linha )
                    {
                    // InternalAnsic.g:3180:5: (lv_direct_declarator_linha_5_0= ruledirect_declarator_linha )
                    // InternalAnsic.g:3181:6: lv_direct_declarator_linha_5_0= ruledirect_declarator_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_declaratorAccess().getDirect_declarator_linhaDirect_declarator_linhaParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_direct_declarator_linha_5_0=ruledirect_declarator_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_declaratorRule());
                      						}
                      						set(
                      							current,
                      							"direct_declarator_linha",
                      							lv_direct_declarator_linha_5_0,
                      							"org.xtext.example.Ansic.direct_declarator_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledirect_declarator"


    // $ANTLR start "entryRuledirect_declarator_linha"
    // InternalAnsic.g:3203:1: entryRuledirect_declarator_linha returns [EObject current=null] : iv_ruledirect_declarator_linha= ruledirect_declarator_linha EOF ;
    public final EObject entryRuledirect_declarator_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledirect_declarator_linha = null;


        try {
            // InternalAnsic.g:3203:64: (iv_ruledirect_declarator_linha= ruledirect_declarator_linha EOF )
            // InternalAnsic.g:3204:2: iv_ruledirect_declarator_linha= ruledirect_declarator_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDirect_declarator_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledirect_declarator_linha=ruledirect_declarator_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledirect_declarator_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledirect_declarator_linha"


    // $ANTLR start "ruledirect_declarator_linha"
    // InternalAnsic.g:3210:1: ruledirect_declarator_linha returns [EObject current=null] : ( ( (lv_direct_declarator_complemento_0_0= ruledirect_declarator_complemento ) ) ( (lv_direct_declarator_linha_1_0= ruledirect_declarator_linha ) ) )? ;
    public final EObject ruledirect_declarator_linha() throws RecognitionException {
        EObject current = null;

        EObject lv_direct_declarator_complemento_0_0 = null;

        EObject lv_direct_declarator_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:3216:2: ( ( ( (lv_direct_declarator_complemento_0_0= ruledirect_declarator_complemento ) ) ( (lv_direct_declarator_linha_1_0= ruledirect_declarator_linha ) ) )? )
            // InternalAnsic.g:3217:2: ( ( (lv_direct_declarator_complemento_0_0= ruledirect_declarator_complemento ) ) ( (lv_direct_declarator_linha_1_0= ruledirect_declarator_linha ) ) )?
            {
            // InternalAnsic.g:3217:2: ( ( (lv_direct_declarator_complemento_0_0= ruledirect_declarator_complemento ) ) ( (lv_direct_declarator_linha_1_0= ruledirect_declarator_linha ) ) )?
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==34||LA26_0==68) ) {
                alt26=1;
            }
            switch (alt26) {
                case 1 :
                    // InternalAnsic.g:3218:3: ( (lv_direct_declarator_complemento_0_0= ruledirect_declarator_complemento ) ) ( (lv_direct_declarator_linha_1_0= ruledirect_declarator_linha ) )
                    {
                    // InternalAnsic.g:3218:3: ( (lv_direct_declarator_complemento_0_0= ruledirect_declarator_complemento ) )
                    // InternalAnsic.g:3219:4: (lv_direct_declarator_complemento_0_0= ruledirect_declarator_complemento )
                    {
                    // InternalAnsic.g:3219:4: (lv_direct_declarator_complemento_0_0= ruledirect_declarator_complemento )
                    // InternalAnsic.g:3220:5: lv_direct_declarator_complemento_0_0= ruledirect_declarator_complemento
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDirect_declarator_linhaAccess().getDirect_declarator_complementoDirect_declarator_complementoParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_20);
                    lv_direct_declarator_complemento_0_0=ruledirect_declarator_complemento();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDirect_declarator_linhaRule());
                      					}
                      					set(
                      						current,
                      						"direct_declarator_complemento",
                      						lv_direct_declarator_complemento_0_0,
                      						"org.xtext.example.Ansic.direct_declarator_complemento");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }

                    // InternalAnsic.g:3237:3: ( (lv_direct_declarator_linha_1_0= ruledirect_declarator_linha ) )
                    // InternalAnsic.g:3238:4: (lv_direct_declarator_linha_1_0= ruledirect_declarator_linha )
                    {
                    // InternalAnsic.g:3238:4: (lv_direct_declarator_linha_1_0= ruledirect_declarator_linha )
                    // InternalAnsic.g:3239:5: lv_direct_declarator_linha_1_0= ruledirect_declarator_linha
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDirect_declarator_linhaAccess().getDirect_declarator_linhaDirect_declarator_linhaParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_direct_declarator_linha_1_0=ruledirect_declarator_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDirect_declarator_linhaRule());
                      					}
                      					set(
                      						current,
                      						"direct_declarator_linha",
                      						lv_direct_declarator_linha_1_0,
                      						"org.xtext.example.Ansic.direct_declarator_linha");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledirect_declarator_linha"


    // $ANTLR start "entryRuledirect_declarator_complemento"
    // InternalAnsic.g:3260:1: entryRuledirect_declarator_complemento returns [EObject current=null] : iv_ruledirect_declarator_complemento= ruledirect_declarator_complemento EOF ;
    public final EObject entryRuledirect_declarator_complemento() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledirect_declarator_complemento = null;


        try {
            // InternalAnsic.g:3260:70: (iv_ruledirect_declarator_complemento= ruledirect_declarator_complemento EOF )
            // InternalAnsic.g:3261:2: iv_ruledirect_declarator_complemento= ruledirect_declarator_complemento EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDirect_declarator_complementoRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledirect_declarator_complemento=ruledirect_declarator_complemento();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledirect_declarator_complemento; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledirect_declarator_complemento"


    // $ANTLR start "ruledirect_declarator_complemento"
    // InternalAnsic.g:3267:1: ruledirect_declarator_complemento returns [EObject current=null] : ( (otherlv_0= '[' otherlv_1= ']' ) | (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' ) | (otherlv_5= '[' otherlv_6= 'static' ( (lv_type_qualifier_list_7_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' ) | (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' ) | (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) otherlv_16= '*' otherlv_17= ']' ) | (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' ) | (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_25_0= ruleassignment_expression ) ) otherlv_26= ']' ) | (otherlv_27= '[' ( (lv_type_qualifier_list_28_0= ruletype_qualifier_list ) ) otherlv_29= ']' ) | (otherlv_30= '[' ( (lv_assignment_expression_31_0= ruleassignment_expression ) ) otherlv_32= ']' ) | (otherlv_33= '(' ( (lv_parameter_type_list_34_0= ruleparameter_type_list ) ) otherlv_35= ')' ) | (otherlv_36= '(' otherlv_37= ')' ) | (otherlv_38= '(' ( (lv_identifier_list_39_0= ruleidentifier_list ) ) otherlv_40= ')' ) ) ;
    public final EObject ruledirect_declarator_complemento() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token otherlv_29=null;
        Token otherlv_30=null;
        Token otherlv_32=null;
        Token otherlv_33=null;
        Token otherlv_35=null;
        Token otherlv_36=null;
        Token otherlv_37=null;
        Token otherlv_38=null;
        Token otherlv_40=null;
        EObject lv_type_qualifier_list_7_0 = null;

        EObject lv_assignment_expression_8_0 = null;

        EObject lv_assignment_expression_12_0 = null;

        EObject lv_type_qualifier_list_15_0 = null;

        EObject lv_type_qualifier_list_19_0 = null;

        EObject lv_assignment_expression_21_0 = null;

        EObject lv_type_qualifier_list_24_0 = null;

        EObject lv_assignment_expression_25_0 = null;

        EObject lv_type_qualifier_list_28_0 = null;

        EObject lv_assignment_expression_31_0 = null;

        EObject lv_parameter_type_list_34_0 = null;

        EObject lv_identifier_list_39_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:3273:2: ( ( (otherlv_0= '[' otherlv_1= ']' ) | (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' ) | (otherlv_5= '[' otherlv_6= 'static' ( (lv_type_qualifier_list_7_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' ) | (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' ) | (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) otherlv_16= '*' otherlv_17= ']' ) | (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' ) | (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_25_0= ruleassignment_expression ) ) otherlv_26= ']' ) | (otherlv_27= '[' ( (lv_type_qualifier_list_28_0= ruletype_qualifier_list ) ) otherlv_29= ']' ) | (otherlv_30= '[' ( (lv_assignment_expression_31_0= ruleassignment_expression ) ) otherlv_32= ']' ) | (otherlv_33= '(' ( (lv_parameter_type_list_34_0= ruleparameter_type_list ) ) otherlv_35= ')' ) | (otherlv_36= '(' otherlv_37= ')' ) | (otherlv_38= '(' ( (lv_identifier_list_39_0= ruleidentifier_list ) ) otherlv_40= ')' ) ) )
            // InternalAnsic.g:3274:2: ( (otherlv_0= '[' otherlv_1= ']' ) | (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' ) | (otherlv_5= '[' otherlv_6= 'static' ( (lv_type_qualifier_list_7_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' ) | (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' ) | (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) otherlv_16= '*' otherlv_17= ']' ) | (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' ) | (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_25_0= ruleassignment_expression ) ) otherlv_26= ']' ) | (otherlv_27= '[' ( (lv_type_qualifier_list_28_0= ruletype_qualifier_list ) ) otherlv_29= ']' ) | (otherlv_30= '[' ( (lv_assignment_expression_31_0= ruleassignment_expression ) ) otherlv_32= ']' ) | (otherlv_33= '(' ( (lv_parameter_type_list_34_0= ruleparameter_type_list ) ) otherlv_35= ')' ) | (otherlv_36= '(' otherlv_37= ')' ) | (otherlv_38= '(' ( (lv_identifier_list_39_0= ruleidentifier_list ) ) otherlv_40= ')' ) )
            {
            // InternalAnsic.g:3274:2: ( (otherlv_0= '[' otherlv_1= ']' ) | (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' ) | (otherlv_5= '[' otherlv_6= 'static' ( (lv_type_qualifier_list_7_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' ) | (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' ) | (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) otherlv_16= '*' otherlv_17= ']' ) | (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' ) | (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_25_0= ruleassignment_expression ) ) otherlv_26= ']' ) | (otherlv_27= '[' ( (lv_type_qualifier_list_28_0= ruletype_qualifier_list ) ) otherlv_29= ']' ) | (otherlv_30= '[' ( (lv_assignment_expression_31_0= ruleassignment_expression ) ) otherlv_32= ']' ) | (otherlv_33= '(' ( (lv_parameter_type_list_34_0= ruleparameter_type_list ) ) otherlv_35= ')' ) | (otherlv_36= '(' otherlv_37= ')' ) | (otherlv_38= '(' ( (lv_identifier_list_39_0= ruleidentifier_list ) ) otherlv_40= ')' ) )
            int alt27=12;
            alt27 = dfa27.predict(input);
            switch (alt27) {
                case 1 :
                    // InternalAnsic.g:3275:3: (otherlv_0= '[' otherlv_1= ']' )
                    {
                    // InternalAnsic.g:3275:3: (otherlv_0= '[' otherlv_1= ']' )
                    // InternalAnsic.g:3276:4: otherlv_0= '[' otherlv_1= ']'
                    {
                    otherlv_0=(Token)match(input,68,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getDirect_declarator_complementoAccess().getLeftSquareBracketKeyword_0_0());
                      			
                    }
                    otherlv_1=(Token)match(input,69,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getDirect_declarator_complementoAccess().getRightSquareBracketKeyword_0_1());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:3286:3: (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' )
                    {
                    // InternalAnsic.g:3286:3: (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' )
                    // InternalAnsic.g:3287:4: otherlv_2= '[' otherlv_3= '*' otherlv_4= ']'
                    {
                    otherlv_2=(Token)match(input,68,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getDirect_declarator_complementoAccess().getLeftSquareBracketKeyword_1_0());
                      			
                    }
                    otherlv_3=(Token)match(input,67,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getDirect_declarator_complementoAccess().getAsteriskKeyword_1_1());
                      			
                    }
                    otherlv_4=(Token)match(input,69,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getDirect_declarator_complementoAccess().getRightSquareBracketKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:3301:3: (otherlv_5= '[' otherlv_6= 'static' ( (lv_type_qualifier_list_7_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' )
                    {
                    // InternalAnsic.g:3301:3: (otherlv_5= '[' otherlv_6= 'static' ( (lv_type_qualifier_list_7_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' )
                    // InternalAnsic.g:3302:4: otherlv_5= '[' otherlv_6= 'static' ( (lv_type_qualifier_list_7_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']'
                    {
                    otherlv_5=(Token)match(input,68,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getDirect_declarator_complementoAccess().getLeftSquareBracketKeyword_2_0());
                      			
                    }
                    otherlv_6=(Token)match(input,63,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getDirect_declarator_complementoAccess().getStaticKeyword_2_1());
                      			
                    }
                    // InternalAnsic.g:3310:4: ( (lv_type_qualifier_list_7_0= ruletype_qualifier_list ) )
                    // InternalAnsic.g:3311:5: (lv_type_qualifier_list_7_0= ruletype_qualifier_list )
                    {
                    // InternalAnsic.g:3311:5: (lv_type_qualifier_list_7_0= ruletype_qualifier_list )
                    // InternalAnsic.g:3312:6: lv_type_qualifier_list_7_0= ruletype_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getType_qualifier_listType_qualifier_listParserRuleCall_2_2_0());
                      					
                    }
                    pushFollow(FOLLOW_8);
                    lv_type_qualifier_list_7_0=ruletype_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_declarator_complementoRule());
                      						}
                      						set(
                      							current,
                      							"type_qualifier_list",
                      							lv_type_qualifier_list_7_0,
                      							"org.xtext.example.Ansic.type_qualifier_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:3329:4: ( (lv_assignment_expression_8_0= ruleassignment_expression ) )
                    // InternalAnsic.g:3330:5: (lv_assignment_expression_8_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:3330:5: (lv_assignment_expression_8_0= ruleassignment_expression )
                    // InternalAnsic.g:3331:6: lv_assignment_expression_8_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getAssignment_expressionAssignment_expressionParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_assignment_expression_8_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_declarator_complementoRule());
                      						}
                      						set(
                      							current,
                      							"assignment_expression",
                      							lv_assignment_expression_8_0,
                      							"org.xtext.example.Ansic.assignment_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,69,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getDirect_declarator_complementoAccess().getRightSquareBracketKeyword_2_4());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalAnsic.g:3354:3: (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' )
                    {
                    // InternalAnsic.g:3354:3: (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' )
                    // InternalAnsic.g:3355:4: otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']'
                    {
                    otherlv_10=(Token)match(input,68,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getDirect_declarator_complementoAccess().getLeftSquareBracketKeyword_3_0());
                      			
                    }
                    otherlv_11=(Token)match(input,63,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getDirect_declarator_complementoAccess().getStaticKeyword_3_1());
                      			
                    }
                    // InternalAnsic.g:3363:4: ( (lv_assignment_expression_12_0= ruleassignment_expression ) )
                    // InternalAnsic.g:3364:5: (lv_assignment_expression_12_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:3364:5: (lv_assignment_expression_12_0= ruleassignment_expression )
                    // InternalAnsic.g:3365:6: lv_assignment_expression_12_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getAssignment_expressionAssignment_expressionParserRuleCall_3_2_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_assignment_expression_12_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_declarator_complementoRule());
                      						}
                      						set(
                      							current,
                      							"assignment_expression",
                      							lv_assignment_expression_12_0,
                      							"org.xtext.example.Ansic.assignment_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_13=(Token)match(input,69,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getDirect_declarator_complementoAccess().getRightSquareBracketKeyword_3_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalAnsic.g:3388:3: (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) otherlv_16= '*' otherlv_17= ']' )
                    {
                    // InternalAnsic.g:3388:3: (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) otherlv_16= '*' otherlv_17= ']' )
                    // InternalAnsic.g:3389:4: otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) otherlv_16= '*' otherlv_17= ']'
                    {
                    otherlv_14=(Token)match(input,68,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getDirect_declarator_complementoAccess().getLeftSquareBracketKeyword_4_0());
                      			
                    }
                    // InternalAnsic.g:3393:4: ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) )
                    // InternalAnsic.g:3394:5: (lv_type_qualifier_list_15_0= ruletype_qualifier_list )
                    {
                    // InternalAnsic.g:3394:5: (lv_type_qualifier_list_15_0= ruletype_qualifier_list )
                    // InternalAnsic.g:3395:6: lv_type_qualifier_list_15_0= ruletype_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getType_qualifier_listType_qualifier_listParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    lv_type_qualifier_list_15_0=ruletype_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_declarator_complementoRule());
                      						}
                      						set(
                      							current,
                      							"type_qualifier_list",
                      							lv_type_qualifier_list_15_0,
                      							"org.xtext.example.Ansic.type_qualifier_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_16=(Token)match(input,67,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_16, grammarAccess.getDirect_declarator_complementoAccess().getAsteriskKeyword_4_2());
                      			
                    }
                    otherlv_17=(Token)match(input,69,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getDirect_declarator_complementoAccess().getRightSquareBracketKeyword_4_3());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalAnsic.g:3422:3: (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' )
                    {
                    // InternalAnsic.g:3422:3: (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' )
                    // InternalAnsic.g:3423:4: otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']'
                    {
                    otherlv_18=(Token)match(input,68,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getDirect_declarator_complementoAccess().getLeftSquareBracketKeyword_5_0());
                      			
                    }
                    // InternalAnsic.g:3427:4: ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) )
                    // InternalAnsic.g:3428:5: (lv_type_qualifier_list_19_0= ruletype_qualifier_list )
                    {
                    // InternalAnsic.g:3428:5: (lv_type_qualifier_list_19_0= ruletype_qualifier_list )
                    // InternalAnsic.g:3429:6: lv_type_qualifier_list_19_0= ruletype_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getType_qualifier_listType_qualifier_listParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_22);
                    lv_type_qualifier_list_19_0=ruletype_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_declarator_complementoRule());
                      						}
                      						set(
                      							current,
                      							"type_qualifier_list",
                      							lv_type_qualifier_list_19_0,
                      							"org.xtext.example.Ansic.type_qualifier_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_20=(Token)match(input,63,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_20, grammarAccess.getDirect_declarator_complementoAccess().getStaticKeyword_5_2());
                      			
                    }
                    // InternalAnsic.g:3450:4: ( (lv_assignment_expression_21_0= ruleassignment_expression ) )
                    // InternalAnsic.g:3451:5: (lv_assignment_expression_21_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:3451:5: (lv_assignment_expression_21_0= ruleassignment_expression )
                    // InternalAnsic.g:3452:6: lv_assignment_expression_21_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getAssignment_expressionAssignment_expressionParserRuleCall_5_3_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_assignment_expression_21_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_declarator_complementoRule());
                      						}
                      						set(
                      							current,
                      							"assignment_expression",
                      							lv_assignment_expression_21_0,
                      							"org.xtext.example.Ansic.assignment_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_22=(Token)match(input,69,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_22, grammarAccess.getDirect_declarator_complementoAccess().getRightSquareBracketKeyword_5_4());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalAnsic.g:3475:3: (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_25_0= ruleassignment_expression ) ) otherlv_26= ']' )
                    {
                    // InternalAnsic.g:3475:3: (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_25_0= ruleassignment_expression ) ) otherlv_26= ']' )
                    // InternalAnsic.g:3476:4: otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_25_0= ruleassignment_expression ) ) otherlv_26= ']'
                    {
                    otherlv_23=(Token)match(input,68,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_23, grammarAccess.getDirect_declarator_complementoAccess().getLeftSquareBracketKeyword_6_0());
                      			
                    }
                    // InternalAnsic.g:3480:4: ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) )
                    // InternalAnsic.g:3481:5: (lv_type_qualifier_list_24_0= ruletype_qualifier_list )
                    {
                    // InternalAnsic.g:3481:5: (lv_type_qualifier_list_24_0= ruletype_qualifier_list )
                    // InternalAnsic.g:3482:6: lv_type_qualifier_list_24_0= ruletype_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getType_qualifier_listType_qualifier_listParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_8);
                    lv_type_qualifier_list_24_0=ruletype_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_declarator_complementoRule());
                      						}
                      						set(
                      							current,
                      							"type_qualifier_list",
                      							lv_type_qualifier_list_24_0,
                      							"org.xtext.example.Ansic.type_qualifier_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:3499:4: ( (lv_assignment_expression_25_0= ruleassignment_expression ) )
                    // InternalAnsic.g:3500:5: (lv_assignment_expression_25_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:3500:5: (lv_assignment_expression_25_0= ruleassignment_expression )
                    // InternalAnsic.g:3501:6: lv_assignment_expression_25_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getAssignment_expressionAssignment_expressionParserRuleCall_6_2_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_assignment_expression_25_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_declarator_complementoRule());
                      						}
                      						set(
                      							current,
                      							"assignment_expression",
                      							lv_assignment_expression_25_0,
                      							"org.xtext.example.Ansic.assignment_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_26=(Token)match(input,69,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_26, grammarAccess.getDirect_declarator_complementoAccess().getRightSquareBracketKeyword_6_3());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalAnsic.g:3524:3: (otherlv_27= '[' ( (lv_type_qualifier_list_28_0= ruletype_qualifier_list ) ) otherlv_29= ']' )
                    {
                    // InternalAnsic.g:3524:3: (otherlv_27= '[' ( (lv_type_qualifier_list_28_0= ruletype_qualifier_list ) ) otherlv_29= ']' )
                    // InternalAnsic.g:3525:4: otherlv_27= '[' ( (lv_type_qualifier_list_28_0= ruletype_qualifier_list ) ) otherlv_29= ']'
                    {
                    otherlv_27=(Token)match(input,68,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_27, grammarAccess.getDirect_declarator_complementoAccess().getLeftSquareBracketKeyword_7_0());
                      			
                    }
                    // InternalAnsic.g:3529:4: ( (lv_type_qualifier_list_28_0= ruletype_qualifier_list ) )
                    // InternalAnsic.g:3530:5: (lv_type_qualifier_list_28_0= ruletype_qualifier_list )
                    {
                    // InternalAnsic.g:3530:5: (lv_type_qualifier_list_28_0= ruletype_qualifier_list )
                    // InternalAnsic.g:3531:6: lv_type_qualifier_list_28_0= ruletype_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getType_qualifier_listType_qualifier_listParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_type_qualifier_list_28_0=ruletype_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_declarator_complementoRule());
                      						}
                      						set(
                      							current,
                      							"type_qualifier_list",
                      							lv_type_qualifier_list_28_0,
                      							"org.xtext.example.Ansic.type_qualifier_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_29=(Token)match(input,69,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_29, grammarAccess.getDirect_declarator_complementoAccess().getRightSquareBracketKeyword_7_2());
                      			
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalAnsic.g:3554:3: (otherlv_30= '[' ( (lv_assignment_expression_31_0= ruleassignment_expression ) ) otherlv_32= ']' )
                    {
                    // InternalAnsic.g:3554:3: (otherlv_30= '[' ( (lv_assignment_expression_31_0= ruleassignment_expression ) ) otherlv_32= ']' )
                    // InternalAnsic.g:3555:4: otherlv_30= '[' ( (lv_assignment_expression_31_0= ruleassignment_expression ) ) otherlv_32= ']'
                    {
                    otherlv_30=(Token)match(input,68,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_30, grammarAccess.getDirect_declarator_complementoAccess().getLeftSquareBracketKeyword_8_0());
                      			
                    }
                    // InternalAnsic.g:3559:4: ( (lv_assignment_expression_31_0= ruleassignment_expression ) )
                    // InternalAnsic.g:3560:5: (lv_assignment_expression_31_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:3560:5: (lv_assignment_expression_31_0= ruleassignment_expression )
                    // InternalAnsic.g:3561:6: lv_assignment_expression_31_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getAssignment_expressionAssignment_expressionParserRuleCall_8_1_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_assignment_expression_31_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_declarator_complementoRule());
                      						}
                      						set(
                      							current,
                      							"assignment_expression",
                      							lv_assignment_expression_31_0,
                      							"org.xtext.example.Ansic.assignment_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_32=(Token)match(input,69,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_32, grammarAccess.getDirect_declarator_complementoAccess().getRightSquareBracketKeyword_8_2());
                      			
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalAnsic.g:3584:3: (otherlv_33= '(' ( (lv_parameter_type_list_34_0= ruleparameter_type_list ) ) otherlv_35= ')' )
                    {
                    // InternalAnsic.g:3584:3: (otherlv_33= '(' ( (lv_parameter_type_list_34_0= ruleparameter_type_list ) ) otherlv_35= ')' )
                    // InternalAnsic.g:3585:4: otherlv_33= '(' ( (lv_parameter_type_list_34_0= ruleparameter_type_list ) ) otherlv_35= ')'
                    {
                    otherlv_33=(Token)match(input,34,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_33, grammarAccess.getDirect_declarator_complementoAccess().getLeftParenthesisKeyword_9_0());
                      			
                    }
                    // InternalAnsic.g:3589:4: ( (lv_parameter_type_list_34_0= ruleparameter_type_list ) )
                    // InternalAnsic.g:3590:5: (lv_parameter_type_list_34_0= ruleparameter_type_list )
                    {
                    // InternalAnsic.g:3590:5: (lv_parameter_type_list_34_0= ruleparameter_type_list )
                    // InternalAnsic.g:3591:6: lv_parameter_type_list_34_0= ruleparameter_type_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getParameter_type_listParameter_type_listParserRuleCall_9_1_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_parameter_type_list_34_0=ruleparameter_type_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_declarator_complementoRule());
                      						}
                      						set(
                      							current,
                      							"parameter_type_list",
                      							lv_parameter_type_list_34_0,
                      							"org.xtext.example.Ansic.parameter_type_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_35=(Token)match(input,35,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_35, grammarAccess.getDirect_declarator_complementoAccess().getRightParenthesisKeyword_9_2());
                      			
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalAnsic.g:3614:3: (otherlv_36= '(' otherlv_37= ')' )
                    {
                    // InternalAnsic.g:3614:3: (otherlv_36= '(' otherlv_37= ')' )
                    // InternalAnsic.g:3615:4: otherlv_36= '(' otherlv_37= ')'
                    {
                    otherlv_36=(Token)match(input,34,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_36, grammarAccess.getDirect_declarator_complementoAccess().getLeftParenthesisKeyword_10_0());
                      			
                    }
                    otherlv_37=(Token)match(input,35,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_37, grammarAccess.getDirect_declarator_complementoAccess().getRightParenthesisKeyword_10_1());
                      			
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalAnsic.g:3625:3: (otherlv_38= '(' ( (lv_identifier_list_39_0= ruleidentifier_list ) ) otherlv_40= ')' )
                    {
                    // InternalAnsic.g:3625:3: (otherlv_38= '(' ( (lv_identifier_list_39_0= ruleidentifier_list ) ) otherlv_40= ')' )
                    // InternalAnsic.g:3626:4: otherlv_38= '(' ( (lv_identifier_list_39_0= ruleidentifier_list ) ) otherlv_40= ')'
                    {
                    otherlv_38=(Token)match(input,34,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_38, grammarAccess.getDirect_declarator_complementoAccess().getLeftParenthesisKeyword_11_0());
                      			
                    }
                    // InternalAnsic.g:3630:4: ( (lv_identifier_list_39_0= ruleidentifier_list ) )
                    // InternalAnsic.g:3631:5: (lv_identifier_list_39_0= ruleidentifier_list )
                    {
                    // InternalAnsic.g:3631:5: (lv_identifier_list_39_0= ruleidentifier_list )
                    // InternalAnsic.g:3632:6: lv_identifier_list_39_0= ruleidentifier_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getIdentifier_listIdentifier_listParserRuleCall_11_1_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_identifier_list_39_0=ruleidentifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_declarator_complementoRule());
                      						}
                      						set(
                      							current,
                      							"identifier_list",
                      							lv_identifier_list_39_0,
                      							"org.xtext.example.Ansic.identifier_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_40=(Token)match(input,35,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_40, grammarAccess.getDirect_declarator_complementoAccess().getRightParenthesisKeyword_11_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledirect_declarator_complemento"


    // $ANTLR start "entryRuleparameter_type_list"
    // InternalAnsic.g:3658:1: entryRuleparameter_type_list returns [EObject current=null] : iv_ruleparameter_type_list= ruleparameter_type_list EOF ;
    public final EObject entryRuleparameter_type_list() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleparameter_type_list = null;


        try {
            // InternalAnsic.g:3658:60: (iv_ruleparameter_type_list= ruleparameter_type_list EOF )
            // InternalAnsic.g:3659:2: iv_ruleparameter_type_list= ruleparameter_type_list EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameter_type_listRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleparameter_type_list=ruleparameter_type_list();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleparameter_type_list; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleparameter_type_list"


    // $ANTLR start "ruleparameter_type_list"
    // InternalAnsic.g:3665:1: ruleparameter_type_list returns [EObject current=null] : ( ( ( (lv_parameter_lista_0_0= ruleparameter_lista ) ) otherlv_1= ',' otherlv_2= '...' ) | ( (lv_parameter_lista_3_0= ruleparameter_lista ) ) ) ;
    public final EObject ruleparameter_type_list() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_parameter_lista_0_0 = null;

        EObject lv_parameter_lista_3_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:3671:2: ( ( ( ( (lv_parameter_lista_0_0= ruleparameter_lista ) ) otherlv_1= ',' otherlv_2= '...' ) | ( (lv_parameter_lista_3_0= ruleparameter_lista ) ) ) )
            // InternalAnsic.g:3672:2: ( ( ( (lv_parameter_lista_0_0= ruleparameter_lista ) ) otherlv_1= ',' otherlv_2= '...' ) | ( (lv_parameter_lista_3_0= ruleparameter_lista ) ) )
            {
            // InternalAnsic.g:3672:2: ( ( ( (lv_parameter_lista_0_0= ruleparameter_lista ) ) otherlv_1= ',' otherlv_2= '...' ) | ( (lv_parameter_lista_3_0= ruleparameter_lista ) ) )
            int alt28=2;
            alt28 = dfa28.predict(input);
            switch (alt28) {
                case 1 :
                    // InternalAnsic.g:3673:3: ( ( (lv_parameter_lista_0_0= ruleparameter_lista ) ) otherlv_1= ',' otherlv_2= '...' )
                    {
                    // InternalAnsic.g:3673:3: ( ( (lv_parameter_lista_0_0= ruleparameter_lista ) ) otherlv_1= ',' otherlv_2= '...' )
                    // InternalAnsic.g:3674:4: ( (lv_parameter_lista_0_0= ruleparameter_lista ) ) otherlv_1= ',' otherlv_2= '...'
                    {
                    // InternalAnsic.g:3674:4: ( (lv_parameter_lista_0_0= ruleparameter_lista ) )
                    // InternalAnsic.g:3675:5: (lv_parameter_lista_0_0= ruleparameter_lista )
                    {
                    // InternalAnsic.g:3675:5: (lv_parameter_lista_0_0= ruleparameter_lista )
                    // InternalAnsic.g:3676:6: lv_parameter_lista_0_0= ruleparameter_lista
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParameter_type_listAccess().getParameter_listaParameter_listaParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_parameter_lista_0_0=ruleparameter_lista();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParameter_type_listRule());
                      						}
                      						set(
                      							current,
                      							"parameter_lista",
                      							lv_parameter_lista_0_0,
                      							"org.xtext.example.Ansic.parameter_lista");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,56,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getParameter_type_listAccess().getCommaKeyword_0_1());
                      			
                    }
                    otherlv_2=(Token)match(input,70,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getParameter_type_listAccess().getFullStopFullStopFullStopKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:3703:3: ( (lv_parameter_lista_3_0= ruleparameter_lista ) )
                    {
                    // InternalAnsic.g:3703:3: ( (lv_parameter_lista_3_0= ruleparameter_lista ) )
                    // InternalAnsic.g:3704:4: (lv_parameter_lista_3_0= ruleparameter_lista )
                    {
                    // InternalAnsic.g:3704:4: (lv_parameter_lista_3_0= ruleparameter_lista )
                    // InternalAnsic.g:3705:5: lv_parameter_lista_3_0= ruleparameter_lista
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getParameter_type_listAccess().getParameter_listaParameter_listaParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_parameter_lista_3_0=ruleparameter_lista();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getParameter_type_listRule());
                      					}
                      					set(
                      						current,
                      						"parameter_lista",
                      						lv_parameter_lista_3_0,
                      						"org.xtext.example.Ansic.parameter_lista");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleparameter_type_list"


    // $ANTLR start "entryRuleparameter_lista"
    // InternalAnsic.g:3726:1: entryRuleparameter_lista returns [EObject current=null] : iv_ruleparameter_lista= ruleparameter_lista EOF ;
    public final EObject entryRuleparameter_lista() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleparameter_lista = null;


        try {
            // InternalAnsic.g:3726:56: (iv_ruleparameter_lista= ruleparameter_lista EOF )
            // InternalAnsic.g:3727:2: iv_ruleparameter_lista= ruleparameter_lista EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameter_listaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleparameter_lista=ruleparameter_lista();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleparameter_lista; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleparameter_lista"


    // $ANTLR start "ruleparameter_lista"
    // InternalAnsic.g:3733:1: ruleparameter_lista returns [EObject current=null] : ( ( (lv_parameter_declarations_0_0= ruleparameter_declaration ) ) (otherlv_1= ',' ( (lv_parameter_declarations_2_0= ruleparameter_declaration ) ) )* ) ;
    public final EObject ruleparameter_lista() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_parameter_declarations_0_0 = null;

        EObject lv_parameter_declarations_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:3739:2: ( ( ( (lv_parameter_declarations_0_0= ruleparameter_declaration ) ) (otherlv_1= ',' ( (lv_parameter_declarations_2_0= ruleparameter_declaration ) ) )* ) )
            // InternalAnsic.g:3740:2: ( ( (lv_parameter_declarations_0_0= ruleparameter_declaration ) ) (otherlv_1= ',' ( (lv_parameter_declarations_2_0= ruleparameter_declaration ) ) )* )
            {
            // InternalAnsic.g:3740:2: ( ( (lv_parameter_declarations_0_0= ruleparameter_declaration ) ) (otherlv_1= ',' ( (lv_parameter_declarations_2_0= ruleparameter_declaration ) ) )* )
            // InternalAnsic.g:3741:3: ( (lv_parameter_declarations_0_0= ruleparameter_declaration ) ) (otherlv_1= ',' ( (lv_parameter_declarations_2_0= ruleparameter_declaration ) ) )*
            {
            // InternalAnsic.g:3741:3: ( (lv_parameter_declarations_0_0= ruleparameter_declaration ) )
            // InternalAnsic.g:3742:4: (lv_parameter_declarations_0_0= ruleparameter_declaration )
            {
            // InternalAnsic.g:3742:4: (lv_parameter_declarations_0_0= ruleparameter_declaration )
            // InternalAnsic.g:3743:5: lv_parameter_declarations_0_0= ruleparameter_declaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getParameter_listaAccess().getParameter_declarationsParameter_declarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_24);
            lv_parameter_declarations_0_0=ruleparameter_declaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getParameter_listaRule());
              					}
              					add(
              						current,
              						"parameter_declarations",
              						lv_parameter_declarations_0_0,
              						"org.xtext.example.Ansic.parameter_declaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:3760:3: (otherlv_1= ',' ( (lv_parameter_declarations_2_0= ruleparameter_declaration ) ) )*
            loop29:
            do {
                int alt29=2;
                int LA29_0 = input.LA(1);

                if ( (LA29_0==56) ) {
                    int LA29_1 = input.LA(2);

                    if ( ((LA29_1>=31 && LA29_1<=33)||(LA29_1>=36 && LA29_1<=53)||(LA29_1>=58 && LA29_1<=59)||(LA29_1>=62 && LA29_1<=66)) ) {
                        alt29=1;
                    }


                }


                switch (alt29) {
            	case 1 :
            	    // InternalAnsic.g:3761:4: otherlv_1= ',' ( (lv_parameter_declarations_2_0= ruleparameter_declaration ) )
            	    {
            	    otherlv_1=(Token)match(input,56,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getParameter_listaAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalAnsic.g:3765:4: ( (lv_parameter_declarations_2_0= ruleparameter_declaration ) )
            	    // InternalAnsic.g:3766:5: (lv_parameter_declarations_2_0= ruleparameter_declaration )
            	    {
            	    // InternalAnsic.g:3766:5: (lv_parameter_declarations_2_0= ruleparameter_declaration )
            	    // InternalAnsic.g:3767:6: lv_parameter_declarations_2_0= ruleparameter_declaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getParameter_listaAccess().getParameter_declarationsParameter_declarationParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_24);
            	    lv_parameter_declarations_2_0=ruleparameter_declaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getParameter_listaRule());
            	      						}
            	      						add(
            	      							current,
            	      							"parameter_declarations",
            	      							lv_parameter_declarations_2_0,
            	      							"org.xtext.example.Ansic.parameter_declaration");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop29;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleparameter_lista"


    // $ANTLR start "entryRuleparameter_list_linha"
    // InternalAnsic.g:3789:1: entryRuleparameter_list_linha returns [EObject current=null] : iv_ruleparameter_list_linha= ruleparameter_list_linha EOF ;
    public final EObject entryRuleparameter_list_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleparameter_list_linha = null;


        try {
            // InternalAnsic.g:3789:61: (iv_ruleparameter_list_linha= ruleparameter_list_linha EOF )
            // InternalAnsic.g:3790:2: iv_ruleparameter_list_linha= ruleparameter_list_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameter_list_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleparameter_list_linha=ruleparameter_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleparameter_list_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleparameter_list_linha"


    // $ANTLR start "ruleparameter_list_linha"
    // InternalAnsic.g:3796:1: ruleparameter_list_linha returns [EObject current=null] : (otherlv_0= ',' ( (lv_parameter_declaration_1_0= ruleparameter_declaration ) ) ( (lv_parameter_list_linha_2_0= ruleparameter_list_linha ) ) )? ;
    public final EObject ruleparameter_list_linha() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_parameter_declaration_1_0 = null;

        EObject lv_parameter_list_linha_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:3802:2: ( (otherlv_0= ',' ( (lv_parameter_declaration_1_0= ruleparameter_declaration ) ) ( (lv_parameter_list_linha_2_0= ruleparameter_list_linha ) ) )? )
            // InternalAnsic.g:3803:2: (otherlv_0= ',' ( (lv_parameter_declaration_1_0= ruleparameter_declaration ) ) ( (lv_parameter_list_linha_2_0= ruleparameter_list_linha ) ) )?
            {
            // InternalAnsic.g:3803:2: (otherlv_0= ',' ( (lv_parameter_declaration_1_0= ruleparameter_declaration ) ) ( (lv_parameter_list_linha_2_0= ruleparameter_list_linha ) ) )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==56) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // InternalAnsic.g:3804:3: otherlv_0= ',' ( (lv_parameter_declaration_1_0= ruleparameter_declaration ) ) ( (lv_parameter_list_linha_2_0= ruleparameter_list_linha ) )
                    {
                    otherlv_0=(Token)match(input,56,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_0, grammarAccess.getParameter_list_linhaAccess().getCommaKeyword_0());
                      		
                    }
                    // InternalAnsic.g:3808:3: ( (lv_parameter_declaration_1_0= ruleparameter_declaration ) )
                    // InternalAnsic.g:3809:4: (lv_parameter_declaration_1_0= ruleparameter_declaration )
                    {
                    // InternalAnsic.g:3809:4: (lv_parameter_declaration_1_0= ruleparameter_declaration )
                    // InternalAnsic.g:3810:5: lv_parameter_declaration_1_0= ruleparameter_declaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getParameter_list_linhaAccess().getParameter_declarationParameter_declarationParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_12);
                    lv_parameter_declaration_1_0=ruleparameter_declaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getParameter_list_linhaRule());
                      					}
                      					set(
                      						current,
                      						"parameter_declaration",
                      						lv_parameter_declaration_1_0,
                      						"org.xtext.example.Ansic.parameter_declaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }

                    // InternalAnsic.g:3827:3: ( (lv_parameter_list_linha_2_0= ruleparameter_list_linha ) )
                    // InternalAnsic.g:3828:4: (lv_parameter_list_linha_2_0= ruleparameter_list_linha )
                    {
                    // InternalAnsic.g:3828:4: (lv_parameter_list_linha_2_0= ruleparameter_list_linha )
                    // InternalAnsic.g:3829:5: lv_parameter_list_linha_2_0= ruleparameter_list_linha
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getParameter_list_linhaAccess().getParameter_list_linhaParameter_list_linhaParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_parameter_list_linha_2_0=ruleparameter_list_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getParameter_list_linhaRule());
                      					}
                      					add(
                      						current,
                      						"parameter_list_linha",
                      						lv_parameter_list_linha_2_0,
                      						"org.xtext.example.Ansic.parameter_list_linha");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleparameter_list_linha"


    // $ANTLR start "entryRuleparameter_declaration"
    // InternalAnsic.g:3850:1: entryRuleparameter_declaration returns [EObject current=null] : iv_ruleparameter_declaration= ruleparameter_declaration EOF ;
    public final EObject entryRuleparameter_declaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleparameter_declaration = null;


        try {
            // InternalAnsic.g:3850:62: (iv_ruleparameter_declaration= ruleparameter_declaration EOF )
            // InternalAnsic.g:3851:2: iv_ruleparameter_declaration= ruleparameter_declaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameter_declarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleparameter_declaration=ruleparameter_declaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleparameter_declaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleparameter_declaration"


    // $ANTLR start "ruleparameter_declaration"
    // InternalAnsic.g:3857:1: ruleparameter_declaration returns [EObject current=null] : ( ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) ) | ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_abstract_declarator_3_0= ruleabstract_declarator ) ) ) | ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) ) ;
    public final EObject ruleparameter_declaration() throws RecognitionException {
        EObject current = null;

        EObject lv_declaration_specifiers_0_0 = null;

        EObject lv_declarator_1_0 = null;

        EObject lv_declaration_specifiers_2_0 = null;

        EObject lv_abstract_declarator_3_0 = null;

        EObject lv_declaration_specifiers_4_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:3863:2: ( ( ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) ) | ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_abstract_declarator_3_0= ruleabstract_declarator ) ) ) | ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) ) )
            // InternalAnsic.g:3864:2: ( ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) ) | ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_abstract_declarator_3_0= ruleabstract_declarator ) ) ) | ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) )
            {
            // InternalAnsic.g:3864:2: ( ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) ) | ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_abstract_declarator_3_0= ruleabstract_declarator ) ) ) | ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) )
            int alt31=3;
            alt31 = dfa31.predict(input);
            switch (alt31) {
                case 1 :
                    // InternalAnsic.g:3865:3: ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) )
                    {
                    // InternalAnsic.g:3865:3: ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) )
                    // InternalAnsic.g:3866:4: ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) )
                    {
                    // InternalAnsic.g:3866:4: ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) )
                    // InternalAnsic.g:3867:5: (lv_declaration_specifiers_0_0= ruledeclaration_specifiers )
                    {
                    // InternalAnsic.g:3867:5: (lv_declaration_specifiers_0_0= ruledeclaration_specifiers )
                    // InternalAnsic.g:3868:6: lv_declaration_specifiers_0_0= ruledeclaration_specifiers
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParameter_declarationAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    lv_declaration_specifiers_0_0=ruledeclaration_specifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParameter_declarationRule());
                      						}
                      						set(
                      							current,
                      							"declaration_specifiers",
                      							lv_declaration_specifiers_0_0,
                      							"org.xtext.example.Ansic.declaration_specifiers");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:3885:4: ( (lv_declarator_1_0= ruledeclarator ) )
                    // InternalAnsic.g:3886:5: (lv_declarator_1_0= ruledeclarator )
                    {
                    // InternalAnsic.g:3886:5: (lv_declarator_1_0= ruledeclarator )
                    // InternalAnsic.g:3887:6: lv_declarator_1_0= ruledeclarator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParameter_declarationAccess().getDeclaratorDeclaratorParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_declarator_1_0=ruledeclarator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParameter_declarationRule());
                      						}
                      						set(
                      							current,
                      							"declarator",
                      							lv_declarator_1_0,
                      							"org.xtext.example.Ansic.declarator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:3906:3: ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_abstract_declarator_3_0= ruleabstract_declarator ) ) )
                    {
                    // InternalAnsic.g:3906:3: ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_abstract_declarator_3_0= ruleabstract_declarator ) ) )
                    // InternalAnsic.g:3907:4: ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_abstract_declarator_3_0= ruleabstract_declarator ) )
                    {
                    // InternalAnsic.g:3907:4: ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) )
                    // InternalAnsic.g:3908:5: (lv_declaration_specifiers_2_0= ruledeclaration_specifiers )
                    {
                    // InternalAnsic.g:3908:5: (lv_declaration_specifiers_2_0= ruledeclaration_specifiers )
                    // InternalAnsic.g:3909:6: lv_declaration_specifiers_2_0= ruledeclaration_specifiers
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParameter_declarationAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_25);
                    lv_declaration_specifiers_2_0=ruledeclaration_specifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParameter_declarationRule());
                      						}
                      						set(
                      							current,
                      							"declaration_specifiers",
                      							lv_declaration_specifiers_2_0,
                      							"org.xtext.example.Ansic.declaration_specifiers");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:3926:4: ( (lv_abstract_declarator_3_0= ruleabstract_declarator ) )
                    // InternalAnsic.g:3927:5: (lv_abstract_declarator_3_0= ruleabstract_declarator )
                    {
                    // InternalAnsic.g:3927:5: (lv_abstract_declarator_3_0= ruleabstract_declarator )
                    // InternalAnsic.g:3928:6: lv_abstract_declarator_3_0= ruleabstract_declarator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParameter_declarationAccess().getAbstract_declaratorAbstract_declaratorParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_abstract_declarator_3_0=ruleabstract_declarator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParameter_declarationRule());
                      						}
                      						set(
                      							current,
                      							"abstract_declarator",
                      							lv_abstract_declarator_3_0,
                      							"org.xtext.example.Ansic.abstract_declarator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:3947:3: ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) )
                    {
                    // InternalAnsic.g:3947:3: ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) )
                    // InternalAnsic.g:3948:4: (lv_declaration_specifiers_4_0= ruledeclaration_specifiers )
                    {
                    // InternalAnsic.g:3948:4: (lv_declaration_specifiers_4_0= ruledeclaration_specifiers )
                    // InternalAnsic.g:3949:5: lv_declaration_specifiers_4_0= ruledeclaration_specifiers
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getParameter_declarationAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaration_specifiers_4_0=ruledeclaration_specifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getParameter_declarationRule());
                      					}
                      					set(
                      						current,
                      						"declaration_specifiers",
                      						lv_declaration_specifiers_4_0,
                      						"org.xtext.example.Ansic.declaration_specifiers");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleparameter_declaration"


    // $ANTLR start "entryRuleabstract_declarator"
    // InternalAnsic.g:3970:1: entryRuleabstract_declarator returns [EObject current=null] : iv_ruleabstract_declarator= ruleabstract_declarator EOF ;
    public final EObject entryRuleabstract_declarator() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleabstract_declarator = null;


        try {
            // InternalAnsic.g:3970:60: (iv_ruleabstract_declarator= ruleabstract_declarator EOF )
            // InternalAnsic.g:3971:2: iv_ruleabstract_declarator= ruleabstract_declarator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAbstract_declaratorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleabstract_declarator=ruleabstract_declarator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleabstract_declarator; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleabstract_declarator"


    // $ANTLR start "ruleabstract_declarator"
    // InternalAnsic.g:3977:1: ruleabstract_declarator returns [EObject current=null] : ( ( ( (lv_pointer_0_0= rulepointer ) ) ( (lv_direct_abstract_declarator_1_0= ruledirect_abstract_declarator ) ) ) | ( (lv_pointer_2_0= rulepointer ) ) | ( (lv_direct_abstract_declarator_3_0= ruledirect_abstract_declarator ) ) ) ;
    public final EObject ruleabstract_declarator() throws RecognitionException {
        EObject current = null;

        EObject lv_pointer_0_0 = null;

        EObject lv_direct_abstract_declarator_1_0 = null;

        EObject lv_pointer_2_0 = null;

        EObject lv_direct_abstract_declarator_3_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:3983:2: ( ( ( ( (lv_pointer_0_0= rulepointer ) ) ( (lv_direct_abstract_declarator_1_0= ruledirect_abstract_declarator ) ) ) | ( (lv_pointer_2_0= rulepointer ) ) | ( (lv_direct_abstract_declarator_3_0= ruledirect_abstract_declarator ) ) ) )
            // InternalAnsic.g:3984:2: ( ( ( (lv_pointer_0_0= rulepointer ) ) ( (lv_direct_abstract_declarator_1_0= ruledirect_abstract_declarator ) ) ) | ( (lv_pointer_2_0= rulepointer ) ) | ( (lv_direct_abstract_declarator_3_0= ruledirect_abstract_declarator ) ) )
            {
            // InternalAnsic.g:3984:2: ( ( ( (lv_pointer_0_0= rulepointer ) ) ( (lv_direct_abstract_declarator_1_0= ruledirect_abstract_declarator ) ) ) | ( (lv_pointer_2_0= rulepointer ) ) | ( (lv_direct_abstract_declarator_3_0= ruledirect_abstract_declarator ) ) )
            int alt32=3;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==67) ) {
                int LA32_1 = input.LA(2);

                if ( (synpred81_InternalAnsic()) ) {
                    alt32=1;
                }
                else if ( (synpred82_InternalAnsic()) ) {
                    alt32=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 32, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA32_0==34||LA32_0==68) ) {
                alt32=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }
            switch (alt32) {
                case 1 :
                    // InternalAnsic.g:3985:3: ( ( (lv_pointer_0_0= rulepointer ) ) ( (lv_direct_abstract_declarator_1_0= ruledirect_abstract_declarator ) ) )
                    {
                    // InternalAnsic.g:3985:3: ( ( (lv_pointer_0_0= rulepointer ) ) ( (lv_direct_abstract_declarator_1_0= ruledirect_abstract_declarator ) ) )
                    // InternalAnsic.g:3986:4: ( (lv_pointer_0_0= rulepointer ) ) ( (lv_direct_abstract_declarator_1_0= ruledirect_abstract_declarator ) )
                    {
                    // InternalAnsic.g:3986:4: ( (lv_pointer_0_0= rulepointer ) )
                    // InternalAnsic.g:3987:5: (lv_pointer_0_0= rulepointer )
                    {
                    // InternalAnsic.g:3987:5: (lv_pointer_0_0= rulepointer )
                    // InternalAnsic.g:3988:6: lv_pointer_0_0= rulepointer
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAbstract_declaratorAccess().getPointerPointerParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_25);
                    lv_pointer_0_0=rulepointer();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAbstract_declaratorRule());
                      						}
                      						set(
                      							current,
                      							"pointer",
                      							lv_pointer_0_0,
                      							"org.xtext.example.Ansic.pointer");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:4005:4: ( (lv_direct_abstract_declarator_1_0= ruledirect_abstract_declarator ) )
                    // InternalAnsic.g:4006:5: (lv_direct_abstract_declarator_1_0= ruledirect_abstract_declarator )
                    {
                    // InternalAnsic.g:4006:5: (lv_direct_abstract_declarator_1_0= ruledirect_abstract_declarator )
                    // InternalAnsic.g:4007:6: lv_direct_abstract_declarator_1_0= ruledirect_abstract_declarator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAbstract_declaratorAccess().getDirect_abstract_declaratorDirect_abstract_declaratorParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_direct_abstract_declarator_1_0=ruledirect_abstract_declarator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAbstract_declaratorRule());
                      						}
                      						set(
                      							current,
                      							"direct_abstract_declarator",
                      							lv_direct_abstract_declarator_1_0,
                      							"org.xtext.example.Ansic.direct_abstract_declarator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:4026:3: ( (lv_pointer_2_0= rulepointer ) )
                    {
                    // InternalAnsic.g:4026:3: ( (lv_pointer_2_0= rulepointer ) )
                    // InternalAnsic.g:4027:4: (lv_pointer_2_0= rulepointer )
                    {
                    // InternalAnsic.g:4027:4: (lv_pointer_2_0= rulepointer )
                    // InternalAnsic.g:4028:5: lv_pointer_2_0= rulepointer
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAbstract_declaratorAccess().getPointerPointerParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_pointer_2_0=rulepointer();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getAbstract_declaratorRule());
                      					}
                      					set(
                      						current,
                      						"pointer",
                      						lv_pointer_2_0,
                      						"org.xtext.example.Ansic.pointer");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:4046:3: ( (lv_direct_abstract_declarator_3_0= ruledirect_abstract_declarator ) )
                    {
                    // InternalAnsic.g:4046:3: ( (lv_direct_abstract_declarator_3_0= ruledirect_abstract_declarator ) )
                    // InternalAnsic.g:4047:4: (lv_direct_abstract_declarator_3_0= ruledirect_abstract_declarator )
                    {
                    // InternalAnsic.g:4047:4: (lv_direct_abstract_declarator_3_0= ruledirect_abstract_declarator )
                    // InternalAnsic.g:4048:5: lv_direct_abstract_declarator_3_0= ruledirect_abstract_declarator
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAbstract_declaratorAccess().getDirect_abstract_declaratorDirect_abstract_declaratorParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_direct_abstract_declarator_3_0=ruledirect_abstract_declarator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getAbstract_declaratorRule());
                      					}
                      					set(
                      						current,
                      						"direct_abstract_declarator",
                      						lv_direct_abstract_declarator_3_0,
                      						"org.xtext.example.Ansic.direct_abstract_declarator");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleabstract_declarator"


    // $ANTLR start "entryRuledirect_abstract_declarator"
    // InternalAnsic.g:4069:1: entryRuledirect_abstract_declarator returns [EObject current=null] : iv_ruledirect_abstract_declarator= ruledirect_abstract_declarator EOF ;
    public final EObject entryRuledirect_abstract_declarator() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledirect_abstract_declarator = null;


        try {
            // InternalAnsic.g:4069:67: (iv_ruledirect_abstract_declarator= ruledirect_abstract_declarator EOF )
            // InternalAnsic.g:4070:2: iv_ruledirect_abstract_declarator= ruledirect_abstract_declarator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDirect_abstract_declaratorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledirect_abstract_declarator=ruledirect_abstract_declarator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledirect_abstract_declarator; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledirect_abstract_declarator"


    // $ANTLR start "ruledirect_abstract_declarator"
    // InternalAnsic.g:4076:1: ruledirect_abstract_declarator returns [EObject current=null] : ( ( (otherlv_0= '(' ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) otherlv_2= ')' ) | (otherlv_3= '[' otherlv_4= ']' ) | (otherlv_5= '[' otherlv_6= '*' otherlv_7= ']' ) | (otherlv_8= '[' otherlv_9= 'static' ( (lv_type_qualifier_list_10_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_11_0= ruleassignment_expression ) ) otherlv_12= ']' ) | (otherlv_13= '[' otherlv_14= 'static' ( (lv_assignment_expression_15_0= ruleassignment_expression ) ) otherlv_16= ']' ) | (otherlv_17= '[' ( (lv_type_qualifier_list_18_0= ruletype_qualifier_list ) ) otherlv_19= 'static' ( (lv_assignment_expression_20_0= ruleassignment_expression ) ) otherlv_21= ']' ) | (otherlv_22= '[' ( (lv_type_qualifier_list_23_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_24_0= ruleassignment_expression ) ) otherlv_25= ']' ) | (otherlv_26= '[' ( (lv_type_qualifier_list_27_0= ruletype_qualifier_list ) ) otherlv_28= ']' ) | (otherlv_29= '[' ( (lv_assignment_expression_30_0= ruleassignment_expression ) ) otherlv_31= ']' ) | (otherlv_32= '(' otherlv_33= ')' ) | (otherlv_34= '(' ( (lv_parameter_type_list_35_0= ruleparameter_type_list ) ) otherlv_36= ')' ) ) ( (lv_direct_abstract_declarator_linha_37_0= ruledirect_abstract_declarator_linha ) ) ) ;
    public final EObject ruledirect_abstract_declarator() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_22=null;
        Token otherlv_25=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token otherlv_33=null;
        Token otherlv_34=null;
        Token otherlv_36=null;
        EObject lv_abstract_declarator_1_0 = null;

        EObject lv_type_qualifier_list_10_0 = null;

        EObject lv_assignment_expression_11_0 = null;

        EObject lv_assignment_expression_15_0 = null;

        EObject lv_type_qualifier_list_18_0 = null;

        EObject lv_assignment_expression_20_0 = null;

        EObject lv_type_qualifier_list_23_0 = null;

        EObject lv_assignment_expression_24_0 = null;

        EObject lv_type_qualifier_list_27_0 = null;

        EObject lv_assignment_expression_30_0 = null;

        EObject lv_parameter_type_list_35_0 = null;

        EObject lv_direct_abstract_declarator_linha_37_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:4082:2: ( ( ( (otherlv_0= '(' ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) otherlv_2= ')' ) | (otherlv_3= '[' otherlv_4= ']' ) | (otherlv_5= '[' otherlv_6= '*' otherlv_7= ']' ) | (otherlv_8= '[' otherlv_9= 'static' ( (lv_type_qualifier_list_10_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_11_0= ruleassignment_expression ) ) otherlv_12= ']' ) | (otherlv_13= '[' otherlv_14= 'static' ( (lv_assignment_expression_15_0= ruleassignment_expression ) ) otherlv_16= ']' ) | (otherlv_17= '[' ( (lv_type_qualifier_list_18_0= ruletype_qualifier_list ) ) otherlv_19= 'static' ( (lv_assignment_expression_20_0= ruleassignment_expression ) ) otherlv_21= ']' ) | (otherlv_22= '[' ( (lv_type_qualifier_list_23_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_24_0= ruleassignment_expression ) ) otherlv_25= ']' ) | (otherlv_26= '[' ( (lv_type_qualifier_list_27_0= ruletype_qualifier_list ) ) otherlv_28= ']' ) | (otherlv_29= '[' ( (lv_assignment_expression_30_0= ruleassignment_expression ) ) otherlv_31= ']' ) | (otherlv_32= '(' otherlv_33= ')' ) | (otherlv_34= '(' ( (lv_parameter_type_list_35_0= ruleparameter_type_list ) ) otherlv_36= ')' ) ) ( (lv_direct_abstract_declarator_linha_37_0= ruledirect_abstract_declarator_linha ) ) ) )
            // InternalAnsic.g:4083:2: ( ( (otherlv_0= '(' ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) otherlv_2= ')' ) | (otherlv_3= '[' otherlv_4= ']' ) | (otherlv_5= '[' otherlv_6= '*' otherlv_7= ']' ) | (otherlv_8= '[' otherlv_9= 'static' ( (lv_type_qualifier_list_10_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_11_0= ruleassignment_expression ) ) otherlv_12= ']' ) | (otherlv_13= '[' otherlv_14= 'static' ( (lv_assignment_expression_15_0= ruleassignment_expression ) ) otherlv_16= ']' ) | (otherlv_17= '[' ( (lv_type_qualifier_list_18_0= ruletype_qualifier_list ) ) otherlv_19= 'static' ( (lv_assignment_expression_20_0= ruleassignment_expression ) ) otherlv_21= ']' ) | (otherlv_22= '[' ( (lv_type_qualifier_list_23_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_24_0= ruleassignment_expression ) ) otherlv_25= ']' ) | (otherlv_26= '[' ( (lv_type_qualifier_list_27_0= ruletype_qualifier_list ) ) otherlv_28= ']' ) | (otherlv_29= '[' ( (lv_assignment_expression_30_0= ruleassignment_expression ) ) otherlv_31= ']' ) | (otherlv_32= '(' otherlv_33= ')' ) | (otherlv_34= '(' ( (lv_parameter_type_list_35_0= ruleparameter_type_list ) ) otherlv_36= ')' ) ) ( (lv_direct_abstract_declarator_linha_37_0= ruledirect_abstract_declarator_linha ) ) )
            {
            // InternalAnsic.g:4083:2: ( ( (otherlv_0= '(' ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) otherlv_2= ')' ) | (otherlv_3= '[' otherlv_4= ']' ) | (otherlv_5= '[' otherlv_6= '*' otherlv_7= ']' ) | (otherlv_8= '[' otherlv_9= 'static' ( (lv_type_qualifier_list_10_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_11_0= ruleassignment_expression ) ) otherlv_12= ']' ) | (otherlv_13= '[' otherlv_14= 'static' ( (lv_assignment_expression_15_0= ruleassignment_expression ) ) otherlv_16= ']' ) | (otherlv_17= '[' ( (lv_type_qualifier_list_18_0= ruletype_qualifier_list ) ) otherlv_19= 'static' ( (lv_assignment_expression_20_0= ruleassignment_expression ) ) otherlv_21= ']' ) | (otherlv_22= '[' ( (lv_type_qualifier_list_23_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_24_0= ruleassignment_expression ) ) otherlv_25= ']' ) | (otherlv_26= '[' ( (lv_type_qualifier_list_27_0= ruletype_qualifier_list ) ) otherlv_28= ']' ) | (otherlv_29= '[' ( (lv_assignment_expression_30_0= ruleassignment_expression ) ) otherlv_31= ']' ) | (otherlv_32= '(' otherlv_33= ')' ) | (otherlv_34= '(' ( (lv_parameter_type_list_35_0= ruleparameter_type_list ) ) otherlv_36= ')' ) ) ( (lv_direct_abstract_declarator_linha_37_0= ruledirect_abstract_declarator_linha ) ) )
            // InternalAnsic.g:4084:3: ( (otherlv_0= '(' ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) otherlv_2= ')' ) | (otherlv_3= '[' otherlv_4= ']' ) | (otherlv_5= '[' otherlv_6= '*' otherlv_7= ']' ) | (otherlv_8= '[' otherlv_9= 'static' ( (lv_type_qualifier_list_10_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_11_0= ruleassignment_expression ) ) otherlv_12= ']' ) | (otherlv_13= '[' otherlv_14= 'static' ( (lv_assignment_expression_15_0= ruleassignment_expression ) ) otherlv_16= ']' ) | (otherlv_17= '[' ( (lv_type_qualifier_list_18_0= ruletype_qualifier_list ) ) otherlv_19= 'static' ( (lv_assignment_expression_20_0= ruleassignment_expression ) ) otherlv_21= ']' ) | (otherlv_22= '[' ( (lv_type_qualifier_list_23_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_24_0= ruleassignment_expression ) ) otherlv_25= ']' ) | (otherlv_26= '[' ( (lv_type_qualifier_list_27_0= ruletype_qualifier_list ) ) otherlv_28= ']' ) | (otherlv_29= '[' ( (lv_assignment_expression_30_0= ruleassignment_expression ) ) otherlv_31= ']' ) | (otherlv_32= '(' otherlv_33= ')' ) | (otherlv_34= '(' ( (lv_parameter_type_list_35_0= ruleparameter_type_list ) ) otherlv_36= ')' ) ) ( (lv_direct_abstract_declarator_linha_37_0= ruledirect_abstract_declarator_linha ) )
            {
            // InternalAnsic.g:4084:3: ( (otherlv_0= '(' ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) otherlv_2= ')' ) | (otherlv_3= '[' otherlv_4= ']' ) | (otherlv_5= '[' otherlv_6= '*' otherlv_7= ']' ) | (otherlv_8= '[' otherlv_9= 'static' ( (lv_type_qualifier_list_10_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_11_0= ruleassignment_expression ) ) otherlv_12= ']' ) | (otherlv_13= '[' otherlv_14= 'static' ( (lv_assignment_expression_15_0= ruleassignment_expression ) ) otherlv_16= ']' ) | (otherlv_17= '[' ( (lv_type_qualifier_list_18_0= ruletype_qualifier_list ) ) otherlv_19= 'static' ( (lv_assignment_expression_20_0= ruleassignment_expression ) ) otherlv_21= ']' ) | (otherlv_22= '[' ( (lv_type_qualifier_list_23_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_24_0= ruleassignment_expression ) ) otherlv_25= ']' ) | (otherlv_26= '[' ( (lv_type_qualifier_list_27_0= ruletype_qualifier_list ) ) otherlv_28= ']' ) | (otherlv_29= '[' ( (lv_assignment_expression_30_0= ruleassignment_expression ) ) otherlv_31= ']' ) | (otherlv_32= '(' otherlv_33= ')' ) | (otherlv_34= '(' ( (lv_parameter_type_list_35_0= ruleparameter_type_list ) ) otherlv_36= ')' ) )
            int alt33=11;
            alt33 = dfa33.predict(input);
            switch (alt33) {
                case 1 :
                    // InternalAnsic.g:4085:4: (otherlv_0= '(' ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) otherlv_2= ')' )
                    {
                    // InternalAnsic.g:4085:4: (otherlv_0= '(' ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) otherlv_2= ')' )
                    // InternalAnsic.g:4086:5: otherlv_0= '(' ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) otherlv_2= ')'
                    {
                    otherlv_0=(Token)match(input,34,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_0, grammarAccess.getDirect_abstract_declaratorAccess().getLeftParenthesisKeyword_0_0_0());
                      				
                    }
                    // InternalAnsic.g:4090:5: ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) )
                    // InternalAnsic.g:4091:6: (lv_abstract_declarator_1_0= ruleabstract_declarator )
                    {
                    // InternalAnsic.g:4091:6: (lv_abstract_declarator_1_0= ruleabstract_declarator )
                    // InternalAnsic.g:4092:7: lv_abstract_declarator_1_0= ruleabstract_declarator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getAbstract_declaratorAbstract_declaratorParserRuleCall_0_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_7);
                    lv_abstract_declarator_1_0=ruleabstract_declarator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getDirect_abstract_declaratorRule());
                      							}
                      							set(
                      								current,
                      								"abstract_declarator",
                      								lv_abstract_declarator_1_0,
                      								"org.xtext.example.Ansic.abstract_declarator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,35,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getDirect_abstract_declaratorAccess().getRightParenthesisKeyword_0_0_2());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:4115:4: (otherlv_3= '[' otherlv_4= ']' )
                    {
                    // InternalAnsic.g:4115:4: (otherlv_3= '[' otherlv_4= ']' )
                    // InternalAnsic.g:4116:5: otherlv_3= '[' otherlv_4= ']'
                    {
                    otherlv_3=(Token)match(input,68,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getDirect_abstract_declaratorAccess().getLeftSquareBracketKeyword_0_1_0());
                      				
                    }
                    otherlv_4=(Token)match(input,69,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getDirect_abstract_declaratorAccess().getRightSquareBracketKeyword_0_1_1());
                      				
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:4126:4: (otherlv_5= '[' otherlv_6= '*' otherlv_7= ']' )
                    {
                    // InternalAnsic.g:4126:4: (otherlv_5= '[' otherlv_6= '*' otherlv_7= ']' )
                    // InternalAnsic.g:4127:5: otherlv_5= '[' otherlv_6= '*' otherlv_7= ']'
                    {
                    otherlv_5=(Token)match(input,68,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getDirect_abstract_declaratorAccess().getLeftSquareBracketKeyword_0_2_0());
                      				
                    }
                    otherlv_6=(Token)match(input,67,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getDirect_abstract_declaratorAccess().getAsteriskKeyword_0_2_1());
                      				
                    }
                    otherlv_7=(Token)match(input,69,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getDirect_abstract_declaratorAccess().getRightSquareBracketKeyword_0_2_2());
                      				
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalAnsic.g:4141:4: (otherlv_8= '[' otherlv_9= 'static' ( (lv_type_qualifier_list_10_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_11_0= ruleassignment_expression ) ) otherlv_12= ']' )
                    {
                    // InternalAnsic.g:4141:4: (otherlv_8= '[' otherlv_9= 'static' ( (lv_type_qualifier_list_10_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_11_0= ruleassignment_expression ) ) otherlv_12= ']' )
                    // InternalAnsic.g:4142:5: otherlv_8= '[' otherlv_9= 'static' ( (lv_type_qualifier_list_10_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_11_0= ruleassignment_expression ) ) otherlv_12= ']'
                    {
                    otherlv_8=(Token)match(input,68,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_8, grammarAccess.getDirect_abstract_declaratorAccess().getLeftSquareBracketKeyword_0_3_0());
                      				
                    }
                    otherlv_9=(Token)match(input,63,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getDirect_abstract_declaratorAccess().getStaticKeyword_0_3_1());
                      				
                    }
                    // InternalAnsic.g:4150:5: ( (lv_type_qualifier_list_10_0= ruletype_qualifier_list ) )
                    // InternalAnsic.g:4151:6: (lv_type_qualifier_list_10_0= ruletype_qualifier_list )
                    {
                    // InternalAnsic.g:4151:6: (lv_type_qualifier_list_10_0= ruletype_qualifier_list )
                    // InternalAnsic.g:4152:7: lv_type_qualifier_list_10_0= ruletype_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getType_qualifier_listType_qualifier_listParserRuleCall_0_3_2_0());
                      						
                    }
                    pushFollow(FOLLOW_8);
                    lv_type_qualifier_list_10_0=ruletype_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getDirect_abstract_declaratorRule());
                      							}
                      							set(
                      								current,
                      								"type_qualifier_list",
                      								lv_type_qualifier_list_10_0,
                      								"org.xtext.example.Ansic.type_qualifier_list");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalAnsic.g:4169:5: ( (lv_assignment_expression_11_0= ruleassignment_expression ) )
                    // InternalAnsic.g:4170:6: (lv_assignment_expression_11_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:4170:6: (lv_assignment_expression_11_0= ruleassignment_expression )
                    // InternalAnsic.g:4171:7: lv_assignment_expression_11_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getAssignment_expressionAssignment_expressionParserRuleCall_0_3_3_0());
                      						
                    }
                    pushFollow(FOLLOW_21);
                    lv_assignment_expression_11_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getDirect_abstract_declaratorRule());
                      							}
                      							set(
                      								current,
                      								"assignment_expression",
                      								lv_assignment_expression_11_0,
                      								"org.xtext.example.Ansic.assignment_expression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_12=(Token)match(input,69,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_12, grammarAccess.getDirect_abstract_declaratorAccess().getRightSquareBracketKeyword_0_3_4());
                      				
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalAnsic.g:4194:4: (otherlv_13= '[' otherlv_14= 'static' ( (lv_assignment_expression_15_0= ruleassignment_expression ) ) otherlv_16= ']' )
                    {
                    // InternalAnsic.g:4194:4: (otherlv_13= '[' otherlv_14= 'static' ( (lv_assignment_expression_15_0= ruleassignment_expression ) ) otherlv_16= ']' )
                    // InternalAnsic.g:4195:5: otherlv_13= '[' otherlv_14= 'static' ( (lv_assignment_expression_15_0= ruleassignment_expression ) ) otherlv_16= ']'
                    {
                    otherlv_13=(Token)match(input,68,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_13, grammarAccess.getDirect_abstract_declaratorAccess().getLeftSquareBracketKeyword_0_4_0());
                      				
                    }
                    otherlv_14=(Token)match(input,63,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_14, grammarAccess.getDirect_abstract_declaratorAccess().getStaticKeyword_0_4_1());
                      				
                    }
                    // InternalAnsic.g:4203:5: ( (lv_assignment_expression_15_0= ruleassignment_expression ) )
                    // InternalAnsic.g:4204:6: (lv_assignment_expression_15_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:4204:6: (lv_assignment_expression_15_0= ruleassignment_expression )
                    // InternalAnsic.g:4205:7: lv_assignment_expression_15_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getAssignment_expressionAssignment_expressionParserRuleCall_0_4_2_0());
                      						
                    }
                    pushFollow(FOLLOW_21);
                    lv_assignment_expression_15_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getDirect_abstract_declaratorRule());
                      							}
                      							set(
                      								current,
                      								"assignment_expression",
                      								lv_assignment_expression_15_0,
                      								"org.xtext.example.Ansic.assignment_expression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_16=(Token)match(input,69,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_16, grammarAccess.getDirect_abstract_declaratorAccess().getRightSquareBracketKeyword_0_4_3());
                      				
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalAnsic.g:4228:4: (otherlv_17= '[' ( (lv_type_qualifier_list_18_0= ruletype_qualifier_list ) ) otherlv_19= 'static' ( (lv_assignment_expression_20_0= ruleassignment_expression ) ) otherlv_21= ']' )
                    {
                    // InternalAnsic.g:4228:4: (otherlv_17= '[' ( (lv_type_qualifier_list_18_0= ruletype_qualifier_list ) ) otherlv_19= 'static' ( (lv_assignment_expression_20_0= ruleassignment_expression ) ) otherlv_21= ']' )
                    // InternalAnsic.g:4229:5: otherlv_17= '[' ( (lv_type_qualifier_list_18_0= ruletype_qualifier_list ) ) otherlv_19= 'static' ( (lv_assignment_expression_20_0= ruleassignment_expression ) ) otherlv_21= ']'
                    {
                    otherlv_17=(Token)match(input,68,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_17, grammarAccess.getDirect_abstract_declaratorAccess().getLeftSquareBracketKeyword_0_5_0());
                      				
                    }
                    // InternalAnsic.g:4233:5: ( (lv_type_qualifier_list_18_0= ruletype_qualifier_list ) )
                    // InternalAnsic.g:4234:6: (lv_type_qualifier_list_18_0= ruletype_qualifier_list )
                    {
                    // InternalAnsic.g:4234:6: (lv_type_qualifier_list_18_0= ruletype_qualifier_list )
                    // InternalAnsic.g:4235:7: lv_type_qualifier_list_18_0= ruletype_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getType_qualifier_listType_qualifier_listParserRuleCall_0_5_1_0());
                      						
                    }
                    pushFollow(FOLLOW_22);
                    lv_type_qualifier_list_18_0=ruletype_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getDirect_abstract_declaratorRule());
                      							}
                      							set(
                      								current,
                      								"type_qualifier_list",
                      								lv_type_qualifier_list_18_0,
                      								"org.xtext.example.Ansic.type_qualifier_list");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_19=(Token)match(input,63,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_19, grammarAccess.getDirect_abstract_declaratorAccess().getStaticKeyword_0_5_2());
                      				
                    }
                    // InternalAnsic.g:4256:5: ( (lv_assignment_expression_20_0= ruleassignment_expression ) )
                    // InternalAnsic.g:4257:6: (lv_assignment_expression_20_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:4257:6: (lv_assignment_expression_20_0= ruleassignment_expression )
                    // InternalAnsic.g:4258:7: lv_assignment_expression_20_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getAssignment_expressionAssignment_expressionParserRuleCall_0_5_3_0());
                      						
                    }
                    pushFollow(FOLLOW_21);
                    lv_assignment_expression_20_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getDirect_abstract_declaratorRule());
                      							}
                      							set(
                      								current,
                      								"assignment_expression",
                      								lv_assignment_expression_20_0,
                      								"org.xtext.example.Ansic.assignment_expression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_21=(Token)match(input,69,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_21, grammarAccess.getDirect_abstract_declaratorAccess().getRightSquareBracketKeyword_0_5_4());
                      				
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalAnsic.g:4281:4: (otherlv_22= '[' ( (lv_type_qualifier_list_23_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_24_0= ruleassignment_expression ) ) otherlv_25= ']' )
                    {
                    // InternalAnsic.g:4281:4: (otherlv_22= '[' ( (lv_type_qualifier_list_23_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_24_0= ruleassignment_expression ) ) otherlv_25= ']' )
                    // InternalAnsic.g:4282:5: otherlv_22= '[' ( (lv_type_qualifier_list_23_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_24_0= ruleassignment_expression ) ) otherlv_25= ']'
                    {
                    otherlv_22=(Token)match(input,68,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_22, grammarAccess.getDirect_abstract_declaratorAccess().getLeftSquareBracketKeyword_0_6_0());
                      				
                    }
                    // InternalAnsic.g:4286:5: ( (lv_type_qualifier_list_23_0= ruletype_qualifier_list ) )
                    // InternalAnsic.g:4287:6: (lv_type_qualifier_list_23_0= ruletype_qualifier_list )
                    {
                    // InternalAnsic.g:4287:6: (lv_type_qualifier_list_23_0= ruletype_qualifier_list )
                    // InternalAnsic.g:4288:7: lv_type_qualifier_list_23_0= ruletype_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getType_qualifier_listType_qualifier_listParserRuleCall_0_6_1_0());
                      						
                    }
                    pushFollow(FOLLOW_8);
                    lv_type_qualifier_list_23_0=ruletype_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getDirect_abstract_declaratorRule());
                      							}
                      							set(
                      								current,
                      								"type_qualifier_list",
                      								lv_type_qualifier_list_23_0,
                      								"org.xtext.example.Ansic.type_qualifier_list");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalAnsic.g:4305:5: ( (lv_assignment_expression_24_0= ruleassignment_expression ) )
                    // InternalAnsic.g:4306:6: (lv_assignment_expression_24_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:4306:6: (lv_assignment_expression_24_0= ruleassignment_expression )
                    // InternalAnsic.g:4307:7: lv_assignment_expression_24_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getAssignment_expressionAssignment_expressionParserRuleCall_0_6_2_0());
                      						
                    }
                    pushFollow(FOLLOW_21);
                    lv_assignment_expression_24_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getDirect_abstract_declaratorRule());
                      							}
                      							set(
                      								current,
                      								"assignment_expression",
                      								lv_assignment_expression_24_0,
                      								"org.xtext.example.Ansic.assignment_expression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_25=(Token)match(input,69,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_25, grammarAccess.getDirect_abstract_declaratorAccess().getRightSquareBracketKeyword_0_6_3());
                      				
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalAnsic.g:4330:4: (otherlv_26= '[' ( (lv_type_qualifier_list_27_0= ruletype_qualifier_list ) ) otherlv_28= ']' )
                    {
                    // InternalAnsic.g:4330:4: (otherlv_26= '[' ( (lv_type_qualifier_list_27_0= ruletype_qualifier_list ) ) otherlv_28= ']' )
                    // InternalAnsic.g:4331:5: otherlv_26= '[' ( (lv_type_qualifier_list_27_0= ruletype_qualifier_list ) ) otherlv_28= ']'
                    {
                    otherlv_26=(Token)match(input,68,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_26, grammarAccess.getDirect_abstract_declaratorAccess().getLeftSquareBracketKeyword_0_7_0());
                      				
                    }
                    // InternalAnsic.g:4335:5: ( (lv_type_qualifier_list_27_0= ruletype_qualifier_list ) )
                    // InternalAnsic.g:4336:6: (lv_type_qualifier_list_27_0= ruletype_qualifier_list )
                    {
                    // InternalAnsic.g:4336:6: (lv_type_qualifier_list_27_0= ruletype_qualifier_list )
                    // InternalAnsic.g:4337:7: lv_type_qualifier_list_27_0= ruletype_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getType_qualifier_listType_qualifier_listParserRuleCall_0_7_1_0());
                      						
                    }
                    pushFollow(FOLLOW_21);
                    lv_type_qualifier_list_27_0=ruletype_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getDirect_abstract_declaratorRule());
                      							}
                      							set(
                      								current,
                      								"type_qualifier_list",
                      								lv_type_qualifier_list_27_0,
                      								"org.xtext.example.Ansic.type_qualifier_list");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_28=(Token)match(input,69,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_28, grammarAccess.getDirect_abstract_declaratorAccess().getRightSquareBracketKeyword_0_7_2());
                      				
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalAnsic.g:4360:4: (otherlv_29= '[' ( (lv_assignment_expression_30_0= ruleassignment_expression ) ) otherlv_31= ']' )
                    {
                    // InternalAnsic.g:4360:4: (otherlv_29= '[' ( (lv_assignment_expression_30_0= ruleassignment_expression ) ) otherlv_31= ']' )
                    // InternalAnsic.g:4361:5: otherlv_29= '[' ( (lv_assignment_expression_30_0= ruleassignment_expression ) ) otherlv_31= ']'
                    {
                    otherlv_29=(Token)match(input,68,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_29, grammarAccess.getDirect_abstract_declaratorAccess().getLeftSquareBracketKeyword_0_8_0());
                      				
                    }
                    // InternalAnsic.g:4365:5: ( (lv_assignment_expression_30_0= ruleassignment_expression ) )
                    // InternalAnsic.g:4366:6: (lv_assignment_expression_30_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:4366:6: (lv_assignment_expression_30_0= ruleassignment_expression )
                    // InternalAnsic.g:4367:7: lv_assignment_expression_30_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getAssignment_expressionAssignment_expressionParserRuleCall_0_8_1_0());
                      						
                    }
                    pushFollow(FOLLOW_21);
                    lv_assignment_expression_30_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getDirect_abstract_declaratorRule());
                      							}
                      							set(
                      								current,
                      								"assignment_expression",
                      								lv_assignment_expression_30_0,
                      								"org.xtext.example.Ansic.assignment_expression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_31=(Token)match(input,69,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_31, grammarAccess.getDirect_abstract_declaratorAccess().getRightSquareBracketKeyword_0_8_2());
                      				
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalAnsic.g:4390:4: (otherlv_32= '(' otherlv_33= ')' )
                    {
                    // InternalAnsic.g:4390:4: (otherlv_32= '(' otherlv_33= ')' )
                    // InternalAnsic.g:4391:5: otherlv_32= '(' otherlv_33= ')'
                    {
                    otherlv_32=(Token)match(input,34,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_32, grammarAccess.getDirect_abstract_declaratorAccess().getLeftParenthesisKeyword_0_9_0());
                      				
                    }
                    otherlv_33=(Token)match(input,35,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_33, grammarAccess.getDirect_abstract_declaratorAccess().getRightParenthesisKeyword_0_9_1());
                      				
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalAnsic.g:4401:4: (otherlv_34= '(' ( (lv_parameter_type_list_35_0= ruleparameter_type_list ) ) otherlv_36= ')' )
                    {
                    // InternalAnsic.g:4401:4: (otherlv_34= '(' ( (lv_parameter_type_list_35_0= ruleparameter_type_list ) ) otherlv_36= ')' )
                    // InternalAnsic.g:4402:5: otherlv_34= '(' ( (lv_parameter_type_list_35_0= ruleparameter_type_list ) ) otherlv_36= ')'
                    {
                    otherlv_34=(Token)match(input,34,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_34, grammarAccess.getDirect_abstract_declaratorAccess().getLeftParenthesisKeyword_0_10_0());
                      				
                    }
                    // InternalAnsic.g:4406:5: ( (lv_parameter_type_list_35_0= ruleparameter_type_list ) )
                    // InternalAnsic.g:4407:6: (lv_parameter_type_list_35_0= ruleparameter_type_list )
                    {
                    // InternalAnsic.g:4407:6: (lv_parameter_type_list_35_0= ruleparameter_type_list )
                    // InternalAnsic.g:4408:7: lv_parameter_type_list_35_0= ruleparameter_type_list
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getParameter_type_listParameter_type_listParserRuleCall_0_10_1_0());
                      						
                    }
                    pushFollow(FOLLOW_7);
                    lv_parameter_type_list_35_0=ruleparameter_type_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getDirect_abstract_declaratorRule());
                      							}
                      							set(
                      								current,
                      								"parameter_type_list",
                      								lv_parameter_type_list_35_0,
                      								"org.xtext.example.Ansic.parameter_type_list");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_36=(Token)match(input,35,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_36, grammarAccess.getDirect_abstract_declaratorAccess().getRightParenthesisKeyword_0_10_2());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalAnsic.g:4431:3: ( (lv_direct_abstract_declarator_linha_37_0= ruledirect_abstract_declarator_linha ) )
            // InternalAnsic.g:4432:4: (lv_direct_abstract_declarator_linha_37_0= ruledirect_abstract_declarator_linha )
            {
            // InternalAnsic.g:4432:4: (lv_direct_abstract_declarator_linha_37_0= ruledirect_abstract_declarator_linha )
            // InternalAnsic.g:4433:5: lv_direct_abstract_declarator_linha_37_0= ruledirect_abstract_declarator_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getDirect_abstract_declarator_linhaDirect_abstract_declarator_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_direct_abstract_declarator_linha_37_0=ruledirect_abstract_declarator_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDirect_abstract_declaratorRule());
              					}
              					set(
              						current,
              						"direct_abstract_declarator_linha",
              						lv_direct_abstract_declarator_linha_37_0,
              						"org.xtext.example.Ansic.direct_abstract_declarator_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledirect_abstract_declarator"


    // $ANTLR start "entryRuleinitializer"
    // InternalAnsic.g:4454:1: entryRuleinitializer returns [EObject current=null] : iv_ruleinitializer= ruleinitializer EOF ;
    public final EObject entryRuleinitializer() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleinitializer = null;


        try {
            // InternalAnsic.g:4454:52: (iv_ruleinitializer= ruleinitializer EOF )
            // InternalAnsic.g:4455:2: iv_ruleinitializer= ruleinitializer EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInitializerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleinitializer=ruleinitializer();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleinitializer; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleinitializer"


    // $ANTLR start "ruleinitializer"
    // InternalAnsic.g:4461:1: ruleinitializer returns [EObject current=null] : ( (otherlv_0= '{' ( (lv_init_declarator_list_1_0= ruleinitializer_list ) ) otherlv_2= '}' ) | (otherlv_3= '{' ( (lv_init_declarator_list_4_0= ruleinitializer_list ) ) otherlv_5= ',' otherlv_6= '}' ) | ( (lv_assignment_expression_7_0= ruleassignment_expression ) ) ) ;
    public final EObject ruleinitializer() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_init_declarator_list_1_0 = null;

        EObject lv_init_declarator_list_4_0 = null;

        EObject lv_assignment_expression_7_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:4467:2: ( ( (otherlv_0= '{' ( (lv_init_declarator_list_1_0= ruleinitializer_list ) ) otherlv_2= '}' ) | (otherlv_3= '{' ( (lv_init_declarator_list_4_0= ruleinitializer_list ) ) otherlv_5= ',' otherlv_6= '}' ) | ( (lv_assignment_expression_7_0= ruleassignment_expression ) ) ) )
            // InternalAnsic.g:4468:2: ( (otherlv_0= '{' ( (lv_init_declarator_list_1_0= ruleinitializer_list ) ) otherlv_2= '}' ) | (otherlv_3= '{' ( (lv_init_declarator_list_4_0= ruleinitializer_list ) ) otherlv_5= ',' otherlv_6= '}' ) | ( (lv_assignment_expression_7_0= ruleassignment_expression ) ) )
            {
            // InternalAnsic.g:4468:2: ( (otherlv_0= '{' ( (lv_init_declarator_list_1_0= ruleinitializer_list ) ) otherlv_2= '}' ) | (otherlv_3= '{' ( (lv_init_declarator_list_4_0= ruleinitializer_list ) ) otherlv_5= ',' otherlv_6= '}' ) | ( (lv_assignment_expression_7_0= ruleassignment_expression ) ) )
            int alt34=3;
            alt34 = dfa34.predict(input);
            switch (alt34) {
                case 1 :
                    // InternalAnsic.g:4469:3: (otherlv_0= '{' ( (lv_init_declarator_list_1_0= ruleinitializer_list ) ) otherlv_2= '}' )
                    {
                    // InternalAnsic.g:4469:3: (otherlv_0= '{' ( (lv_init_declarator_list_1_0= ruleinitializer_list ) ) otherlv_2= '}' )
                    // InternalAnsic.g:4470:4: otherlv_0= '{' ( (lv_init_declarator_list_1_0= ruleinitializer_list ) ) otherlv_2= '}'
                    {
                    otherlv_0=(Token)match(input,54,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getInitializerAccess().getLeftCurlyBracketKeyword_0_0());
                      			
                    }
                    // InternalAnsic.g:4474:4: ( (lv_init_declarator_list_1_0= ruleinitializer_list ) )
                    // InternalAnsic.g:4475:5: (lv_init_declarator_list_1_0= ruleinitializer_list )
                    {
                    // InternalAnsic.g:4475:5: (lv_init_declarator_list_1_0= ruleinitializer_list )
                    // InternalAnsic.g:4476:6: lv_init_declarator_list_1_0= ruleinitializer_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInitializerAccess().getInit_declarator_listInitializer_listParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_init_declarator_list_1_0=ruleinitializer_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInitializerRule());
                      						}
                      						set(
                      							current,
                      							"init_declarator_list",
                      							lv_init_declarator_list_1_0,
                      							"org.xtext.example.Ansic.initializer_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getInitializerAccess().getRightCurlyBracketKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:4499:3: (otherlv_3= '{' ( (lv_init_declarator_list_4_0= ruleinitializer_list ) ) otherlv_5= ',' otherlv_6= '}' )
                    {
                    // InternalAnsic.g:4499:3: (otherlv_3= '{' ( (lv_init_declarator_list_4_0= ruleinitializer_list ) ) otherlv_5= ',' otherlv_6= '}' )
                    // InternalAnsic.g:4500:4: otherlv_3= '{' ( (lv_init_declarator_list_4_0= ruleinitializer_list ) ) otherlv_5= ',' otherlv_6= '}'
                    {
                    otherlv_3=(Token)match(input,54,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getInitializerAccess().getLeftCurlyBracketKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:4504:4: ( (lv_init_declarator_list_4_0= ruleinitializer_list ) )
                    // InternalAnsic.g:4505:5: (lv_init_declarator_list_4_0= ruleinitializer_list )
                    {
                    // InternalAnsic.g:4505:5: (lv_init_declarator_list_4_0= ruleinitializer_list )
                    // InternalAnsic.g:4506:6: lv_init_declarator_list_4_0= ruleinitializer_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInitializerAccess().getInit_declarator_listInitializer_listParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_init_declarator_list_4_0=ruleinitializer_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInitializerRule());
                      						}
                      						set(
                      							current,
                      							"init_declarator_list",
                      							lv_init_declarator_list_4_0,
                      							"org.xtext.example.Ansic.initializer_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,56,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getInitializerAccess().getCommaKeyword_1_2());
                      			
                    }
                    otherlv_6=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getInitializerAccess().getRightCurlyBracketKeyword_1_3());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:4533:3: ( (lv_assignment_expression_7_0= ruleassignment_expression ) )
                    {
                    // InternalAnsic.g:4533:3: ( (lv_assignment_expression_7_0= ruleassignment_expression ) )
                    // InternalAnsic.g:4534:4: (lv_assignment_expression_7_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:4534:4: (lv_assignment_expression_7_0= ruleassignment_expression )
                    // InternalAnsic.g:4535:5: lv_assignment_expression_7_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getInitializerAccess().getAssignment_expressionAssignment_expressionParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_assignment_expression_7_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getInitializerRule());
                      					}
                      					set(
                      						current,
                      						"assignment_expression",
                      						lv_assignment_expression_7_0,
                      						"org.xtext.example.Ansic.assignment_expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleinitializer"


    // $ANTLR start "entryRuledirect_abstract_declarator_linha"
    // InternalAnsic.g:4556:1: entryRuledirect_abstract_declarator_linha returns [EObject current=null] : iv_ruledirect_abstract_declarator_linha= ruledirect_abstract_declarator_linha EOF ;
    public final EObject entryRuledirect_abstract_declarator_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledirect_abstract_declarator_linha = null;


        try {
            // InternalAnsic.g:4556:73: (iv_ruledirect_abstract_declarator_linha= ruledirect_abstract_declarator_linha EOF )
            // InternalAnsic.g:4557:2: iv_ruledirect_abstract_declarator_linha= ruledirect_abstract_declarator_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDirect_abstract_declarator_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledirect_abstract_declarator_linha=ruledirect_abstract_declarator_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledirect_abstract_declarator_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledirect_abstract_declarator_linha"


    // $ANTLR start "ruledirect_abstract_declarator_linha"
    // InternalAnsic.g:4563:1: ruledirect_abstract_declarator_linha returns [EObject current=null] : ( () ( ( (lv_direct_abstract_declarator_complement_1_0= ruledirect_abstract_declarator_complement ) ) ( (lv_direct_abstract_declarator_linha_2_0= ruledirect_abstract_declarator_linha ) ) )? ) ;
    public final EObject ruledirect_abstract_declarator_linha() throws RecognitionException {
        EObject current = null;

        EObject lv_direct_abstract_declarator_complement_1_0 = null;

        EObject lv_direct_abstract_declarator_linha_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:4569:2: ( ( () ( ( (lv_direct_abstract_declarator_complement_1_0= ruledirect_abstract_declarator_complement ) ) ( (lv_direct_abstract_declarator_linha_2_0= ruledirect_abstract_declarator_linha ) ) )? ) )
            // InternalAnsic.g:4570:2: ( () ( ( (lv_direct_abstract_declarator_complement_1_0= ruledirect_abstract_declarator_complement ) ) ( (lv_direct_abstract_declarator_linha_2_0= ruledirect_abstract_declarator_linha ) ) )? )
            {
            // InternalAnsic.g:4570:2: ( () ( ( (lv_direct_abstract_declarator_complement_1_0= ruledirect_abstract_declarator_complement ) ) ( (lv_direct_abstract_declarator_linha_2_0= ruledirect_abstract_declarator_linha ) ) )? )
            // InternalAnsic.g:4571:3: () ( ( (lv_direct_abstract_declarator_complement_1_0= ruledirect_abstract_declarator_complement ) ) ( (lv_direct_abstract_declarator_linha_2_0= ruledirect_abstract_declarator_linha ) ) )?
            {
            // InternalAnsic.g:4571:3: ()
            // InternalAnsic.g:4572:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDirect_abstract_declarator_linhaAccess().getDirectAbstractDeclarratorLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:4581:3: ( ( (lv_direct_abstract_declarator_complement_1_0= ruledirect_abstract_declarator_complement ) ) ( (lv_direct_abstract_declarator_linha_2_0= ruledirect_abstract_declarator_linha ) ) )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==34||LA35_0==68) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // InternalAnsic.g:4582:4: ( (lv_direct_abstract_declarator_complement_1_0= ruledirect_abstract_declarator_complement ) ) ( (lv_direct_abstract_declarator_linha_2_0= ruledirect_abstract_declarator_linha ) )
                    {
                    // InternalAnsic.g:4582:4: ( (lv_direct_abstract_declarator_complement_1_0= ruledirect_abstract_declarator_complement ) )
                    // InternalAnsic.g:4583:5: (lv_direct_abstract_declarator_complement_1_0= ruledirect_abstract_declarator_complement )
                    {
                    // InternalAnsic.g:4583:5: (lv_direct_abstract_declarator_complement_1_0= ruledirect_abstract_declarator_complement )
                    // InternalAnsic.g:4584:6: lv_direct_abstract_declarator_complement_1_0= ruledirect_abstract_declarator_complement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_abstract_declarator_linhaAccess().getDirect_abstract_declarator_complementDirect_abstract_declarator_complementParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_20);
                    lv_direct_abstract_declarator_complement_1_0=ruledirect_abstract_declarator_complement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_abstract_declarator_linhaRule());
                      						}
                      						set(
                      							current,
                      							"direct_abstract_declarator_complement",
                      							lv_direct_abstract_declarator_complement_1_0,
                      							"org.xtext.example.Ansic.direct_abstract_declarator_complement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:4601:4: ( (lv_direct_abstract_declarator_linha_2_0= ruledirect_abstract_declarator_linha ) )
                    // InternalAnsic.g:4602:5: (lv_direct_abstract_declarator_linha_2_0= ruledirect_abstract_declarator_linha )
                    {
                    // InternalAnsic.g:4602:5: (lv_direct_abstract_declarator_linha_2_0= ruledirect_abstract_declarator_linha )
                    // InternalAnsic.g:4603:6: lv_direct_abstract_declarator_linha_2_0= ruledirect_abstract_declarator_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_abstract_declarator_linhaAccess().getDirect_abstract_declarator_linhaDirect_abstract_declarator_linhaParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_direct_abstract_declarator_linha_2_0=ruledirect_abstract_declarator_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_abstract_declarator_linhaRule());
                      						}
                      						set(
                      							current,
                      							"direct_abstract_declarator_linha",
                      							lv_direct_abstract_declarator_linha_2_0,
                      							"org.xtext.example.Ansic.direct_abstract_declarator_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledirect_abstract_declarator_linha"


    // $ANTLR start "entryRuledirect_abstract_declarator_complement"
    // InternalAnsic.g:4625:1: entryRuledirect_abstract_declarator_complement returns [EObject current=null] : iv_ruledirect_abstract_declarator_complement= ruledirect_abstract_declarator_complement EOF ;
    public final EObject entryRuledirect_abstract_declarator_complement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledirect_abstract_declarator_complement = null;


        try {
            // InternalAnsic.g:4625:78: (iv_ruledirect_abstract_declarator_complement= ruledirect_abstract_declarator_complement EOF )
            // InternalAnsic.g:4626:2: iv_ruledirect_abstract_declarator_complement= ruledirect_abstract_declarator_complement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDirect_abstract_declarator_complementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledirect_abstract_declarator_complement=ruledirect_abstract_declarator_complement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledirect_abstract_declarator_complement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledirect_abstract_declarator_complement"


    // $ANTLR start "ruledirect_abstract_declarator_complement"
    // InternalAnsic.g:4632:1: ruledirect_abstract_declarator_complement returns [EObject current=null] : ( (otherlv_0= '[' otherlv_1= ']' ) | (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' ) | (otherlv_5= '[' otherlv_6= 'static' this_type_qualifier_list_7= ruletype_qualifier_list ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' ) | (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' ) | (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_16_0= ruleassignment_expression ) ) otherlv_17= ']' ) | (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' ) | (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) otherlv_25= ']' ) | (otherlv_26= '[' ( (lv_assignment_expression_27_0= ruleassignment_expression ) ) otherlv_28= ']' ) | (otherlv_29= '(' otherlv_30= ')' ) | (otherlv_31= '(' ( (lv_parameter_type_list_32_0= ruleparameter_type_list ) ) otherlv_33= ')' ) ) ;
    public final EObject ruledirect_abstract_declarator_complement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        Token otherlv_30=null;
        Token otherlv_31=null;
        Token otherlv_33=null;
        EObject this_type_qualifier_list_7 = null;

        EObject lv_assignment_expression_8_0 = null;

        EObject lv_assignment_expression_12_0 = null;

        EObject lv_type_qualifier_list_15_0 = null;

        EObject lv_assignment_expression_16_0 = null;

        EObject lv_type_qualifier_list_19_0 = null;

        EObject lv_assignment_expression_21_0 = null;

        EObject lv_type_qualifier_list_24_0 = null;

        EObject lv_assignment_expression_27_0 = null;

        EObject lv_parameter_type_list_32_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:4638:2: ( ( (otherlv_0= '[' otherlv_1= ']' ) | (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' ) | (otherlv_5= '[' otherlv_6= 'static' this_type_qualifier_list_7= ruletype_qualifier_list ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' ) | (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' ) | (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_16_0= ruleassignment_expression ) ) otherlv_17= ']' ) | (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' ) | (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) otherlv_25= ']' ) | (otherlv_26= '[' ( (lv_assignment_expression_27_0= ruleassignment_expression ) ) otherlv_28= ']' ) | (otherlv_29= '(' otherlv_30= ')' ) | (otherlv_31= '(' ( (lv_parameter_type_list_32_0= ruleparameter_type_list ) ) otherlv_33= ')' ) ) )
            // InternalAnsic.g:4639:2: ( (otherlv_0= '[' otherlv_1= ']' ) | (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' ) | (otherlv_5= '[' otherlv_6= 'static' this_type_qualifier_list_7= ruletype_qualifier_list ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' ) | (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' ) | (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_16_0= ruleassignment_expression ) ) otherlv_17= ']' ) | (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' ) | (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) otherlv_25= ']' ) | (otherlv_26= '[' ( (lv_assignment_expression_27_0= ruleassignment_expression ) ) otherlv_28= ']' ) | (otherlv_29= '(' otherlv_30= ')' ) | (otherlv_31= '(' ( (lv_parameter_type_list_32_0= ruleparameter_type_list ) ) otherlv_33= ')' ) )
            {
            // InternalAnsic.g:4639:2: ( (otherlv_0= '[' otherlv_1= ']' ) | (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' ) | (otherlv_5= '[' otherlv_6= 'static' this_type_qualifier_list_7= ruletype_qualifier_list ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' ) | (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' ) | (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_16_0= ruleassignment_expression ) ) otherlv_17= ']' ) | (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' ) | (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) otherlv_25= ']' ) | (otherlv_26= '[' ( (lv_assignment_expression_27_0= ruleassignment_expression ) ) otherlv_28= ']' ) | (otherlv_29= '(' otherlv_30= ')' ) | (otherlv_31= '(' ( (lv_parameter_type_list_32_0= ruleparameter_type_list ) ) otherlv_33= ')' ) )
            int alt36=10;
            alt36 = dfa36.predict(input);
            switch (alt36) {
                case 1 :
                    // InternalAnsic.g:4640:3: (otherlv_0= '[' otherlv_1= ']' )
                    {
                    // InternalAnsic.g:4640:3: (otherlv_0= '[' otherlv_1= ']' )
                    // InternalAnsic.g:4641:4: otherlv_0= '[' otherlv_1= ']'
                    {
                    otherlv_0=(Token)match(input,68,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getDirect_abstract_declarator_complementAccess().getLeftSquareBracketKeyword_0_0());
                      			
                    }
                    otherlv_1=(Token)match(input,69,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getDirect_abstract_declarator_complementAccess().getRightSquareBracketKeyword_0_1());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:4651:3: (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' )
                    {
                    // InternalAnsic.g:4651:3: (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' )
                    // InternalAnsic.g:4652:4: otherlv_2= '[' otherlv_3= '*' otherlv_4= ']'
                    {
                    otherlv_2=(Token)match(input,68,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getDirect_abstract_declarator_complementAccess().getLeftSquareBracketKeyword_1_0());
                      			
                    }
                    otherlv_3=(Token)match(input,67,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getDirect_abstract_declarator_complementAccess().getAsteriskKeyword_1_1());
                      			
                    }
                    otherlv_4=(Token)match(input,69,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getDirect_abstract_declarator_complementAccess().getRightSquareBracketKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:4666:3: (otherlv_5= '[' otherlv_6= 'static' this_type_qualifier_list_7= ruletype_qualifier_list ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' )
                    {
                    // InternalAnsic.g:4666:3: (otherlv_5= '[' otherlv_6= 'static' this_type_qualifier_list_7= ruletype_qualifier_list ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' )
                    // InternalAnsic.g:4667:4: otherlv_5= '[' otherlv_6= 'static' this_type_qualifier_list_7= ruletype_qualifier_list ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']'
                    {
                    otherlv_5=(Token)match(input,68,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getDirect_abstract_declarator_complementAccess().getLeftSquareBracketKeyword_2_0());
                      			
                    }
                    otherlv_6=(Token)match(input,63,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getDirect_abstract_declarator_complementAccess().getStaticKeyword_2_1());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getDirect_abstract_declarator_complementAccess().getType_qualifier_listParserRuleCall_2_2());
                      			
                    }
                    pushFollow(FOLLOW_8);
                    this_type_qualifier_list_7=ruletype_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_type_qualifier_list_7;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalAnsic.g:4686:4: ( (lv_assignment_expression_8_0= ruleassignment_expression ) )
                    // InternalAnsic.g:4687:5: (lv_assignment_expression_8_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:4687:5: (lv_assignment_expression_8_0= ruleassignment_expression )
                    // InternalAnsic.g:4688:6: lv_assignment_expression_8_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_abstract_declarator_complementAccess().getAssignment_expressionAssignment_expressionParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_assignment_expression_8_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_abstract_declarator_complementRule());
                      						}
                      						set(
                      							current,
                      							"assignment_expression",
                      							lv_assignment_expression_8_0,
                      							"org.xtext.example.Ansic.assignment_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,69,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getDirect_abstract_declarator_complementAccess().getRightSquareBracketKeyword_2_4());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalAnsic.g:4711:3: (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' )
                    {
                    // InternalAnsic.g:4711:3: (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' )
                    // InternalAnsic.g:4712:4: otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']'
                    {
                    otherlv_10=(Token)match(input,68,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getDirect_abstract_declarator_complementAccess().getLeftSquareBracketKeyword_3_0());
                      			
                    }
                    otherlv_11=(Token)match(input,63,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getDirect_abstract_declarator_complementAccess().getStaticKeyword_3_1());
                      			
                    }
                    // InternalAnsic.g:4720:4: ( (lv_assignment_expression_12_0= ruleassignment_expression ) )
                    // InternalAnsic.g:4721:5: (lv_assignment_expression_12_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:4721:5: (lv_assignment_expression_12_0= ruleassignment_expression )
                    // InternalAnsic.g:4722:6: lv_assignment_expression_12_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_abstract_declarator_complementAccess().getAssignment_expressionAssignment_expressionParserRuleCall_3_2_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_assignment_expression_12_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_abstract_declarator_complementRule());
                      						}
                      						set(
                      							current,
                      							"assignment_expression",
                      							lv_assignment_expression_12_0,
                      							"org.xtext.example.Ansic.assignment_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_13=(Token)match(input,69,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getDirect_abstract_declarator_complementAccess().getRightSquareBracketKeyword_3_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalAnsic.g:4745:3: (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_16_0= ruleassignment_expression ) ) otherlv_17= ']' )
                    {
                    // InternalAnsic.g:4745:3: (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_16_0= ruleassignment_expression ) ) otherlv_17= ']' )
                    // InternalAnsic.g:4746:4: otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_16_0= ruleassignment_expression ) ) otherlv_17= ']'
                    {
                    otherlv_14=(Token)match(input,68,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getDirect_abstract_declarator_complementAccess().getLeftSquareBracketKeyword_4_0());
                      			
                    }
                    // InternalAnsic.g:4750:4: ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) )
                    // InternalAnsic.g:4751:5: (lv_type_qualifier_list_15_0= ruletype_qualifier_list )
                    {
                    // InternalAnsic.g:4751:5: (lv_type_qualifier_list_15_0= ruletype_qualifier_list )
                    // InternalAnsic.g:4752:6: lv_type_qualifier_list_15_0= ruletype_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_abstract_declarator_complementAccess().getType_qualifier_listType_qualifier_listParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_8);
                    lv_type_qualifier_list_15_0=ruletype_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_abstract_declarator_complementRule());
                      						}
                      						set(
                      							current,
                      							"type_qualifier_list",
                      							lv_type_qualifier_list_15_0,
                      							"org.xtext.example.Ansic.type_qualifier_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:4769:4: ( (lv_assignment_expression_16_0= ruleassignment_expression ) )
                    // InternalAnsic.g:4770:5: (lv_assignment_expression_16_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:4770:5: (lv_assignment_expression_16_0= ruleassignment_expression )
                    // InternalAnsic.g:4771:6: lv_assignment_expression_16_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_abstract_declarator_complementAccess().getAssignment_expressionAssignment_expressionParserRuleCall_4_2_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_assignment_expression_16_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_abstract_declarator_complementRule());
                      						}
                      						set(
                      							current,
                      							"assignment_expression",
                      							lv_assignment_expression_16_0,
                      							"org.xtext.example.Ansic.assignment_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_17=(Token)match(input,69,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getDirect_abstract_declarator_complementAccess().getRightSquareBracketKeyword_4_3());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalAnsic.g:4794:3: (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' )
                    {
                    // InternalAnsic.g:4794:3: (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' )
                    // InternalAnsic.g:4795:4: otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']'
                    {
                    otherlv_18=(Token)match(input,68,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getDirect_abstract_declarator_complementAccess().getLeftSquareBracketKeyword_5_0());
                      			
                    }
                    // InternalAnsic.g:4799:4: ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) )
                    // InternalAnsic.g:4800:5: (lv_type_qualifier_list_19_0= ruletype_qualifier_list )
                    {
                    // InternalAnsic.g:4800:5: (lv_type_qualifier_list_19_0= ruletype_qualifier_list )
                    // InternalAnsic.g:4801:6: lv_type_qualifier_list_19_0= ruletype_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_abstract_declarator_complementAccess().getType_qualifier_listType_qualifier_listParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_22);
                    lv_type_qualifier_list_19_0=ruletype_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_abstract_declarator_complementRule());
                      						}
                      						set(
                      							current,
                      							"type_qualifier_list",
                      							lv_type_qualifier_list_19_0,
                      							"org.xtext.example.Ansic.type_qualifier_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_20=(Token)match(input,63,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_20, grammarAccess.getDirect_abstract_declarator_complementAccess().getStaticKeyword_5_2());
                      			
                    }
                    // InternalAnsic.g:4822:4: ( (lv_assignment_expression_21_0= ruleassignment_expression ) )
                    // InternalAnsic.g:4823:5: (lv_assignment_expression_21_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:4823:5: (lv_assignment_expression_21_0= ruleassignment_expression )
                    // InternalAnsic.g:4824:6: lv_assignment_expression_21_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_abstract_declarator_complementAccess().getAssignment_expressionAssignment_expressionParserRuleCall_5_3_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_assignment_expression_21_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_abstract_declarator_complementRule());
                      						}
                      						set(
                      							current,
                      							"assignment_expression",
                      							lv_assignment_expression_21_0,
                      							"org.xtext.example.Ansic.assignment_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_22=(Token)match(input,69,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_22, grammarAccess.getDirect_abstract_declarator_complementAccess().getRightSquareBracketKeyword_5_4());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalAnsic.g:4847:3: (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) otherlv_25= ']' )
                    {
                    // InternalAnsic.g:4847:3: (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) otherlv_25= ']' )
                    // InternalAnsic.g:4848:4: otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) otherlv_25= ']'
                    {
                    otherlv_23=(Token)match(input,68,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_23, grammarAccess.getDirect_abstract_declarator_complementAccess().getLeftSquareBracketKeyword_6_0());
                      			
                    }
                    // InternalAnsic.g:4852:4: ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) )
                    // InternalAnsic.g:4853:5: (lv_type_qualifier_list_24_0= ruletype_qualifier_list )
                    {
                    // InternalAnsic.g:4853:5: (lv_type_qualifier_list_24_0= ruletype_qualifier_list )
                    // InternalAnsic.g:4854:6: lv_type_qualifier_list_24_0= ruletype_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_abstract_declarator_complementAccess().getType_qualifier_listType_qualifier_listParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_type_qualifier_list_24_0=ruletype_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_abstract_declarator_complementRule());
                      						}
                      						set(
                      							current,
                      							"type_qualifier_list",
                      							lv_type_qualifier_list_24_0,
                      							"org.xtext.example.Ansic.type_qualifier_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_25=(Token)match(input,69,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_25, grammarAccess.getDirect_abstract_declarator_complementAccess().getRightSquareBracketKeyword_6_2());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalAnsic.g:4877:3: (otherlv_26= '[' ( (lv_assignment_expression_27_0= ruleassignment_expression ) ) otherlv_28= ']' )
                    {
                    // InternalAnsic.g:4877:3: (otherlv_26= '[' ( (lv_assignment_expression_27_0= ruleassignment_expression ) ) otherlv_28= ']' )
                    // InternalAnsic.g:4878:4: otherlv_26= '[' ( (lv_assignment_expression_27_0= ruleassignment_expression ) ) otherlv_28= ']'
                    {
                    otherlv_26=(Token)match(input,68,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_26, grammarAccess.getDirect_abstract_declarator_complementAccess().getLeftSquareBracketKeyword_7_0());
                      			
                    }
                    // InternalAnsic.g:4882:4: ( (lv_assignment_expression_27_0= ruleassignment_expression ) )
                    // InternalAnsic.g:4883:5: (lv_assignment_expression_27_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:4883:5: (lv_assignment_expression_27_0= ruleassignment_expression )
                    // InternalAnsic.g:4884:6: lv_assignment_expression_27_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_abstract_declarator_complementAccess().getAssignment_expressionAssignment_expressionParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_assignment_expression_27_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_abstract_declarator_complementRule());
                      						}
                      						set(
                      							current,
                      							"assignment_expression",
                      							lv_assignment_expression_27_0,
                      							"org.xtext.example.Ansic.assignment_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_28=(Token)match(input,69,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_28, grammarAccess.getDirect_abstract_declarator_complementAccess().getRightSquareBracketKeyword_7_2());
                      			
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalAnsic.g:4907:3: (otherlv_29= '(' otherlv_30= ')' )
                    {
                    // InternalAnsic.g:4907:3: (otherlv_29= '(' otherlv_30= ')' )
                    // InternalAnsic.g:4908:4: otherlv_29= '(' otherlv_30= ')'
                    {
                    otherlv_29=(Token)match(input,34,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_29, grammarAccess.getDirect_abstract_declarator_complementAccess().getLeftParenthesisKeyword_8_0());
                      			
                    }
                    otherlv_30=(Token)match(input,35,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_30, grammarAccess.getDirect_abstract_declarator_complementAccess().getRightParenthesisKeyword_8_1());
                      			
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalAnsic.g:4918:3: (otherlv_31= '(' ( (lv_parameter_type_list_32_0= ruleparameter_type_list ) ) otherlv_33= ')' )
                    {
                    // InternalAnsic.g:4918:3: (otherlv_31= '(' ( (lv_parameter_type_list_32_0= ruleparameter_type_list ) ) otherlv_33= ')' )
                    // InternalAnsic.g:4919:4: otherlv_31= '(' ( (lv_parameter_type_list_32_0= ruleparameter_type_list ) ) otherlv_33= ')'
                    {
                    otherlv_31=(Token)match(input,34,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_31, grammarAccess.getDirect_abstract_declarator_complementAccess().getLeftParenthesisKeyword_9_0());
                      			
                    }
                    // InternalAnsic.g:4923:4: ( (lv_parameter_type_list_32_0= ruleparameter_type_list ) )
                    // InternalAnsic.g:4924:5: (lv_parameter_type_list_32_0= ruleparameter_type_list )
                    {
                    // InternalAnsic.g:4924:5: (lv_parameter_type_list_32_0= ruleparameter_type_list )
                    // InternalAnsic.g:4925:6: lv_parameter_type_list_32_0= ruleparameter_type_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_abstract_declarator_complementAccess().getParameter_type_listParameter_type_listParserRuleCall_9_1_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_parameter_type_list_32_0=ruleparameter_type_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_abstract_declarator_complementRule());
                      						}
                      						set(
                      							current,
                      							"parameter_type_list",
                      							lv_parameter_type_list_32_0,
                      							"org.xtext.example.Ansic.parameter_type_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_33=(Token)match(input,35,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_33, grammarAccess.getDirect_abstract_declarator_complementAccess().getRightParenthesisKeyword_9_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledirect_abstract_declarator_complement"


    // $ANTLR start "entryRuleidentifier_list"
    // InternalAnsic.g:4951:1: entryRuleidentifier_list returns [EObject current=null] : iv_ruleidentifier_list= ruleidentifier_list EOF ;
    public final EObject entryRuleidentifier_list() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleidentifier_list = null;


        try {
            // InternalAnsic.g:4951:56: (iv_ruleidentifier_list= ruleidentifier_list EOF )
            // InternalAnsic.g:4952:2: iv_ruleidentifier_list= ruleidentifier_list EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentifier_listRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleidentifier_list=ruleidentifier_list();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleidentifier_list; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleidentifier_list"


    // $ANTLR start "ruleidentifier_list"
    // InternalAnsic.g:4958:1: ruleidentifier_list returns [EObject current=null] : ( ( (lv_identifier_0_0= RULE_IDZ ) ) ( (lv_identifier_list_linha_1_0= ruleidentifier_list_linha ) ) ) ;
    public final EObject ruleidentifier_list() throws RecognitionException {
        EObject current = null;

        Token lv_identifier_0_0=null;
        EObject lv_identifier_list_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:4964:2: ( ( ( (lv_identifier_0_0= RULE_IDZ ) ) ( (lv_identifier_list_linha_1_0= ruleidentifier_list_linha ) ) ) )
            // InternalAnsic.g:4965:2: ( ( (lv_identifier_0_0= RULE_IDZ ) ) ( (lv_identifier_list_linha_1_0= ruleidentifier_list_linha ) ) )
            {
            // InternalAnsic.g:4965:2: ( ( (lv_identifier_0_0= RULE_IDZ ) ) ( (lv_identifier_list_linha_1_0= ruleidentifier_list_linha ) ) )
            // InternalAnsic.g:4966:3: ( (lv_identifier_0_0= RULE_IDZ ) ) ( (lv_identifier_list_linha_1_0= ruleidentifier_list_linha ) )
            {
            // InternalAnsic.g:4966:3: ( (lv_identifier_0_0= RULE_IDZ ) )
            // InternalAnsic.g:4967:4: (lv_identifier_0_0= RULE_IDZ )
            {
            // InternalAnsic.g:4967:4: (lv_identifier_0_0= RULE_IDZ )
            // InternalAnsic.g:4968:5: lv_identifier_0_0= RULE_IDZ
            {
            lv_identifier_0_0=(Token)match(input,RULE_IDZ,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_identifier_0_0, grammarAccess.getIdentifier_listAccess().getIdentifierIDzTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getIdentifier_listRule());
              					}
              					setWithLastConsumed(
              						current,
              						"identifier",
              						lv_identifier_0_0,
              						"org.xtext.example.Ansic.IDz");
              				
            }

            }


            }

            // InternalAnsic.g:4984:3: ( (lv_identifier_list_linha_1_0= ruleidentifier_list_linha ) )
            // InternalAnsic.g:4985:4: (lv_identifier_list_linha_1_0= ruleidentifier_list_linha )
            {
            // InternalAnsic.g:4985:4: (lv_identifier_list_linha_1_0= ruleidentifier_list_linha )
            // InternalAnsic.g:4986:5: lv_identifier_list_linha_1_0= ruleidentifier_list_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIdentifier_listAccess().getIdentifier_list_linhaIdentifier_list_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_identifier_list_linha_1_0=ruleidentifier_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIdentifier_listRule());
              					}
              					set(
              						current,
              						"identifier_list_linha",
              						lv_identifier_list_linha_1_0,
              						"org.xtext.example.Ansic.identifier_list_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleidentifier_list"


    // $ANTLR start "entryRuleidentifier_list_linha"
    // InternalAnsic.g:5007:1: entryRuleidentifier_list_linha returns [EObject current=null] : iv_ruleidentifier_list_linha= ruleidentifier_list_linha EOF ;
    public final EObject entryRuleidentifier_list_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleidentifier_list_linha = null;


        try {
            // InternalAnsic.g:5007:62: (iv_ruleidentifier_list_linha= ruleidentifier_list_linha EOF )
            // InternalAnsic.g:5008:2: iv_ruleidentifier_list_linha= ruleidentifier_list_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentifier_list_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleidentifier_list_linha=ruleidentifier_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleidentifier_list_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleidentifier_list_linha"


    // $ANTLR start "ruleidentifier_list_linha"
    // InternalAnsic.g:5014:1: ruleidentifier_list_linha returns [EObject current=null] : ( () (otherlv_1= ',' ( (lv_identifier_2_0= RULE_IDZ ) ) ( (lv_identifier_list_linha_3_0= ruleidentifier_list_linha ) ) )? ) ;
    public final EObject ruleidentifier_list_linha() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_identifier_2_0=null;
        EObject lv_identifier_list_linha_3_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:5020:2: ( ( () (otherlv_1= ',' ( (lv_identifier_2_0= RULE_IDZ ) ) ( (lv_identifier_list_linha_3_0= ruleidentifier_list_linha ) ) )? ) )
            // InternalAnsic.g:5021:2: ( () (otherlv_1= ',' ( (lv_identifier_2_0= RULE_IDZ ) ) ( (lv_identifier_list_linha_3_0= ruleidentifier_list_linha ) ) )? )
            {
            // InternalAnsic.g:5021:2: ( () (otherlv_1= ',' ( (lv_identifier_2_0= RULE_IDZ ) ) ( (lv_identifier_list_linha_3_0= ruleidentifier_list_linha ) ) )? )
            // InternalAnsic.g:5022:3: () (otherlv_1= ',' ( (lv_identifier_2_0= RULE_IDZ ) ) ( (lv_identifier_list_linha_3_0= ruleidentifier_list_linha ) ) )?
            {
            // InternalAnsic.g:5022:3: ()
            // InternalAnsic.g:5023:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getIdentifier_list_linhaAccess().getIdentifierListLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:5032:3: (otherlv_1= ',' ( (lv_identifier_2_0= RULE_IDZ ) ) ( (lv_identifier_list_linha_3_0= ruleidentifier_list_linha ) ) )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==56) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // InternalAnsic.g:5033:4: otherlv_1= ',' ( (lv_identifier_2_0= RULE_IDZ ) ) ( (lv_identifier_list_linha_3_0= ruleidentifier_list_linha ) )
                    {
                    otherlv_1=(Token)match(input,56,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getIdentifier_list_linhaAccess().getCommaKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:5037:4: ( (lv_identifier_2_0= RULE_IDZ ) )
                    // InternalAnsic.g:5038:5: (lv_identifier_2_0= RULE_IDZ )
                    {
                    // InternalAnsic.g:5038:5: (lv_identifier_2_0= RULE_IDZ )
                    // InternalAnsic.g:5039:6: lv_identifier_2_0= RULE_IDZ
                    {
                    lv_identifier_2_0=(Token)match(input,RULE_IDZ,FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_identifier_2_0, grammarAccess.getIdentifier_list_linhaAccess().getIdentifierIDzTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getIdentifier_list_linhaRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"identifier",
                      							lv_identifier_2_0,
                      							"org.xtext.example.Ansic.IDz");
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:5055:4: ( (lv_identifier_list_linha_3_0= ruleidentifier_list_linha ) )
                    // InternalAnsic.g:5056:5: (lv_identifier_list_linha_3_0= ruleidentifier_list_linha )
                    {
                    // InternalAnsic.g:5056:5: (lv_identifier_list_linha_3_0= ruleidentifier_list_linha )
                    // InternalAnsic.g:5057:6: lv_identifier_list_linha_3_0= ruleidentifier_list_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIdentifier_list_linhaAccess().getIdentifier_list_linhaIdentifier_list_linhaParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_identifier_list_linha_3_0=ruleidentifier_list_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIdentifier_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"identifier_list_linha",
                      							lv_identifier_list_linha_3_0,
                      							"org.xtext.example.Ansic.identifier_list_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleidentifier_list_linha"


    // $ANTLR start "entryRuletranslation_unit_linha"
    // InternalAnsic.g:5079:1: entryRuletranslation_unit_linha returns [EObject current=null] : iv_ruletranslation_unit_linha= ruletranslation_unit_linha EOF ;
    public final EObject entryRuletranslation_unit_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletranslation_unit_linha = null;


        try {
            // InternalAnsic.g:5079:63: (iv_ruletranslation_unit_linha= ruletranslation_unit_linha EOF )
            // InternalAnsic.g:5080:2: iv_ruletranslation_unit_linha= ruletranslation_unit_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTranslation_unit_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletranslation_unit_linha=ruletranslation_unit_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletranslation_unit_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletranslation_unit_linha"


    // $ANTLR start "ruletranslation_unit_linha"
    // InternalAnsic.g:5086:1: ruletranslation_unit_linha returns [EObject current=null] : ( () ( ( (lv_external_declaration_1_0= ruleexternal_declaration ) ) ( (lv_translation_unit_linha_2_0= ruletranslation_unit_linha ) ) )? ) ;
    public final EObject ruletranslation_unit_linha() throws RecognitionException {
        EObject current = null;

        EObject lv_external_declaration_1_0 = null;

        EObject lv_translation_unit_linha_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:5092:2: ( ( () ( ( (lv_external_declaration_1_0= ruleexternal_declaration ) ) ( (lv_translation_unit_linha_2_0= ruletranslation_unit_linha ) ) )? ) )
            // InternalAnsic.g:5093:2: ( () ( ( (lv_external_declaration_1_0= ruleexternal_declaration ) ) ( (lv_translation_unit_linha_2_0= ruletranslation_unit_linha ) ) )? )
            {
            // InternalAnsic.g:5093:2: ( () ( ( (lv_external_declaration_1_0= ruleexternal_declaration ) ) ( (lv_translation_unit_linha_2_0= ruletranslation_unit_linha ) ) )? )
            // InternalAnsic.g:5094:3: () ( ( (lv_external_declaration_1_0= ruleexternal_declaration ) ) ( (lv_translation_unit_linha_2_0= ruletranslation_unit_linha ) ) )?
            {
            // InternalAnsic.g:5094:3: ()
            // InternalAnsic.g:5095:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getTranslation_unit_linhaAccess().getTranlationUnitLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:5104:3: ( ( (lv_external_declaration_1_0= ruleexternal_declaration ) ) ( (lv_translation_unit_linha_2_0= ruletranslation_unit_linha ) ) )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( ((LA38_0>=31 && LA38_0<=33)||(LA38_0>=36 && LA38_0<=53)||(LA38_0>=58 && LA38_0<=59)||(LA38_0>=62 && LA38_0<=66)||LA38_0==74) ) {
                alt38=1;
            }
            switch (alt38) {
                case 1 :
                    // InternalAnsic.g:5105:4: ( (lv_external_declaration_1_0= ruleexternal_declaration ) ) ( (lv_translation_unit_linha_2_0= ruletranslation_unit_linha ) )
                    {
                    // InternalAnsic.g:5105:4: ( (lv_external_declaration_1_0= ruleexternal_declaration ) )
                    // InternalAnsic.g:5106:5: (lv_external_declaration_1_0= ruleexternal_declaration )
                    {
                    // InternalAnsic.g:5106:5: (lv_external_declaration_1_0= ruleexternal_declaration )
                    // InternalAnsic.g:5107:6: lv_external_declaration_1_0= ruleexternal_declaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTranslation_unit_linhaAccess().getExternal_declarationExternal_declarationParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_3);
                    lv_external_declaration_1_0=ruleexternal_declaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTranslation_unit_linhaRule());
                      						}
                      						set(
                      							current,
                      							"external_declaration",
                      							lv_external_declaration_1_0,
                      							"org.xtext.example.Ansic.external_declaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:5124:4: ( (lv_translation_unit_linha_2_0= ruletranslation_unit_linha ) )
                    // InternalAnsic.g:5125:5: (lv_translation_unit_linha_2_0= ruletranslation_unit_linha )
                    {
                    // InternalAnsic.g:5125:5: (lv_translation_unit_linha_2_0= ruletranslation_unit_linha )
                    // InternalAnsic.g:5126:6: lv_translation_unit_linha_2_0= ruletranslation_unit_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTranslation_unit_linhaAccess().getTranslation_unit_linhaTranslation_unit_linhaParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_translation_unit_linha_2_0=ruletranslation_unit_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTranslation_unit_linhaRule());
                      						}
                      						set(
                      							current,
                      							"translation_unit_linha",
                      							lv_translation_unit_linha_2_0,
                      							"org.xtext.example.Ansic.translation_unit_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletranslation_unit_linha"


    // $ANTLR start "entryRuleprimary_expression"
    // InternalAnsic.g:5148:1: entryRuleprimary_expression returns [EObject current=null] : iv_ruleprimary_expression= ruleprimary_expression EOF ;
    public final EObject entryRuleprimary_expression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleprimary_expression = null;


        try {
            // InternalAnsic.g:5148:59: (iv_ruleprimary_expression= ruleprimary_expression EOF )
            // InternalAnsic.g:5149:2: iv_ruleprimary_expression= ruleprimary_expression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimary_expressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleprimary_expression=ruleprimary_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleprimary_expression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleprimary_expression"


    // $ANTLR start "ruleprimary_expression"
    // InternalAnsic.g:5155:1: ruleprimary_expression returns [EObject current=null] : ( ( (lv_identifier_0_0= RULE_IDZ ) ) | ( (lv_constant_1_0= ruleconstant ) ) | (otherlv_2= '(' ( (lv_expression_3_0= ruleexpression ) ) otherlv_4= ')' ) | ( (lv_generic_selection_5_0= rulegeneric_selection ) ) ) ;
    public final EObject ruleprimary_expression() throws RecognitionException {
        EObject current = null;

        Token lv_identifier_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_constant_1_0 = null;

        EObject lv_expression_3_0 = null;

        EObject lv_generic_selection_5_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:5161:2: ( ( ( (lv_identifier_0_0= RULE_IDZ ) ) | ( (lv_constant_1_0= ruleconstant ) ) | (otherlv_2= '(' ( (lv_expression_3_0= ruleexpression ) ) otherlv_4= ')' ) | ( (lv_generic_selection_5_0= rulegeneric_selection ) ) ) )
            // InternalAnsic.g:5162:2: ( ( (lv_identifier_0_0= RULE_IDZ ) ) | ( (lv_constant_1_0= ruleconstant ) ) | (otherlv_2= '(' ( (lv_expression_3_0= ruleexpression ) ) otherlv_4= ')' ) | ( (lv_generic_selection_5_0= rulegeneric_selection ) ) )
            {
            // InternalAnsic.g:5162:2: ( ( (lv_identifier_0_0= RULE_IDZ ) ) | ( (lv_constant_1_0= ruleconstant ) ) | (otherlv_2= '(' ( (lv_expression_3_0= ruleexpression ) ) otherlv_4= ')' ) | ( (lv_generic_selection_5_0= rulegeneric_selection ) ) )
            int alt39=4;
            switch ( input.LA(1) ) {
            case RULE_IDZ:
                {
                alt39=1;
                }
                break;
            case RULE_INT:
            case RULE_FLOAT:
            case RULE_CHAR:
            case 53:
                {
                alt39=2;
                }
                break;
            case 34:
                {
                alt39=3;
                }
                break;
            case 71:
                {
                alt39=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;
            }

            switch (alt39) {
                case 1 :
                    // InternalAnsic.g:5163:3: ( (lv_identifier_0_0= RULE_IDZ ) )
                    {
                    // InternalAnsic.g:5163:3: ( (lv_identifier_0_0= RULE_IDZ ) )
                    // InternalAnsic.g:5164:4: (lv_identifier_0_0= RULE_IDZ )
                    {
                    // InternalAnsic.g:5164:4: (lv_identifier_0_0= RULE_IDZ )
                    // InternalAnsic.g:5165:5: lv_identifier_0_0= RULE_IDZ
                    {
                    lv_identifier_0_0=(Token)match(input,RULE_IDZ,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_identifier_0_0, grammarAccess.getPrimary_expressionAccess().getIdentifierIDzTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getPrimary_expressionRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"identifier",
                      						lv_identifier_0_0,
                      						"org.xtext.example.Ansic.IDz");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:5182:3: ( (lv_constant_1_0= ruleconstant ) )
                    {
                    // InternalAnsic.g:5182:3: ( (lv_constant_1_0= ruleconstant ) )
                    // InternalAnsic.g:5183:4: (lv_constant_1_0= ruleconstant )
                    {
                    // InternalAnsic.g:5183:4: (lv_constant_1_0= ruleconstant )
                    // InternalAnsic.g:5184:5: lv_constant_1_0= ruleconstant
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimary_expressionAccess().getConstantConstantParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_constant_1_0=ruleconstant();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimary_expressionRule());
                      					}
                      					set(
                      						current,
                      						"constant",
                      						lv_constant_1_0,
                      						"org.xtext.example.Ansic.constant");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:5202:3: (otherlv_2= '(' ( (lv_expression_3_0= ruleexpression ) ) otherlv_4= ')' )
                    {
                    // InternalAnsic.g:5202:3: (otherlv_2= '(' ( (lv_expression_3_0= ruleexpression ) ) otherlv_4= ')' )
                    // InternalAnsic.g:5203:4: otherlv_2= '(' ( (lv_expression_3_0= ruleexpression ) ) otherlv_4= ')'
                    {
                    otherlv_2=(Token)match(input,34,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPrimary_expressionAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    // InternalAnsic.g:5207:4: ( (lv_expression_3_0= ruleexpression ) )
                    // InternalAnsic.g:5208:5: (lv_expression_3_0= ruleexpression )
                    {
                    // InternalAnsic.g:5208:5: (lv_expression_3_0= ruleexpression )
                    // InternalAnsic.g:5209:6: lv_expression_3_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimary_expressionAccess().getExpressionExpressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_expression_3_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimary_expressionRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_3_0,
                      							"org.xtext.example.Ansic.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,35,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getPrimary_expressionAccess().getRightParenthesisKeyword_2_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalAnsic.g:5232:3: ( (lv_generic_selection_5_0= rulegeneric_selection ) )
                    {
                    // InternalAnsic.g:5232:3: ( (lv_generic_selection_5_0= rulegeneric_selection ) )
                    // InternalAnsic.g:5233:4: (lv_generic_selection_5_0= rulegeneric_selection )
                    {
                    // InternalAnsic.g:5233:4: (lv_generic_selection_5_0= rulegeneric_selection )
                    // InternalAnsic.g:5234:5: lv_generic_selection_5_0= rulegeneric_selection
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimary_expressionAccess().getGeneric_selectionGeneric_selectionParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_generic_selection_5_0=rulegeneric_selection();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimary_expressionRule());
                      					}
                      					set(
                      						current,
                      						"generic_selection",
                      						lv_generic_selection_5_0,
                      						"org.xtext.example.Ansic.generic_selection");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleprimary_expression"


    // $ANTLR start "entryRuleenumeration_constant"
    // InternalAnsic.g:5255:1: entryRuleenumeration_constant returns [EObject current=null] : iv_ruleenumeration_constant= ruleenumeration_constant EOF ;
    public final EObject entryRuleenumeration_constant() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleenumeration_constant = null;


        try {
            // InternalAnsic.g:5255:61: (iv_ruleenumeration_constant= ruleenumeration_constant EOF )
            // InternalAnsic.g:5256:2: iv_ruleenumeration_constant= ruleenumeration_constant EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumeration_constantRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleenumeration_constant=ruleenumeration_constant();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleenumeration_constant; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleenumeration_constant"


    // $ANTLR start "ruleenumeration_constant"
    // InternalAnsic.g:5262:1: ruleenumeration_constant returns [EObject current=null] : ( (lv_identifier_0_0= RULE_IDZ ) ) ;
    public final EObject ruleenumeration_constant() throws RecognitionException {
        EObject current = null;

        Token lv_identifier_0_0=null;


        	enterRule();

        try {
            // InternalAnsic.g:5268:2: ( ( (lv_identifier_0_0= RULE_IDZ ) ) )
            // InternalAnsic.g:5269:2: ( (lv_identifier_0_0= RULE_IDZ ) )
            {
            // InternalAnsic.g:5269:2: ( (lv_identifier_0_0= RULE_IDZ ) )
            // InternalAnsic.g:5270:3: (lv_identifier_0_0= RULE_IDZ )
            {
            // InternalAnsic.g:5270:3: (lv_identifier_0_0= RULE_IDZ )
            // InternalAnsic.g:5271:4: lv_identifier_0_0= RULE_IDZ
            {
            lv_identifier_0_0=(Token)match(input,RULE_IDZ,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_identifier_0_0, grammarAccess.getEnumeration_constantAccess().getIdentifierIDzTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getEnumeration_constantRule());
              				}
              				setWithLastConsumed(
              					current,
              					"identifier",
              					lv_identifier_0_0,
              					"org.xtext.example.Ansic.IDz");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleenumeration_constant"


    // $ANTLR start "entryRulegeneric_selection"
    // InternalAnsic.g:5290:1: entryRulegeneric_selection returns [EObject current=null] : iv_rulegeneric_selection= rulegeneric_selection EOF ;
    public final EObject entryRulegeneric_selection() throws RecognitionException {
        EObject current = null;

        EObject iv_rulegeneric_selection = null;


        try {
            // InternalAnsic.g:5290:58: (iv_rulegeneric_selection= rulegeneric_selection EOF )
            // InternalAnsic.g:5291:2: iv_rulegeneric_selection= rulegeneric_selection EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGeneric_selectionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulegeneric_selection=rulegeneric_selection();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulegeneric_selection; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulegeneric_selection"


    // $ANTLR start "rulegeneric_selection"
    // InternalAnsic.g:5297:1: rulegeneric_selection returns [EObject current=null] : ( ( (lv__generic_0_0= '_Generic' ) ) otherlv_1= '(' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) otherlv_3= ',' ( (lv_generic_assoc_list_4_0= rulegeneric_assoc_list ) ) otherlv_5= ')' ) ;
    public final EObject rulegeneric_selection() throws RecognitionException {
        EObject current = null;

        Token lv__generic_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_assignment_expression_2_0 = null;

        EObject lv_generic_assoc_list_4_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:5303:2: ( ( ( (lv__generic_0_0= '_Generic' ) ) otherlv_1= '(' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) otherlv_3= ',' ( (lv_generic_assoc_list_4_0= rulegeneric_assoc_list ) ) otherlv_5= ')' ) )
            // InternalAnsic.g:5304:2: ( ( (lv__generic_0_0= '_Generic' ) ) otherlv_1= '(' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) otherlv_3= ',' ( (lv_generic_assoc_list_4_0= rulegeneric_assoc_list ) ) otherlv_5= ')' )
            {
            // InternalAnsic.g:5304:2: ( ( (lv__generic_0_0= '_Generic' ) ) otherlv_1= '(' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) otherlv_3= ',' ( (lv_generic_assoc_list_4_0= rulegeneric_assoc_list ) ) otherlv_5= ')' )
            // InternalAnsic.g:5305:3: ( (lv__generic_0_0= '_Generic' ) ) otherlv_1= '(' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) otherlv_3= ',' ( (lv_generic_assoc_list_4_0= rulegeneric_assoc_list ) ) otherlv_5= ')'
            {
            // InternalAnsic.g:5305:3: ( (lv__generic_0_0= '_Generic' ) )
            // InternalAnsic.g:5306:4: (lv__generic_0_0= '_Generic' )
            {
            // InternalAnsic.g:5306:4: (lv__generic_0_0= '_Generic' )
            // InternalAnsic.g:5307:5: lv__generic_0_0= '_Generic'
            {
            lv__generic_0_0=(Token)match(input,71,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv__generic_0_0, grammarAccess.getGeneric_selectionAccess().get_generic_GenericKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGeneric_selectionRule());
              					}
              					setWithLastConsumed(current, "_generic", lv__generic_0_0, "_Generic");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,34,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getGeneric_selectionAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalAnsic.g:5323:3: ( (lv_assignment_expression_2_0= ruleassignment_expression ) )
            // InternalAnsic.g:5324:4: (lv_assignment_expression_2_0= ruleassignment_expression )
            {
            // InternalAnsic.g:5324:4: (lv_assignment_expression_2_0= ruleassignment_expression )
            // InternalAnsic.g:5325:5: lv_assignment_expression_2_0= ruleassignment_expression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGeneric_selectionAccess().getAssignment_expressionAssignment_expressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_12);
            lv_assignment_expression_2_0=ruleassignment_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGeneric_selectionRule());
              					}
              					set(
              						current,
              						"assignment_expression",
              						lv_assignment_expression_2_0,
              						"org.xtext.example.Ansic.assignment_expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,56,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getGeneric_selectionAccess().getCommaKeyword_3());
              		
            }
            // InternalAnsic.g:5346:3: ( (lv_generic_assoc_list_4_0= rulegeneric_assoc_list ) )
            // InternalAnsic.g:5347:4: (lv_generic_assoc_list_4_0= rulegeneric_assoc_list )
            {
            // InternalAnsic.g:5347:4: (lv_generic_assoc_list_4_0= rulegeneric_assoc_list )
            // InternalAnsic.g:5348:5: lv_generic_assoc_list_4_0= rulegeneric_assoc_list
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGeneric_selectionAccess().getGeneric_assoc_listGeneric_assoc_listParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_7);
            lv_generic_assoc_list_4_0=rulegeneric_assoc_list();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGeneric_selectionRule());
              					}
              					add(
              						current,
              						"generic_assoc_list",
              						lv_generic_assoc_list_4_0,
              						"org.xtext.example.Ansic.generic_assoc_list");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_5=(Token)match(input,35,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getGeneric_selectionAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulegeneric_selection"


    // $ANTLR start "entryRulegeneric_assoc_list"
    // InternalAnsic.g:5373:1: entryRulegeneric_assoc_list returns [EObject current=null] : iv_rulegeneric_assoc_list= rulegeneric_assoc_list EOF ;
    public final EObject entryRulegeneric_assoc_list() throws RecognitionException {
        EObject current = null;

        EObject iv_rulegeneric_assoc_list = null;


        try {
            // InternalAnsic.g:5373:59: (iv_rulegeneric_assoc_list= rulegeneric_assoc_list EOF )
            // InternalAnsic.g:5374:2: iv_rulegeneric_assoc_list= rulegeneric_assoc_list EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGeneric_assoc_listRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulegeneric_assoc_list=rulegeneric_assoc_list();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulegeneric_assoc_list; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulegeneric_assoc_list"


    // $ANTLR start "rulegeneric_assoc_list"
    // InternalAnsic.g:5380:1: rulegeneric_assoc_list returns [EObject current=null] : ( ( (lv_generic_association_0_0= rulegeneric_association ) ) ( (lv_generic_assoc_list_linha_1_0= rulegeneric_assoc_list_linha ) ) ) ;
    public final EObject rulegeneric_assoc_list() throws RecognitionException {
        EObject current = null;

        EObject lv_generic_association_0_0 = null;

        EObject lv_generic_assoc_list_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:5386:2: ( ( ( (lv_generic_association_0_0= rulegeneric_association ) ) ( (lv_generic_assoc_list_linha_1_0= rulegeneric_assoc_list_linha ) ) ) )
            // InternalAnsic.g:5387:2: ( ( (lv_generic_association_0_0= rulegeneric_association ) ) ( (lv_generic_assoc_list_linha_1_0= rulegeneric_assoc_list_linha ) ) )
            {
            // InternalAnsic.g:5387:2: ( ( (lv_generic_association_0_0= rulegeneric_association ) ) ( (lv_generic_assoc_list_linha_1_0= rulegeneric_assoc_list_linha ) ) )
            // InternalAnsic.g:5388:3: ( (lv_generic_association_0_0= rulegeneric_association ) ) ( (lv_generic_assoc_list_linha_1_0= rulegeneric_assoc_list_linha ) )
            {
            // InternalAnsic.g:5388:3: ( (lv_generic_association_0_0= rulegeneric_association ) )
            // InternalAnsic.g:5389:4: (lv_generic_association_0_0= rulegeneric_association )
            {
            // InternalAnsic.g:5389:4: (lv_generic_association_0_0= rulegeneric_association )
            // InternalAnsic.g:5390:5: lv_generic_association_0_0= rulegeneric_association
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGeneric_assoc_listAccess().getGeneric_associationGeneric_associationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_12);
            lv_generic_association_0_0=rulegeneric_association();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGeneric_assoc_listRule());
              					}
              					set(
              						current,
              						"generic_association",
              						lv_generic_association_0_0,
              						"org.xtext.example.Ansic.generic_association");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:5407:3: ( (lv_generic_assoc_list_linha_1_0= rulegeneric_assoc_list_linha ) )
            // InternalAnsic.g:5408:4: (lv_generic_assoc_list_linha_1_0= rulegeneric_assoc_list_linha )
            {
            // InternalAnsic.g:5408:4: (lv_generic_assoc_list_linha_1_0= rulegeneric_assoc_list_linha )
            // InternalAnsic.g:5409:5: lv_generic_assoc_list_linha_1_0= rulegeneric_assoc_list_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGeneric_assoc_listAccess().getGeneric_assoc_list_linhaGeneric_assoc_list_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_generic_assoc_list_linha_1_0=rulegeneric_assoc_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGeneric_assoc_listRule());
              					}
              					set(
              						current,
              						"generic_assoc_list_linha",
              						lv_generic_assoc_list_linha_1_0,
              						"org.xtext.example.Ansic.generic_assoc_list_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulegeneric_assoc_list"


    // $ANTLR start "entryRulegeneric_assoc_list_linha"
    // InternalAnsic.g:5430:1: entryRulegeneric_assoc_list_linha returns [EObject current=null] : iv_rulegeneric_assoc_list_linha= rulegeneric_assoc_list_linha EOF ;
    public final EObject entryRulegeneric_assoc_list_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_rulegeneric_assoc_list_linha = null;


        try {
            // InternalAnsic.g:5430:65: (iv_rulegeneric_assoc_list_linha= rulegeneric_assoc_list_linha EOF )
            // InternalAnsic.g:5431:2: iv_rulegeneric_assoc_list_linha= rulegeneric_assoc_list_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGeneric_assoc_list_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulegeneric_assoc_list_linha=rulegeneric_assoc_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulegeneric_assoc_list_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulegeneric_assoc_list_linha"


    // $ANTLR start "rulegeneric_assoc_list_linha"
    // InternalAnsic.g:5437:1: rulegeneric_assoc_list_linha returns [EObject current=null] : ( () (otherlv_1= ',' ( (lv_generic_association_2_0= rulegeneric_association ) ) ( (lv_generic_assoc_list_linha_3_0= rulegeneric_assoc_list_linha ) ) )? ) ;
    public final EObject rulegeneric_assoc_list_linha() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_generic_association_2_0 = null;

        EObject lv_generic_assoc_list_linha_3_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:5443:2: ( ( () (otherlv_1= ',' ( (lv_generic_association_2_0= rulegeneric_association ) ) ( (lv_generic_assoc_list_linha_3_0= rulegeneric_assoc_list_linha ) ) )? ) )
            // InternalAnsic.g:5444:2: ( () (otherlv_1= ',' ( (lv_generic_association_2_0= rulegeneric_association ) ) ( (lv_generic_assoc_list_linha_3_0= rulegeneric_assoc_list_linha ) ) )? )
            {
            // InternalAnsic.g:5444:2: ( () (otherlv_1= ',' ( (lv_generic_association_2_0= rulegeneric_association ) ) ( (lv_generic_assoc_list_linha_3_0= rulegeneric_assoc_list_linha ) ) )? )
            // InternalAnsic.g:5445:3: () (otherlv_1= ',' ( (lv_generic_association_2_0= rulegeneric_association ) ) ( (lv_generic_assoc_list_linha_3_0= rulegeneric_assoc_list_linha ) ) )?
            {
            // InternalAnsic.g:5445:3: ()
            // InternalAnsic.g:5446:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getGeneric_assoc_list_linhaAccess().getGenericAssocListLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:5455:3: (otherlv_1= ',' ( (lv_generic_association_2_0= rulegeneric_association ) ) ( (lv_generic_assoc_list_linha_3_0= rulegeneric_assoc_list_linha ) ) )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==56) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // InternalAnsic.g:5456:4: otherlv_1= ',' ( (lv_generic_association_2_0= rulegeneric_association ) ) ( (lv_generic_assoc_list_linha_3_0= rulegeneric_assoc_list_linha ) )
                    {
                    otherlv_1=(Token)match(input,56,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getGeneric_assoc_list_linhaAccess().getCommaKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:5460:4: ( (lv_generic_association_2_0= rulegeneric_association ) )
                    // InternalAnsic.g:5461:5: (lv_generic_association_2_0= rulegeneric_association )
                    {
                    // InternalAnsic.g:5461:5: (lv_generic_association_2_0= rulegeneric_association )
                    // InternalAnsic.g:5462:6: lv_generic_association_2_0= rulegeneric_association
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getGeneric_assoc_list_linhaAccess().getGeneric_associationGeneric_associationParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_generic_association_2_0=rulegeneric_association();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getGeneric_assoc_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"generic_association",
                      							lv_generic_association_2_0,
                      							"org.xtext.example.Ansic.generic_association");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:5479:4: ( (lv_generic_assoc_list_linha_3_0= rulegeneric_assoc_list_linha ) )
                    // InternalAnsic.g:5480:5: (lv_generic_assoc_list_linha_3_0= rulegeneric_assoc_list_linha )
                    {
                    // InternalAnsic.g:5480:5: (lv_generic_assoc_list_linha_3_0= rulegeneric_assoc_list_linha )
                    // InternalAnsic.g:5481:6: lv_generic_assoc_list_linha_3_0= rulegeneric_assoc_list_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getGeneric_assoc_list_linhaAccess().getGeneric_assoc_list_linhaGeneric_assoc_list_linhaParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_generic_assoc_list_linha_3_0=rulegeneric_assoc_list_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getGeneric_assoc_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"generic_assoc_list_linha",
                      							lv_generic_assoc_list_linha_3_0,
                      							"org.xtext.example.Ansic.generic_assoc_list_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulegeneric_assoc_list_linha"


    // $ANTLR start "entryRulegeneric_association"
    // InternalAnsic.g:5503:1: entryRulegeneric_association returns [EObject current=null] : iv_rulegeneric_association= rulegeneric_association EOF ;
    public final EObject entryRulegeneric_association() throws RecognitionException {
        EObject current = null;

        EObject iv_rulegeneric_association = null;


        try {
            // InternalAnsic.g:5503:60: (iv_rulegeneric_association= rulegeneric_association EOF )
            // InternalAnsic.g:5504:2: iv_rulegeneric_association= rulegeneric_association EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGeneric_associationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulegeneric_association=rulegeneric_association();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulegeneric_association; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulegeneric_association"


    // $ANTLR start "rulegeneric_association"
    // InternalAnsic.g:5510:1: rulegeneric_association returns [EObject current=null] : ( ( ( (lv_type_name_0_0= ruletype_name ) ) otherlv_1= ':' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) ) | ( ( (lv_default_3_0= 'default' ) ) otherlv_4= ':' ( (lv_assignment_expression_5_0= ruleassignment_expression ) ) ) ) ;
    public final EObject rulegeneric_association() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_default_3_0=null;
        Token otherlv_4=null;
        EObject lv_type_name_0_0 = null;

        EObject lv_assignment_expression_2_0 = null;

        EObject lv_assignment_expression_5_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:5516:2: ( ( ( ( (lv_type_name_0_0= ruletype_name ) ) otherlv_1= ':' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) ) | ( ( (lv_default_3_0= 'default' ) ) otherlv_4= ':' ( (lv_assignment_expression_5_0= ruleassignment_expression ) ) ) ) )
            // InternalAnsic.g:5517:2: ( ( ( (lv_type_name_0_0= ruletype_name ) ) otherlv_1= ':' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) ) | ( ( (lv_default_3_0= 'default' ) ) otherlv_4= ':' ( (lv_assignment_expression_5_0= ruleassignment_expression ) ) ) )
            {
            // InternalAnsic.g:5517:2: ( ( ( (lv_type_name_0_0= ruletype_name ) ) otherlv_1= ':' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) ) | ( ( (lv_default_3_0= 'default' ) ) otherlv_4= ':' ( (lv_assignment_expression_5_0= ruleassignment_expression ) ) ) )
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( ((LA41_0>=36 && LA41_0<=53)||(LA41_0>=58 && LA41_0<=59)) ) {
                alt41=1;
            }
            else if ( (LA41_0==72) ) {
                alt41=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 41, 0, input);

                throw nvae;
            }
            switch (alt41) {
                case 1 :
                    // InternalAnsic.g:5518:3: ( ( (lv_type_name_0_0= ruletype_name ) ) otherlv_1= ':' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) )
                    {
                    // InternalAnsic.g:5518:3: ( ( (lv_type_name_0_0= ruletype_name ) ) otherlv_1= ':' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) )
                    // InternalAnsic.g:5519:4: ( (lv_type_name_0_0= ruletype_name ) ) otherlv_1= ':' ( (lv_assignment_expression_2_0= ruleassignment_expression ) )
                    {
                    // InternalAnsic.g:5519:4: ( (lv_type_name_0_0= ruletype_name ) )
                    // InternalAnsic.g:5520:5: (lv_type_name_0_0= ruletype_name )
                    {
                    // InternalAnsic.g:5520:5: (lv_type_name_0_0= ruletype_name )
                    // InternalAnsic.g:5521:6: lv_type_name_0_0= ruletype_name
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getGeneric_associationAccess().getType_nameType_nameParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_16);
                    lv_type_name_0_0=ruletype_name();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getGeneric_associationRule());
                      						}
                      						set(
                      							current,
                      							"type_name",
                      							lv_type_name_0_0,
                      							"org.xtext.example.Ansic.type_name");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,61,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getGeneric_associationAccess().getColonKeyword_0_1());
                      			
                    }
                    // InternalAnsic.g:5542:4: ( (lv_assignment_expression_2_0= ruleassignment_expression ) )
                    // InternalAnsic.g:5543:5: (lv_assignment_expression_2_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:5543:5: (lv_assignment_expression_2_0= ruleassignment_expression )
                    // InternalAnsic.g:5544:6: lv_assignment_expression_2_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getGeneric_associationAccess().getAssignment_expressionAssignment_expressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_assignment_expression_2_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getGeneric_associationRule());
                      						}
                      						set(
                      							current,
                      							"assignment_expression",
                      							lv_assignment_expression_2_0,
                      							"org.xtext.example.Ansic.assignment_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:5563:3: ( ( (lv_default_3_0= 'default' ) ) otherlv_4= ':' ( (lv_assignment_expression_5_0= ruleassignment_expression ) ) )
                    {
                    // InternalAnsic.g:5563:3: ( ( (lv_default_3_0= 'default' ) ) otherlv_4= ':' ( (lv_assignment_expression_5_0= ruleassignment_expression ) ) )
                    // InternalAnsic.g:5564:4: ( (lv_default_3_0= 'default' ) ) otherlv_4= ':' ( (lv_assignment_expression_5_0= ruleassignment_expression ) )
                    {
                    // InternalAnsic.g:5564:4: ( (lv_default_3_0= 'default' ) )
                    // InternalAnsic.g:5565:5: (lv_default_3_0= 'default' )
                    {
                    // InternalAnsic.g:5565:5: (lv_default_3_0= 'default' )
                    // InternalAnsic.g:5566:6: lv_default_3_0= 'default'
                    {
                    lv_default_3_0=(Token)match(input,72,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_default_3_0, grammarAccess.getGeneric_associationAccess().getDefaultDefaultKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getGeneric_associationRule());
                      						}
                      						setWithLastConsumed(current, "default", lv_default_3_0, "default");
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,61,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getGeneric_associationAccess().getColonKeyword_1_1());
                      			
                    }
                    // InternalAnsic.g:5582:4: ( (lv_assignment_expression_5_0= ruleassignment_expression ) )
                    // InternalAnsic.g:5583:5: (lv_assignment_expression_5_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:5583:5: (lv_assignment_expression_5_0= ruleassignment_expression )
                    // InternalAnsic.g:5584:6: lv_assignment_expression_5_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getGeneric_associationAccess().getAssignment_expressionAssignment_expressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_assignment_expression_5_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getGeneric_associationRule());
                      						}
                      						set(
                      							current,
                      							"assignment_expression",
                      							lv_assignment_expression_5_0,
                      							"org.xtext.example.Ansic.assignment_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulegeneric_association"


    // $ANTLR start "entryRulepostfix_expression"
    // InternalAnsic.g:5606:1: entryRulepostfix_expression returns [EObject current=null] : iv_rulepostfix_expression= rulepostfix_expression EOF ;
    public final EObject entryRulepostfix_expression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulepostfix_expression = null;


        try {
            // InternalAnsic.g:5606:59: (iv_rulepostfix_expression= rulepostfix_expression EOF )
            // InternalAnsic.g:5607:2: iv_rulepostfix_expression= rulepostfix_expression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPostfix_expressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulepostfix_expression=rulepostfix_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulepostfix_expression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulepostfix_expression"


    // $ANTLR start "rulepostfix_expression"
    // InternalAnsic.g:5613:1: rulepostfix_expression returns [EObject current=null] : ( ( ( (lv_primary_expression_0_0= ruleprimary_expression ) ) ( (lv_postfix_expression_linha_1_0= rulepostfix_expression_linha ) ) ) | (otherlv_2= '(' this_type_name_3= ruletype_name otherlv_4= ')' otherlv_5= '{' ( (lv_initializer_list_6_0= ruleinitializer_list ) ) otherlv_7= '}' ( (lv_postfix_expression_linha_8_0= rulepostfix_expression_linha ) ) ) | (otherlv_9= '(' this_type_name_10= ruletype_name otherlv_11= ')' otherlv_12= '{' ( (lv_initializer_list_13_0= ruleinitializer_list ) ) otherlv_14= ',' otherlv_15= '}' ( (lv_postfix_expression_linha_16_0= rulepostfix_expression_linha ) ) ) ) ;
    public final EObject rulepostfix_expression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        EObject lv_primary_expression_0_0 = null;

        EObject lv_postfix_expression_linha_1_0 = null;

        EObject this_type_name_3 = null;

        EObject lv_initializer_list_6_0 = null;

        EObject lv_postfix_expression_linha_8_0 = null;

        EObject this_type_name_10 = null;

        EObject lv_initializer_list_13_0 = null;

        EObject lv_postfix_expression_linha_16_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:5619:2: ( ( ( ( (lv_primary_expression_0_0= ruleprimary_expression ) ) ( (lv_postfix_expression_linha_1_0= rulepostfix_expression_linha ) ) ) | (otherlv_2= '(' this_type_name_3= ruletype_name otherlv_4= ')' otherlv_5= '{' ( (lv_initializer_list_6_0= ruleinitializer_list ) ) otherlv_7= '}' ( (lv_postfix_expression_linha_8_0= rulepostfix_expression_linha ) ) ) | (otherlv_9= '(' this_type_name_10= ruletype_name otherlv_11= ')' otherlv_12= '{' ( (lv_initializer_list_13_0= ruleinitializer_list ) ) otherlv_14= ',' otherlv_15= '}' ( (lv_postfix_expression_linha_16_0= rulepostfix_expression_linha ) ) ) ) )
            // InternalAnsic.g:5620:2: ( ( ( (lv_primary_expression_0_0= ruleprimary_expression ) ) ( (lv_postfix_expression_linha_1_0= rulepostfix_expression_linha ) ) ) | (otherlv_2= '(' this_type_name_3= ruletype_name otherlv_4= ')' otherlv_5= '{' ( (lv_initializer_list_6_0= ruleinitializer_list ) ) otherlv_7= '}' ( (lv_postfix_expression_linha_8_0= rulepostfix_expression_linha ) ) ) | (otherlv_9= '(' this_type_name_10= ruletype_name otherlv_11= ')' otherlv_12= '{' ( (lv_initializer_list_13_0= ruleinitializer_list ) ) otherlv_14= ',' otherlv_15= '}' ( (lv_postfix_expression_linha_16_0= rulepostfix_expression_linha ) ) ) )
            {
            // InternalAnsic.g:5620:2: ( ( ( (lv_primary_expression_0_0= ruleprimary_expression ) ) ( (lv_postfix_expression_linha_1_0= rulepostfix_expression_linha ) ) ) | (otherlv_2= '(' this_type_name_3= ruletype_name otherlv_4= ')' otherlv_5= '{' ( (lv_initializer_list_6_0= ruleinitializer_list ) ) otherlv_7= '}' ( (lv_postfix_expression_linha_8_0= rulepostfix_expression_linha ) ) ) | (otherlv_9= '(' this_type_name_10= ruletype_name otherlv_11= ')' otherlv_12= '{' ( (lv_initializer_list_13_0= ruleinitializer_list ) ) otherlv_14= ',' otherlv_15= '}' ( (lv_postfix_expression_linha_16_0= rulepostfix_expression_linha ) ) ) )
            int alt42=3;
            alt42 = dfa42.predict(input);
            switch (alt42) {
                case 1 :
                    // InternalAnsic.g:5621:3: ( ( (lv_primary_expression_0_0= ruleprimary_expression ) ) ( (lv_postfix_expression_linha_1_0= rulepostfix_expression_linha ) ) )
                    {
                    // InternalAnsic.g:5621:3: ( ( (lv_primary_expression_0_0= ruleprimary_expression ) ) ( (lv_postfix_expression_linha_1_0= rulepostfix_expression_linha ) ) )
                    // InternalAnsic.g:5622:4: ( (lv_primary_expression_0_0= ruleprimary_expression ) ) ( (lv_postfix_expression_linha_1_0= rulepostfix_expression_linha ) )
                    {
                    // InternalAnsic.g:5622:4: ( (lv_primary_expression_0_0= ruleprimary_expression ) )
                    // InternalAnsic.g:5623:5: (lv_primary_expression_0_0= ruleprimary_expression )
                    {
                    // InternalAnsic.g:5623:5: (lv_primary_expression_0_0= ruleprimary_expression )
                    // InternalAnsic.g:5624:6: lv_primary_expression_0_0= ruleprimary_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPostfix_expressionAccess().getPrimary_expressionPrimary_expressionParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_28);
                    lv_primary_expression_0_0=ruleprimary_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPostfix_expressionRule());
                      						}
                      						set(
                      							current,
                      							"primary_expression",
                      							lv_primary_expression_0_0,
                      							"org.xtext.example.Ansic.primary_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:5641:4: ( (lv_postfix_expression_linha_1_0= rulepostfix_expression_linha ) )
                    // InternalAnsic.g:5642:5: (lv_postfix_expression_linha_1_0= rulepostfix_expression_linha )
                    {
                    // InternalAnsic.g:5642:5: (lv_postfix_expression_linha_1_0= rulepostfix_expression_linha )
                    // InternalAnsic.g:5643:6: lv_postfix_expression_linha_1_0= rulepostfix_expression_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPostfix_expressionAccess().getPostfix_expression_linhaPostfix_expression_linhaParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_postfix_expression_linha_1_0=rulepostfix_expression_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPostfix_expressionRule());
                      						}
                      						set(
                      							current,
                      							"postfix_expression_linha",
                      							lv_postfix_expression_linha_1_0,
                      							"org.xtext.example.Ansic.postfix_expression_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:5662:3: (otherlv_2= '(' this_type_name_3= ruletype_name otherlv_4= ')' otherlv_5= '{' ( (lv_initializer_list_6_0= ruleinitializer_list ) ) otherlv_7= '}' ( (lv_postfix_expression_linha_8_0= rulepostfix_expression_linha ) ) )
                    {
                    // InternalAnsic.g:5662:3: (otherlv_2= '(' this_type_name_3= ruletype_name otherlv_4= ')' otherlv_5= '{' ( (lv_initializer_list_6_0= ruleinitializer_list ) ) otherlv_7= '}' ( (lv_postfix_expression_linha_8_0= rulepostfix_expression_linha ) ) )
                    // InternalAnsic.g:5663:4: otherlv_2= '(' this_type_name_3= ruletype_name otherlv_4= ')' otherlv_5= '{' ( (lv_initializer_list_6_0= ruleinitializer_list ) ) otherlv_7= '}' ( (lv_postfix_expression_linha_8_0= rulepostfix_expression_linha ) )
                    {
                    otherlv_2=(Token)match(input,34,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPostfix_expressionAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPostfix_expressionAccess().getType_nameParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_7);
                    this_type_name_3=ruletype_name();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_type_name_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_4=(Token)match(input,35,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getPostfix_expressionAccess().getRightParenthesisKeyword_1_2());
                      			
                    }
                    otherlv_5=(Token)match(input,54,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getPostfix_expressionAccess().getLeftCurlyBracketKeyword_1_3());
                      			
                    }
                    // InternalAnsic.g:5686:4: ( (lv_initializer_list_6_0= ruleinitializer_list ) )
                    // InternalAnsic.g:5687:5: (lv_initializer_list_6_0= ruleinitializer_list )
                    {
                    // InternalAnsic.g:5687:5: (lv_initializer_list_6_0= ruleinitializer_list )
                    // InternalAnsic.g:5688:6: lv_initializer_list_6_0= ruleinitializer_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPostfix_expressionAccess().getInitializer_listInitializer_listParserRuleCall_1_4_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_initializer_list_6_0=ruleinitializer_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPostfix_expressionRule());
                      						}
                      						set(
                      							current,
                      							"initializer_list",
                      							lv_initializer_list_6_0,
                      							"org.xtext.example.Ansic.initializer_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_7=(Token)match(input,55,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getPostfix_expressionAccess().getRightCurlyBracketKeyword_1_5());
                      			
                    }
                    // InternalAnsic.g:5709:4: ( (lv_postfix_expression_linha_8_0= rulepostfix_expression_linha ) )
                    // InternalAnsic.g:5710:5: (lv_postfix_expression_linha_8_0= rulepostfix_expression_linha )
                    {
                    // InternalAnsic.g:5710:5: (lv_postfix_expression_linha_8_0= rulepostfix_expression_linha )
                    // InternalAnsic.g:5711:6: lv_postfix_expression_linha_8_0= rulepostfix_expression_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPostfix_expressionAccess().getPostfix_expression_linhaPostfix_expression_linhaParserRuleCall_1_6_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_postfix_expression_linha_8_0=rulepostfix_expression_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPostfix_expressionRule());
                      						}
                      						set(
                      							current,
                      							"postfix_expression_linha",
                      							lv_postfix_expression_linha_8_0,
                      							"org.xtext.example.Ansic.postfix_expression_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:5730:3: (otherlv_9= '(' this_type_name_10= ruletype_name otherlv_11= ')' otherlv_12= '{' ( (lv_initializer_list_13_0= ruleinitializer_list ) ) otherlv_14= ',' otherlv_15= '}' ( (lv_postfix_expression_linha_16_0= rulepostfix_expression_linha ) ) )
                    {
                    // InternalAnsic.g:5730:3: (otherlv_9= '(' this_type_name_10= ruletype_name otherlv_11= ')' otherlv_12= '{' ( (lv_initializer_list_13_0= ruleinitializer_list ) ) otherlv_14= ',' otherlv_15= '}' ( (lv_postfix_expression_linha_16_0= rulepostfix_expression_linha ) ) )
                    // InternalAnsic.g:5731:4: otherlv_9= '(' this_type_name_10= ruletype_name otherlv_11= ')' otherlv_12= '{' ( (lv_initializer_list_13_0= ruleinitializer_list ) ) otherlv_14= ',' otherlv_15= '}' ( (lv_postfix_expression_linha_16_0= rulepostfix_expression_linha ) )
                    {
                    otherlv_9=(Token)match(input,34,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getPostfix_expressionAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPostfix_expressionAccess().getType_nameParserRuleCall_2_1());
                      			
                    }
                    pushFollow(FOLLOW_7);
                    this_type_name_10=ruletype_name();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_type_name_10;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_11=(Token)match(input,35,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getPostfix_expressionAccess().getRightParenthesisKeyword_2_2());
                      			
                    }
                    otherlv_12=(Token)match(input,54,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getPostfix_expressionAccess().getLeftCurlyBracketKeyword_2_3());
                      			
                    }
                    // InternalAnsic.g:5754:4: ( (lv_initializer_list_13_0= ruleinitializer_list ) )
                    // InternalAnsic.g:5755:5: (lv_initializer_list_13_0= ruleinitializer_list )
                    {
                    // InternalAnsic.g:5755:5: (lv_initializer_list_13_0= ruleinitializer_list )
                    // InternalAnsic.g:5756:6: lv_initializer_list_13_0= ruleinitializer_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPostfix_expressionAccess().getInitializer_listInitializer_listParserRuleCall_2_4_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_initializer_list_13_0=ruleinitializer_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPostfix_expressionRule());
                      						}
                      						set(
                      							current,
                      							"initializer_list",
                      							lv_initializer_list_13_0,
                      							"org.xtext.example.Ansic.initializer_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_14=(Token)match(input,56,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getPostfix_expressionAccess().getCommaKeyword_2_5());
                      			
                    }
                    otherlv_15=(Token)match(input,55,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_15, grammarAccess.getPostfix_expressionAccess().getRightCurlyBracketKeyword_2_6());
                      			
                    }
                    // InternalAnsic.g:5781:4: ( (lv_postfix_expression_linha_16_0= rulepostfix_expression_linha ) )
                    // InternalAnsic.g:5782:5: (lv_postfix_expression_linha_16_0= rulepostfix_expression_linha )
                    {
                    // InternalAnsic.g:5782:5: (lv_postfix_expression_linha_16_0= rulepostfix_expression_linha )
                    // InternalAnsic.g:5783:6: lv_postfix_expression_linha_16_0= rulepostfix_expression_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPostfix_expressionAccess().getPostfix_expression_linhaPostfix_expression_linhaParserRuleCall_2_7_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_postfix_expression_linha_16_0=rulepostfix_expression_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPostfix_expressionRule());
                      						}
                      						set(
                      							current,
                      							"postfix_expression_linha",
                      							lv_postfix_expression_linha_16_0,
                      							"org.xtext.example.Ansic.postfix_expression_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulepostfix_expression"


    // $ANTLR start "entryRulepostfix_expression_linha"
    // InternalAnsic.g:5805:1: entryRulepostfix_expression_linha returns [EObject current=null] : iv_rulepostfix_expression_linha= rulepostfix_expression_linha EOF ;
    public final EObject entryRulepostfix_expression_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_rulepostfix_expression_linha = null;


        try {
            // InternalAnsic.g:5805:65: (iv_rulepostfix_expression_linha= rulepostfix_expression_linha EOF )
            // InternalAnsic.g:5806:2: iv_rulepostfix_expression_linha= rulepostfix_expression_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPostfix_expression_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulepostfix_expression_linha=rulepostfix_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulepostfix_expression_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulepostfix_expression_linha"


    // $ANTLR start "rulepostfix_expression_linha"
    // InternalAnsic.g:5812:1: rulepostfix_expression_linha returns [EObject current=null] : ( () ( ( (lv_postfix_expression_complement_1_0= rulepostfix_expression_complement ) ) ( (lv_postfix_expression_linha_2_0= rulepostfix_expression_linha ) ) )? ) ;
    public final EObject rulepostfix_expression_linha() throws RecognitionException {
        EObject current = null;

        EObject lv_postfix_expression_complement_1_0 = null;

        EObject lv_postfix_expression_linha_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:5818:2: ( ( () ( ( (lv_postfix_expression_complement_1_0= rulepostfix_expression_complement ) ) ( (lv_postfix_expression_linha_2_0= rulepostfix_expression_linha ) ) )? ) )
            // InternalAnsic.g:5819:2: ( () ( ( (lv_postfix_expression_complement_1_0= rulepostfix_expression_complement ) ) ( (lv_postfix_expression_linha_2_0= rulepostfix_expression_linha ) ) )? )
            {
            // InternalAnsic.g:5819:2: ( () ( ( (lv_postfix_expression_complement_1_0= rulepostfix_expression_complement ) ) ( (lv_postfix_expression_linha_2_0= rulepostfix_expression_linha ) ) )? )
            // InternalAnsic.g:5820:3: () ( ( (lv_postfix_expression_complement_1_0= rulepostfix_expression_complement ) ) ( (lv_postfix_expression_linha_2_0= rulepostfix_expression_linha ) ) )?
            {
            // InternalAnsic.g:5820:3: ()
            // InternalAnsic.g:5821:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getPostfix_expression_linhaAccess().getPostfixExpressionLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:5830:3: ( ( (lv_postfix_expression_complement_1_0= rulepostfix_expression_complement ) ) ( (lv_postfix_expression_linha_2_0= rulepostfix_expression_linha ) ) )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==34||LA43_0==68||LA43_0==73||(LA43_0>=75 && LA43_0<=77)) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // InternalAnsic.g:5831:4: ( (lv_postfix_expression_complement_1_0= rulepostfix_expression_complement ) ) ( (lv_postfix_expression_linha_2_0= rulepostfix_expression_linha ) )
                    {
                    // InternalAnsic.g:5831:4: ( (lv_postfix_expression_complement_1_0= rulepostfix_expression_complement ) )
                    // InternalAnsic.g:5832:5: (lv_postfix_expression_complement_1_0= rulepostfix_expression_complement )
                    {
                    // InternalAnsic.g:5832:5: (lv_postfix_expression_complement_1_0= rulepostfix_expression_complement )
                    // InternalAnsic.g:5833:6: lv_postfix_expression_complement_1_0= rulepostfix_expression_complement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPostfix_expression_linhaAccess().getPostfix_expression_complementPostfix_expression_complementParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_28);
                    lv_postfix_expression_complement_1_0=rulepostfix_expression_complement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPostfix_expression_linhaRule());
                      						}
                      						set(
                      							current,
                      							"postfix_expression_complement",
                      							lv_postfix_expression_complement_1_0,
                      							"org.xtext.example.Ansic.postfix_expression_complement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:5850:4: ( (lv_postfix_expression_linha_2_0= rulepostfix_expression_linha ) )
                    // InternalAnsic.g:5851:5: (lv_postfix_expression_linha_2_0= rulepostfix_expression_linha )
                    {
                    // InternalAnsic.g:5851:5: (lv_postfix_expression_linha_2_0= rulepostfix_expression_linha )
                    // InternalAnsic.g:5852:6: lv_postfix_expression_linha_2_0= rulepostfix_expression_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPostfix_expression_linhaAccess().getPostfix_expression_linhaPostfix_expression_linhaParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_postfix_expression_linha_2_0=rulepostfix_expression_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPostfix_expression_linhaRule());
                      						}
                      						set(
                      							current,
                      							"postfix_expression_linha",
                      							lv_postfix_expression_linha_2_0,
                      							"org.xtext.example.Ansic.postfix_expression_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulepostfix_expression_linha"


    // $ANTLR start "entryRuleinitializer_list"
    // InternalAnsic.g:5874:1: entryRuleinitializer_list returns [EObject current=null] : iv_ruleinitializer_list= ruleinitializer_list EOF ;
    public final EObject entryRuleinitializer_list() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleinitializer_list = null;


        try {
            // InternalAnsic.g:5874:57: (iv_ruleinitializer_list= ruleinitializer_list EOF )
            // InternalAnsic.g:5875:2: iv_ruleinitializer_list= ruleinitializer_list EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInitializer_listRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleinitializer_list=ruleinitializer_list();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleinitializer_list; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleinitializer_list"


    // $ANTLR start "ruleinitializer_list"
    // InternalAnsic.g:5881:1: ruleinitializer_list returns [EObject current=null] : ( ( ( (lv_designation_0_0= ruledesignation ) ) ( (lv_initializer_1_0= ruleinitializer ) ) ( (lv_init_declarator_list_linha_2_0= ruleinit_declarator_list_linha ) ) ) | ( ( (lv_initializer_3_0= ruleinitializer ) ) ( (lv_init_declarator_list_linha_4_0= ruleinit_declarator_list_linha ) ) ) ) ;
    public final EObject ruleinitializer_list() throws RecognitionException {
        EObject current = null;

        EObject lv_designation_0_0 = null;

        EObject lv_initializer_1_0 = null;

        EObject lv_init_declarator_list_linha_2_0 = null;

        EObject lv_initializer_3_0 = null;

        EObject lv_init_declarator_list_linha_4_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:5887:2: ( ( ( ( (lv_designation_0_0= ruledesignation ) ) ( (lv_initializer_1_0= ruleinitializer ) ) ( (lv_init_declarator_list_linha_2_0= ruleinit_declarator_list_linha ) ) ) | ( ( (lv_initializer_3_0= ruleinitializer ) ) ( (lv_init_declarator_list_linha_4_0= ruleinit_declarator_list_linha ) ) ) ) )
            // InternalAnsic.g:5888:2: ( ( ( (lv_designation_0_0= ruledesignation ) ) ( (lv_initializer_1_0= ruleinitializer ) ) ( (lv_init_declarator_list_linha_2_0= ruleinit_declarator_list_linha ) ) ) | ( ( (lv_initializer_3_0= ruleinitializer ) ) ( (lv_init_declarator_list_linha_4_0= ruleinit_declarator_list_linha ) ) ) )
            {
            // InternalAnsic.g:5888:2: ( ( ( (lv_designation_0_0= ruledesignation ) ) ( (lv_initializer_1_0= ruleinitializer ) ) ( (lv_init_declarator_list_linha_2_0= ruleinit_declarator_list_linha ) ) ) | ( ( (lv_initializer_3_0= ruleinitializer ) ) ( (lv_init_declarator_list_linha_4_0= ruleinit_declarator_list_linha ) ) ) )
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==68||LA44_0==73) ) {
                alt44=1;
            }
            else if ( (LA44_0==RULE_IDZ||(LA44_0>=RULE_INT && LA44_0<=RULE_CHAR)||LA44_0==34||(LA44_0>=53 && LA44_0<=54)||LA44_0==67||LA44_0==71||(LA44_0>=76 && LA44_0<=79)||(LA44_0>=82 && LA44_0<=83)||LA44_0==99||(LA44_0>=115 && LA44_0<=116)) ) {
                alt44=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 44, 0, input);

                throw nvae;
            }
            switch (alt44) {
                case 1 :
                    // InternalAnsic.g:5889:3: ( ( (lv_designation_0_0= ruledesignation ) ) ( (lv_initializer_1_0= ruleinitializer ) ) ( (lv_init_declarator_list_linha_2_0= ruleinit_declarator_list_linha ) ) )
                    {
                    // InternalAnsic.g:5889:3: ( ( (lv_designation_0_0= ruledesignation ) ) ( (lv_initializer_1_0= ruleinitializer ) ) ( (lv_init_declarator_list_linha_2_0= ruleinit_declarator_list_linha ) ) )
                    // InternalAnsic.g:5890:4: ( (lv_designation_0_0= ruledesignation ) ) ( (lv_initializer_1_0= ruleinitializer ) ) ( (lv_init_declarator_list_linha_2_0= ruleinit_declarator_list_linha ) )
                    {
                    // InternalAnsic.g:5890:4: ( (lv_designation_0_0= ruledesignation ) )
                    // InternalAnsic.g:5891:5: (lv_designation_0_0= ruledesignation )
                    {
                    // InternalAnsic.g:5891:5: (lv_designation_0_0= ruledesignation )
                    // InternalAnsic.g:5892:6: lv_designation_0_0= ruledesignation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInitializer_listAccess().getDesignationDesignationParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_26);
                    lv_designation_0_0=ruledesignation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInitializer_listRule());
                      						}
                      						set(
                      							current,
                      							"designation",
                      							lv_designation_0_0,
                      							"org.xtext.example.Ansic.designation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:5909:4: ( (lv_initializer_1_0= ruleinitializer ) )
                    // InternalAnsic.g:5910:5: (lv_initializer_1_0= ruleinitializer )
                    {
                    // InternalAnsic.g:5910:5: (lv_initializer_1_0= ruleinitializer )
                    // InternalAnsic.g:5911:6: lv_initializer_1_0= ruleinitializer
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInitializer_listAccess().getInitializerInitializerParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_initializer_1_0=ruleinitializer();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInitializer_listRule());
                      						}
                      						set(
                      							current,
                      							"initializer",
                      							lv_initializer_1_0,
                      							"org.xtext.example.Ansic.initializer");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:5928:4: ( (lv_init_declarator_list_linha_2_0= ruleinit_declarator_list_linha ) )
                    // InternalAnsic.g:5929:5: (lv_init_declarator_list_linha_2_0= ruleinit_declarator_list_linha )
                    {
                    // InternalAnsic.g:5929:5: (lv_init_declarator_list_linha_2_0= ruleinit_declarator_list_linha )
                    // InternalAnsic.g:5930:6: lv_init_declarator_list_linha_2_0= ruleinit_declarator_list_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInitializer_listAccess().getInit_declarator_list_linhaInit_declarator_list_linhaParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_init_declarator_list_linha_2_0=ruleinit_declarator_list_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInitializer_listRule());
                      						}
                      						set(
                      							current,
                      							"init_declarator_list_linha",
                      							lv_init_declarator_list_linha_2_0,
                      							"org.xtext.example.Ansic.init_declarator_list_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:5949:3: ( ( (lv_initializer_3_0= ruleinitializer ) ) ( (lv_init_declarator_list_linha_4_0= ruleinit_declarator_list_linha ) ) )
                    {
                    // InternalAnsic.g:5949:3: ( ( (lv_initializer_3_0= ruleinitializer ) ) ( (lv_init_declarator_list_linha_4_0= ruleinit_declarator_list_linha ) ) )
                    // InternalAnsic.g:5950:4: ( (lv_initializer_3_0= ruleinitializer ) ) ( (lv_init_declarator_list_linha_4_0= ruleinit_declarator_list_linha ) )
                    {
                    // InternalAnsic.g:5950:4: ( (lv_initializer_3_0= ruleinitializer ) )
                    // InternalAnsic.g:5951:5: (lv_initializer_3_0= ruleinitializer )
                    {
                    // InternalAnsic.g:5951:5: (lv_initializer_3_0= ruleinitializer )
                    // InternalAnsic.g:5952:6: lv_initializer_3_0= ruleinitializer
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInitializer_listAccess().getInitializerInitializerParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_initializer_3_0=ruleinitializer();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInitializer_listRule());
                      						}
                      						set(
                      							current,
                      							"initializer",
                      							lv_initializer_3_0,
                      							"org.xtext.example.Ansic.initializer");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:5969:4: ( (lv_init_declarator_list_linha_4_0= ruleinit_declarator_list_linha ) )
                    // InternalAnsic.g:5970:5: (lv_init_declarator_list_linha_4_0= ruleinit_declarator_list_linha )
                    {
                    // InternalAnsic.g:5970:5: (lv_init_declarator_list_linha_4_0= ruleinit_declarator_list_linha )
                    // InternalAnsic.g:5971:6: lv_init_declarator_list_linha_4_0= ruleinit_declarator_list_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInitializer_listAccess().getInit_declarator_list_linhaInit_declarator_list_linhaParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_init_declarator_list_linha_4_0=ruleinit_declarator_list_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInitializer_listRule());
                      						}
                      						set(
                      							current,
                      							"init_declarator_list_linha",
                      							lv_init_declarator_list_linha_4_0,
                      							"org.xtext.example.Ansic.init_declarator_list_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleinitializer_list"


    // $ANTLR start "entryRuleinitializer_list_complement"
    // InternalAnsic.g:5993:1: entryRuleinitializer_list_complement returns [EObject current=null] : iv_ruleinitializer_list_complement= ruleinitializer_list_complement EOF ;
    public final EObject entryRuleinitializer_list_complement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleinitializer_list_complement = null;


        try {
            // InternalAnsic.g:5993:68: (iv_ruleinitializer_list_complement= ruleinitializer_list_complement EOF )
            // InternalAnsic.g:5994:2: iv_ruleinitializer_list_complement= ruleinitializer_list_complement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInitializer_list_complementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleinitializer_list_complement=ruleinitializer_list_complement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleinitializer_list_complement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleinitializer_list_complement"


    // $ANTLR start "ruleinitializer_list_complement"
    // InternalAnsic.g:6000:1: ruleinitializer_list_complement returns [EObject current=null] : ( (otherlv_0= ',' ( (lv_designation_1_0= ruledesignation ) ) ( (lv_initializer_2_0= ruleinitializer ) ) ) | (otherlv_3= ',' ( (lv_initializer_4_0= ruleinitializer ) ) ) ) ;
    public final EObject ruleinitializer_list_complement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        EObject lv_designation_1_0 = null;

        EObject lv_initializer_2_0 = null;

        EObject lv_initializer_4_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:6006:2: ( ( (otherlv_0= ',' ( (lv_designation_1_0= ruledesignation ) ) ( (lv_initializer_2_0= ruleinitializer ) ) ) | (otherlv_3= ',' ( (lv_initializer_4_0= ruleinitializer ) ) ) ) )
            // InternalAnsic.g:6007:2: ( (otherlv_0= ',' ( (lv_designation_1_0= ruledesignation ) ) ( (lv_initializer_2_0= ruleinitializer ) ) ) | (otherlv_3= ',' ( (lv_initializer_4_0= ruleinitializer ) ) ) )
            {
            // InternalAnsic.g:6007:2: ( (otherlv_0= ',' ( (lv_designation_1_0= ruledesignation ) ) ( (lv_initializer_2_0= ruleinitializer ) ) ) | (otherlv_3= ',' ( (lv_initializer_4_0= ruleinitializer ) ) ) )
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==56) ) {
                int LA45_1 = input.LA(2);

                if ( (LA45_1==RULE_IDZ||(LA45_1>=RULE_INT && LA45_1<=RULE_CHAR)||LA45_1==34||(LA45_1>=53 && LA45_1<=54)||LA45_1==67||LA45_1==71||(LA45_1>=76 && LA45_1<=79)||(LA45_1>=82 && LA45_1<=83)||LA45_1==99||(LA45_1>=115 && LA45_1<=116)) ) {
                    alt45=2;
                }
                else if ( (LA45_1==68||LA45_1==73) ) {
                    alt45=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 45, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 45, 0, input);

                throw nvae;
            }
            switch (alt45) {
                case 1 :
                    // InternalAnsic.g:6008:3: (otherlv_0= ',' ( (lv_designation_1_0= ruledesignation ) ) ( (lv_initializer_2_0= ruleinitializer ) ) )
                    {
                    // InternalAnsic.g:6008:3: (otherlv_0= ',' ( (lv_designation_1_0= ruledesignation ) ) ( (lv_initializer_2_0= ruleinitializer ) ) )
                    // InternalAnsic.g:6009:4: otherlv_0= ',' ( (lv_designation_1_0= ruledesignation ) ) ( (lv_initializer_2_0= ruleinitializer ) )
                    {
                    otherlv_0=(Token)match(input,56,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getInitializer_list_complementAccess().getCommaKeyword_0_0());
                      			
                    }
                    // InternalAnsic.g:6013:4: ( (lv_designation_1_0= ruledesignation ) )
                    // InternalAnsic.g:6014:5: (lv_designation_1_0= ruledesignation )
                    {
                    // InternalAnsic.g:6014:5: (lv_designation_1_0= ruledesignation )
                    // InternalAnsic.g:6015:6: lv_designation_1_0= ruledesignation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInitializer_list_complementAccess().getDesignationDesignationParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_26);
                    lv_designation_1_0=ruledesignation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInitializer_list_complementRule());
                      						}
                      						set(
                      							current,
                      							"designation",
                      							lv_designation_1_0,
                      							"org.xtext.example.Ansic.designation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:6032:4: ( (lv_initializer_2_0= ruleinitializer ) )
                    // InternalAnsic.g:6033:5: (lv_initializer_2_0= ruleinitializer )
                    {
                    // InternalAnsic.g:6033:5: (lv_initializer_2_0= ruleinitializer )
                    // InternalAnsic.g:6034:6: lv_initializer_2_0= ruleinitializer
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInitializer_list_complementAccess().getInitializerInitializerParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_initializer_2_0=ruleinitializer();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInitializer_list_complementRule());
                      						}
                      						set(
                      							current,
                      							"initializer",
                      							lv_initializer_2_0,
                      							"org.xtext.example.Ansic.initializer");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:6053:3: (otherlv_3= ',' ( (lv_initializer_4_0= ruleinitializer ) ) )
                    {
                    // InternalAnsic.g:6053:3: (otherlv_3= ',' ( (lv_initializer_4_0= ruleinitializer ) ) )
                    // InternalAnsic.g:6054:4: otherlv_3= ',' ( (lv_initializer_4_0= ruleinitializer ) )
                    {
                    otherlv_3=(Token)match(input,56,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getInitializer_list_complementAccess().getCommaKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:6058:4: ( (lv_initializer_4_0= ruleinitializer ) )
                    // InternalAnsic.g:6059:5: (lv_initializer_4_0= ruleinitializer )
                    {
                    // InternalAnsic.g:6059:5: (lv_initializer_4_0= ruleinitializer )
                    // InternalAnsic.g:6060:6: lv_initializer_4_0= ruleinitializer
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInitializer_list_complementAccess().getInitializerInitializerParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_initializer_4_0=ruleinitializer();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInitializer_list_complementRule());
                      						}
                      						set(
                      							current,
                      							"initializer",
                      							lv_initializer_4_0,
                      							"org.xtext.example.Ansic.initializer");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleinitializer_list_complement"


    // $ANTLR start "entryRuledesignation"
    // InternalAnsic.g:6082:1: entryRuledesignation returns [EObject current=null] : iv_ruledesignation= ruledesignation EOF ;
    public final EObject entryRuledesignation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledesignation = null;


        try {
            // InternalAnsic.g:6082:52: (iv_ruledesignation= ruledesignation EOF )
            // InternalAnsic.g:6083:2: iv_ruledesignation= ruledesignation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDesignationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledesignation=ruledesignation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledesignation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledesignation"


    // $ANTLR start "ruledesignation"
    // InternalAnsic.g:6089:1: ruledesignation returns [EObject current=null] : ( ( (lv_designator_list_0_0= ruledesignator_list ) ) otherlv_1= '=' ) ;
    public final EObject ruledesignation() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_designator_list_0_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:6095:2: ( ( ( (lv_designator_list_0_0= ruledesignator_list ) ) otherlv_1= '=' ) )
            // InternalAnsic.g:6096:2: ( ( (lv_designator_list_0_0= ruledesignator_list ) ) otherlv_1= '=' )
            {
            // InternalAnsic.g:6096:2: ( ( (lv_designator_list_0_0= ruledesignator_list ) ) otherlv_1= '=' )
            // InternalAnsic.g:6097:3: ( (lv_designator_list_0_0= ruledesignator_list ) ) otherlv_1= '='
            {
            // InternalAnsic.g:6097:3: ( (lv_designator_list_0_0= ruledesignator_list ) )
            // InternalAnsic.g:6098:4: (lv_designator_list_0_0= ruledesignator_list )
            {
            // InternalAnsic.g:6098:4: (lv_designator_list_0_0= ruledesignator_list )
            // InternalAnsic.g:6099:5: lv_designator_list_0_0= ruledesignator_list
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDesignationAccess().getDesignator_listDesignator_listParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_13);
            lv_designator_list_0_0=ruledesignator_list();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDesignationRule());
              					}
              					set(
              						current,
              						"designator_list",
              						lv_designator_list_0_0,
              						"org.xtext.example.Ansic.designator_list");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDesignationAccess().getEqualsSignKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledesignation"


    // $ANTLR start "entryRuledesignator_list"
    // InternalAnsic.g:6124:1: entryRuledesignator_list returns [EObject current=null] : iv_ruledesignator_list= ruledesignator_list EOF ;
    public final EObject entryRuledesignator_list() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledesignator_list = null;


        try {
            // InternalAnsic.g:6124:56: (iv_ruledesignator_list= ruledesignator_list EOF )
            // InternalAnsic.g:6125:2: iv_ruledesignator_list= ruledesignator_list EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDesignator_listRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledesignator_list=ruledesignator_list();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledesignator_list; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledesignator_list"


    // $ANTLR start "ruledesignator_list"
    // InternalAnsic.g:6131:1: ruledesignator_list returns [EObject current=null] : ( ( (lv_designator_0_0= ruledesignator ) ) ( (lv_designator_list_linha_1_0= ruledesignator_list_linha ) ) ) ;
    public final EObject ruledesignator_list() throws RecognitionException {
        EObject current = null;

        EObject lv_designator_0_0 = null;

        EObject lv_designator_list_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:6137:2: ( ( ( (lv_designator_0_0= ruledesignator ) ) ( (lv_designator_list_linha_1_0= ruledesignator_list_linha ) ) ) )
            // InternalAnsic.g:6138:2: ( ( (lv_designator_0_0= ruledesignator ) ) ( (lv_designator_list_linha_1_0= ruledesignator_list_linha ) ) )
            {
            // InternalAnsic.g:6138:2: ( ( (lv_designator_0_0= ruledesignator ) ) ( (lv_designator_list_linha_1_0= ruledesignator_list_linha ) ) )
            // InternalAnsic.g:6139:3: ( (lv_designator_0_0= ruledesignator ) ) ( (lv_designator_list_linha_1_0= ruledesignator_list_linha ) )
            {
            // InternalAnsic.g:6139:3: ( (lv_designator_0_0= ruledesignator ) )
            // InternalAnsic.g:6140:4: (lv_designator_0_0= ruledesignator )
            {
            // InternalAnsic.g:6140:4: (lv_designator_0_0= ruledesignator )
            // InternalAnsic.g:6141:5: lv_designator_0_0= ruledesignator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDesignator_listAccess().getDesignatorDesignatorParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_29);
            lv_designator_0_0=ruledesignator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDesignator_listRule());
              					}
              					set(
              						current,
              						"designator",
              						lv_designator_0_0,
              						"org.xtext.example.Ansic.designator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:6158:3: ( (lv_designator_list_linha_1_0= ruledesignator_list_linha ) )
            // InternalAnsic.g:6159:4: (lv_designator_list_linha_1_0= ruledesignator_list_linha )
            {
            // InternalAnsic.g:6159:4: (lv_designator_list_linha_1_0= ruledesignator_list_linha )
            // InternalAnsic.g:6160:5: lv_designator_list_linha_1_0= ruledesignator_list_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDesignator_listAccess().getDesignator_list_linhaDesignator_list_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_designator_list_linha_1_0=ruledesignator_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDesignator_listRule());
              					}
              					set(
              						current,
              						"designator_list_linha",
              						lv_designator_list_linha_1_0,
              						"org.xtext.example.Ansic.designator_list_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledesignator_list"


    // $ANTLR start "entryRuledesignator_list_linha"
    // InternalAnsic.g:6181:1: entryRuledesignator_list_linha returns [EObject current=null] : iv_ruledesignator_list_linha= ruledesignator_list_linha EOF ;
    public final EObject entryRuledesignator_list_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledesignator_list_linha = null;


        try {
            // InternalAnsic.g:6181:62: (iv_ruledesignator_list_linha= ruledesignator_list_linha EOF )
            // InternalAnsic.g:6182:2: iv_ruledesignator_list_linha= ruledesignator_list_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDesignator_list_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledesignator_list_linha=ruledesignator_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledesignator_list_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledesignator_list_linha"


    // $ANTLR start "ruledesignator_list_linha"
    // InternalAnsic.g:6188:1: ruledesignator_list_linha returns [EObject current=null] : ( () ( ( (lv_designator_1_0= ruledesignator ) ) ( (lv_designator_list_linha_2_0= ruledeclaration_list_linha ) ) )? ) ;
    public final EObject ruledesignator_list_linha() throws RecognitionException {
        EObject current = null;

        EObject lv_designator_1_0 = null;

        EObject lv_designator_list_linha_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:6194:2: ( ( () ( ( (lv_designator_1_0= ruledesignator ) ) ( (lv_designator_list_linha_2_0= ruledeclaration_list_linha ) ) )? ) )
            // InternalAnsic.g:6195:2: ( () ( ( (lv_designator_1_0= ruledesignator ) ) ( (lv_designator_list_linha_2_0= ruledeclaration_list_linha ) ) )? )
            {
            // InternalAnsic.g:6195:2: ( () ( ( (lv_designator_1_0= ruledesignator ) ) ( (lv_designator_list_linha_2_0= ruledeclaration_list_linha ) ) )? )
            // InternalAnsic.g:6196:3: () ( ( (lv_designator_1_0= ruledesignator ) ) ( (lv_designator_list_linha_2_0= ruledeclaration_list_linha ) ) )?
            {
            // InternalAnsic.g:6196:3: ()
            // InternalAnsic.g:6197:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDesignator_list_linhaAccess().getDesignatorListLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:6206:3: ( ( (lv_designator_1_0= ruledesignator ) ) ( (lv_designator_list_linha_2_0= ruledeclaration_list_linha ) ) )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==68||LA46_0==73) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // InternalAnsic.g:6207:4: ( (lv_designator_1_0= ruledesignator ) ) ( (lv_designator_list_linha_2_0= ruledeclaration_list_linha ) )
                    {
                    // InternalAnsic.g:6207:4: ( (lv_designator_1_0= ruledesignator ) )
                    // InternalAnsic.g:6208:5: (lv_designator_1_0= ruledesignator )
                    {
                    // InternalAnsic.g:6208:5: (lv_designator_1_0= ruledesignator )
                    // InternalAnsic.g:6209:6: lv_designator_1_0= ruledesignator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDesignator_list_linhaAccess().getDesignatorDesignatorParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_3);
                    lv_designator_1_0=ruledesignator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDesignator_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"designator",
                      							lv_designator_1_0,
                      							"org.xtext.example.Ansic.designator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:6226:4: ( (lv_designator_list_linha_2_0= ruledeclaration_list_linha ) )
                    // InternalAnsic.g:6227:5: (lv_designator_list_linha_2_0= ruledeclaration_list_linha )
                    {
                    // InternalAnsic.g:6227:5: (lv_designator_list_linha_2_0= ruledeclaration_list_linha )
                    // InternalAnsic.g:6228:6: lv_designator_list_linha_2_0= ruledeclaration_list_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDesignator_list_linhaAccess().getDesignator_list_linhaDeclaration_list_linhaParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_designator_list_linha_2_0=ruledeclaration_list_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDesignator_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"designator_list_linha",
                      							lv_designator_list_linha_2_0,
                      							"org.xtext.example.Ansic.declaration_list_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledesignator_list_linha"


    // $ANTLR start "entryRuledesignator"
    // InternalAnsic.g:6250:1: entryRuledesignator returns [EObject current=null] : iv_ruledesignator= ruledesignator EOF ;
    public final EObject entryRuledesignator() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledesignator = null;


        try {
            // InternalAnsic.g:6250:51: (iv_ruledesignator= ruledesignator EOF )
            // InternalAnsic.g:6251:2: iv_ruledesignator= ruledesignator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDesignatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledesignator=ruledesignator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledesignator; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledesignator"


    // $ANTLR start "ruledesignator"
    // InternalAnsic.g:6257:1: ruledesignator returns [EObject current=null] : ( (otherlv_0= '[' ( (lv_constant_expression_1_0= ruleconditional_expression ) ) otherlv_2= ']' ) | (otherlv_3= '.' ( (lv_identifier_4_0= RULE_IDZ ) ) ) ) ;
    public final EObject ruledesignator() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_identifier_4_0=null;
        EObject lv_constant_expression_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:6263:2: ( ( (otherlv_0= '[' ( (lv_constant_expression_1_0= ruleconditional_expression ) ) otherlv_2= ']' ) | (otherlv_3= '.' ( (lv_identifier_4_0= RULE_IDZ ) ) ) ) )
            // InternalAnsic.g:6264:2: ( (otherlv_0= '[' ( (lv_constant_expression_1_0= ruleconditional_expression ) ) otherlv_2= ']' ) | (otherlv_3= '.' ( (lv_identifier_4_0= RULE_IDZ ) ) ) )
            {
            // InternalAnsic.g:6264:2: ( (otherlv_0= '[' ( (lv_constant_expression_1_0= ruleconditional_expression ) ) otherlv_2= ']' ) | (otherlv_3= '.' ( (lv_identifier_4_0= RULE_IDZ ) ) ) )
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==68) ) {
                alt47=1;
            }
            else if ( (LA47_0==73) ) {
                alt47=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 47, 0, input);

                throw nvae;
            }
            switch (alt47) {
                case 1 :
                    // InternalAnsic.g:6265:3: (otherlv_0= '[' ( (lv_constant_expression_1_0= ruleconditional_expression ) ) otherlv_2= ']' )
                    {
                    // InternalAnsic.g:6265:3: (otherlv_0= '[' ( (lv_constant_expression_1_0= ruleconditional_expression ) ) otherlv_2= ']' )
                    // InternalAnsic.g:6266:4: otherlv_0= '[' ( (lv_constant_expression_1_0= ruleconditional_expression ) ) otherlv_2= ']'
                    {
                    otherlv_0=(Token)match(input,68,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getDesignatorAccess().getLeftSquareBracketKeyword_0_0());
                      			
                    }
                    // InternalAnsic.g:6270:4: ( (lv_constant_expression_1_0= ruleconditional_expression ) )
                    // InternalAnsic.g:6271:5: (lv_constant_expression_1_0= ruleconditional_expression )
                    {
                    // InternalAnsic.g:6271:5: (lv_constant_expression_1_0= ruleconditional_expression )
                    // InternalAnsic.g:6272:6: lv_constant_expression_1_0= ruleconditional_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDesignatorAccess().getConstant_expressionConditional_expressionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_constant_expression_1_0=ruleconditional_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDesignatorRule());
                      						}
                      						set(
                      							current,
                      							"constant_expression",
                      							lv_constant_expression_1_0,
                      							"org.xtext.example.Ansic.conditional_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,69,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getDesignatorAccess().getRightSquareBracketKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:6295:3: (otherlv_3= '.' ( (lv_identifier_4_0= RULE_IDZ ) ) )
                    {
                    // InternalAnsic.g:6295:3: (otherlv_3= '.' ( (lv_identifier_4_0= RULE_IDZ ) ) )
                    // InternalAnsic.g:6296:4: otherlv_3= '.' ( (lv_identifier_4_0= RULE_IDZ ) )
                    {
                    otherlv_3=(Token)match(input,73,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getDesignatorAccess().getFullStopKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:6300:4: ( (lv_identifier_4_0= RULE_IDZ ) )
                    // InternalAnsic.g:6301:5: (lv_identifier_4_0= RULE_IDZ )
                    {
                    // InternalAnsic.g:6301:5: (lv_identifier_4_0= RULE_IDZ )
                    // InternalAnsic.g:6302:6: lv_identifier_4_0= RULE_IDZ
                    {
                    lv_identifier_4_0=(Token)match(input,RULE_IDZ,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_identifier_4_0, grammarAccess.getDesignatorAccess().getIdentifierIDzTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDesignatorRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"identifier",
                      							lv_identifier_4_0,
                      							"org.xtext.example.Ansic.IDz");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledesignator"


    // $ANTLR start "entryRulestatic_assert_declaration"
    // InternalAnsic.g:6323:1: entryRulestatic_assert_declaration returns [EObject current=null] : iv_rulestatic_assert_declaration= rulestatic_assert_declaration EOF ;
    public final EObject entryRulestatic_assert_declaration() throws RecognitionException {
        EObject current = null;

        EObject iv_rulestatic_assert_declaration = null;


        try {
            // InternalAnsic.g:6323:66: (iv_rulestatic_assert_declaration= rulestatic_assert_declaration EOF )
            // InternalAnsic.g:6324:2: iv_rulestatic_assert_declaration= rulestatic_assert_declaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatic_assert_declarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulestatic_assert_declaration=rulestatic_assert_declaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulestatic_assert_declaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulestatic_assert_declaration"


    // $ANTLR start "rulestatic_assert_declaration"
    // InternalAnsic.g:6330:1: rulestatic_assert_declaration returns [EObject current=null] : (otherlv_0= '_Static_assert' otherlv_1= '(' ( (lv_constant_expression_2_0= ruleconstant_expression ) ) otherlv_3= ',' this_STRING_LITERAL_4= RULE_STRING_LITERAL otherlv_5= ')' otherlv_6= ';' ) ;
    public final EObject rulestatic_assert_declaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token this_STRING_LITERAL_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_constant_expression_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:6336:2: ( (otherlv_0= '_Static_assert' otherlv_1= '(' ( (lv_constant_expression_2_0= ruleconstant_expression ) ) otherlv_3= ',' this_STRING_LITERAL_4= RULE_STRING_LITERAL otherlv_5= ')' otherlv_6= ';' ) )
            // InternalAnsic.g:6337:2: (otherlv_0= '_Static_assert' otherlv_1= '(' ( (lv_constant_expression_2_0= ruleconstant_expression ) ) otherlv_3= ',' this_STRING_LITERAL_4= RULE_STRING_LITERAL otherlv_5= ')' otherlv_6= ';' )
            {
            // InternalAnsic.g:6337:2: (otherlv_0= '_Static_assert' otherlv_1= '(' ( (lv_constant_expression_2_0= ruleconstant_expression ) ) otherlv_3= ',' this_STRING_LITERAL_4= RULE_STRING_LITERAL otherlv_5= ')' otherlv_6= ';' )
            // InternalAnsic.g:6338:3: otherlv_0= '_Static_assert' otherlv_1= '(' ( (lv_constant_expression_2_0= ruleconstant_expression ) ) otherlv_3= ',' this_STRING_LITERAL_4= RULE_STRING_LITERAL otherlv_5= ')' otherlv_6= ';'
            {
            otherlv_0=(Token)match(input,74,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getStatic_assert_declarationAccess().get_Static_assertKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,34,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getStatic_assert_declarationAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalAnsic.g:6346:3: ( (lv_constant_expression_2_0= ruleconstant_expression ) )
            // InternalAnsic.g:6347:4: (lv_constant_expression_2_0= ruleconstant_expression )
            {
            // InternalAnsic.g:6347:4: (lv_constant_expression_2_0= ruleconstant_expression )
            // InternalAnsic.g:6348:5: lv_constant_expression_2_0= ruleconstant_expression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStatic_assert_declarationAccess().getConstant_expressionConstant_expressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_12);
            lv_constant_expression_2_0=ruleconstant_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStatic_assert_declarationRule());
              					}
              					set(
              						current,
              						"constant_expression",
              						lv_constant_expression_2_0,
              						"org.xtext.example.Ansic.constant_expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,56,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getStatic_assert_declarationAccess().getCommaKeyword_3());
              		
            }
            this_STRING_LITERAL_4=(Token)match(input,RULE_STRING_LITERAL,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_STRING_LITERAL_4, grammarAccess.getStatic_assert_declarationAccess().getSTRING_LITERALTerminalRuleCall_4());
              		
            }
            otherlv_5=(Token)match(input,35,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getStatic_assert_declarationAccess().getRightParenthesisKeyword_5());
              		
            }
            otherlv_6=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getStatic_assert_declarationAccess().getSemicolonKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulestatic_assert_declaration"


    // $ANTLR start "entryRulepostfix_expression_complement"
    // InternalAnsic.g:6385:1: entryRulepostfix_expression_complement returns [EObject current=null] : iv_rulepostfix_expression_complement= rulepostfix_expression_complement EOF ;
    public final EObject entryRulepostfix_expression_complement() throws RecognitionException {
        EObject current = null;

        EObject iv_rulepostfix_expression_complement = null;


        try {
            // InternalAnsic.g:6385:70: (iv_rulepostfix_expression_complement= rulepostfix_expression_complement EOF )
            // InternalAnsic.g:6386:2: iv_rulepostfix_expression_complement= rulepostfix_expression_complement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPostfix_expression_complementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulepostfix_expression_complement=rulepostfix_expression_complement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulepostfix_expression_complement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulepostfix_expression_complement"


    // $ANTLR start "rulepostfix_expression_complement"
    // InternalAnsic.g:6392:1: rulepostfix_expression_complement returns [EObject current=null] : ( (otherlv_0= '[' ( (lv_expression_1_0= ruleexpression ) ) otherlv_2= ']' ) | ( () otherlv_4= '(' otherlv_5= ')' ) | (otherlv_6= '(' ( (lv_argument_expression_list_7_0= ruleargument_expression_list ) ) otherlv_8= ')' ) | (otherlv_9= '.' ( (lv_identifier_10_0= RULE_IDZ ) ) ) | (otherlv_11= '->' ( (lv_identifier_12_0= RULE_IDZ ) ) ) | otherlv_13= '++' | otherlv_14= '--' ) ;
    public final EObject rulepostfix_expression_complement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token lv_identifier_10_0=null;
        Token otherlv_11=null;
        Token lv_identifier_12_0=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        EObject lv_expression_1_0 = null;

        EObject lv_argument_expression_list_7_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:6398:2: ( ( (otherlv_0= '[' ( (lv_expression_1_0= ruleexpression ) ) otherlv_2= ']' ) | ( () otherlv_4= '(' otherlv_5= ')' ) | (otherlv_6= '(' ( (lv_argument_expression_list_7_0= ruleargument_expression_list ) ) otherlv_8= ')' ) | (otherlv_9= '.' ( (lv_identifier_10_0= RULE_IDZ ) ) ) | (otherlv_11= '->' ( (lv_identifier_12_0= RULE_IDZ ) ) ) | otherlv_13= '++' | otherlv_14= '--' ) )
            // InternalAnsic.g:6399:2: ( (otherlv_0= '[' ( (lv_expression_1_0= ruleexpression ) ) otherlv_2= ']' ) | ( () otherlv_4= '(' otherlv_5= ')' ) | (otherlv_6= '(' ( (lv_argument_expression_list_7_0= ruleargument_expression_list ) ) otherlv_8= ')' ) | (otherlv_9= '.' ( (lv_identifier_10_0= RULE_IDZ ) ) ) | (otherlv_11= '->' ( (lv_identifier_12_0= RULE_IDZ ) ) ) | otherlv_13= '++' | otherlv_14= '--' )
            {
            // InternalAnsic.g:6399:2: ( (otherlv_0= '[' ( (lv_expression_1_0= ruleexpression ) ) otherlv_2= ']' ) | ( () otherlv_4= '(' otherlv_5= ')' ) | (otherlv_6= '(' ( (lv_argument_expression_list_7_0= ruleargument_expression_list ) ) otherlv_8= ')' ) | (otherlv_9= '.' ( (lv_identifier_10_0= RULE_IDZ ) ) ) | (otherlv_11= '->' ( (lv_identifier_12_0= RULE_IDZ ) ) ) | otherlv_13= '++' | otherlv_14= '--' )
            int alt48=7;
            switch ( input.LA(1) ) {
            case 68:
                {
                alt48=1;
                }
                break;
            case 34:
                {
                int LA48_2 = input.LA(2);

                if ( (LA48_2==RULE_IDZ||(LA48_2>=RULE_INT && LA48_2<=RULE_CHAR)||LA48_2==34||LA48_2==53||LA48_2==67||LA48_2==71||(LA48_2>=76 && LA48_2<=79)||(LA48_2>=82 && LA48_2<=83)||LA48_2==99||(LA48_2>=115 && LA48_2<=116)) ) {
                    alt48=3;
                }
                else if ( (LA48_2==35) ) {
                    alt48=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 48, 2, input);

                    throw nvae;
                }
                }
                break;
            case 73:
                {
                alt48=4;
                }
                break;
            case 75:
                {
                alt48=5;
                }
                break;
            case 76:
                {
                alt48=6;
                }
                break;
            case 77:
                {
                alt48=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 48, 0, input);

                throw nvae;
            }

            switch (alt48) {
                case 1 :
                    // InternalAnsic.g:6400:3: (otherlv_0= '[' ( (lv_expression_1_0= ruleexpression ) ) otherlv_2= ']' )
                    {
                    // InternalAnsic.g:6400:3: (otherlv_0= '[' ( (lv_expression_1_0= ruleexpression ) ) otherlv_2= ']' )
                    // InternalAnsic.g:6401:4: otherlv_0= '[' ( (lv_expression_1_0= ruleexpression ) ) otherlv_2= ']'
                    {
                    otherlv_0=(Token)match(input,68,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getPostfix_expression_complementAccess().getLeftSquareBracketKeyword_0_0());
                      			
                    }
                    // InternalAnsic.g:6405:4: ( (lv_expression_1_0= ruleexpression ) )
                    // InternalAnsic.g:6406:5: (lv_expression_1_0= ruleexpression )
                    {
                    // InternalAnsic.g:6406:5: (lv_expression_1_0= ruleexpression )
                    // InternalAnsic.g:6407:6: lv_expression_1_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPostfix_expression_complementAccess().getExpressionExpressionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_expression_1_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPostfix_expression_complementRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_1_0,
                      							"org.xtext.example.Ansic.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,69,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPostfix_expression_complementAccess().getRightSquareBracketKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:6430:3: ( () otherlv_4= '(' otherlv_5= ')' )
                    {
                    // InternalAnsic.g:6430:3: ( () otherlv_4= '(' otherlv_5= ')' )
                    // InternalAnsic.g:6431:4: () otherlv_4= '(' otherlv_5= ')'
                    {
                    // InternalAnsic.g:6431:4: ()
                    // InternalAnsic.g:6432:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPostfix_expression_complementAccess().getPostFixEmpryParamsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_4=(Token)match(input,34,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getPostfix_expression_complementAccess().getLeftParenthesisKeyword_1_1());
                      			
                    }
                    otherlv_5=(Token)match(input,35,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getPostfix_expression_complementAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:6451:3: (otherlv_6= '(' ( (lv_argument_expression_list_7_0= ruleargument_expression_list ) ) otherlv_8= ')' )
                    {
                    // InternalAnsic.g:6451:3: (otherlv_6= '(' ( (lv_argument_expression_list_7_0= ruleargument_expression_list ) ) otherlv_8= ')' )
                    // InternalAnsic.g:6452:4: otherlv_6= '(' ( (lv_argument_expression_list_7_0= ruleargument_expression_list ) ) otherlv_8= ')'
                    {
                    otherlv_6=(Token)match(input,34,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getPostfix_expression_complementAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    // InternalAnsic.g:6456:4: ( (lv_argument_expression_list_7_0= ruleargument_expression_list ) )
                    // InternalAnsic.g:6457:5: (lv_argument_expression_list_7_0= ruleargument_expression_list )
                    {
                    // InternalAnsic.g:6457:5: (lv_argument_expression_list_7_0= ruleargument_expression_list )
                    // InternalAnsic.g:6458:6: lv_argument_expression_list_7_0= ruleargument_expression_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPostfix_expression_complementAccess().getArgument_expression_listArgument_expression_listParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_argument_expression_list_7_0=ruleargument_expression_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPostfix_expression_complementRule());
                      						}
                      						set(
                      							current,
                      							"argument_expression_list",
                      							lv_argument_expression_list_7_0,
                      							"org.xtext.example.Ansic.argument_expression_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_8=(Token)match(input,35,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getPostfix_expression_complementAccess().getRightParenthesisKeyword_2_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalAnsic.g:6481:3: (otherlv_9= '.' ( (lv_identifier_10_0= RULE_IDZ ) ) )
                    {
                    // InternalAnsic.g:6481:3: (otherlv_9= '.' ( (lv_identifier_10_0= RULE_IDZ ) ) )
                    // InternalAnsic.g:6482:4: otherlv_9= '.' ( (lv_identifier_10_0= RULE_IDZ ) )
                    {
                    otherlv_9=(Token)match(input,73,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getPostfix_expression_complementAccess().getFullStopKeyword_3_0());
                      			
                    }
                    // InternalAnsic.g:6486:4: ( (lv_identifier_10_0= RULE_IDZ ) )
                    // InternalAnsic.g:6487:5: (lv_identifier_10_0= RULE_IDZ )
                    {
                    // InternalAnsic.g:6487:5: (lv_identifier_10_0= RULE_IDZ )
                    // InternalAnsic.g:6488:6: lv_identifier_10_0= RULE_IDZ
                    {
                    lv_identifier_10_0=(Token)match(input,RULE_IDZ,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_identifier_10_0, grammarAccess.getPostfix_expression_complementAccess().getIdentifierIDzTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPostfix_expression_complementRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"identifier",
                      							lv_identifier_10_0,
                      							"org.xtext.example.Ansic.IDz");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalAnsic.g:6506:3: (otherlv_11= '->' ( (lv_identifier_12_0= RULE_IDZ ) ) )
                    {
                    // InternalAnsic.g:6506:3: (otherlv_11= '->' ( (lv_identifier_12_0= RULE_IDZ ) ) )
                    // InternalAnsic.g:6507:4: otherlv_11= '->' ( (lv_identifier_12_0= RULE_IDZ ) )
                    {
                    otherlv_11=(Token)match(input,75,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getPostfix_expression_complementAccess().getHyphenMinusGreaterThanSignKeyword_4_0());
                      			
                    }
                    // InternalAnsic.g:6511:4: ( (lv_identifier_12_0= RULE_IDZ ) )
                    // InternalAnsic.g:6512:5: (lv_identifier_12_0= RULE_IDZ )
                    {
                    // InternalAnsic.g:6512:5: (lv_identifier_12_0= RULE_IDZ )
                    // InternalAnsic.g:6513:6: lv_identifier_12_0= RULE_IDZ
                    {
                    lv_identifier_12_0=(Token)match(input,RULE_IDZ,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_identifier_12_0, grammarAccess.getPostfix_expression_complementAccess().getIdentifierIDzTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPostfix_expression_complementRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"identifier",
                      							lv_identifier_12_0,
                      							"org.xtext.example.Ansic.IDz");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalAnsic.g:6531:3: otherlv_13= '++'
                    {
                    otherlv_13=(Token)match(input,76,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_13, grammarAccess.getPostfix_expression_complementAccess().getPlusSignPlusSignKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalAnsic.g:6536:3: otherlv_14= '--'
                    {
                    otherlv_14=(Token)match(input,77,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_14, grammarAccess.getPostfix_expression_complementAccess().getHyphenMinusHyphenMinusKeyword_6());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulepostfix_expression_complement"


    // $ANTLR start "entryRuleargument_expression_list"
    // InternalAnsic.g:6544:1: entryRuleargument_expression_list returns [EObject current=null] : iv_ruleargument_expression_list= ruleargument_expression_list EOF ;
    public final EObject entryRuleargument_expression_list() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleargument_expression_list = null;


        try {
            // InternalAnsic.g:6544:65: (iv_ruleargument_expression_list= ruleargument_expression_list EOF )
            // InternalAnsic.g:6545:2: iv_ruleargument_expression_list= ruleargument_expression_list EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArgument_expression_listRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleargument_expression_list=ruleargument_expression_list();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleargument_expression_list; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleargument_expression_list"


    // $ANTLR start "ruleargument_expression_list"
    // InternalAnsic.g:6551:1: ruleargument_expression_list returns [EObject current=null] : ( ( (lv_assignment_expressions_0_0= ruleassignment_expression ) ) (otherlv_1= ',' ( (lv_assignment_expressions_2_0= ruleassignment_expression ) ) )* ) ;
    public final EObject ruleargument_expression_list() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_assignment_expressions_0_0 = null;

        EObject lv_assignment_expressions_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:6557:2: ( ( ( (lv_assignment_expressions_0_0= ruleassignment_expression ) ) (otherlv_1= ',' ( (lv_assignment_expressions_2_0= ruleassignment_expression ) ) )* ) )
            // InternalAnsic.g:6558:2: ( ( (lv_assignment_expressions_0_0= ruleassignment_expression ) ) (otherlv_1= ',' ( (lv_assignment_expressions_2_0= ruleassignment_expression ) ) )* )
            {
            // InternalAnsic.g:6558:2: ( ( (lv_assignment_expressions_0_0= ruleassignment_expression ) ) (otherlv_1= ',' ( (lv_assignment_expressions_2_0= ruleassignment_expression ) ) )* )
            // InternalAnsic.g:6559:3: ( (lv_assignment_expressions_0_0= ruleassignment_expression ) ) (otherlv_1= ',' ( (lv_assignment_expressions_2_0= ruleassignment_expression ) ) )*
            {
            // InternalAnsic.g:6559:3: ( (lv_assignment_expressions_0_0= ruleassignment_expression ) )
            // InternalAnsic.g:6560:4: (lv_assignment_expressions_0_0= ruleassignment_expression )
            {
            // InternalAnsic.g:6560:4: (lv_assignment_expressions_0_0= ruleassignment_expression )
            // InternalAnsic.g:6561:5: lv_assignment_expressions_0_0= ruleassignment_expression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getArgument_expression_listAccess().getAssignment_expressionsAssignment_expressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_24);
            lv_assignment_expressions_0_0=ruleassignment_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getArgument_expression_listRule());
              					}
              					add(
              						current,
              						"assignment_expressions",
              						lv_assignment_expressions_0_0,
              						"org.xtext.example.Ansic.assignment_expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:6578:3: (otherlv_1= ',' ( (lv_assignment_expressions_2_0= ruleassignment_expression ) ) )*
            loop49:
            do {
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( (LA49_0==56) ) {
                    alt49=1;
                }


                switch (alt49) {
            	case 1 :
            	    // InternalAnsic.g:6579:4: otherlv_1= ',' ( (lv_assignment_expressions_2_0= ruleassignment_expression ) )
            	    {
            	    otherlv_1=(Token)match(input,56,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getArgument_expression_listAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalAnsic.g:6583:4: ( (lv_assignment_expressions_2_0= ruleassignment_expression ) )
            	    // InternalAnsic.g:6584:5: (lv_assignment_expressions_2_0= ruleassignment_expression )
            	    {
            	    // InternalAnsic.g:6584:5: (lv_assignment_expressions_2_0= ruleassignment_expression )
            	    // InternalAnsic.g:6585:6: lv_assignment_expressions_2_0= ruleassignment_expression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getArgument_expression_listAccess().getAssignment_expressionsAssignment_expressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_24);
            	    lv_assignment_expressions_2_0=ruleassignment_expression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getArgument_expression_listRule());
            	      						}
            	      						add(
            	      							current,
            	      							"assignment_expressions",
            	      							lv_assignment_expressions_2_0,
            	      							"org.xtext.example.Ansic.assignment_expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleargument_expression_list"


    // $ANTLR start "entryRuleargument_expression_list_linha"
    // InternalAnsic.g:6607:1: entryRuleargument_expression_list_linha returns [EObject current=null] : iv_ruleargument_expression_list_linha= ruleargument_expression_list_linha EOF ;
    public final EObject entryRuleargument_expression_list_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleargument_expression_list_linha = null;


        try {
            // InternalAnsic.g:6607:71: (iv_ruleargument_expression_list_linha= ruleargument_expression_list_linha EOF )
            // InternalAnsic.g:6608:2: iv_ruleargument_expression_list_linha= ruleargument_expression_list_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArgument_expression_list_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleargument_expression_list_linha=ruleargument_expression_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleargument_expression_list_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleargument_expression_list_linha"


    // $ANTLR start "ruleargument_expression_list_linha"
    // InternalAnsic.g:6614:1: ruleargument_expression_list_linha returns [EObject current=null] : ( () (otherlv_1= ',' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) ( (lv_argument_expression_list_linha_3_0= ruleargument_expression_list_linha ) ) )? ) ;
    public final EObject ruleargument_expression_list_linha() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_assignment_expression_2_0 = null;

        EObject lv_argument_expression_list_linha_3_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:6620:2: ( ( () (otherlv_1= ',' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) ( (lv_argument_expression_list_linha_3_0= ruleargument_expression_list_linha ) ) )? ) )
            // InternalAnsic.g:6621:2: ( () (otherlv_1= ',' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) ( (lv_argument_expression_list_linha_3_0= ruleargument_expression_list_linha ) ) )? )
            {
            // InternalAnsic.g:6621:2: ( () (otherlv_1= ',' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) ( (lv_argument_expression_list_linha_3_0= ruleargument_expression_list_linha ) ) )? )
            // InternalAnsic.g:6622:3: () (otherlv_1= ',' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) ( (lv_argument_expression_list_linha_3_0= ruleargument_expression_list_linha ) ) )?
            {
            // InternalAnsic.g:6622:3: ()
            // InternalAnsic.g:6623:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getArgument_expression_list_linhaAccess().getArgumentExpressionListLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:6632:3: (otherlv_1= ',' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) ( (lv_argument_expression_list_linha_3_0= ruleargument_expression_list_linha ) ) )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==56) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
                    // InternalAnsic.g:6633:4: otherlv_1= ',' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) ( (lv_argument_expression_list_linha_3_0= ruleargument_expression_list_linha ) )
                    {
                    otherlv_1=(Token)match(input,56,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getArgument_expression_list_linhaAccess().getCommaKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:6637:4: ( (lv_assignment_expression_2_0= ruleassignment_expression ) )
                    // InternalAnsic.g:6638:5: (lv_assignment_expression_2_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:6638:5: (lv_assignment_expression_2_0= ruleassignment_expression )
                    // InternalAnsic.g:6639:6: lv_assignment_expression_2_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getArgument_expression_list_linhaAccess().getAssignment_expressionAssignment_expressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_assignment_expression_2_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getArgument_expression_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"assignment_expression",
                      							lv_assignment_expression_2_0,
                      							"org.xtext.example.Ansic.assignment_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:6656:4: ( (lv_argument_expression_list_linha_3_0= ruleargument_expression_list_linha ) )
                    // InternalAnsic.g:6657:5: (lv_argument_expression_list_linha_3_0= ruleargument_expression_list_linha )
                    {
                    // InternalAnsic.g:6657:5: (lv_argument_expression_list_linha_3_0= ruleargument_expression_list_linha )
                    // InternalAnsic.g:6658:6: lv_argument_expression_list_linha_3_0= ruleargument_expression_list_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getArgument_expression_list_linhaAccess().getArgument_expression_list_linhaArgument_expression_list_linhaParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_argument_expression_list_linha_3_0=ruleargument_expression_list_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getArgument_expression_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"argument_expression_list_linha",
                      							lv_argument_expression_list_linha_3_0,
                      							"org.xtext.example.Ansic.argument_expression_list_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleargument_expression_list_linha"


    // $ANTLR start "entryRuleunary_expression"
    // InternalAnsic.g:6680:1: entryRuleunary_expression returns [EObject current=null] : iv_ruleunary_expression= ruleunary_expression EOF ;
    public final EObject entryRuleunary_expression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleunary_expression = null;


        try {
            // InternalAnsic.g:6680:57: (iv_ruleunary_expression= ruleunary_expression EOF )
            // InternalAnsic.g:6681:2: iv_ruleunary_expression= ruleunary_expression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnary_expressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleunary_expression=ruleunary_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleunary_expression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleunary_expression"


    // $ANTLR start "ruleunary_expression"
    // InternalAnsic.g:6687:1: ruleunary_expression returns [EObject current=null] : ( ( (lv_postfix_expression_0_0= rulepostfix_expression ) ) | ( () ( (lv_plus_2_0= '++' ) ) ( (lv_unary_expression_3_0= ruleunary_expression ) ) ) | (otherlv_4= '--' ( (lv_unary_expression_5_0= ruleunary_expression ) ) ) | ( ( (lv_unary_operator_6_0= ruleunary_operator ) ) ( (lv_cast_expression_7_0= rulecast_expression ) ) ) | (otherlv_8= 'sizeof' ( (lv_unary_expression_9_0= ruleunary_expression ) ) ) | (otherlv_10= 'sizeof' otherlv_11= '(' ( (lv_type_name_12_0= ruletype_name ) ) otherlv_13= ')' ) | (otherlv_14= '_Alignof' otherlv_15= '(' ( (lv_type_name_16_0= ruletype_name ) ) otherlv_17= ')' ) ) ;
    public final EObject ruleunary_expression() throws RecognitionException {
        EObject current = null;

        Token lv_plus_2_0=null;
        Token otherlv_4=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        EObject lv_postfix_expression_0_0 = null;

        EObject lv_unary_expression_3_0 = null;

        EObject lv_unary_expression_5_0 = null;

        AntlrDatatypeRuleToken lv_unary_operator_6_0 = null;

        EObject lv_cast_expression_7_0 = null;

        EObject lv_unary_expression_9_0 = null;

        EObject lv_type_name_12_0 = null;

        EObject lv_type_name_16_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:6693:2: ( ( ( (lv_postfix_expression_0_0= rulepostfix_expression ) ) | ( () ( (lv_plus_2_0= '++' ) ) ( (lv_unary_expression_3_0= ruleunary_expression ) ) ) | (otherlv_4= '--' ( (lv_unary_expression_5_0= ruleunary_expression ) ) ) | ( ( (lv_unary_operator_6_0= ruleunary_operator ) ) ( (lv_cast_expression_7_0= rulecast_expression ) ) ) | (otherlv_8= 'sizeof' ( (lv_unary_expression_9_0= ruleunary_expression ) ) ) | (otherlv_10= 'sizeof' otherlv_11= '(' ( (lv_type_name_12_0= ruletype_name ) ) otherlv_13= ')' ) | (otherlv_14= '_Alignof' otherlv_15= '(' ( (lv_type_name_16_0= ruletype_name ) ) otherlv_17= ')' ) ) )
            // InternalAnsic.g:6694:2: ( ( (lv_postfix_expression_0_0= rulepostfix_expression ) ) | ( () ( (lv_plus_2_0= '++' ) ) ( (lv_unary_expression_3_0= ruleunary_expression ) ) ) | (otherlv_4= '--' ( (lv_unary_expression_5_0= ruleunary_expression ) ) ) | ( ( (lv_unary_operator_6_0= ruleunary_operator ) ) ( (lv_cast_expression_7_0= rulecast_expression ) ) ) | (otherlv_8= 'sizeof' ( (lv_unary_expression_9_0= ruleunary_expression ) ) ) | (otherlv_10= 'sizeof' otherlv_11= '(' ( (lv_type_name_12_0= ruletype_name ) ) otherlv_13= ')' ) | (otherlv_14= '_Alignof' otherlv_15= '(' ( (lv_type_name_16_0= ruletype_name ) ) otherlv_17= ')' ) )
            {
            // InternalAnsic.g:6694:2: ( ( (lv_postfix_expression_0_0= rulepostfix_expression ) ) | ( () ( (lv_plus_2_0= '++' ) ) ( (lv_unary_expression_3_0= ruleunary_expression ) ) ) | (otherlv_4= '--' ( (lv_unary_expression_5_0= ruleunary_expression ) ) ) | ( ( (lv_unary_operator_6_0= ruleunary_operator ) ) ( (lv_cast_expression_7_0= rulecast_expression ) ) ) | (otherlv_8= 'sizeof' ( (lv_unary_expression_9_0= ruleunary_expression ) ) ) | (otherlv_10= 'sizeof' otherlv_11= '(' ( (lv_type_name_12_0= ruletype_name ) ) otherlv_13= ')' ) | (otherlv_14= '_Alignof' otherlv_15= '(' ( (lv_type_name_16_0= ruletype_name ) ) otherlv_17= ')' ) )
            int alt51=7;
            alt51 = dfa51.predict(input);
            switch (alt51) {
                case 1 :
                    // InternalAnsic.g:6695:3: ( (lv_postfix_expression_0_0= rulepostfix_expression ) )
                    {
                    // InternalAnsic.g:6695:3: ( (lv_postfix_expression_0_0= rulepostfix_expression ) )
                    // InternalAnsic.g:6696:4: (lv_postfix_expression_0_0= rulepostfix_expression )
                    {
                    // InternalAnsic.g:6696:4: (lv_postfix_expression_0_0= rulepostfix_expression )
                    // InternalAnsic.g:6697:5: lv_postfix_expression_0_0= rulepostfix_expression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getUnary_expressionAccess().getPostfix_expressionPostfix_expressionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_postfix_expression_0_0=rulepostfix_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getUnary_expressionRule());
                      					}
                      					set(
                      						current,
                      						"postfix_expression",
                      						lv_postfix_expression_0_0,
                      						"org.xtext.example.Ansic.postfix_expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:6715:3: ( () ( (lv_plus_2_0= '++' ) ) ( (lv_unary_expression_3_0= ruleunary_expression ) ) )
                    {
                    // InternalAnsic.g:6715:3: ( () ( (lv_plus_2_0= '++' ) ) ( (lv_unary_expression_3_0= ruleunary_expression ) ) )
                    // InternalAnsic.g:6716:4: () ( (lv_plus_2_0= '++' ) ) ( (lv_unary_expression_3_0= ruleunary_expression ) )
                    {
                    // InternalAnsic.g:6716:4: ()
                    // InternalAnsic.g:6717:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getUnary_expressionAccess().getPlusPlusAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalAnsic.g:6726:4: ( (lv_plus_2_0= '++' ) )
                    // InternalAnsic.g:6727:5: (lv_plus_2_0= '++' )
                    {
                    // InternalAnsic.g:6727:5: (lv_plus_2_0= '++' )
                    // InternalAnsic.g:6728:6: lv_plus_2_0= '++'
                    {
                    lv_plus_2_0=(Token)match(input,76,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_plus_2_0, grammarAccess.getUnary_expressionAccess().getPlusPlusSignPlusSignKeyword_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getUnary_expressionRule());
                      						}
                      						setWithLastConsumed(current, "plus", lv_plus_2_0, "++");
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:6740:4: ( (lv_unary_expression_3_0= ruleunary_expression ) )
                    // InternalAnsic.g:6741:5: (lv_unary_expression_3_0= ruleunary_expression )
                    {
                    // InternalAnsic.g:6741:5: (lv_unary_expression_3_0= ruleunary_expression )
                    // InternalAnsic.g:6742:6: lv_unary_expression_3_0= ruleunary_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnary_expressionAccess().getUnary_expressionUnary_expressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_unary_expression_3_0=ruleunary_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnary_expressionRule());
                      						}
                      						set(
                      							current,
                      							"unary_expression",
                      							lv_unary_expression_3_0,
                      							"org.xtext.example.Ansic.unary_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:6761:3: (otherlv_4= '--' ( (lv_unary_expression_5_0= ruleunary_expression ) ) )
                    {
                    // InternalAnsic.g:6761:3: (otherlv_4= '--' ( (lv_unary_expression_5_0= ruleunary_expression ) ) )
                    // InternalAnsic.g:6762:4: otherlv_4= '--' ( (lv_unary_expression_5_0= ruleunary_expression ) )
                    {
                    otherlv_4=(Token)match(input,77,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getUnary_expressionAccess().getHyphenMinusHyphenMinusKeyword_2_0());
                      			
                    }
                    // InternalAnsic.g:6766:4: ( (lv_unary_expression_5_0= ruleunary_expression ) )
                    // InternalAnsic.g:6767:5: (lv_unary_expression_5_0= ruleunary_expression )
                    {
                    // InternalAnsic.g:6767:5: (lv_unary_expression_5_0= ruleunary_expression )
                    // InternalAnsic.g:6768:6: lv_unary_expression_5_0= ruleunary_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnary_expressionAccess().getUnary_expressionUnary_expressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_unary_expression_5_0=ruleunary_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnary_expressionRule());
                      						}
                      						set(
                      							current,
                      							"unary_expression",
                      							lv_unary_expression_5_0,
                      							"org.xtext.example.Ansic.unary_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalAnsic.g:6787:3: ( ( (lv_unary_operator_6_0= ruleunary_operator ) ) ( (lv_cast_expression_7_0= rulecast_expression ) ) )
                    {
                    // InternalAnsic.g:6787:3: ( ( (lv_unary_operator_6_0= ruleunary_operator ) ) ( (lv_cast_expression_7_0= rulecast_expression ) ) )
                    // InternalAnsic.g:6788:4: ( (lv_unary_operator_6_0= ruleunary_operator ) ) ( (lv_cast_expression_7_0= rulecast_expression ) )
                    {
                    // InternalAnsic.g:6788:4: ( (lv_unary_operator_6_0= ruleunary_operator ) )
                    // InternalAnsic.g:6789:5: (lv_unary_operator_6_0= ruleunary_operator )
                    {
                    // InternalAnsic.g:6789:5: (lv_unary_operator_6_0= ruleunary_operator )
                    // InternalAnsic.g:6790:6: lv_unary_operator_6_0= ruleunary_operator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnary_expressionAccess().getUnary_operatorUnary_operatorParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_8);
                    lv_unary_operator_6_0=ruleunary_operator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnary_expressionRule());
                      						}
                      						set(
                      							current,
                      							"unary_operator",
                      							lv_unary_operator_6_0,
                      							"org.xtext.example.Ansic.unary_operator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:6807:4: ( (lv_cast_expression_7_0= rulecast_expression ) )
                    // InternalAnsic.g:6808:5: (lv_cast_expression_7_0= rulecast_expression )
                    {
                    // InternalAnsic.g:6808:5: (lv_cast_expression_7_0= rulecast_expression )
                    // InternalAnsic.g:6809:6: lv_cast_expression_7_0= rulecast_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnary_expressionAccess().getCast_expressionCast_expressionParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_cast_expression_7_0=rulecast_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnary_expressionRule());
                      						}
                      						set(
                      							current,
                      							"cast_expression",
                      							lv_cast_expression_7_0,
                      							"org.xtext.example.Ansic.cast_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalAnsic.g:6828:3: (otherlv_8= 'sizeof' ( (lv_unary_expression_9_0= ruleunary_expression ) ) )
                    {
                    // InternalAnsic.g:6828:3: (otherlv_8= 'sizeof' ( (lv_unary_expression_9_0= ruleunary_expression ) ) )
                    // InternalAnsic.g:6829:4: otherlv_8= 'sizeof' ( (lv_unary_expression_9_0= ruleunary_expression ) )
                    {
                    otherlv_8=(Token)match(input,78,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getUnary_expressionAccess().getSizeofKeyword_4_0());
                      			
                    }
                    // InternalAnsic.g:6833:4: ( (lv_unary_expression_9_0= ruleunary_expression ) )
                    // InternalAnsic.g:6834:5: (lv_unary_expression_9_0= ruleunary_expression )
                    {
                    // InternalAnsic.g:6834:5: (lv_unary_expression_9_0= ruleunary_expression )
                    // InternalAnsic.g:6835:6: lv_unary_expression_9_0= ruleunary_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnary_expressionAccess().getUnary_expressionUnary_expressionParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_unary_expression_9_0=ruleunary_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnary_expressionRule());
                      						}
                      						set(
                      							current,
                      							"unary_expression",
                      							lv_unary_expression_9_0,
                      							"org.xtext.example.Ansic.unary_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalAnsic.g:6854:3: (otherlv_10= 'sizeof' otherlv_11= '(' ( (lv_type_name_12_0= ruletype_name ) ) otherlv_13= ')' )
                    {
                    // InternalAnsic.g:6854:3: (otherlv_10= 'sizeof' otherlv_11= '(' ( (lv_type_name_12_0= ruletype_name ) ) otherlv_13= ')' )
                    // InternalAnsic.g:6855:4: otherlv_10= 'sizeof' otherlv_11= '(' ( (lv_type_name_12_0= ruletype_name ) ) otherlv_13= ')'
                    {
                    otherlv_10=(Token)match(input,78,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getUnary_expressionAccess().getSizeofKeyword_5_0());
                      			
                    }
                    otherlv_11=(Token)match(input,34,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getUnary_expressionAccess().getLeftParenthesisKeyword_5_1());
                      			
                    }
                    // InternalAnsic.g:6863:4: ( (lv_type_name_12_0= ruletype_name ) )
                    // InternalAnsic.g:6864:5: (lv_type_name_12_0= ruletype_name )
                    {
                    // InternalAnsic.g:6864:5: (lv_type_name_12_0= ruletype_name )
                    // InternalAnsic.g:6865:6: lv_type_name_12_0= ruletype_name
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnary_expressionAccess().getType_nameType_nameParserRuleCall_5_2_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_type_name_12_0=ruletype_name();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnary_expressionRule());
                      						}
                      						set(
                      							current,
                      							"type_name",
                      							lv_type_name_12_0,
                      							"org.xtext.example.Ansic.type_name");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_13=(Token)match(input,35,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getUnary_expressionAccess().getRightParenthesisKeyword_5_3());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalAnsic.g:6888:3: (otherlv_14= '_Alignof' otherlv_15= '(' ( (lv_type_name_16_0= ruletype_name ) ) otherlv_17= ')' )
                    {
                    // InternalAnsic.g:6888:3: (otherlv_14= '_Alignof' otherlv_15= '(' ( (lv_type_name_16_0= ruletype_name ) ) otherlv_17= ')' )
                    // InternalAnsic.g:6889:4: otherlv_14= '_Alignof' otherlv_15= '(' ( (lv_type_name_16_0= ruletype_name ) ) otherlv_17= ')'
                    {
                    otherlv_14=(Token)match(input,79,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getUnary_expressionAccess().get_AlignofKeyword_6_0());
                      			
                    }
                    otherlv_15=(Token)match(input,34,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_15, grammarAccess.getUnary_expressionAccess().getLeftParenthesisKeyword_6_1());
                      			
                    }
                    // InternalAnsic.g:6897:4: ( (lv_type_name_16_0= ruletype_name ) )
                    // InternalAnsic.g:6898:5: (lv_type_name_16_0= ruletype_name )
                    {
                    // InternalAnsic.g:6898:5: (lv_type_name_16_0= ruletype_name )
                    // InternalAnsic.g:6899:6: lv_type_name_16_0= ruletype_name
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnary_expressionAccess().getType_nameType_nameParserRuleCall_6_2_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_type_name_16_0=ruletype_name();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnary_expressionRule());
                      						}
                      						set(
                      							current,
                      							"type_name",
                      							lv_type_name_16_0,
                      							"org.xtext.example.Ansic.type_name");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_17=(Token)match(input,35,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getUnary_expressionAccess().getRightParenthesisKeyword_6_3());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleunary_expression"


    // $ANTLR start "entryRulecast_expression"
    // InternalAnsic.g:6925:1: entryRulecast_expression returns [EObject current=null] : iv_rulecast_expression= rulecast_expression EOF ;
    public final EObject entryRulecast_expression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulecast_expression = null;


        try {
            // InternalAnsic.g:6925:56: (iv_rulecast_expression= rulecast_expression EOF )
            // InternalAnsic.g:6926:2: iv_rulecast_expression= rulecast_expression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCast_expressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulecast_expression=rulecast_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulecast_expression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulecast_expression"


    // $ANTLR start "rulecast_expression"
    // InternalAnsic.g:6932:1: rulecast_expression returns [EObject current=null] : ( ( (lv_unary_expression_0_0= ruleunary_expression ) ) | (otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')' ( (lv_cast_expression_4_0= rulecast_expression ) ) ) ) ;
    public final EObject rulecast_expression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_unary_expression_0_0 = null;

        EObject lv_type_name_2_0 = null;

        EObject lv_cast_expression_4_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:6938:2: ( ( ( (lv_unary_expression_0_0= ruleunary_expression ) ) | (otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')' ( (lv_cast_expression_4_0= rulecast_expression ) ) ) ) )
            // InternalAnsic.g:6939:2: ( ( (lv_unary_expression_0_0= ruleunary_expression ) ) | (otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')' ( (lv_cast_expression_4_0= rulecast_expression ) ) ) )
            {
            // InternalAnsic.g:6939:2: ( ( (lv_unary_expression_0_0= ruleunary_expression ) ) | (otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')' ( (lv_cast_expression_4_0= rulecast_expression ) ) ) )
            int alt52=2;
            alt52 = dfa52.predict(input);
            switch (alt52) {
                case 1 :
                    // InternalAnsic.g:6940:3: ( (lv_unary_expression_0_0= ruleunary_expression ) )
                    {
                    // InternalAnsic.g:6940:3: ( (lv_unary_expression_0_0= ruleunary_expression ) )
                    // InternalAnsic.g:6941:4: (lv_unary_expression_0_0= ruleunary_expression )
                    {
                    // InternalAnsic.g:6941:4: (lv_unary_expression_0_0= ruleunary_expression )
                    // InternalAnsic.g:6942:5: lv_unary_expression_0_0= ruleunary_expression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getCast_expressionAccess().getUnary_expressionUnary_expressionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_unary_expression_0_0=ruleunary_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getCast_expressionRule());
                      					}
                      					set(
                      						current,
                      						"unary_expression",
                      						lv_unary_expression_0_0,
                      						"org.xtext.example.Ansic.unary_expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:6960:3: (otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')' ( (lv_cast_expression_4_0= rulecast_expression ) ) )
                    {
                    // InternalAnsic.g:6960:3: (otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')' ( (lv_cast_expression_4_0= rulecast_expression ) ) )
                    // InternalAnsic.g:6961:4: otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')' ( (lv_cast_expression_4_0= rulecast_expression ) )
                    {
                    otherlv_1=(Token)match(input,34,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getCast_expressionAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:6965:4: ( (lv_type_name_2_0= ruletype_name ) )
                    // InternalAnsic.g:6966:5: (lv_type_name_2_0= ruletype_name )
                    {
                    // InternalAnsic.g:6966:5: (lv_type_name_2_0= ruletype_name )
                    // InternalAnsic.g:6967:6: lv_type_name_2_0= ruletype_name
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCast_expressionAccess().getType_nameType_nameParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_type_name_2_0=ruletype_name();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCast_expressionRule());
                      						}
                      						set(
                      							current,
                      							"type_name",
                      							lv_type_name_2_0,
                      							"org.xtext.example.Ansic.type_name");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,35,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getCast_expressionAccess().getRightParenthesisKeyword_1_2());
                      			
                    }
                    // InternalAnsic.g:6988:4: ( (lv_cast_expression_4_0= rulecast_expression ) )
                    // InternalAnsic.g:6989:5: (lv_cast_expression_4_0= rulecast_expression )
                    {
                    // InternalAnsic.g:6989:5: (lv_cast_expression_4_0= rulecast_expression )
                    // InternalAnsic.g:6990:6: lv_cast_expression_4_0= rulecast_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCast_expressionAccess().getCast_expressionCast_expressionParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_cast_expression_4_0=rulecast_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCast_expressionRule());
                      						}
                      						set(
                      							current,
                      							"cast_expression",
                      							lv_cast_expression_4_0,
                      							"org.xtext.example.Ansic.cast_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulecast_expression"


    // $ANTLR start "entryRulemultiplicative_expression"
    // InternalAnsic.g:7012:1: entryRulemultiplicative_expression returns [EObject current=null] : iv_rulemultiplicative_expression= rulemultiplicative_expression EOF ;
    public final EObject entryRulemultiplicative_expression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulemultiplicative_expression = null;


        try {
            // InternalAnsic.g:7012:66: (iv_rulemultiplicative_expression= rulemultiplicative_expression EOF )
            // InternalAnsic.g:7013:2: iv_rulemultiplicative_expression= rulemultiplicative_expression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicative_expressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulemultiplicative_expression=rulemultiplicative_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulemultiplicative_expression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulemultiplicative_expression"


    // $ANTLR start "rulemultiplicative_expression"
    // InternalAnsic.g:7019:1: rulemultiplicative_expression returns [EObject current=null] : ( ( (lv_cast_expression_0_0= rulecast_expression ) ) ( (lv_multiplicative_expression_linha_1_0= rulemultiplicative_expression_linha ) ) ) ;
    public final EObject rulemultiplicative_expression() throws RecognitionException {
        EObject current = null;

        EObject lv_cast_expression_0_0 = null;

        EObject lv_multiplicative_expression_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:7025:2: ( ( ( (lv_cast_expression_0_0= rulecast_expression ) ) ( (lv_multiplicative_expression_linha_1_0= rulemultiplicative_expression_linha ) ) ) )
            // InternalAnsic.g:7026:2: ( ( (lv_cast_expression_0_0= rulecast_expression ) ) ( (lv_multiplicative_expression_linha_1_0= rulemultiplicative_expression_linha ) ) )
            {
            // InternalAnsic.g:7026:2: ( ( (lv_cast_expression_0_0= rulecast_expression ) ) ( (lv_multiplicative_expression_linha_1_0= rulemultiplicative_expression_linha ) ) )
            // InternalAnsic.g:7027:3: ( (lv_cast_expression_0_0= rulecast_expression ) ) ( (lv_multiplicative_expression_linha_1_0= rulemultiplicative_expression_linha ) )
            {
            // InternalAnsic.g:7027:3: ( (lv_cast_expression_0_0= rulecast_expression ) )
            // InternalAnsic.g:7028:4: (lv_cast_expression_0_0= rulecast_expression )
            {
            // InternalAnsic.g:7028:4: (lv_cast_expression_0_0= rulecast_expression )
            // InternalAnsic.g:7029:5: lv_cast_expression_0_0= rulecast_expression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMultiplicative_expressionAccess().getCast_expressionCast_expressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_31);
            lv_cast_expression_0_0=rulecast_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMultiplicative_expressionRule());
              					}
              					set(
              						current,
              						"cast_expression",
              						lv_cast_expression_0_0,
              						"org.xtext.example.Ansic.cast_expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:7046:3: ( (lv_multiplicative_expression_linha_1_0= rulemultiplicative_expression_linha ) )
            // InternalAnsic.g:7047:4: (lv_multiplicative_expression_linha_1_0= rulemultiplicative_expression_linha )
            {
            // InternalAnsic.g:7047:4: (lv_multiplicative_expression_linha_1_0= rulemultiplicative_expression_linha )
            // InternalAnsic.g:7048:5: lv_multiplicative_expression_linha_1_0= rulemultiplicative_expression_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMultiplicative_expressionAccess().getMultiplicative_expression_linhaMultiplicative_expression_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_multiplicative_expression_linha_1_0=rulemultiplicative_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMultiplicative_expressionRule());
              					}
              					set(
              						current,
              						"multiplicative_expression_linha",
              						lv_multiplicative_expression_linha_1_0,
              						"org.xtext.example.Ansic.multiplicative_expression_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulemultiplicative_expression"


    // $ANTLR start "entryRulemultiplicative_expression_linha"
    // InternalAnsic.g:7069:1: entryRulemultiplicative_expression_linha returns [EObject current=null] : iv_rulemultiplicative_expression_linha= rulemultiplicative_expression_linha EOF ;
    public final EObject entryRulemultiplicative_expression_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_rulemultiplicative_expression_linha = null;


        try {
            // InternalAnsic.g:7069:72: (iv_rulemultiplicative_expression_linha= rulemultiplicative_expression_linha EOF )
            // InternalAnsic.g:7070:2: iv_rulemultiplicative_expression_linha= rulemultiplicative_expression_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicative_expression_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulemultiplicative_expression_linha=rulemultiplicative_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulemultiplicative_expression_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulemultiplicative_expression_linha"


    // $ANTLR start "rulemultiplicative_expression_linha"
    // InternalAnsic.g:7076:1: rulemultiplicative_expression_linha returns [EObject current=null] : ( ( (lv_multiplicative_expression_complement_0_0= rulemultiplicative_expression_complement ) ) ( (lv_multiplicative_expression_linha_1_0= rulemultiplicative_expression_linha ) ) )? ;
    public final EObject rulemultiplicative_expression_linha() throws RecognitionException {
        EObject current = null;

        EObject lv_multiplicative_expression_complement_0_0 = null;

        EObject lv_multiplicative_expression_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:7082:2: ( ( ( (lv_multiplicative_expression_complement_0_0= rulemultiplicative_expression_complement ) ) ( (lv_multiplicative_expression_linha_1_0= rulemultiplicative_expression_linha ) ) )? )
            // InternalAnsic.g:7083:2: ( ( (lv_multiplicative_expression_complement_0_0= rulemultiplicative_expression_complement ) ) ( (lv_multiplicative_expression_linha_1_0= rulemultiplicative_expression_linha ) ) )?
            {
            // InternalAnsic.g:7083:2: ( ( (lv_multiplicative_expression_complement_0_0= rulemultiplicative_expression_complement ) ) ( (lv_multiplicative_expression_linha_1_0= rulemultiplicative_expression_linha ) ) )?
            int alt53=2;
            switch ( input.LA(1) ) {
                case 67:
                    {
                    int LA53_1 = input.LA(2);

                    if ( (synpred134_InternalAnsic()) ) {
                        alt53=1;
                    }
                    }
                    break;
                case 80:
                    {
                    int LA53_2 = input.LA(2);

                    if ( (synpred134_InternalAnsic()) ) {
                        alt53=1;
                    }
                    }
                    break;
                case 81:
                    {
                    int LA53_3 = input.LA(2);

                    if ( (synpred134_InternalAnsic()) ) {
                        alt53=1;
                    }
                    }
                    break;
            }

            switch (alt53) {
                case 1 :
                    // InternalAnsic.g:7084:3: ( (lv_multiplicative_expression_complement_0_0= rulemultiplicative_expression_complement ) ) ( (lv_multiplicative_expression_linha_1_0= rulemultiplicative_expression_linha ) )
                    {
                    // InternalAnsic.g:7084:3: ( (lv_multiplicative_expression_complement_0_0= rulemultiplicative_expression_complement ) )
                    // InternalAnsic.g:7085:4: (lv_multiplicative_expression_complement_0_0= rulemultiplicative_expression_complement )
                    {
                    // InternalAnsic.g:7085:4: (lv_multiplicative_expression_complement_0_0= rulemultiplicative_expression_complement )
                    // InternalAnsic.g:7086:5: lv_multiplicative_expression_complement_0_0= rulemultiplicative_expression_complement
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMultiplicative_expression_linhaAccess().getMultiplicative_expression_complementMultiplicative_expression_complementParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_31);
                    lv_multiplicative_expression_complement_0_0=rulemultiplicative_expression_complement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMultiplicative_expression_linhaRule());
                      					}
                      					set(
                      						current,
                      						"multiplicative_expression_complement",
                      						lv_multiplicative_expression_complement_0_0,
                      						"org.xtext.example.Ansic.multiplicative_expression_complement");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }

                    // InternalAnsic.g:7103:3: ( (lv_multiplicative_expression_linha_1_0= rulemultiplicative_expression_linha ) )
                    // InternalAnsic.g:7104:4: (lv_multiplicative_expression_linha_1_0= rulemultiplicative_expression_linha )
                    {
                    // InternalAnsic.g:7104:4: (lv_multiplicative_expression_linha_1_0= rulemultiplicative_expression_linha )
                    // InternalAnsic.g:7105:5: lv_multiplicative_expression_linha_1_0= rulemultiplicative_expression_linha
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMultiplicative_expression_linhaAccess().getMultiplicative_expression_linhaMultiplicative_expression_linhaParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_multiplicative_expression_linha_1_0=rulemultiplicative_expression_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMultiplicative_expression_linhaRule());
                      					}
                      					set(
                      						current,
                      						"multiplicative_expression_linha",
                      						lv_multiplicative_expression_linha_1_0,
                      						"org.xtext.example.Ansic.multiplicative_expression_linha");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulemultiplicative_expression_linha"


    // $ANTLR start "entryRulemultiplicative_expression_complement"
    // InternalAnsic.g:7126:1: entryRulemultiplicative_expression_complement returns [EObject current=null] : iv_rulemultiplicative_expression_complement= rulemultiplicative_expression_complement EOF ;
    public final EObject entryRulemultiplicative_expression_complement() throws RecognitionException {
        EObject current = null;

        EObject iv_rulemultiplicative_expression_complement = null;


        try {
            // InternalAnsic.g:7126:77: (iv_rulemultiplicative_expression_complement= rulemultiplicative_expression_complement EOF )
            // InternalAnsic.g:7127:2: iv_rulemultiplicative_expression_complement= rulemultiplicative_expression_complement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicative_expression_complementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulemultiplicative_expression_complement=rulemultiplicative_expression_complement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulemultiplicative_expression_complement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulemultiplicative_expression_complement"


    // $ANTLR start "rulemultiplicative_expression_complement"
    // InternalAnsic.g:7133:1: rulemultiplicative_expression_complement returns [EObject current=null] : ( (otherlv_0= '*' ( (lv_assignment_expression_1_0= ruleassignment_expression ) ) ) | (otherlv_2= '/' ( (lv_assignment_expression_3_0= ruleassignment_expression ) ) ) | (otherlv_4= '%' ( (lv_assignment_expression_5_0= ruleassignment_expression ) ) ) ) ;
    public final EObject rulemultiplicative_expression_complement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_assignment_expression_1_0 = null;

        EObject lv_assignment_expression_3_0 = null;

        EObject lv_assignment_expression_5_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:7139:2: ( ( (otherlv_0= '*' ( (lv_assignment_expression_1_0= ruleassignment_expression ) ) ) | (otherlv_2= '/' ( (lv_assignment_expression_3_0= ruleassignment_expression ) ) ) | (otherlv_4= '%' ( (lv_assignment_expression_5_0= ruleassignment_expression ) ) ) ) )
            // InternalAnsic.g:7140:2: ( (otherlv_0= '*' ( (lv_assignment_expression_1_0= ruleassignment_expression ) ) ) | (otherlv_2= '/' ( (lv_assignment_expression_3_0= ruleassignment_expression ) ) ) | (otherlv_4= '%' ( (lv_assignment_expression_5_0= ruleassignment_expression ) ) ) )
            {
            // InternalAnsic.g:7140:2: ( (otherlv_0= '*' ( (lv_assignment_expression_1_0= ruleassignment_expression ) ) ) | (otherlv_2= '/' ( (lv_assignment_expression_3_0= ruleassignment_expression ) ) ) | (otherlv_4= '%' ( (lv_assignment_expression_5_0= ruleassignment_expression ) ) ) )
            int alt54=3;
            switch ( input.LA(1) ) {
            case 67:
                {
                alt54=1;
                }
                break;
            case 80:
                {
                alt54=2;
                }
                break;
            case 81:
                {
                alt54=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 54, 0, input);

                throw nvae;
            }

            switch (alt54) {
                case 1 :
                    // InternalAnsic.g:7141:3: (otherlv_0= '*' ( (lv_assignment_expression_1_0= ruleassignment_expression ) ) )
                    {
                    // InternalAnsic.g:7141:3: (otherlv_0= '*' ( (lv_assignment_expression_1_0= ruleassignment_expression ) ) )
                    // InternalAnsic.g:7142:4: otherlv_0= '*' ( (lv_assignment_expression_1_0= ruleassignment_expression ) )
                    {
                    otherlv_0=(Token)match(input,67,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getMultiplicative_expression_complementAccess().getAsteriskKeyword_0_0());
                      			
                    }
                    // InternalAnsic.g:7146:4: ( (lv_assignment_expression_1_0= ruleassignment_expression ) )
                    // InternalAnsic.g:7147:5: (lv_assignment_expression_1_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:7147:5: (lv_assignment_expression_1_0= ruleassignment_expression )
                    // InternalAnsic.g:7148:6: lv_assignment_expression_1_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMultiplicative_expression_complementAccess().getAssignment_expressionAssignment_expressionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_assignment_expression_1_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMultiplicative_expression_complementRule());
                      						}
                      						set(
                      							current,
                      							"assignment_expression",
                      							lv_assignment_expression_1_0,
                      							"org.xtext.example.Ansic.assignment_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:7167:3: (otherlv_2= '/' ( (lv_assignment_expression_3_0= ruleassignment_expression ) ) )
                    {
                    // InternalAnsic.g:7167:3: (otherlv_2= '/' ( (lv_assignment_expression_3_0= ruleassignment_expression ) ) )
                    // InternalAnsic.g:7168:4: otherlv_2= '/' ( (lv_assignment_expression_3_0= ruleassignment_expression ) )
                    {
                    otherlv_2=(Token)match(input,80,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getMultiplicative_expression_complementAccess().getSolidusKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:7172:4: ( (lv_assignment_expression_3_0= ruleassignment_expression ) )
                    // InternalAnsic.g:7173:5: (lv_assignment_expression_3_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:7173:5: (lv_assignment_expression_3_0= ruleassignment_expression )
                    // InternalAnsic.g:7174:6: lv_assignment_expression_3_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMultiplicative_expression_complementAccess().getAssignment_expressionAssignment_expressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_assignment_expression_3_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMultiplicative_expression_complementRule());
                      						}
                      						set(
                      							current,
                      							"assignment_expression",
                      							lv_assignment_expression_3_0,
                      							"org.xtext.example.Ansic.assignment_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:7193:3: (otherlv_4= '%' ( (lv_assignment_expression_5_0= ruleassignment_expression ) ) )
                    {
                    // InternalAnsic.g:7193:3: (otherlv_4= '%' ( (lv_assignment_expression_5_0= ruleassignment_expression ) ) )
                    // InternalAnsic.g:7194:4: otherlv_4= '%' ( (lv_assignment_expression_5_0= ruleassignment_expression ) )
                    {
                    otherlv_4=(Token)match(input,81,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getMultiplicative_expression_complementAccess().getPercentSignKeyword_2_0());
                      			
                    }
                    // InternalAnsic.g:7198:4: ( (lv_assignment_expression_5_0= ruleassignment_expression ) )
                    // InternalAnsic.g:7199:5: (lv_assignment_expression_5_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:7199:5: (lv_assignment_expression_5_0= ruleassignment_expression )
                    // InternalAnsic.g:7200:6: lv_assignment_expression_5_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMultiplicative_expression_complementAccess().getAssignment_expressionAssignment_expressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_assignment_expression_5_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMultiplicative_expression_complementRule());
                      						}
                      						set(
                      							current,
                      							"assignment_expression",
                      							lv_assignment_expression_5_0,
                      							"org.xtext.example.Ansic.assignment_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulemultiplicative_expression_complement"


    // $ANTLR start "entryRuleadditive_expression"
    // InternalAnsic.g:7222:1: entryRuleadditive_expression returns [EObject current=null] : iv_ruleadditive_expression= ruleadditive_expression EOF ;
    public final EObject entryRuleadditive_expression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleadditive_expression = null;


        try {
            // InternalAnsic.g:7222:60: (iv_ruleadditive_expression= ruleadditive_expression EOF )
            // InternalAnsic.g:7223:2: iv_ruleadditive_expression= ruleadditive_expression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAdditive_expressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleadditive_expression=ruleadditive_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleadditive_expression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleadditive_expression"


    // $ANTLR start "ruleadditive_expression"
    // InternalAnsic.g:7229:1: ruleadditive_expression returns [EObject current=null] : ( ( (lv_multiplicative_expression_0_0= rulemultiplicative_expression ) ) ( (lv_additive_expression_linha_1_0= ruleadditive_expression_linha ) ) ) ;
    public final EObject ruleadditive_expression() throws RecognitionException {
        EObject current = null;

        EObject lv_multiplicative_expression_0_0 = null;

        EObject lv_additive_expression_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:7235:2: ( ( ( (lv_multiplicative_expression_0_0= rulemultiplicative_expression ) ) ( (lv_additive_expression_linha_1_0= ruleadditive_expression_linha ) ) ) )
            // InternalAnsic.g:7236:2: ( ( (lv_multiplicative_expression_0_0= rulemultiplicative_expression ) ) ( (lv_additive_expression_linha_1_0= ruleadditive_expression_linha ) ) )
            {
            // InternalAnsic.g:7236:2: ( ( (lv_multiplicative_expression_0_0= rulemultiplicative_expression ) ) ( (lv_additive_expression_linha_1_0= ruleadditive_expression_linha ) ) )
            // InternalAnsic.g:7237:3: ( (lv_multiplicative_expression_0_0= rulemultiplicative_expression ) ) ( (lv_additive_expression_linha_1_0= ruleadditive_expression_linha ) )
            {
            // InternalAnsic.g:7237:3: ( (lv_multiplicative_expression_0_0= rulemultiplicative_expression ) )
            // InternalAnsic.g:7238:4: (lv_multiplicative_expression_0_0= rulemultiplicative_expression )
            {
            // InternalAnsic.g:7238:4: (lv_multiplicative_expression_0_0= rulemultiplicative_expression )
            // InternalAnsic.g:7239:5: lv_multiplicative_expression_0_0= rulemultiplicative_expression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAdditive_expressionAccess().getMultiplicative_expressionMultiplicative_expressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_32);
            lv_multiplicative_expression_0_0=rulemultiplicative_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAdditive_expressionRule());
              					}
              					set(
              						current,
              						"multiplicative_expression",
              						lv_multiplicative_expression_0_0,
              						"org.xtext.example.Ansic.multiplicative_expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:7256:3: ( (lv_additive_expression_linha_1_0= ruleadditive_expression_linha ) )
            // InternalAnsic.g:7257:4: (lv_additive_expression_linha_1_0= ruleadditive_expression_linha )
            {
            // InternalAnsic.g:7257:4: (lv_additive_expression_linha_1_0= ruleadditive_expression_linha )
            // InternalAnsic.g:7258:5: lv_additive_expression_linha_1_0= ruleadditive_expression_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAdditive_expressionAccess().getAdditive_expression_linhaAdditive_expression_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_additive_expression_linha_1_0=ruleadditive_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAdditive_expressionRule());
              					}
              					set(
              						current,
              						"additive_expression_linha",
              						lv_additive_expression_linha_1_0,
              						"org.xtext.example.Ansic.additive_expression_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleadditive_expression"


    // $ANTLR start "entryRuleadditive_expression_linha"
    // InternalAnsic.g:7279:1: entryRuleadditive_expression_linha returns [EObject current=null] : iv_ruleadditive_expression_linha= ruleadditive_expression_linha EOF ;
    public final EObject entryRuleadditive_expression_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleadditive_expression_linha = null;


        try {
            // InternalAnsic.g:7279:66: (iv_ruleadditive_expression_linha= ruleadditive_expression_linha EOF )
            // InternalAnsic.g:7280:2: iv_ruleadditive_expression_linha= ruleadditive_expression_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAdditive_expression_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleadditive_expression_linha=ruleadditive_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleadditive_expression_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleadditive_expression_linha"


    // $ANTLR start "ruleadditive_expression_linha"
    // InternalAnsic.g:7286:1: ruleadditive_expression_linha returns [EObject current=null] : ( ( (lv_additive_expression_complement_0_0= ruleadditive_expression_complement ) ) ( (lv_additive_expression_linha_1_0= ruleadditive_expression_linha ) ) )? ;
    public final EObject ruleadditive_expression_linha() throws RecognitionException {
        EObject current = null;

        EObject lv_additive_expression_complement_0_0 = null;

        EObject lv_additive_expression_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:7292:2: ( ( ( (lv_additive_expression_complement_0_0= ruleadditive_expression_complement ) ) ( (lv_additive_expression_linha_1_0= ruleadditive_expression_linha ) ) )? )
            // InternalAnsic.g:7293:2: ( ( (lv_additive_expression_complement_0_0= ruleadditive_expression_complement ) ) ( (lv_additive_expression_linha_1_0= ruleadditive_expression_linha ) ) )?
            {
            // InternalAnsic.g:7293:2: ( ( (lv_additive_expression_complement_0_0= ruleadditive_expression_complement ) ) ( (lv_additive_expression_linha_1_0= ruleadditive_expression_linha ) ) )?
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==82) ) {
                int LA55_1 = input.LA(2);

                if ( (synpred137_InternalAnsic()) ) {
                    alt55=1;
                }
            }
            else if ( (LA55_0==83) ) {
                int LA55_2 = input.LA(2);

                if ( (synpred137_InternalAnsic()) ) {
                    alt55=1;
                }
            }
            switch (alt55) {
                case 1 :
                    // InternalAnsic.g:7294:3: ( (lv_additive_expression_complement_0_0= ruleadditive_expression_complement ) ) ( (lv_additive_expression_linha_1_0= ruleadditive_expression_linha ) )
                    {
                    // InternalAnsic.g:7294:3: ( (lv_additive_expression_complement_0_0= ruleadditive_expression_complement ) )
                    // InternalAnsic.g:7295:4: (lv_additive_expression_complement_0_0= ruleadditive_expression_complement )
                    {
                    // InternalAnsic.g:7295:4: (lv_additive_expression_complement_0_0= ruleadditive_expression_complement )
                    // InternalAnsic.g:7296:5: lv_additive_expression_complement_0_0= ruleadditive_expression_complement
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAdditive_expression_linhaAccess().getAdditive_expression_complementAdditive_expression_complementParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_32);
                    lv_additive_expression_complement_0_0=ruleadditive_expression_complement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getAdditive_expression_linhaRule());
                      					}
                      					set(
                      						current,
                      						"additive_expression_complement",
                      						lv_additive_expression_complement_0_0,
                      						"org.xtext.example.Ansic.additive_expression_complement");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }

                    // InternalAnsic.g:7313:3: ( (lv_additive_expression_linha_1_0= ruleadditive_expression_linha ) )
                    // InternalAnsic.g:7314:4: (lv_additive_expression_linha_1_0= ruleadditive_expression_linha )
                    {
                    // InternalAnsic.g:7314:4: (lv_additive_expression_linha_1_0= ruleadditive_expression_linha )
                    // InternalAnsic.g:7315:5: lv_additive_expression_linha_1_0= ruleadditive_expression_linha
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAdditive_expression_linhaAccess().getAdditive_expression_linhaAdditive_expression_linhaParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_additive_expression_linha_1_0=ruleadditive_expression_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getAdditive_expression_linhaRule());
                      					}
                      					set(
                      						current,
                      						"additive_expression_linha",
                      						lv_additive_expression_linha_1_0,
                      						"org.xtext.example.Ansic.additive_expression_linha");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleadditive_expression_linha"


    // $ANTLR start "entryRuleadditive_expression_complement"
    // InternalAnsic.g:7336:1: entryRuleadditive_expression_complement returns [EObject current=null] : iv_ruleadditive_expression_complement= ruleadditive_expression_complement EOF ;
    public final EObject entryRuleadditive_expression_complement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleadditive_expression_complement = null;


        try {
            // InternalAnsic.g:7336:71: (iv_ruleadditive_expression_complement= ruleadditive_expression_complement EOF )
            // InternalAnsic.g:7337:2: iv_ruleadditive_expression_complement= ruleadditive_expression_complement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAdditive_expression_complementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleadditive_expression_complement=ruleadditive_expression_complement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleadditive_expression_complement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleadditive_expression_complement"


    // $ANTLR start "ruleadditive_expression_complement"
    // InternalAnsic.g:7343:1: ruleadditive_expression_complement returns [EObject current=null] : ( (otherlv_0= '+' ( (lv_assignment_expression_1_0= ruleassignment_expression ) ) ) | (otherlv_2= '-' ( (lv_assignment_expression_3_0= ruleassignment_expression ) ) ) ) ;
    public final EObject ruleadditive_expression_complement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_assignment_expression_1_0 = null;

        EObject lv_assignment_expression_3_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:7349:2: ( ( (otherlv_0= '+' ( (lv_assignment_expression_1_0= ruleassignment_expression ) ) ) | (otherlv_2= '-' ( (lv_assignment_expression_3_0= ruleassignment_expression ) ) ) ) )
            // InternalAnsic.g:7350:2: ( (otherlv_0= '+' ( (lv_assignment_expression_1_0= ruleassignment_expression ) ) ) | (otherlv_2= '-' ( (lv_assignment_expression_3_0= ruleassignment_expression ) ) ) )
            {
            // InternalAnsic.g:7350:2: ( (otherlv_0= '+' ( (lv_assignment_expression_1_0= ruleassignment_expression ) ) ) | (otherlv_2= '-' ( (lv_assignment_expression_3_0= ruleassignment_expression ) ) ) )
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==82) ) {
                alt56=1;
            }
            else if ( (LA56_0==83) ) {
                alt56=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;
            }
            switch (alt56) {
                case 1 :
                    // InternalAnsic.g:7351:3: (otherlv_0= '+' ( (lv_assignment_expression_1_0= ruleassignment_expression ) ) )
                    {
                    // InternalAnsic.g:7351:3: (otherlv_0= '+' ( (lv_assignment_expression_1_0= ruleassignment_expression ) ) )
                    // InternalAnsic.g:7352:4: otherlv_0= '+' ( (lv_assignment_expression_1_0= ruleassignment_expression ) )
                    {
                    otherlv_0=(Token)match(input,82,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getAdditive_expression_complementAccess().getPlusSignKeyword_0_0());
                      			
                    }
                    // InternalAnsic.g:7356:4: ( (lv_assignment_expression_1_0= ruleassignment_expression ) )
                    // InternalAnsic.g:7357:5: (lv_assignment_expression_1_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:7357:5: (lv_assignment_expression_1_0= ruleassignment_expression )
                    // InternalAnsic.g:7358:6: lv_assignment_expression_1_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAdditive_expression_complementAccess().getAssignment_expressionAssignment_expressionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_assignment_expression_1_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAdditive_expression_complementRule());
                      						}
                      						set(
                      							current,
                      							"assignment_expression",
                      							lv_assignment_expression_1_0,
                      							"org.xtext.example.Ansic.assignment_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:7377:3: (otherlv_2= '-' ( (lv_assignment_expression_3_0= ruleassignment_expression ) ) )
                    {
                    // InternalAnsic.g:7377:3: (otherlv_2= '-' ( (lv_assignment_expression_3_0= ruleassignment_expression ) ) )
                    // InternalAnsic.g:7378:4: otherlv_2= '-' ( (lv_assignment_expression_3_0= ruleassignment_expression ) )
                    {
                    otherlv_2=(Token)match(input,83,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getAdditive_expression_complementAccess().getHyphenMinusKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:7382:4: ( (lv_assignment_expression_3_0= ruleassignment_expression ) )
                    // InternalAnsic.g:7383:5: (lv_assignment_expression_3_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:7383:5: (lv_assignment_expression_3_0= ruleassignment_expression )
                    // InternalAnsic.g:7384:6: lv_assignment_expression_3_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAdditive_expression_complementAccess().getAssignment_expressionAssignment_expressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_assignment_expression_3_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAdditive_expression_complementRule());
                      						}
                      						set(
                      							current,
                      							"assignment_expression",
                      							lv_assignment_expression_3_0,
                      							"org.xtext.example.Ansic.assignment_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleadditive_expression_complement"


    // $ANTLR start "entryRuleshift_expression"
    // InternalAnsic.g:7406:1: entryRuleshift_expression returns [EObject current=null] : iv_ruleshift_expression= ruleshift_expression EOF ;
    public final EObject entryRuleshift_expression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleshift_expression = null;


        try {
            // InternalAnsic.g:7406:57: (iv_ruleshift_expression= ruleshift_expression EOF )
            // InternalAnsic.g:7407:2: iv_ruleshift_expression= ruleshift_expression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShift_expressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleshift_expression=ruleshift_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleshift_expression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleshift_expression"


    // $ANTLR start "ruleshift_expression"
    // InternalAnsic.g:7413:1: ruleshift_expression returns [EObject current=null] : ( ( (lv_additive_expression_0_0= ruleadditive_expression ) ) ( (lv_shift_expression_linha_1_0= ruleshift_expression_linha ) ) ) ;
    public final EObject ruleshift_expression() throws RecognitionException {
        EObject current = null;

        EObject lv_additive_expression_0_0 = null;

        EObject lv_shift_expression_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:7419:2: ( ( ( (lv_additive_expression_0_0= ruleadditive_expression ) ) ( (lv_shift_expression_linha_1_0= ruleshift_expression_linha ) ) ) )
            // InternalAnsic.g:7420:2: ( ( (lv_additive_expression_0_0= ruleadditive_expression ) ) ( (lv_shift_expression_linha_1_0= ruleshift_expression_linha ) ) )
            {
            // InternalAnsic.g:7420:2: ( ( (lv_additive_expression_0_0= ruleadditive_expression ) ) ( (lv_shift_expression_linha_1_0= ruleshift_expression_linha ) ) )
            // InternalAnsic.g:7421:3: ( (lv_additive_expression_0_0= ruleadditive_expression ) ) ( (lv_shift_expression_linha_1_0= ruleshift_expression_linha ) )
            {
            // InternalAnsic.g:7421:3: ( (lv_additive_expression_0_0= ruleadditive_expression ) )
            // InternalAnsic.g:7422:4: (lv_additive_expression_0_0= ruleadditive_expression )
            {
            // InternalAnsic.g:7422:4: (lv_additive_expression_0_0= ruleadditive_expression )
            // InternalAnsic.g:7423:5: lv_additive_expression_0_0= ruleadditive_expression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getShift_expressionAccess().getAdditive_expressionAdditive_expressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_33);
            lv_additive_expression_0_0=ruleadditive_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getShift_expressionRule());
              					}
              					set(
              						current,
              						"additive_expression",
              						lv_additive_expression_0_0,
              						"org.xtext.example.Ansic.additive_expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:7440:3: ( (lv_shift_expression_linha_1_0= ruleshift_expression_linha ) )
            // InternalAnsic.g:7441:4: (lv_shift_expression_linha_1_0= ruleshift_expression_linha )
            {
            // InternalAnsic.g:7441:4: (lv_shift_expression_linha_1_0= ruleshift_expression_linha )
            // InternalAnsic.g:7442:5: lv_shift_expression_linha_1_0= ruleshift_expression_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getShift_expressionAccess().getShift_expression_linhaShift_expression_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_shift_expression_linha_1_0=ruleshift_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getShift_expressionRule());
              					}
              					set(
              						current,
              						"shift_expression_linha",
              						lv_shift_expression_linha_1_0,
              						"org.xtext.example.Ansic.shift_expression_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleshift_expression"


    // $ANTLR start "entryRuleshift_expression_linha"
    // InternalAnsic.g:7463:1: entryRuleshift_expression_linha returns [EObject current=null] : iv_ruleshift_expression_linha= ruleshift_expression_linha EOF ;
    public final EObject entryRuleshift_expression_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleshift_expression_linha = null;


        try {
            // InternalAnsic.g:7463:63: (iv_ruleshift_expression_linha= ruleshift_expression_linha EOF )
            // InternalAnsic.g:7464:2: iv_ruleshift_expression_linha= ruleshift_expression_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShift_expression_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleshift_expression_linha=ruleshift_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleshift_expression_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleshift_expression_linha"


    // $ANTLR start "ruleshift_expression_linha"
    // InternalAnsic.g:7470:1: ruleshift_expression_linha returns [EObject current=null] : ( ( (lv_shift_expression_complement_0_0= ruleshift_expression_complement ) ) ( (lv_shift_expression_linha_1_0= ruleshift_expression_linha ) ) )? ;
    public final EObject ruleshift_expression_linha() throws RecognitionException {
        EObject current = null;

        EObject lv_shift_expression_complement_0_0 = null;

        EObject lv_shift_expression_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:7476:2: ( ( ( (lv_shift_expression_complement_0_0= ruleshift_expression_complement ) ) ( (lv_shift_expression_linha_1_0= ruleshift_expression_linha ) ) )? )
            // InternalAnsic.g:7477:2: ( ( (lv_shift_expression_complement_0_0= ruleshift_expression_complement ) ) ( (lv_shift_expression_linha_1_0= ruleshift_expression_linha ) ) )?
            {
            // InternalAnsic.g:7477:2: ( ( (lv_shift_expression_complement_0_0= ruleshift_expression_complement ) ) ( (lv_shift_expression_linha_1_0= ruleshift_expression_linha ) ) )?
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==84) ) {
                int LA57_1 = input.LA(2);

                if ( (synpred139_InternalAnsic()) ) {
                    alt57=1;
                }
            }
            else if ( (LA57_0==85) ) {
                int LA57_2 = input.LA(2);

                if ( (synpred139_InternalAnsic()) ) {
                    alt57=1;
                }
            }
            switch (alt57) {
                case 1 :
                    // InternalAnsic.g:7478:3: ( (lv_shift_expression_complement_0_0= ruleshift_expression_complement ) ) ( (lv_shift_expression_linha_1_0= ruleshift_expression_linha ) )
                    {
                    // InternalAnsic.g:7478:3: ( (lv_shift_expression_complement_0_0= ruleshift_expression_complement ) )
                    // InternalAnsic.g:7479:4: (lv_shift_expression_complement_0_0= ruleshift_expression_complement )
                    {
                    // InternalAnsic.g:7479:4: (lv_shift_expression_complement_0_0= ruleshift_expression_complement )
                    // InternalAnsic.g:7480:5: lv_shift_expression_complement_0_0= ruleshift_expression_complement
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getShift_expression_linhaAccess().getShift_expression_complementShift_expression_complementParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_33);
                    lv_shift_expression_complement_0_0=ruleshift_expression_complement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getShift_expression_linhaRule());
                      					}
                      					set(
                      						current,
                      						"shift_expression_complement",
                      						lv_shift_expression_complement_0_0,
                      						"org.xtext.example.Ansic.shift_expression_complement");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }

                    // InternalAnsic.g:7497:3: ( (lv_shift_expression_linha_1_0= ruleshift_expression_linha ) )
                    // InternalAnsic.g:7498:4: (lv_shift_expression_linha_1_0= ruleshift_expression_linha )
                    {
                    // InternalAnsic.g:7498:4: (lv_shift_expression_linha_1_0= ruleshift_expression_linha )
                    // InternalAnsic.g:7499:5: lv_shift_expression_linha_1_0= ruleshift_expression_linha
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getShift_expression_linhaAccess().getShift_expression_linhaShift_expression_linhaParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_shift_expression_linha_1_0=ruleshift_expression_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getShift_expression_linhaRule());
                      					}
                      					set(
                      						current,
                      						"shift_expression_linha",
                      						lv_shift_expression_linha_1_0,
                      						"org.xtext.example.Ansic.shift_expression_linha");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleshift_expression_linha"


    // $ANTLR start "entryRuleshift_expression_complement"
    // InternalAnsic.g:7520:1: entryRuleshift_expression_complement returns [EObject current=null] : iv_ruleshift_expression_complement= ruleshift_expression_complement EOF ;
    public final EObject entryRuleshift_expression_complement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleshift_expression_complement = null;


        try {
            // InternalAnsic.g:7520:68: (iv_ruleshift_expression_complement= ruleshift_expression_complement EOF )
            // InternalAnsic.g:7521:2: iv_ruleshift_expression_complement= ruleshift_expression_complement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShift_expression_complementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleshift_expression_complement=ruleshift_expression_complement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleshift_expression_complement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleshift_expression_complement"


    // $ANTLR start "ruleshift_expression_complement"
    // InternalAnsic.g:7527:1: ruleshift_expression_complement returns [EObject current=null] : ( (otherlv_0= '<<' ( (lv_additive_expression_1_0= ruleadditive_expression ) ) ) | (otherlv_2= '>>' ( (lv_additive_expression_3_0= ruleadditive_expression ) ) ) ) ;
    public final EObject ruleshift_expression_complement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_additive_expression_1_0 = null;

        EObject lv_additive_expression_3_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:7533:2: ( ( (otherlv_0= '<<' ( (lv_additive_expression_1_0= ruleadditive_expression ) ) ) | (otherlv_2= '>>' ( (lv_additive_expression_3_0= ruleadditive_expression ) ) ) ) )
            // InternalAnsic.g:7534:2: ( (otherlv_0= '<<' ( (lv_additive_expression_1_0= ruleadditive_expression ) ) ) | (otherlv_2= '>>' ( (lv_additive_expression_3_0= ruleadditive_expression ) ) ) )
            {
            // InternalAnsic.g:7534:2: ( (otherlv_0= '<<' ( (lv_additive_expression_1_0= ruleadditive_expression ) ) ) | (otherlv_2= '>>' ( (lv_additive_expression_3_0= ruleadditive_expression ) ) ) )
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==84) ) {
                alt58=1;
            }
            else if ( (LA58_0==85) ) {
                alt58=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 58, 0, input);

                throw nvae;
            }
            switch (alt58) {
                case 1 :
                    // InternalAnsic.g:7535:3: (otherlv_0= '<<' ( (lv_additive_expression_1_0= ruleadditive_expression ) ) )
                    {
                    // InternalAnsic.g:7535:3: (otherlv_0= '<<' ( (lv_additive_expression_1_0= ruleadditive_expression ) ) )
                    // InternalAnsic.g:7536:4: otherlv_0= '<<' ( (lv_additive_expression_1_0= ruleadditive_expression ) )
                    {
                    otherlv_0=(Token)match(input,84,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getShift_expression_complementAccess().getLessThanSignLessThanSignKeyword_0_0());
                      			
                    }
                    // InternalAnsic.g:7540:4: ( (lv_additive_expression_1_0= ruleadditive_expression ) )
                    // InternalAnsic.g:7541:5: (lv_additive_expression_1_0= ruleadditive_expression )
                    {
                    // InternalAnsic.g:7541:5: (lv_additive_expression_1_0= ruleadditive_expression )
                    // InternalAnsic.g:7542:6: lv_additive_expression_1_0= ruleadditive_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getShift_expression_complementAccess().getAdditive_expressionAdditive_expressionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_additive_expression_1_0=ruleadditive_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getShift_expression_complementRule());
                      						}
                      						set(
                      							current,
                      							"additive_expression",
                      							lv_additive_expression_1_0,
                      							"org.xtext.example.Ansic.additive_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:7561:3: (otherlv_2= '>>' ( (lv_additive_expression_3_0= ruleadditive_expression ) ) )
                    {
                    // InternalAnsic.g:7561:3: (otherlv_2= '>>' ( (lv_additive_expression_3_0= ruleadditive_expression ) ) )
                    // InternalAnsic.g:7562:4: otherlv_2= '>>' ( (lv_additive_expression_3_0= ruleadditive_expression ) )
                    {
                    otherlv_2=(Token)match(input,85,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getShift_expression_complementAccess().getGreaterThanSignGreaterThanSignKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:7566:4: ( (lv_additive_expression_3_0= ruleadditive_expression ) )
                    // InternalAnsic.g:7567:5: (lv_additive_expression_3_0= ruleadditive_expression )
                    {
                    // InternalAnsic.g:7567:5: (lv_additive_expression_3_0= ruleadditive_expression )
                    // InternalAnsic.g:7568:6: lv_additive_expression_3_0= ruleadditive_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getShift_expression_complementAccess().getAdditive_expressionAdditive_expressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_additive_expression_3_0=ruleadditive_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getShift_expression_complementRule());
                      						}
                      						set(
                      							current,
                      							"additive_expression",
                      							lv_additive_expression_3_0,
                      							"org.xtext.example.Ansic.additive_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleshift_expression_complement"


    // $ANTLR start "entryRulerelational_expression"
    // InternalAnsic.g:7590:1: entryRulerelational_expression returns [EObject current=null] : iv_rulerelational_expression= rulerelational_expression EOF ;
    public final EObject entryRulerelational_expression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulerelational_expression = null;


        try {
            // InternalAnsic.g:7590:62: (iv_rulerelational_expression= rulerelational_expression EOF )
            // InternalAnsic.g:7591:2: iv_rulerelational_expression= rulerelational_expression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRelational_expressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerelational_expression=rulerelational_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerelational_expression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerelational_expression"


    // $ANTLR start "rulerelational_expression"
    // InternalAnsic.g:7597:1: rulerelational_expression returns [EObject current=null] : ( ( (lv_shift_expression_0_0= ruleshift_expression ) ) ( (lv_relational_expression_linha_1_0= rulerelational_expression_linha ) ) ) ;
    public final EObject rulerelational_expression() throws RecognitionException {
        EObject current = null;

        EObject lv_shift_expression_0_0 = null;

        EObject lv_relational_expression_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:7603:2: ( ( ( (lv_shift_expression_0_0= ruleshift_expression ) ) ( (lv_relational_expression_linha_1_0= rulerelational_expression_linha ) ) ) )
            // InternalAnsic.g:7604:2: ( ( (lv_shift_expression_0_0= ruleshift_expression ) ) ( (lv_relational_expression_linha_1_0= rulerelational_expression_linha ) ) )
            {
            // InternalAnsic.g:7604:2: ( ( (lv_shift_expression_0_0= ruleshift_expression ) ) ( (lv_relational_expression_linha_1_0= rulerelational_expression_linha ) ) )
            // InternalAnsic.g:7605:3: ( (lv_shift_expression_0_0= ruleshift_expression ) ) ( (lv_relational_expression_linha_1_0= rulerelational_expression_linha ) )
            {
            // InternalAnsic.g:7605:3: ( (lv_shift_expression_0_0= ruleshift_expression ) )
            // InternalAnsic.g:7606:4: (lv_shift_expression_0_0= ruleshift_expression )
            {
            // InternalAnsic.g:7606:4: (lv_shift_expression_0_0= ruleshift_expression )
            // InternalAnsic.g:7607:5: lv_shift_expression_0_0= ruleshift_expression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRelational_expressionAccess().getShift_expressionShift_expressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_33);
            lv_shift_expression_0_0=ruleshift_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRelational_expressionRule());
              					}
              					set(
              						current,
              						"shift_expression",
              						lv_shift_expression_0_0,
              						"org.xtext.example.Ansic.shift_expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:7624:3: ( (lv_relational_expression_linha_1_0= rulerelational_expression_linha ) )
            // InternalAnsic.g:7625:4: (lv_relational_expression_linha_1_0= rulerelational_expression_linha )
            {
            // InternalAnsic.g:7625:4: (lv_relational_expression_linha_1_0= rulerelational_expression_linha )
            // InternalAnsic.g:7626:5: lv_relational_expression_linha_1_0= rulerelational_expression_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRelational_expressionAccess().getRelational_expression_linhaRelational_expression_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_relational_expression_linha_1_0=rulerelational_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRelational_expressionRule());
              					}
              					set(
              						current,
              						"relational_expression_linha",
              						lv_relational_expression_linha_1_0,
              						"org.xtext.example.Ansic.relational_expression_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerelational_expression"


    // $ANTLR start "entryRulerelational_expression_linha"
    // InternalAnsic.g:7647:1: entryRulerelational_expression_linha returns [EObject current=null] : iv_rulerelational_expression_linha= rulerelational_expression_linha EOF ;
    public final EObject entryRulerelational_expression_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_rulerelational_expression_linha = null;


        try {
            // InternalAnsic.g:7647:68: (iv_rulerelational_expression_linha= rulerelational_expression_linha EOF )
            // InternalAnsic.g:7648:2: iv_rulerelational_expression_linha= rulerelational_expression_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRelational_expression_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerelational_expression_linha=rulerelational_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerelational_expression_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerelational_expression_linha"


    // $ANTLR start "rulerelational_expression_linha"
    // InternalAnsic.g:7654:1: rulerelational_expression_linha returns [EObject current=null] : ( ( (lv_shift_expression_complement_0_0= ruleshift_expression_complement ) ) ( (lv_relational_expression_linha_1_0= rulerelational_expression_linha ) ) )? ;
    public final EObject rulerelational_expression_linha() throws RecognitionException {
        EObject current = null;

        EObject lv_shift_expression_complement_0_0 = null;

        EObject lv_relational_expression_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:7660:2: ( ( ( (lv_shift_expression_complement_0_0= ruleshift_expression_complement ) ) ( (lv_relational_expression_linha_1_0= rulerelational_expression_linha ) ) )? )
            // InternalAnsic.g:7661:2: ( ( (lv_shift_expression_complement_0_0= ruleshift_expression_complement ) ) ( (lv_relational_expression_linha_1_0= rulerelational_expression_linha ) ) )?
            {
            // InternalAnsic.g:7661:2: ( ( (lv_shift_expression_complement_0_0= ruleshift_expression_complement ) ) ( (lv_relational_expression_linha_1_0= rulerelational_expression_linha ) ) )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==84) ) {
                int LA59_1 = input.LA(2);

                if ( (synpred141_InternalAnsic()) ) {
                    alt59=1;
                }
            }
            else if ( (LA59_0==85) ) {
                int LA59_2 = input.LA(2);

                if ( (synpred141_InternalAnsic()) ) {
                    alt59=1;
                }
            }
            switch (alt59) {
                case 1 :
                    // InternalAnsic.g:7662:3: ( (lv_shift_expression_complement_0_0= ruleshift_expression_complement ) ) ( (lv_relational_expression_linha_1_0= rulerelational_expression_linha ) )
                    {
                    // InternalAnsic.g:7662:3: ( (lv_shift_expression_complement_0_0= ruleshift_expression_complement ) )
                    // InternalAnsic.g:7663:4: (lv_shift_expression_complement_0_0= ruleshift_expression_complement )
                    {
                    // InternalAnsic.g:7663:4: (lv_shift_expression_complement_0_0= ruleshift_expression_complement )
                    // InternalAnsic.g:7664:5: lv_shift_expression_complement_0_0= ruleshift_expression_complement
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getRelational_expression_linhaAccess().getShift_expression_complementShift_expression_complementParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_33);
                    lv_shift_expression_complement_0_0=ruleshift_expression_complement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getRelational_expression_linhaRule());
                      					}
                      					set(
                      						current,
                      						"shift_expression_complement",
                      						lv_shift_expression_complement_0_0,
                      						"org.xtext.example.Ansic.shift_expression_complement");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }

                    // InternalAnsic.g:7681:3: ( (lv_relational_expression_linha_1_0= rulerelational_expression_linha ) )
                    // InternalAnsic.g:7682:4: (lv_relational_expression_linha_1_0= rulerelational_expression_linha )
                    {
                    // InternalAnsic.g:7682:4: (lv_relational_expression_linha_1_0= rulerelational_expression_linha )
                    // InternalAnsic.g:7683:5: lv_relational_expression_linha_1_0= rulerelational_expression_linha
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getRelational_expression_linhaAccess().getRelational_expression_linhaRelational_expression_linhaParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_relational_expression_linha_1_0=rulerelational_expression_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getRelational_expression_linhaRule());
                      					}
                      					set(
                      						current,
                      						"relational_expression_linha",
                      						lv_relational_expression_linha_1_0,
                      						"org.xtext.example.Ansic.relational_expression_linha");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerelational_expression_linha"


    // $ANTLR start "entryRuleequality_expression"
    // InternalAnsic.g:7704:1: entryRuleequality_expression returns [EObject current=null] : iv_ruleequality_expression= ruleequality_expression EOF ;
    public final EObject entryRuleequality_expression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleequality_expression = null;


        try {
            // InternalAnsic.g:7704:60: (iv_ruleequality_expression= ruleequality_expression EOF )
            // InternalAnsic.g:7705:2: iv_ruleequality_expression= ruleequality_expression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEquality_expressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleequality_expression=ruleequality_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleequality_expression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleequality_expression"


    // $ANTLR start "ruleequality_expression"
    // InternalAnsic.g:7711:1: ruleequality_expression returns [EObject current=null] : ( ( (lv_relational_expression_0_0= rulerelational_expression ) ) ( (lv_equality_expression_linha_1_0= ruleequality_expression_linha ) ) ) ;
    public final EObject ruleequality_expression() throws RecognitionException {
        EObject current = null;

        EObject lv_relational_expression_0_0 = null;

        EObject lv_equality_expression_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:7717:2: ( ( ( (lv_relational_expression_0_0= rulerelational_expression ) ) ( (lv_equality_expression_linha_1_0= ruleequality_expression_linha ) ) ) )
            // InternalAnsic.g:7718:2: ( ( (lv_relational_expression_0_0= rulerelational_expression ) ) ( (lv_equality_expression_linha_1_0= ruleequality_expression_linha ) ) )
            {
            // InternalAnsic.g:7718:2: ( ( (lv_relational_expression_0_0= rulerelational_expression ) ) ( (lv_equality_expression_linha_1_0= ruleequality_expression_linha ) ) )
            // InternalAnsic.g:7719:3: ( (lv_relational_expression_0_0= rulerelational_expression ) ) ( (lv_equality_expression_linha_1_0= ruleequality_expression_linha ) )
            {
            // InternalAnsic.g:7719:3: ( (lv_relational_expression_0_0= rulerelational_expression ) )
            // InternalAnsic.g:7720:4: (lv_relational_expression_0_0= rulerelational_expression )
            {
            // InternalAnsic.g:7720:4: (lv_relational_expression_0_0= rulerelational_expression )
            // InternalAnsic.g:7721:5: lv_relational_expression_0_0= rulerelational_expression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEquality_expressionAccess().getRelational_expressionRelational_expressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_34);
            lv_relational_expression_0_0=rulerelational_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEquality_expressionRule());
              					}
              					set(
              						current,
              						"relational_expression",
              						lv_relational_expression_0_0,
              						"org.xtext.example.Ansic.relational_expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:7738:3: ( (lv_equality_expression_linha_1_0= ruleequality_expression_linha ) )
            // InternalAnsic.g:7739:4: (lv_equality_expression_linha_1_0= ruleequality_expression_linha )
            {
            // InternalAnsic.g:7739:4: (lv_equality_expression_linha_1_0= ruleequality_expression_linha )
            // InternalAnsic.g:7740:5: lv_equality_expression_linha_1_0= ruleequality_expression_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEquality_expressionAccess().getEquality_expression_linhaEquality_expression_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_equality_expression_linha_1_0=ruleequality_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEquality_expressionRule());
              					}
              					set(
              						current,
              						"equality_expression_linha",
              						lv_equality_expression_linha_1_0,
              						"org.xtext.example.Ansic.equality_expression_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleequality_expression"


    // $ANTLR start "entryRuleequality_expression_linha"
    // InternalAnsic.g:7761:1: entryRuleequality_expression_linha returns [EObject current=null] : iv_ruleequality_expression_linha= ruleequality_expression_linha EOF ;
    public final EObject entryRuleequality_expression_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleequality_expression_linha = null;


        try {
            // InternalAnsic.g:7761:66: (iv_ruleequality_expression_linha= ruleequality_expression_linha EOF )
            // InternalAnsic.g:7762:2: iv_ruleequality_expression_linha= ruleequality_expression_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEquality_expression_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleequality_expression_linha=ruleequality_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleequality_expression_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleequality_expression_linha"


    // $ANTLR start "ruleequality_expression_linha"
    // InternalAnsic.g:7768:1: ruleequality_expression_linha returns [EObject current=null] : ( ( (lv_equality_expression_complement_0_0= ruleequality_expression_complement ) ) ( (lv_equality_expression_linha_1_0= ruleequality_expression_linha ) ) )? ;
    public final EObject ruleequality_expression_linha() throws RecognitionException {
        EObject current = null;

        EObject lv_equality_expression_complement_0_0 = null;

        EObject lv_equality_expression_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:7774:2: ( ( ( (lv_equality_expression_complement_0_0= ruleequality_expression_complement ) ) ( (lv_equality_expression_linha_1_0= ruleequality_expression_linha ) ) )? )
            // InternalAnsic.g:7775:2: ( ( (lv_equality_expression_complement_0_0= ruleequality_expression_complement ) ) ( (lv_equality_expression_linha_1_0= ruleequality_expression_linha ) ) )?
            {
            // InternalAnsic.g:7775:2: ( ( (lv_equality_expression_complement_0_0= ruleequality_expression_complement ) ) ( (lv_equality_expression_linha_1_0= ruleequality_expression_linha ) ) )?
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==86) ) {
                int LA60_1 = input.LA(2);

                if ( (synpred142_InternalAnsic()) ) {
                    alt60=1;
                }
            }
            else if ( (LA60_0==87) ) {
                int LA60_2 = input.LA(2);

                if ( (synpred142_InternalAnsic()) ) {
                    alt60=1;
                }
            }
            switch (alt60) {
                case 1 :
                    // InternalAnsic.g:7776:3: ( (lv_equality_expression_complement_0_0= ruleequality_expression_complement ) ) ( (lv_equality_expression_linha_1_0= ruleequality_expression_linha ) )
                    {
                    // InternalAnsic.g:7776:3: ( (lv_equality_expression_complement_0_0= ruleequality_expression_complement ) )
                    // InternalAnsic.g:7777:4: (lv_equality_expression_complement_0_0= ruleequality_expression_complement )
                    {
                    // InternalAnsic.g:7777:4: (lv_equality_expression_complement_0_0= ruleequality_expression_complement )
                    // InternalAnsic.g:7778:5: lv_equality_expression_complement_0_0= ruleequality_expression_complement
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getEquality_expression_linhaAccess().getEquality_expression_complementEquality_expression_complementParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_34);
                    lv_equality_expression_complement_0_0=ruleequality_expression_complement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getEquality_expression_linhaRule());
                      					}
                      					set(
                      						current,
                      						"equality_expression_complement",
                      						lv_equality_expression_complement_0_0,
                      						"org.xtext.example.Ansic.equality_expression_complement");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }

                    // InternalAnsic.g:7795:3: ( (lv_equality_expression_linha_1_0= ruleequality_expression_linha ) )
                    // InternalAnsic.g:7796:4: (lv_equality_expression_linha_1_0= ruleequality_expression_linha )
                    {
                    // InternalAnsic.g:7796:4: (lv_equality_expression_linha_1_0= ruleequality_expression_linha )
                    // InternalAnsic.g:7797:5: lv_equality_expression_linha_1_0= ruleequality_expression_linha
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getEquality_expression_linhaAccess().getEquality_expression_linhaEquality_expression_linhaParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_equality_expression_linha_1_0=ruleequality_expression_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getEquality_expression_linhaRule());
                      					}
                      					set(
                      						current,
                      						"equality_expression_linha",
                      						lv_equality_expression_linha_1_0,
                      						"org.xtext.example.Ansic.equality_expression_linha");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleequality_expression_linha"


    // $ANTLR start "entryRuleequality_expression_complement"
    // InternalAnsic.g:7818:1: entryRuleequality_expression_complement returns [EObject current=null] : iv_ruleequality_expression_complement= ruleequality_expression_complement EOF ;
    public final EObject entryRuleequality_expression_complement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleequality_expression_complement = null;


        try {
            // InternalAnsic.g:7818:71: (iv_ruleequality_expression_complement= ruleequality_expression_complement EOF )
            // InternalAnsic.g:7819:2: iv_ruleequality_expression_complement= ruleequality_expression_complement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEquality_expression_complementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleequality_expression_complement=ruleequality_expression_complement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleequality_expression_complement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleequality_expression_complement"


    // $ANTLR start "ruleequality_expression_complement"
    // InternalAnsic.g:7825:1: ruleequality_expression_complement returns [EObject current=null] : ( (otherlv_0= '==' ( (lv_relational_expression_1_0= rulerelational_expression ) ) ) | (otherlv_2= '!=' ( (lv_relational_expression_3_0= rulerelational_expression ) ) ) ) ;
    public final EObject ruleequality_expression_complement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_relational_expression_1_0 = null;

        EObject lv_relational_expression_3_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:7831:2: ( ( (otherlv_0= '==' ( (lv_relational_expression_1_0= rulerelational_expression ) ) ) | (otherlv_2= '!=' ( (lv_relational_expression_3_0= rulerelational_expression ) ) ) ) )
            // InternalAnsic.g:7832:2: ( (otherlv_0= '==' ( (lv_relational_expression_1_0= rulerelational_expression ) ) ) | (otherlv_2= '!=' ( (lv_relational_expression_3_0= rulerelational_expression ) ) ) )
            {
            // InternalAnsic.g:7832:2: ( (otherlv_0= '==' ( (lv_relational_expression_1_0= rulerelational_expression ) ) ) | (otherlv_2= '!=' ( (lv_relational_expression_3_0= rulerelational_expression ) ) ) )
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==86) ) {
                alt61=1;
            }
            else if ( (LA61_0==87) ) {
                alt61=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 61, 0, input);

                throw nvae;
            }
            switch (alt61) {
                case 1 :
                    // InternalAnsic.g:7833:3: (otherlv_0= '==' ( (lv_relational_expression_1_0= rulerelational_expression ) ) )
                    {
                    // InternalAnsic.g:7833:3: (otherlv_0= '==' ( (lv_relational_expression_1_0= rulerelational_expression ) ) )
                    // InternalAnsic.g:7834:4: otherlv_0= '==' ( (lv_relational_expression_1_0= rulerelational_expression ) )
                    {
                    otherlv_0=(Token)match(input,86,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getEquality_expression_complementAccess().getEqualsSignEqualsSignKeyword_0_0());
                      			
                    }
                    // InternalAnsic.g:7838:4: ( (lv_relational_expression_1_0= rulerelational_expression ) )
                    // InternalAnsic.g:7839:5: (lv_relational_expression_1_0= rulerelational_expression )
                    {
                    // InternalAnsic.g:7839:5: (lv_relational_expression_1_0= rulerelational_expression )
                    // InternalAnsic.g:7840:6: lv_relational_expression_1_0= rulerelational_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEquality_expression_complementAccess().getRelational_expressionRelational_expressionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_relational_expression_1_0=rulerelational_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEquality_expression_complementRule());
                      						}
                      						set(
                      							current,
                      							"relational_expression",
                      							lv_relational_expression_1_0,
                      							"org.xtext.example.Ansic.relational_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:7859:3: (otherlv_2= '!=' ( (lv_relational_expression_3_0= rulerelational_expression ) ) )
                    {
                    // InternalAnsic.g:7859:3: (otherlv_2= '!=' ( (lv_relational_expression_3_0= rulerelational_expression ) ) )
                    // InternalAnsic.g:7860:4: otherlv_2= '!=' ( (lv_relational_expression_3_0= rulerelational_expression ) )
                    {
                    otherlv_2=(Token)match(input,87,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getEquality_expression_complementAccess().getExclamationMarkEqualsSignKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:7864:4: ( (lv_relational_expression_3_0= rulerelational_expression ) )
                    // InternalAnsic.g:7865:5: (lv_relational_expression_3_0= rulerelational_expression )
                    {
                    // InternalAnsic.g:7865:5: (lv_relational_expression_3_0= rulerelational_expression )
                    // InternalAnsic.g:7866:6: lv_relational_expression_3_0= rulerelational_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEquality_expression_complementAccess().getRelational_expressionRelational_expressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_relational_expression_3_0=rulerelational_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEquality_expression_complementRule());
                      						}
                      						set(
                      							current,
                      							"relational_expression",
                      							lv_relational_expression_3_0,
                      							"org.xtext.example.Ansic.relational_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleequality_expression_complement"


    // $ANTLR start "entryRulestatement"
    // InternalAnsic.g:7888:1: entryRulestatement returns [EObject current=null] : iv_rulestatement= rulestatement EOF ;
    public final EObject entryRulestatement() throws RecognitionException {
        EObject current = null;

        EObject iv_rulestatement = null;


        try {
            // InternalAnsic.g:7888:50: (iv_rulestatement= rulestatement EOF )
            // InternalAnsic.g:7889:2: iv_rulestatement= rulestatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulestatement=rulestatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulestatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulestatement"


    // $ANTLR start "rulestatement"
    // InternalAnsic.g:7895:1: rulestatement returns [EObject current=null] : ( ( (lv_labeled_statement_0_0= rulelabeled_statement ) ) | ( (lv_compound_statement_1_0= rulecompound_statement ) ) | ( (lv_expression_statement_2_0= ruleexpression_statement ) ) | ( (lv_selection_statement_3_0= ruleselection_statement ) ) | ( (lv_iteration_statement_4_0= ruleiteration_statement ) ) | ( (lv_jump_statement_5_0= rulejump_statement ) ) ) ;
    public final EObject rulestatement() throws RecognitionException {
        EObject current = null;

        EObject lv_labeled_statement_0_0 = null;

        EObject lv_compound_statement_1_0 = null;

        EObject lv_expression_statement_2_0 = null;

        EObject lv_selection_statement_3_0 = null;

        EObject lv_iteration_statement_4_0 = null;

        EObject lv_jump_statement_5_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:7901:2: ( ( ( (lv_labeled_statement_0_0= rulelabeled_statement ) ) | ( (lv_compound_statement_1_0= rulecompound_statement ) ) | ( (lv_expression_statement_2_0= ruleexpression_statement ) ) | ( (lv_selection_statement_3_0= ruleselection_statement ) ) | ( (lv_iteration_statement_4_0= ruleiteration_statement ) ) | ( (lv_jump_statement_5_0= rulejump_statement ) ) ) )
            // InternalAnsic.g:7902:2: ( ( (lv_labeled_statement_0_0= rulelabeled_statement ) ) | ( (lv_compound_statement_1_0= rulecompound_statement ) ) | ( (lv_expression_statement_2_0= ruleexpression_statement ) ) | ( (lv_selection_statement_3_0= ruleselection_statement ) ) | ( (lv_iteration_statement_4_0= ruleiteration_statement ) ) | ( (lv_jump_statement_5_0= rulejump_statement ) ) )
            {
            // InternalAnsic.g:7902:2: ( ( (lv_labeled_statement_0_0= rulelabeled_statement ) ) | ( (lv_compound_statement_1_0= rulecompound_statement ) ) | ( (lv_expression_statement_2_0= ruleexpression_statement ) ) | ( (lv_selection_statement_3_0= ruleselection_statement ) ) | ( (lv_iteration_statement_4_0= ruleiteration_statement ) ) | ( (lv_jump_statement_5_0= rulejump_statement ) ) )
            int alt62=6;
            switch ( input.LA(1) ) {
            case RULE_IDZ:
                {
                int LA62_1 = input.LA(2);

                if ( (LA62_1==34||(LA62_1>=56 && LA62_1<=57)||LA62_1==60||(LA62_1>=67 && LA62_1<=68)||LA62_1==73||(LA62_1>=75 && LA62_1<=77)||(LA62_1>=80 && LA62_1<=87)||(LA62_1>=99 && LA62_1<=114)) ) {
                    alt62=3;
                }
                else if ( (LA62_1==61) ) {
                    alt62=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 62, 1, input);

                    throw nvae;
                }
                }
                break;
            case 72:
            case 98:
                {
                alt62=1;
                }
                break;
            case 54:
                {
                alt62=2;
                }
                break;
            case RULE_INT:
            case RULE_FLOAT:
            case RULE_CHAR:
            case 34:
            case 53:
            case 60:
            case 67:
            case 71:
            case 76:
            case 77:
            case 78:
            case 79:
            case 82:
            case 83:
            case 99:
            case 115:
            case 116:
                {
                alt62=3;
                }
                break;
            case 95:
            case 97:
                {
                alt62=4;
                }
                break;
            case 92:
            case 93:
            case 94:
                {
                alt62=5;
                }
                break;
            case 88:
            case 89:
            case 90:
            case 91:
                {
                alt62=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 62, 0, input);

                throw nvae;
            }

            switch (alt62) {
                case 1 :
                    // InternalAnsic.g:7903:3: ( (lv_labeled_statement_0_0= rulelabeled_statement ) )
                    {
                    // InternalAnsic.g:7903:3: ( (lv_labeled_statement_0_0= rulelabeled_statement ) )
                    // InternalAnsic.g:7904:4: (lv_labeled_statement_0_0= rulelabeled_statement )
                    {
                    // InternalAnsic.g:7904:4: (lv_labeled_statement_0_0= rulelabeled_statement )
                    // InternalAnsic.g:7905:5: lv_labeled_statement_0_0= rulelabeled_statement
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getLabeled_statementLabeled_statementParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_labeled_statement_0_0=rulelabeled_statement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"labeled_statement",
                      						lv_labeled_statement_0_0,
                      						"org.xtext.example.Ansic.labeled_statement");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:7923:3: ( (lv_compound_statement_1_0= rulecompound_statement ) )
                    {
                    // InternalAnsic.g:7923:3: ( (lv_compound_statement_1_0= rulecompound_statement ) )
                    // InternalAnsic.g:7924:4: (lv_compound_statement_1_0= rulecompound_statement )
                    {
                    // InternalAnsic.g:7924:4: (lv_compound_statement_1_0= rulecompound_statement )
                    // InternalAnsic.g:7925:5: lv_compound_statement_1_0= rulecompound_statement
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getCompound_statementCompound_statementParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_compound_statement_1_0=rulecompound_statement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"compound_statement",
                      						lv_compound_statement_1_0,
                      						"org.xtext.example.Ansic.compound_statement");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:7943:3: ( (lv_expression_statement_2_0= ruleexpression_statement ) )
                    {
                    // InternalAnsic.g:7943:3: ( (lv_expression_statement_2_0= ruleexpression_statement ) )
                    // InternalAnsic.g:7944:4: (lv_expression_statement_2_0= ruleexpression_statement )
                    {
                    // InternalAnsic.g:7944:4: (lv_expression_statement_2_0= ruleexpression_statement )
                    // InternalAnsic.g:7945:5: lv_expression_statement_2_0= ruleexpression_statement
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getExpression_statementExpression_statementParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_statement_2_0=ruleexpression_statement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"expression_statement",
                      						lv_expression_statement_2_0,
                      						"org.xtext.example.Ansic.expression_statement");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalAnsic.g:7963:3: ( (lv_selection_statement_3_0= ruleselection_statement ) )
                    {
                    // InternalAnsic.g:7963:3: ( (lv_selection_statement_3_0= ruleselection_statement ) )
                    // InternalAnsic.g:7964:4: (lv_selection_statement_3_0= ruleselection_statement )
                    {
                    // InternalAnsic.g:7964:4: (lv_selection_statement_3_0= ruleselection_statement )
                    // InternalAnsic.g:7965:5: lv_selection_statement_3_0= ruleselection_statement
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getSelection_statementSelection_statementParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_selection_statement_3_0=ruleselection_statement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"selection_statement",
                      						lv_selection_statement_3_0,
                      						"org.xtext.example.Ansic.selection_statement");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalAnsic.g:7983:3: ( (lv_iteration_statement_4_0= ruleiteration_statement ) )
                    {
                    // InternalAnsic.g:7983:3: ( (lv_iteration_statement_4_0= ruleiteration_statement ) )
                    // InternalAnsic.g:7984:4: (lv_iteration_statement_4_0= ruleiteration_statement )
                    {
                    // InternalAnsic.g:7984:4: (lv_iteration_statement_4_0= ruleiteration_statement )
                    // InternalAnsic.g:7985:5: lv_iteration_statement_4_0= ruleiteration_statement
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getIteration_statementIteration_statementParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_iteration_statement_4_0=ruleiteration_statement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"iteration_statement",
                      						lv_iteration_statement_4_0,
                      						"org.xtext.example.Ansic.iteration_statement");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalAnsic.g:8003:3: ( (lv_jump_statement_5_0= rulejump_statement ) )
                    {
                    // InternalAnsic.g:8003:3: ( (lv_jump_statement_5_0= rulejump_statement ) )
                    // InternalAnsic.g:8004:4: (lv_jump_statement_5_0= rulejump_statement )
                    {
                    // InternalAnsic.g:8004:4: (lv_jump_statement_5_0= rulejump_statement )
                    // InternalAnsic.g:8005:5: lv_jump_statement_5_0= rulejump_statement
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getJump_statementJump_statementParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_jump_statement_5_0=rulejump_statement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"jump_statement",
                      						lv_jump_statement_5_0,
                      						"org.xtext.example.Ansic.jump_statement");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulestatement"


    // $ANTLR start "entryRulejump_statement"
    // InternalAnsic.g:8026:1: entryRulejump_statement returns [EObject current=null] : iv_rulejump_statement= rulejump_statement EOF ;
    public final EObject entryRulejump_statement() throws RecognitionException {
        EObject current = null;

        EObject iv_rulejump_statement = null;


        try {
            // InternalAnsic.g:8026:55: (iv_rulejump_statement= rulejump_statement EOF )
            // InternalAnsic.g:8027:2: iv_rulejump_statement= rulejump_statement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJump_statementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulejump_statement=rulejump_statement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulejump_statement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulejump_statement"


    // $ANTLR start "rulejump_statement"
    // InternalAnsic.g:8033:1: rulejump_statement returns [EObject current=null] : ( (otherlv_0= 'goto' ( (lv_identifier_1_0= RULE_IDZ ) ) otherlv_2= ';' ) | (otherlv_3= 'continue' otherlv_4= ';' ) | (otherlv_5= 'break' otherlv_6= ';' ) | (otherlv_7= 'return' otherlv_8= ';' ) | (otherlv_9= 'return' ( (lv_expression_10_0= ruleexpression ) ) otherlv_11= ';' ) ) ;
    public final EObject rulejump_statement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_identifier_1_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        EObject lv_expression_10_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:8039:2: ( ( (otherlv_0= 'goto' ( (lv_identifier_1_0= RULE_IDZ ) ) otherlv_2= ';' ) | (otherlv_3= 'continue' otherlv_4= ';' ) | (otherlv_5= 'break' otherlv_6= ';' ) | (otherlv_7= 'return' otherlv_8= ';' ) | (otherlv_9= 'return' ( (lv_expression_10_0= ruleexpression ) ) otherlv_11= ';' ) ) )
            // InternalAnsic.g:8040:2: ( (otherlv_0= 'goto' ( (lv_identifier_1_0= RULE_IDZ ) ) otherlv_2= ';' ) | (otherlv_3= 'continue' otherlv_4= ';' ) | (otherlv_5= 'break' otherlv_6= ';' ) | (otherlv_7= 'return' otherlv_8= ';' ) | (otherlv_9= 'return' ( (lv_expression_10_0= ruleexpression ) ) otherlv_11= ';' ) )
            {
            // InternalAnsic.g:8040:2: ( (otherlv_0= 'goto' ( (lv_identifier_1_0= RULE_IDZ ) ) otherlv_2= ';' ) | (otherlv_3= 'continue' otherlv_4= ';' ) | (otherlv_5= 'break' otherlv_6= ';' ) | (otherlv_7= 'return' otherlv_8= ';' ) | (otherlv_9= 'return' ( (lv_expression_10_0= ruleexpression ) ) otherlv_11= ';' ) )
            int alt63=5;
            switch ( input.LA(1) ) {
            case 88:
                {
                alt63=1;
                }
                break;
            case 89:
                {
                alt63=2;
                }
                break;
            case 90:
                {
                alt63=3;
                }
                break;
            case 91:
                {
                int LA63_4 = input.LA(2);

                if ( (LA63_4==60) ) {
                    alt63=4;
                }
                else if ( (LA63_4==RULE_IDZ||(LA63_4>=RULE_INT && LA63_4<=RULE_CHAR)||LA63_4==34||LA63_4==53||LA63_4==67||LA63_4==71||(LA63_4>=76 && LA63_4<=79)||(LA63_4>=82 && LA63_4<=83)||LA63_4==99||(LA63_4>=115 && LA63_4<=116)) ) {
                    alt63=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 63, 4, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 63, 0, input);

                throw nvae;
            }

            switch (alt63) {
                case 1 :
                    // InternalAnsic.g:8041:3: (otherlv_0= 'goto' ( (lv_identifier_1_0= RULE_IDZ ) ) otherlv_2= ';' )
                    {
                    // InternalAnsic.g:8041:3: (otherlv_0= 'goto' ( (lv_identifier_1_0= RULE_IDZ ) ) otherlv_2= ';' )
                    // InternalAnsic.g:8042:4: otherlv_0= 'goto' ( (lv_identifier_1_0= RULE_IDZ ) ) otherlv_2= ';'
                    {
                    otherlv_0=(Token)match(input,88,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getJump_statementAccess().getGotoKeyword_0_0());
                      			
                    }
                    // InternalAnsic.g:8046:4: ( (lv_identifier_1_0= RULE_IDZ ) )
                    // InternalAnsic.g:8047:5: (lv_identifier_1_0= RULE_IDZ )
                    {
                    // InternalAnsic.g:8047:5: (lv_identifier_1_0= RULE_IDZ )
                    // InternalAnsic.g:8048:6: lv_identifier_1_0= RULE_IDZ
                    {
                    lv_identifier_1_0=(Token)match(input,RULE_IDZ,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_identifier_1_0, grammarAccess.getJump_statementAccess().getIdentifierIDzTerminalRuleCall_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getJump_statementRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"identifier",
                      							lv_identifier_1_0,
                      							"org.xtext.example.Ansic.IDz");
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getJump_statementAccess().getSemicolonKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:8070:3: (otherlv_3= 'continue' otherlv_4= ';' )
                    {
                    // InternalAnsic.g:8070:3: (otherlv_3= 'continue' otherlv_4= ';' )
                    // InternalAnsic.g:8071:4: otherlv_3= 'continue' otherlv_4= ';'
                    {
                    otherlv_3=(Token)match(input,89,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getJump_statementAccess().getContinueKeyword_1_0());
                      			
                    }
                    otherlv_4=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getJump_statementAccess().getSemicolonKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:8081:3: (otherlv_5= 'break' otherlv_6= ';' )
                    {
                    // InternalAnsic.g:8081:3: (otherlv_5= 'break' otherlv_6= ';' )
                    // InternalAnsic.g:8082:4: otherlv_5= 'break' otherlv_6= ';'
                    {
                    otherlv_5=(Token)match(input,90,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getJump_statementAccess().getBreakKeyword_2_0());
                      			
                    }
                    otherlv_6=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getJump_statementAccess().getSemicolonKeyword_2_1());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalAnsic.g:8092:3: (otherlv_7= 'return' otherlv_8= ';' )
                    {
                    // InternalAnsic.g:8092:3: (otherlv_7= 'return' otherlv_8= ';' )
                    // InternalAnsic.g:8093:4: otherlv_7= 'return' otherlv_8= ';'
                    {
                    otherlv_7=(Token)match(input,91,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getJump_statementAccess().getReturnKeyword_3_0());
                      			
                    }
                    otherlv_8=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getJump_statementAccess().getSemicolonKeyword_3_1());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalAnsic.g:8103:3: (otherlv_9= 'return' ( (lv_expression_10_0= ruleexpression ) ) otherlv_11= ';' )
                    {
                    // InternalAnsic.g:8103:3: (otherlv_9= 'return' ( (lv_expression_10_0= ruleexpression ) ) otherlv_11= ';' )
                    // InternalAnsic.g:8104:4: otherlv_9= 'return' ( (lv_expression_10_0= ruleexpression ) ) otherlv_11= ';'
                    {
                    otherlv_9=(Token)match(input,91,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getJump_statementAccess().getReturnKeyword_4_0());
                      			
                    }
                    // InternalAnsic.g:8108:4: ( (lv_expression_10_0= ruleexpression ) )
                    // InternalAnsic.g:8109:5: (lv_expression_10_0= ruleexpression )
                    {
                    // InternalAnsic.g:8109:5: (lv_expression_10_0= ruleexpression )
                    // InternalAnsic.g:8110:6: lv_expression_10_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJump_statementAccess().getExpressionExpressionParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_14);
                    lv_expression_10_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJump_statementRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_10_0,
                      							"org.xtext.example.Ansic.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_11=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getJump_statementAccess().getSemicolonKeyword_4_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulejump_statement"


    // $ANTLR start "entryRuleiteration_statement"
    // InternalAnsic.g:8136:1: entryRuleiteration_statement returns [EObject current=null] : iv_ruleiteration_statement= ruleiteration_statement EOF ;
    public final EObject entryRuleiteration_statement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleiteration_statement = null;


        try {
            // InternalAnsic.g:8136:60: (iv_ruleiteration_statement= ruleiteration_statement EOF )
            // InternalAnsic.g:8137:2: iv_ruleiteration_statement= ruleiteration_statement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIteration_statementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleiteration_statement=ruleiteration_statement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleiteration_statement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleiteration_statement"


    // $ANTLR start "ruleiteration_statement"
    // InternalAnsic.g:8143:1: ruleiteration_statement returns [EObject current=null] : ( (otherlv_0= 'while' otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_statement_4_0= rulestatement ) ) ) | (otherlv_5= 'do' ( (lv_statement_6_0= rulestatement ) ) otherlv_7= 'while' otherlv_8= '(' ( (lv_expression_9_0= ruleexpression ) ) otherlv_10= ')' otherlv_11= ';' ) | (otherlv_12= 'for' otherlv_13= '(' ( (lv_expression_statement_14_0= ruleexpression_statement ) ) ( (lv_expression_statement2_15_0= ruleexpression_statement ) ) otherlv_16= ')' ( (lv_statement_17_0= rulestatement ) ) ) | (otherlv_18= 'for' otherlv_19= '(' ( (lv_expression_statement_20_0= ruleexpression_statement ) ) ( (lv_expression_statement2_21_0= ruleexpression_statement ) ) ( (lv_expression_22_0= ruleexpression ) ) otherlv_23= ')' ( (lv_statement_24_0= rulestatement ) ) ) | (otherlv_25= 'for' otherlv_26= '(' ( (lv_declaration_27_0= ruledeclaration ) ) ( (lv_expression_statement_28_0= ruleexpression_statement ) ) otherlv_29= ')' ( (lv_statement_30_0= rulestatement ) ) ) | (otherlv_31= 'for' otherlv_32= '(' ( (lv_declaration_33_0= ruledeclaration ) ) ( (lv_expression_statement_34_0= ruleexpression_statement ) ) ( (lv_expression_35_0= ruleexpression ) ) otherlv_36= ')' ( (lv_statement_37_0= rulestatement ) ) ) ) ;
    public final EObject ruleiteration_statement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        Token otherlv_26=null;
        Token otherlv_29=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token otherlv_36=null;
        EObject lv_expression_2_0 = null;

        EObject lv_statement_4_0 = null;

        EObject lv_statement_6_0 = null;

        EObject lv_expression_9_0 = null;

        EObject lv_expression_statement_14_0 = null;

        EObject lv_expression_statement2_15_0 = null;

        EObject lv_statement_17_0 = null;

        EObject lv_expression_statement_20_0 = null;

        EObject lv_expression_statement2_21_0 = null;

        EObject lv_expression_22_0 = null;

        EObject lv_statement_24_0 = null;

        EObject lv_declaration_27_0 = null;

        EObject lv_expression_statement_28_0 = null;

        EObject lv_statement_30_0 = null;

        EObject lv_declaration_33_0 = null;

        EObject lv_expression_statement_34_0 = null;

        EObject lv_expression_35_0 = null;

        EObject lv_statement_37_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:8149:2: ( ( (otherlv_0= 'while' otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_statement_4_0= rulestatement ) ) ) | (otherlv_5= 'do' ( (lv_statement_6_0= rulestatement ) ) otherlv_7= 'while' otherlv_8= '(' ( (lv_expression_9_0= ruleexpression ) ) otherlv_10= ')' otherlv_11= ';' ) | (otherlv_12= 'for' otherlv_13= '(' ( (lv_expression_statement_14_0= ruleexpression_statement ) ) ( (lv_expression_statement2_15_0= ruleexpression_statement ) ) otherlv_16= ')' ( (lv_statement_17_0= rulestatement ) ) ) | (otherlv_18= 'for' otherlv_19= '(' ( (lv_expression_statement_20_0= ruleexpression_statement ) ) ( (lv_expression_statement2_21_0= ruleexpression_statement ) ) ( (lv_expression_22_0= ruleexpression ) ) otherlv_23= ')' ( (lv_statement_24_0= rulestatement ) ) ) | (otherlv_25= 'for' otherlv_26= '(' ( (lv_declaration_27_0= ruledeclaration ) ) ( (lv_expression_statement_28_0= ruleexpression_statement ) ) otherlv_29= ')' ( (lv_statement_30_0= rulestatement ) ) ) | (otherlv_31= 'for' otherlv_32= '(' ( (lv_declaration_33_0= ruledeclaration ) ) ( (lv_expression_statement_34_0= ruleexpression_statement ) ) ( (lv_expression_35_0= ruleexpression ) ) otherlv_36= ')' ( (lv_statement_37_0= rulestatement ) ) ) ) )
            // InternalAnsic.g:8150:2: ( (otherlv_0= 'while' otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_statement_4_0= rulestatement ) ) ) | (otherlv_5= 'do' ( (lv_statement_6_0= rulestatement ) ) otherlv_7= 'while' otherlv_8= '(' ( (lv_expression_9_0= ruleexpression ) ) otherlv_10= ')' otherlv_11= ';' ) | (otherlv_12= 'for' otherlv_13= '(' ( (lv_expression_statement_14_0= ruleexpression_statement ) ) ( (lv_expression_statement2_15_0= ruleexpression_statement ) ) otherlv_16= ')' ( (lv_statement_17_0= rulestatement ) ) ) | (otherlv_18= 'for' otherlv_19= '(' ( (lv_expression_statement_20_0= ruleexpression_statement ) ) ( (lv_expression_statement2_21_0= ruleexpression_statement ) ) ( (lv_expression_22_0= ruleexpression ) ) otherlv_23= ')' ( (lv_statement_24_0= rulestatement ) ) ) | (otherlv_25= 'for' otherlv_26= '(' ( (lv_declaration_27_0= ruledeclaration ) ) ( (lv_expression_statement_28_0= ruleexpression_statement ) ) otherlv_29= ')' ( (lv_statement_30_0= rulestatement ) ) ) | (otherlv_31= 'for' otherlv_32= '(' ( (lv_declaration_33_0= ruledeclaration ) ) ( (lv_expression_statement_34_0= ruleexpression_statement ) ) ( (lv_expression_35_0= ruleexpression ) ) otherlv_36= ')' ( (lv_statement_37_0= rulestatement ) ) ) )
            {
            // InternalAnsic.g:8150:2: ( (otherlv_0= 'while' otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_statement_4_0= rulestatement ) ) ) | (otherlv_5= 'do' ( (lv_statement_6_0= rulestatement ) ) otherlv_7= 'while' otherlv_8= '(' ( (lv_expression_9_0= ruleexpression ) ) otherlv_10= ')' otherlv_11= ';' ) | (otherlv_12= 'for' otherlv_13= '(' ( (lv_expression_statement_14_0= ruleexpression_statement ) ) ( (lv_expression_statement2_15_0= ruleexpression_statement ) ) otherlv_16= ')' ( (lv_statement_17_0= rulestatement ) ) ) | (otherlv_18= 'for' otherlv_19= '(' ( (lv_expression_statement_20_0= ruleexpression_statement ) ) ( (lv_expression_statement2_21_0= ruleexpression_statement ) ) ( (lv_expression_22_0= ruleexpression ) ) otherlv_23= ')' ( (lv_statement_24_0= rulestatement ) ) ) | (otherlv_25= 'for' otherlv_26= '(' ( (lv_declaration_27_0= ruledeclaration ) ) ( (lv_expression_statement_28_0= ruleexpression_statement ) ) otherlv_29= ')' ( (lv_statement_30_0= rulestatement ) ) ) | (otherlv_31= 'for' otherlv_32= '(' ( (lv_declaration_33_0= ruledeclaration ) ) ( (lv_expression_statement_34_0= ruleexpression_statement ) ) ( (lv_expression_35_0= ruleexpression ) ) otherlv_36= ')' ( (lv_statement_37_0= rulestatement ) ) ) )
            int alt64=6;
            switch ( input.LA(1) ) {
            case 92:
                {
                alt64=1;
                }
                break;
            case 93:
                {
                alt64=2;
                }
                break;
            case 94:
                {
                int LA64_3 = input.LA(2);

                if ( (synpred155_InternalAnsic()) ) {
                    alt64=3;
                }
                else if ( (synpred156_InternalAnsic()) ) {
                    alt64=4;
                }
                else if ( (synpred157_InternalAnsic()) ) {
                    alt64=5;
                }
                else if ( (true) ) {
                    alt64=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 64, 3, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 64, 0, input);

                throw nvae;
            }

            switch (alt64) {
                case 1 :
                    // InternalAnsic.g:8151:3: (otherlv_0= 'while' otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_statement_4_0= rulestatement ) ) )
                    {
                    // InternalAnsic.g:8151:3: (otherlv_0= 'while' otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_statement_4_0= rulestatement ) ) )
                    // InternalAnsic.g:8152:4: otherlv_0= 'while' otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_statement_4_0= rulestatement ) )
                    {
                    otherlv_0=(Token)match(input,92,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getIteration_statementAccess().getWhileKeyword_0_0());
                      			
                    }
                    otherlv_1=(Token)match(input,34,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getIteration_statementAccess().getLeftParenthesisKeyword_0_1());
                      			
                    }
                    // InternalAnsic.g:8160:4: ( (lv_expression_2_0= ruleexpression ) )
                    // InternalAnsic.g:8161:5: (lv_expression_2_0= ruleexpression )
                    {
                    // InternalAnsic.g:8161:5: (lv_expression_2_0= ruleexpression )
                    // InternalAnsic.g:8162:6: lv_expression_2_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIteration_statementAccess().getExpressionExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_expression_2_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIteration_statementRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_2_0,
                      							"org.xtext.example.Ansic.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,35,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getIteration_statementAccess().getRightParenthesisKeyword_0_3());
                      			
                    }
                    // InternalAnsic.g:8183:4: ( (lv_statement_4_0= rulestatement ) )
                    // InternalAnsic.g:8184:5: (lv_statement_4_0= rulestatement )
                    {
                    // InternalAnsic.g:8184:5: (lv_statement_4_0= rulestatement )
                    // InternalAnsic.g:8185:6: lv_statement_4_0= rulestatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIteration_statementAccess().getStatementStatementParserRuleCall_0_4_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_statement_4_0=rulestatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIteration_statementRule());
                      						}
                      						set(
                      							current,
                      							"statement",
                      							lv_statement_4_0,
                      							"org.xtext.example.Ansic.statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:8204:3: (otherlv_5= 'do' ( (lv_statement_6_0= rulestatement ) ) otherlv_7= 'while' otherlv_8= '(' ( (lv_expression_9_0= ruleexpression ) ) otherlv_10= ')' otherlv_11= ';' )
                    {
                    // InternalAnsic.g:8204:3: (otherlv_5= 'do' ( (lv_statement_6_0= rulestatement ) ) otherlv_7= 'while' otherlv_8= '(' ( (lv_expression_9_0= ruleexpression ) ) otherlv_10= ')' otherlv_11= ';' )
                    // InternalAnsic.g:8205:4: otherlv_5= 'do' ( (lv_statement_6_0= rulestatement ) ) otherlv_7= 'while' otherlv_8= '(' ( (lv_expression_9_0= ruleexpression ) ) otherlv_10= ')' otherlv_11= ';'
                    {
                    otherlv_5=(Token)match(input,93,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getIteration_statementAccess().getDoKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:8209:4: ( (lv_statement_6_0= rulestatement ) )
                    // InternalAnsic.g:8210:5: (lv_statement_6_0= rulestatement )
                    {
                    // InternalAnsic.g:8210:5: (lv_statement_6_0= rulestatement )
                    // InternalAnsic.g:8211:6: lv_statement_6_0= rulestatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIteration_statementAccess().getStatementStatementParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_36);
                    lv_statement_6_0=rulestatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIteration_statementRule());
                      						}
                      						set(
                      							current,
                      							"statement",
                      							lv_statement_6_0,
                      							"org.xtext.example.Ansic.statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_7=(Token)match(input,92,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getIteration_statementAccess().getWhileKeyword_1_2());
                      			
                    }
                    otherlv_8=(Token)match(input,34,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getIteration_statementAccess().getLeftParenthesisKeyword_1_3());
                      			
                    }
                    // InternalAnsic.g:8236:4: ( (lv_expression_9_0= ruleexpression ) )
                    // InternalAnsic.g:8237:5: (lv_expression_9_0= ruleexpression )
                    {
                    // InternalAnsic.g:8237:5: (lv_expression_9_0= ruleexpression )
                    // InternalAnsic.g:8238:6: lv_expression_9_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIteration_statementAccess().getExpressionExpressionParserRuleCall_1_4_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_expression_9_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIteration_statementRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_9_0,
                      							"org.xtext.example.Ansic.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_10=(Token)match(input,35,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getIteration_statementAccess().getRightParenthesisKeyword_1_5());
                      			
                    }
                    otherlv_11=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getIteration_statementAccess().getSemicolonKeyword_1_6());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:8265:3: (otherlv_12= 'for' otherlv_13= '(' ( (lv_expression_statement_14_0= ruleexpression_statement ) ) ( (lv_expression_statement2_15_0= ruleexpression_statement ) ) otherlv_16= ')' ( (lv_statement_17_0= rulestatement ) ) )
                    {
                    // InternalAnsic.g:8265:3: (otherlv_12= 'for' otherlv_13= '(' ( (lv_expression_statement_14_0= ruleexpression_statement ) ) ( (lv_expression_statement2_15_0= ruleexpression_statement ) ) otherlv_16= ')' ( (lv_statement_17_0= rulestatement ) ) )
                    // InternalAnsic.g:8266:4: otherlv_12= 'for' otherlv_13= '(' ( (lv_expression_statement_14_0= ruleexpression_statement ) ) ( (lv_expression_statement2_15_0= ruleexpression_statement ) ) otherlv_16= ')' ( (lv_statement_17_0= rulestatement ) )
                    {
                    otherlv_12=(Token)match(input,94,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getIteration_statementAccess().getForKeyword_2_0());
                      			
                    }
                    otherlv_13=(Token)match(input,34,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getIteration_statementAccess().getLeftParenthesisKeyword_2_1());
                      			
                    }
                    // InternalAnsic.g:8274:4: ( (lv_expression_statement_14_0= ruleexpression_statement ) )
                    // InternalAnsic.g:8275:5: (lv_expression_statement_14_0= ruleexpression_statement )
                    {
                    // InternalAnsic.g:8275:5: (lv_expression_statement_14_0= ruleexpression_statement )
                    // InternalAnsic.g:8276:6: lv_expression_statement_14_0= ruleexpression_statement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIteration_statementAccess().getExpression_statementExpression_statementParserRuleCall_2_2_0());
                      					
                    }
                    pushFollow(FOLLOW_37);
                    lv_expression_statement_14_0=ruleexpression_statement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIteration_statementRule());
                      						}
                      						set(
                      							current,
                      							"expression_statement",
                      							lv_expression_statement_14_0,
                      							"org.xtext.example.Ansic.expression_statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:8293:4: ( (lv_expression_statement2_15_0= ruleexpression_statement ) )
                    // InternalAnsic.g:8294:5: (lv_expression_statement2_15_0= ruleexpression_statement )
                    {
                    // InternalAnsic.g:8294:5: (lv_expression_statement2_15_0= ruleexpression_statement )
                    // InternalAnsic.g:8295:6: lv_expression_statement2_15_0= ruleexpression_statement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIteration_statementAccess().getExpression_statement2Expression_statementParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_expression_statement2_15_0=ruleexpression_statement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIteration_statementRule());
                      						}
                      						set(
                      							current,
                      							"expression_statement2",
                      							lv_expression_statement2_15_0,
                      							"org.xtext.example.Ansic.expression_statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_16=(Token)match(input,35,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_16, grammarAccess.getIteration_statementAccess().getRightParenthesisKeyword_2_4());
                      			
                    }
                    // InternalAnsic.g:8316:4: ( (lv_statement_17_0= rulestatement ) )
                    // InternalAnsic.g:8317:5: (lv_statement_17_0= rulestatement )
                    {
                    // InternalAnsic.g:8317:5: (lv_statement_17_0= rulestatement )
                    // InternalAnsic.g:8318:6: lv_statement_17_0= rulestatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIteration_statementAccess().getStatementStatementParserRuleCall_2_5_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_statement_17_0=rulestatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIteration_statementRule());
                      						}
                      						set(
                      							current,
                      							"statement",
                      							lv_statement_17_0,
                      							"org.xtext.example.Ansic.statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalAnsic.g:8337:3: (otherlv_18= 'for' otherlv_19= '(' ( (lv_expression_statement_20_0= ruleexpression_statement ) ) ( (lv_expression_statement2_21_0= ruleexpression_statement ) ) ( (lv_expression_22_0= ruleexpression ) ) otherlv_23= ')' ( (lv_statement_24_0= rulestatement ) ) )
                    {
                    // InternalAnsic.g:8337:3: (otherlv_18= 'for' otherlv_19= '(' ( (lv_expression_statement_20_0= ruleexpression_statement ) ) ( (lv_expression_statement2_21_0= ruleexpression_statement ) ) ( (lv_expression_22_0= ruleexpression ) ) otherlv_23= ')' ( (lv_statement_24_0= rulestatement ) ) )
                    // InternalAnsic.g:8338:4: otherlv_18= 'for' otherlv_19= '(' ( (lv_expression_statement_20_0= ruleexpression_statement ) ) ( (lv_expression_statement2_21_0= ruleexpression_statement ) ) ( (lv_expression_22_0= ruleexpression ) ) otherlv_23= ')' ( (lv_statement_24_0= rulestatement ) )
                    {
                    otherlv_18=(Token)match(input,94,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getIteration_statementAccess().getForKeyword_3_0());
                      			
                    }
                    otherlv_19=(Token)match(input,34,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_19, grammarAccess.getIteration_statementAccess().getLeftParenthesisKeyword_3_1());
                      			
                    }
                    // InternalAnsic.g:8346:4: ( (lv_expression_statement_20_0= ruleexpression_statement ) )
                    // InternalAnsic.g:8347:5: (lv_expression_statement_20_0= ruleexpression_statement )
                    {
                    // InternalAnsic.g:8347:5: (lv_expression_statement_20_0= ruleexpression_statement )
                    // InternalAnsic.g:8348:6: lv_expression_statement_20_0= ruleexpression_statement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIteration_statementAccess().getExpression_statementExpression_statementParserRuleCall_3_2_0());
                      					
                    }
                    pushFollow(FOLLOW_37);
                    lv_expression_statement_20_0=ruleexpression_statement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIteration_statementRule());
                      						}
                      						set(
                      							current,
                      							"expression_statement",
                      							lv_expression_statement_20_0,
                      							"org.xtext.example.Ansic.expression_statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:8365:4: ( (lv_expression_statement2_21_0= ruleexpression_statement ) )
                    // InternalAnsic.g:8366:5: (lv_expression_statement2_21_0= ruleexpression_statement )
                    {
                    // InternalAnsic.g:8366:5: (lv_expression_statement2_21_0= ruleexpression_statement )
                    // InternalAnsic.g:8367:6: lv_expression_statement2_21_0= ruleexpression_statement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIteration_statementAccess().getExpression_statement2Expression_statementParserRuleCall_3_3_0());
                      					
                    }
                    pushFollow(FOLLOW_8);
                    lv_expression_statement2_21_0=ruleexpression_statement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIteration_statementRule());
                      						}
                      						set(
                      							current,
                      							"expression_statement2",
                      							lv_expression_statement2_21_0,
                      							"org.xtext.example.Ansic.expression_statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:8384:4: ( (lv_expression_22_0= ruleexpression ) )
                    // InternalAnsic.g:8385:5: (lv_expression_22_0= ruleexpression )
                    {
                    // InternalAnsic.g:8385:5: (lv_expression_22_0= ruleexpression )
                    // InternalAnsic.g:8386:6: lv_expression_22_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIteration_statementAccess().getExpressionExpressionParserRuleCall_3_4_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_expression_22_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIteration_statementRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_22_0,
                      							"org.xtext.example.Ansic.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_23=(Token)match(input,35,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_23, grammarAccess.getIteration_statementAccess().getRightParenthesisKeyword_3_5());
                      			
                    }
                    // InternalAnsic.g:8407:4: ( (lv_statement_24_0= rulestatement ) )
                    // InternalAnsic.g:8408:5: (lv_statement_24_0= rulestatement )
                    {
                    // InternalAnsic.g:8408:5: (lv_statement_24_0= rulestatement )
                    // InternalAnsic.g:8409:6: lv_statement_24_0= rulestatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIteration_statementAccess().getStatementStatementParserRuleCall_3_6_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_statement_24_0=rulestatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIteration_statementRule());
                      						}
                      						set(
                      							current,
                      							"statement",
                      							lv_statement_24_0,
                      							"org.xtext.example.Ansic.statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalAnsic.g:8428:3: (otherlv_25= 'for' otherlv_26= '(' ( (lv_declaration_27_0= ruledeclaration ) ) ( (lv_expression_statement_28_0= ruleexpression_statement ) ) otherlv_29= ')' ( (lv_statement_30_0= rulestatement ) ) )
                    {
                    // InternalAnsic.g:8428:3: (otherlv_25= 'for' otherlv_26= '(' ( (lv_declaration_27_0= ruledeclaration ) ) ( (lv_expression_statement_28_0= ruleexpression_statement ) ) otherlv_29= ')' ( (lv_statement_30_0= rulestatement ) ) )
                    // InternalAnsic.g:8429:4: otherlv_25= 'for' otherlv_26= '(' ( (lv_declaration_27_0= ruledeclaration ) ) ( (lv_expression_statement_28_0= ruleexpression_statement ) ) otherlv_29= ')' ( (lv_statement_30_0= rulestatement ) )
                    {
                    otherlv_25=(Token)match(input,94,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_25, grammarAccess.getIteration_statementAccess().getForKeyword_4_0());
                      			
                    }
                    otherlv_26=(Token)match(input,34,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_26, grammarAccess.getIteration_statementAccess().getLeftParenthesisKeyword_4_1());
                      			
                    }
                    // InternalAnsic.g:8437:4: ( (lv_declaration_27_0= ruledeclaration ) )
                    // InternalAnsic.g:8438:5: (lv_declaration_27_0= ruledeclaration )
                    {
                    // InternalAnsic.g:8438:5: (lv_declaration_27_0= ruledeclaration )
                    // InternalAnsic.g:8439:6: lv_declaration_27_0= ruledeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIteration_statementAccess().getDeclarationDeclarationParserRuleCall_4_2_0());
                      					
                    }
                    pushFollow(FOLLOW_37);
                    lv_declaration_27_0=ruledeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIteration_statementRule());
                      						}
                      						set(
                      							current,
                      							"declaration",
                      							lv_declaration_27_0,
                      							"org.xtext.example.Ansic.declaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:8456:4: ( (lv_expression_statement_28_0= ruleexpression_statement ) )
                    // InternalAnsic.g:8457:5: (lv_expression_statement_28_0= ruleexpression_statement )
                    {
                    // InternalAnsic.g:8457:5: (lv_expression_statement_28_0= ruleexpression_statement )
                    // InternalAnsic.g:8458:6: lv_expression_statement_28_0= ruleexpression_statement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIteration_statementAccess().getExpression_statementExpression_statementParserRuleCall_4_3_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_expression_statement_28_0=ruleexpression_statement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIteration_statementRule());
                      						}
                      						set(
                      							current,
                      							"expression_statement",
                      							lv_expression_statement_28_0,
                      							"org.xtext.example.Ansic.expression_statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_29=(Token)match(input,35,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_29, grammarAccess.getIteration_statementAccess().getRightParenthesisKeyword_4_4());
                      			
                    }
                    // InternalAnsic.g:8479:4: ( (lv_statement_30_0= rulestatement ) )
                    // InternalAnsic.g:8480:5: (lv_statement_30_0= rulestatement )
                    {
                    // InternalAnsic.g:8480:5: (lv_statement_30_0= rulestatement )
                    // InternalAnsic.g:8481:6: lv_statement_30_0= rulestatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIteration_statementAccess().getStatementStatementParserRuleCall_4_5_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_statement_30_0=rulestatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIteration_statementRule());
                      						}
                      						set(
                      							current,
                      							"statement",
                      							lv_statement_30_0,
                      							"org.xtext.example.Ansic.statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalAnsic.g:8500:3: (otherlv_31= 'for' otherlv_32= '(' ( (lv_declaration_33_0= ruledeclaration ) ) ( (lv_expression_statement_34_0= ruleexpression_statement ) ) ( (lv_expression_35_0= ruleexpression ) ) otherlv_36= ')' ( (lv_statement_37_0= rulestatement ) ) )
                    {
                    // InternalAnsic.g:8500:3: (otherlv_31= 'for' otherlv_32= '(' ( (lv_declaration_33_0= ruledeclaration ) ) ( (lv_expression_statement_34_0= ruleexpression_statement ) ) ( (lv_expression_35_0= ruleexpression ) ) otherlv_36= ')' ( (lv_statement_37_0= rulestatement ) ) )
                    // InternalAnsic.g:8501:4: otherlv_31= 'for' otherlv_32= '(' ( (lv_declaration_33_0= ruledeclaration ) ) ( (lv_expression_statement_34_0= ruleexpression_statement ) ) ( (lv_expression_35_0= ruleexpression ) ) otherlv_36= ')' ( (lv_statement_37_0= rulestatement ) )
                    {
                    otherlv_31=(Token)match(input,94,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_31, grammarAccess.getIteration_statementAccess().getForKeyword_5_0());
                      			
                    }
                    otherlv_32=(Token)match(input,34,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_32, grammarAccess.getIteration_statementAccess().getLeftParenthesisKeyword_5_1());
                      			
                    }
                    // InternalAnsic.g:8509:4: ( (lv_declaration_33_0= ruledeclaration ) )
                    // InternalAnsic.g:8510:5: (lv_declaration_33_0= ruledeclaration )
                    {
                    // InternalAnsic.g:8510:5: (lv_declaration_33_0= ruledeclaration )
                    // InternalAnsic.g:8511:6: lv_declaration_33_0= ruledeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIteration_statementAccess().getDeclarationDeclarationParserRuleCall_5_2_0());
                      					
                    }
                    pushFollow(FOLLOW_37);
                    lv_declaration_33_0=ruledeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIteration_statementRule());
                      						}
                      						set(
                      							current,
                      							"declaration",
                      							lv_declaration_33_0,
                      							"org.xtext.example.Ansic.declaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:8528:4: ( (lv_expression_statement_34_0= ruleexpression_statement ) )
                    // InternalAnsic.g:8529:5: (lv_expression_statement_34_0= ruleexpression_statement )
                    {
                    // InternalAnsic.g:8529:5: (lv_expression_statement_34_0= ruleexpression_statement )
                    // InternalAnsic.g:8530:6: lv_expression_statement_34_0= ruleexpression_statement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIteration_statementAccess().getExpression_statementExpression_statementParserRuleCall_5_3_0());
                      					
                    }
                    pushFollow(FOLLOW_8);
                    lv_expression_statement_34_0=ruleexpression_statement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIteration_statementRule());
                      						}
                      						set(
                      							current,
                      							"expression_statement",
                      							lv_expression_statement_34_0,
                      							"org.xtext.example.Ansic.expression_statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:8547:4: ( (lv_expression_35_0= ruleexpression ) )
                    // InternalAnsic.g:8548:5: (lv_expression_35_0= ruleexpression )
                    {
                    // InternalAnsic.g:8548:5: (lv_expression_35_0= ruleexpression )
                    // InternalAnsic.g:8549:6: lv_expression_35_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIteration_statementAccess().getExpressionExpressionParserRuleCall_5_4_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_expression_35_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIteration_statementRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_35_0,
                      							"org.xtext.example.Ansic.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_36=(Token)match(input,35,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_36, grammarAccess.getIteration_statementAccess().getRightParenthesisKeyword_5_5());
                      			
                    }
                    // InternalAnsic.g:8570:4: ( (lv_statement_37_0= rulestatement ) )
                    // InternalAnsic.g:8571:5: (lv_statement_37_0= rulestatement )
                    {
                    // InternalAnsic.g:8571:5: (lv_statement_37_0= rulestatement )
                    // InternalAnsic.g:8572:6: lv_statement_37_0= rulestatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIteration_statementAccess().getStatementStatementParserRuleCall_5_6_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_statement_37_0=rulestatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIteration_statementRule());
                      						}
                      						set(
                      							current,
                      							"statement",
                      							lv_statement_37_0,
                      							"org.xtext.example.Ansic.statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleiteration_statement"


    // $ANTLR start "entryRuleselection_statement"
    // InternalAnsic.g:8594:1: entryRuleselection_statement returns [EObject current=null] : iv_ruleselection_statement= ruleselection_statement EOF ;
    public final EObject entryRuleselection_statement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleselection_statement = null;


        try {
            // InternalAnsic.g:8594:60: (iv_ruleselection_statement= ruleselection_statement EOF )
            // InternalAnsic.g:8595:2: iv_ruleselection_statement= ruleselection_statement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSelection_statementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleselection_statement=ruleselection_statement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleselection_statement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleselection_statement"


    // $ANTLR start "ruleselection_statement"
    // InternalAnsic.g:8601:1: ruleselection_statement returns [EObject current=null] : ( (otherlv_0= 'if' otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_statement_4_0= rulestatement ) ) otherlv_5= 'else' ( (lv_statement2_6_0= rulestatement ) ) ) | (otherlv_7= 'if' otherlv_8= '(' ( (lv_expression_9_0= ruleexpression ) ) otherlv_10= ')' ( (lv_statement_11_0= rulestatement ) ) ) | (otherlv_12= 'switch' otherlv_13= '(' ( (lv_expression_14_0= ruleexpression ) ) otherlv_15= ')' ( (lv_statement_16_0= rulestatement ) ) ) ) ;
    public final EObject ruleselection_statement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        EObject lv_expression_2_0 = null;

        EObject lv_statement_4_0 = null;

        EObject lv_statement2_6_0 = null;

        EObject lv_expression_9_0 = null;

        EObject lv_statement_11_0 = null;

        EObject lv_expression_14_0 = null;

        EObject lv_statement_16_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:8607:2: ( ( (otherlv_0= 'if' otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_statement_4_0= rulestatement ) ) otherlv_5= 'else' ( (lv_statement2_6_0= rulestatement ) ) ) | (otherlv_7= 'if' otherlv_8= '(' ( (lv_expression_9_0= ruleexpression ) ) otherlv_10= ')' ( (lv_statement_11_0= rulestatement ) ) ) | (otherlv_12= 'switch' otherlv_13= '(' ( (lv_expression_14_0= ruleexpression ) ) otherlv_15= ')' ( (lv_statement_16_0= rulestatement ) ) ) ) )
            // InternalAnsic.g:8608:2: ( (otherlv_0= 'if' otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_statement_4_0= rulestatement ) ) otherlv_5= 'else' ( (lv_statement2_6_0= rulestatement ) ) ) | (otherlv_7= 'if' otherlv_8= '(' ( (lv_expression_9_0= ruleexpression ) ) otherlv_10= ')' ( (lv_statement_11_0= rulestatement ) ) ) | (otherlv_12= 'switch' otherlv_13= '(' ( (lv_expression_14_0= ruleexpression ) ) otherlv_15= ')' ( (lv_statement_16_0= rulestatement ) ) ) )
            {
            // InternalAnsic.g:8608:2: ( (otherlv_0= 'if' otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_statement_4_0= rulestatement ) ) otherlv_5= 'else' ( (lv_statement2_6_0= rulestatement ) ) ) | (otherlv_7= 'if' otherlv_8= '(' ( (lv_expression_9_0= ruleexpression ) ) otherlv_10= ')' ( (lv_statement_11_0= rulestatement ) ) ) | (otherlv_12= 'switch' otherlv_13= '(' ( (lv_expression_14_0= ruleexpression ) ) otherlv_15= ')' ( (lv_statement_16_0= rulestatement ) ) ) )
            int alt65=3;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==95) ) {
                int LA65_1 = input.LA(2);

                if ( (synpred158_InternalAnsic()) ) {
                    alt65=1;
                }
                else if ( (synpred159_InternalAnsic()) ) {
                    alt65=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 65, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA65_0==97) ) {
                alt65=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 65, 0, input);

                throw nvae;
            }
            switch (alt65) {
                case 1 :
                    // InternalAnsic.g:8609:3: (otherlv_0= 'if' otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_statement_4_0= rulestatement ) ) otherlv_5= 'else' ( (lv_statement2_6_0= rulestatement ) ) )
                    {
                    // InternalAnsic.g:8609:3: (otherlv_0= 'if' otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_statement_4_0= rulestatement ) ) otherlv_5= 'else' ( (lv_statement2_6_0= rulestatement ) ) )
                    // InternalAnsic.g:8610:4: otherlv_0= 'if' otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_statement_4_0= rulestatement ) ) otherlv_5= 'else' ( (lv_statement2_6_0= rulestatement ) )
                    {
                    otherlv_0=(Token)match(input,95,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSelection_statementAccess().getIfKeyword_0_0());
                      			
                    }
                    otherlv_1=(Token)match(input,34,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSelection_statementAccess().getLeftParenthesisKeyword_0_1());
                      			
                    }
                    // InternalAnsic.g:8618:4: ( (lv_expression_2_0= ruleexpression ) )
                    // InternalAnsic.g:8619:5: (lv_expression_2_0= ruleexpression )
                    {
                    // InternalAnsic.g:8619:5: (lv_expression_2_0= ruleexpression )
                    // InternalAnsic.g:8620:6: lv_expression_2_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSelection_statementAccess().getExpressionExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_expression_2_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSelection_statementRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_2_0,
                      							"org.xtext.example.Ansic.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,35,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getSelection_statementAccess().getRightParenthesisKeyword_0_3());
                      			
                    }
                    // InternalAnsic.g:8641:4: ( (lv_statement_4_0= rulestatement ) )
                    // InternalAnsic.g:8642:5: (lv_statement_4_0= rulestatement )
                    {
                    // InternalAnsic.g:8642:5: (lv_statement_4_0= rulestatement )
                    // InternalAnsic.g:8643:6: lv_statement_4_0= rulestatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSelection_statementAccess().getStatementStatementParserRuleCall_0_4_0());
                      					
                    }
                    pushFollow(FOLLOW_38);
                    lv_statement_4_0=rulestatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSelection_statementRule());
                      						}
                      						set(
                      							current,
                      							"statement",
                      							lv_statement_4_0,
                      							"org.xtext.example.Ansic.statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,96,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getSelection_statementAccess().getElseKeyword_0_5());
                      			
                    }
                    // InternalAnsic.g:8664:4: ( (lv_statement2_6_0= rulestatement ) )
                    // InternalAnsic.g:8665:5: (lv_statement2_6_0= rulestatement )
                    {
                    // InternalAnsic.g:8665:5: (lv_statement2_6_0= rulestatement )
                    // InternalAnsic.g:8666:6: lv_statement2_6_0= rulestatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSelection_statementAccess().getStatement2StatementParserRuleCall_0_6_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_statement2_6_0=rulestatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSelection_statementRule());
                      						}
                      						set(
                      							current,
                      							"statement2",
                      							lv_statement2_6_0,
                      							"org.xtext.example.Ansic.statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:8685:3: (otherlv_7= 'if' otherlv_8= '(' ( (lv_expression_9_0= ruleexpression ) ) otherlv_10= ')' ( (lv_statement_11_0= rulestatement ) ) )
                    {
                    // InternalAnsic.g:8685:3: (otherlv_7= 'if' otherlv_8= '(' ( (lv_expression_9_0= ruleexpression ) ) otherlv_10= ')' ( (lv_statement_11_0= rulestatement ) ) )
                    // InternalAnsic.g:8686:4: otherlv_7= 'if' otherlv_8= '(' ( (lv_expression_9_0= ruleexpression ) ) otherlv_10= ')' ( (lv_statement_11_0= rulestatement ) )
                    {
                    otherlv_7=(Token)match(input,95,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getSelection_statementAccess().getIfKeyword_1_0());
                      			
                    }
                    otherlv_8=(Token)match(input,34,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getSelection_statementAccess().getLeftParenthesisKeyword_1_1());
                      			
                    }
                    // InternalAnsic.g:8694:4: ( (lv_expression_9_0= ruleexpression ) )
                    // InternalAnsic.g:8695:5: (lv_expression_9_0= ruleexpression )
                    {
                    // InternalAnsic.g:8695:5: (lv_expression_9_0= ruleexpression )
                    // InternalAnsic.g:8696:6: lv_expression_9_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSelection_statementAccess().getExpressionExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_expression_9_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSelection_statementRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_9_0,
                      							"org.xtext.example.Ansic.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_10=(Token)match(input,35,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getSelection_statementAccess().getRightParenthesisKeyword_1_3());
                      			
                    }
                    // InternalAnsic.g:8717:4: ( (lv_statement_11_0= rulestatement ) )
                    // InternalAnsic.g:8718:5: (lv_statement_11_0= rulestatement )
                    {
                    // InternalAnsic.g:8718:5: (lv_statement_11_0= rulestatement )
                    // InternalAnsic.g:8719:6: lv_statement_11_0= rulestatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSelection_statementAccess().getStatementStatementParserRuleCall_1_4_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_statement_11_0=rulestatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSelection_statementRule());
                      						}
                      						set(
                      							current,
                      							"statement",
                      							lv_statement_11_0,
                      							"org.xtext.example.Ansic.statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:8738:3: (otherlv_12= 'switch' otherlv_13= '(' ( (lv_expression_14_0= ruleexpression ) ) otherlv_15= ')' ( (lv_statement_16_0= rulestatement ) ) )
                    {
                    // InternalAnsic.g:8738:3: (otherlv_12= 'switch' otherlv_13= '(' ( (lv_expression_14_0= ruleexpression ) ) otherlv_15= ')' ( (lv_statement_16_0= rulestatement ) ) )
                    // InternalAnsic.g:8739:4: otherlv_12= 'switch' otherlv_13= '(' ( (lv_expression_14_0= ruleexpression ) ) otherlv_15= ')' ( (lv_statement_16_0= rulestatement ) )
                    {
                    otherlv_12=(Token)match(input,97,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getSelection_statementAccess().getSwitchKeyword_2_0());
                      			
                    }
                    otherlv_13=(Token)match(input,34,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getSelection_statementAccess().getLeftParenthesisKeyword_2_1());
                      			
                    }
                    // InternalAnsic.g:8747:4: ( (lv_expression_14_0= ruleexpression ) )
                    // InternalAnsic.g:8748:5: (lv_expression_14_0= ruleexpression )
                    {
                    // InternalAnsic.g:8748:5: (lv_expression_14_0= ruleexpression )
                    // InternalAnsic.g:8749:6: lv_expression_14_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSelection_statementAccess().getExpressionExpressionParserRuleCall_2_2_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_expression_14_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSelection_statementRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_14_0,
                      							"org.xtext.example.Ansic.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_15=(Token)match(input,35,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_15, grammarAccess.getSelection_statementAccess().getRightParenthesisKeyword_2_3());
                      			
                    }
                    // InternalAnsic.g:8770:4: ( (lv_statement_16_0= rulestatement ) )
                    // InternalAnsic.g:8771:5: (lv_statement_16_0= rulestatement )
                    {
                    // InternalAnsic.g:8771:5: (lv_statement_16_0= rulestatement )
                    // InternalAnsic.g:8772:6: lv_statement_16_0= rulestatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSelection_statementAccess().getStatementStatementParserRuleCall_2_4_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_statement_16_0=rulestatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSelection_statementRule());
                      						}
                      						set(
                      							current,
                      							"statement",
                      							lv_statement_16_0,
                      							"org.xtext.example.Ansic.statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleselection_statement"


    // $ANTLR start "entryRulelabeled_statement"
    // InternalAnsic.g:8794:1: entryRulelabeled_statement returns [EObject current=null] : iv_rulelabeled_statement= rulelabeled_statement EOF ;
    public final EObject entryRulelabeled_statement() throws RecognitionException {
        EObject current = null;

        EObject iv_rulelabeled_statement = null;


        try {
            // InternalAnsic.g:8794:58: (iv_rulelabeled_statement= rulelabeled_statement EOF )
            // InternalAnsic.g:8795:2: iv_rulelabeled_statement= rulelabeled_statement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLabeled_statementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulelabeled_statement=rulelabeled_statement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulelabeled_statement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulelabeled_statement"


    // $ANTLR start "rulelabeled_statement"
    // InternalAnsic.g:8801:1: rulelabeled_statement returns [EObject current=null] : ( ( ( (lv_identifier_0_0= RULE_IDZ ) ) otherlv_1= ':' ( (lv_statement_2_0= rulestatement ) ) ) | (otherlv_3= 'case' ( (lv_conditional_expression_4_0= ruleconditional_expression ) ) otherlv_5= ':' ( (lv_statement_6_0= rulestatement ) ) ) | (otherlv_7= 'default' otherlv_8= ':' ( (lv_statement_9_0= rulestatement ) ) ) ) ;
    public final EObject rulelabeled_statement() throws RecognitionException {
        EObject current = null;

        Token lv_identifier_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_statement_2_0 = null;

        EObject lv_conditional_expression_4_0 = null;

        EObject lv_statement_6_0 = null;

        EObject lv_statement_9_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:8807:2: ( ( ( ( (lv_identifier_0_0= RULE_IDZ ) ) otherlv_1= ':' ( (lv_statement_2_0= rulestatement ) ) ) | (otherlv_3= 'case' ( (lv_conditional_expression_4_0= ruleconditional_expression ) ) otherlv_5= ':' ( (lv_statement_6_0= rulestatement ) ) ) | (otherlv_7= 'default' otherlv_8= ':' ( (lv_statement_9_0= rulestatement ) ) ) ) )
            // InternalAnsic.g:8808:2: ( ( ( (lv_identifier_0_0= RULE_IDZ ) ) otherlv_1= ':' ( (lv_statement_2_0= rulestatement ) ) ) | (otherlv_3= 'case' ( (lv_conditional_expression_4_0= ruleconditional_expression ) ) otherlv_5= ':' ( (lv_statement_6_0= rulestatement ) ) ) | (otherlv_7= 'default' otherlv_8= ':' ( (lv_statement_9_0= rulestatement ) ) ) )
            {
            // InternalAnsic.g:8808:2: ( ( ( (lv_identifier_0_0= RULE_IDZ ) ) otherlv_1= ':' ( (lv_statement_2_0= rulestatement ) ) ) | (otherlv_3= 'case' ( (lv_conditional_expression_4_0= ruleconditional_expression ) ) otherlv_5= ':' ( (lv_statement_6_0= rulestatement ) ) ) | (otherlv_7= 'default' otherlv_8= ':' ( (lv_statement_9_0= rulestatement ) ) ) )
            int alt66=3;
            switch ( input.LA(1) ) {
            case RULE_IDZ:
                {
                alt66=1;
                }
                break;
            case 98:
                {
                alt66=2;
                }
                break;
            case 72:
                {
                alt66=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 66, 0, input);

                throw nvae;
            }

            switch (alt66) {
                case 1 :
                    // InternalAnsic.g:8809:3: ( ( (lv_identifier_0_0= RULE_IDZ ) ) otherlv_1= ':' ( (lv_statement_2_0= rulestatement ) ) )
                    {
                    // InternalAnsic.g:8809:3: ( ( (lv_identifier_0_0= RULE_IDZ ) ) otherlv_1= ':' ( (lv_statement_2_0= rulestatement ) ) )
                    // InternalAnsic.g:8810:4: ( (lv_identifier_0_0= RULE_IDZ ) ) otherlv_1= ':' ( (lv_statement_2_0= rulestatement ) )
                    {
                    // InternalAnsic.g:8810:4: ( (lv_identifier_0_0= RULE_IDZ ) )
                    // InternalAnsic.g:8811:5: (lv_identifier_0_0= RULE_IDZ )
                    {
                    // InternalAnsic.g:8811:5: (lv_identifier_0_0= RULE_IDZ )
                    // InternalAnsic.g:8812:6: lv_identifier_0_0= RULE_IDZ
                    {
                    lv_identifier_0_0=(Token)match(input,RULE_IDZ,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_identifier_0_0, grammarAccess.getLabeled_statementAccess().getIdentifierIDzTerminalRuleCall_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getLabeled_statementRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"identifier",
                      							lv_identifier_0_0,
                      							"org.xtext.example.Ansic.IDz");
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,61,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getLabeled_statementAccess().getColonKeyword_0_1());
                      			
                    }
                    // InternalAnsic.g:8832:4: ( (lv_statement_2_0= rulestatement ) )
                    // InternalAnsic.g:8833:5: (lv_statement_2_0= rulestatement )
                    {
                    // InternalAnsic.g:8833:5: (lv_statement_2_0= rulestatement )
                    // InternalAnsic.g:8834:6: lv_statement_2_0= rulestatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLabeled_statementAccess().getStatementStatementParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_statement_2_0=rulestatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLabeled_statementRule());
                      						}
                      						set(
                      							current,
                      							"statement",
                      							lv_statement_2_0,
                      							"org.xtext.example.Ansic.statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:8853:3: (otherlv_3= 'case' ( (lv_conditional_expression_4_0= ruleconditional_expression ) ) otherlv_5= ':' ( (lv_statement_6_0= rulestatement ) ) )
                    {
                    // InternalAnsic.g:8853:3: (otherlv_3= 'case' ( (lv_conditional_expression_4_0= ruleconditional_expression ) ) otherlv_5= ':' ( (lv_statement_6_0= rulestatement ) ) )
                    // InternalAnsic.g:8854:4: otherlv_3= 'case' ( (lv_conditional_expression_4_0= ruleconditional_expression ) ) otherlv_5= ':' ( (lv_statement_6_0= rulestatement ) )
                    {
                    otherlv_3=(Token)match(input,98,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getLabeled_statementAccess().getCaseKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:8858:4: ( (lv_conditional_expression_4_0= ruleconditional_expression ) )
                    // InternalAnsic.g:8859:5: (lv_conditional_expression_4_0= ruleconditional_expression )
                    {
                    // InternalAnsic.g:8859:5: (lv_conditional_expression_4_0= ruleconditional_expression )
                    // InternalAnsic.g:8860:6: lv_conditional_expression_4_0= ruleconditional_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLabeled_statementAccess().getConditional_expressionConditional_expressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_16);
                    lv_conditional_expression_4_0=ruleconditional_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLabeled_statementRule());
                      						}
                      						set(
                      							current,
                      							"conditional_expression",
                      							lv_conditional_expression_4_0,
                      							"org.xtext.example.Ansic.conditional_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,61,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getLabeled_statementAccess().getColonKeyword_1_2());
                      			
                    }
                    // InternalAnsic.g:8881:4: ( (lv_statement_6_0= rulestatement ) )
                    // InternalAnsic.g:8882:5: (lv_statement_6_0= rulestatement )
                    {
                    // InternalAnsic.g:8882:5: (lv_statement_6_0= rulestatement )
                    // InternalAnsic.g:8883:6: lv_statement_6_0= rulestatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLabeled_statementAccess().getStatementStatementParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_statement_6_0=rulestatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLabeled_statementRule());
                      						}
                      						set(
                      							current,
                      							"statement",
                      							lv_statement_6_0,
                      							"org.xtext.example.Ansic.statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:8902:3: (otherlv_7= 'default' otherlv_8= ':' ( (lv_statement_9_0= rulestatement ) ) )
                    {
                    // InternalAnsic.g:8902:3: (otherlv_7= 'default' otherlv_8= ':' ( (lv_statement_9_0= rulestatement ) ) )
                    // InternalAnsic.g:8903:4: otherlv_7= 'default' otherlv_8= ':' ( (lv_statement_9_0= rulestatement ) )
                    {
                    otherlv_7=(Token)match(input,72,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getLabeled_statementAccess().getDefaultKeyword_2_0());
                      			
                    }
                    otherlv_8=(Token)match(input,61,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getLabeled_statementAccess().getColonKeyword_2_1());
                      			
                    }
                    // InternalAnsic.g:8911:4: ( (lv_statement_9_0= rulestatement ) )
                    // InternalAnsic.g:8912:5: (lv_statement_9_0= rulestatement )
                    {
                    // InternalAnsic.g:8912:5: (lv_statement_9_0= rulestatement )
                    // InternalAnsic.g:8913:6: lv_statement_9_0= rulestatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLabeled_statementAccess().getStatementStatementParserRuleCall_2_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_statement_9_0=rulestatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLabeled_statementRule());
                      						}
                      						set(
                      							current,
                      							"statement",
                      							lv_statement_9_0,
                      							"org.xtext.example.Ansic.statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulelabeled_statement"


    // $ANTLR start "entryRulecompound_statement"
    // InternalAnsic.g:8935:1: entryRulecompound_statement returns [EObject current=null] : iv_rulecompound_statement= rulecompound_statement EOF ;
    public final EObject entryRulecompound_statement() throws RecognitionException {
        EObject current = null;

        EObject iv_rulecompound_statement = null;


        try {
            // InternalAnsic.g:8935:59: (iv_rulecompound_statement= rulecompound_statement EOF )
            // InternalAnsic.g:8936:2: iv_rulecompound_statement= rulecompound_statement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCompound_statementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulecompound_statement=rulecompound_statement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulecompound_statement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulecompound_statement"


    // $ANTLR start "rulecompound_statement"
    // InternalAnsic.g:8942:1: rulecompound_statement returns [EObject current=null] : ( (otherlv_0= '{' otherlv_1= '}' ) | (otherlv_2= '{' ( (lv_block_item_list_3_0= ruleblock_item_list ) ) otherlv_4= '}' ) ) ;
    public final EObject rulecompound_statement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_block_item_list_3_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:8948:2: ( ( (otherlv_0= '{' otherlv_1= '}' ) | (otherlv_2= '{' ( (lv_block_item_list_3_0= ruleblock_item_list ) ) otherlv_4= '}' ) ) )
            // InternalAnsic.g:8949:2: ( (otherlv_0= '{' otherlv_1= '}' ) | (otherlv_2= '{' ( (lv_block_item_list_3_0= ruleblock_item_list ) ) otherlv_4= '}' ) )
            {
            // InternalAnsic.g:8949:2: ( (otherlv_0= '{' otherlv_1= '}' ) | (otherlv_2= '{' ( (lv_block_item_list_3_0= ruleblock_item_list ) ) otherlv_4= '}' ) )
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==54) ) {
                int LA67_1 = input.LA(2);

                if ( (LA67_1==RULE_IDZ||(LA67_1>=RULE_INT && LA67_1<=RULE_CHAR)||(LA67_1>=31 && LA67_1<=34)||(LA67_1>=36 && LA67_1<=54)||(LA67_1>=58 && LA67_1<=60)||(LA67_1>=62 && LA67_1<=67)||(LA67_1>=71 && LA67_1<=72)||LA67_1==74||(LA67_1>=76 && LA67_1<=79)||(LA67_1>=82 && LA67_1<=83)||(LA67_1>=88 && LA67_1<=95)||(LA67_1>=97 && LA67_1<=99)||(LA67_1>=115 && LA67_1<=116)) ) {
                    alt67=2;
                }
                else if ( (LA67_1==55) ) {
                    alt67=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 67, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 67, 0, input);

                throw nvae;
            }
            switch (alt67) {
                case 1 :
                    // InternalAnsic.g:8950:3: (otherlv_0= '{' otherlv_1= '}' )
                    {
                    // InternalAnsic.g:8950:3: (otherlv_0= '{' otherlv_1= '}' )
                    // InternalAnsic.g:8951:4: otherlv_0= '{' otherlv_1= '}'
                    {
                    otherlv_0=(Token)match(input,54,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getCompound_statementAccess().getLeftCurlyBracketKeyword_0_0());
                      			
                    }
                    otherlv_1=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getCompound_statementAccess().getRightCurlyBracketKeyword_0_1());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:8961:3: (otherlv_2= '{' ( (lv_block_item_list_3_0= ruleblock_item_list ) ) otherlv_4= '}' )
                    {
                    // InternalAnsic.g:8961:3: (otherlv_2= '{' ( (lv_block_item_list_3_0= ruleblock_item_list ) ) otherlv_4= '}' )
                    // InternalAnsic.g:8962:4: otherlv_2= '{' ( (lv_block_item_list_3_0= ruleblock_item_list ) ) otherlv_4= '}'
                    {
                    otherlv_2=(Token)match(input,54,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getCompound_statementAccess().getLeftCurlyBracketKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:8966:4: ( (lv_block_item_list_3_0= ruleblock_item_list ) )
                    // InternalAnsic.g:8967:5: (lv_block_item_list_3_0= ruleblock_item_list )
                    {
                    // InternalAnsic.g:8967:5: (lv_block_item_list_3_0= ruleblock_item_list )
                    // InternalAnsic.g:8968:6: lv_block_item_list_3_0= ruleblock_item_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCompound_statementAccess().getBlock_item_listBlock_item_listParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_block_item_list_3_0=ruleblock_item_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCompound_statementRule());
                      						}
                      						add(
                      							current,
                      							"block_item_list",
                      							lv_block_item_list_3_0,
                      							"org.xtext.example.Ansic.block_item_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getCompound_statementAccess().getRightCurlyBracketKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulecompound_statement"


    // $ANTLR start "entryRuleblock_item_list"
    // InternalAnsic.g:8994:1: entryRuleblock_item_list returns [EObject current=null] : iv_ruleblock_item_list= ruleblock_item_list EOF ;
    public final EObject entryRuleblock_item_list() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleblock_item_list = null;


        try {
            // InternalAnsic.g:8994:56: (iv_ruleblock_item_list= ruleblock_item_list EOF )
            // InternalAnsic.g:8995:2: iv_ruleblock_item_list= ruleblock_item_list EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBlock_item_listRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleblock_item_list=ruleblock_item_list();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleblock_item_list; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleblock_item_list"


    // $ANTLR start "ruleblock_item_list"
    // InternalAnsic.g:9001:1: ruleblock_item_list returns [EObject current=null] : ( ( (lv_block_item_0_0= ruleblock_item ) ) ( (lv_block_item_list_linha_1_0= ruleblock_item_list_linha ) )? ) ;
    public final EObject ruleblock_item_list() throws RecognitionException {
        EObject current = null;

        EObject lv_block_item_0_0 = null;

        EObject lv_block_item_list_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:9007:2: ( ( ( (lv_block_item_0_0= ruleblock_item ) ) ( (lv_block_item_list_linha_1_0= ruleblock_item_list_linha ) )? ) )
            // InternalAnsic.g:9008:2: ( ( (lv_block_item_0_0= ruleblock_item ) ) ( (lv_block_item_list_linha_1_0= ruleblock_item_list_linha ) )? )
            {
            // InternalAnsic.g:9008:2: ( ( (lv_block_item_0_0= ruleblock_item ) ) ( (lv_block_item_list_linha_1_0= ruleblock_item_list_linha ) )? )
            // InternalAnsic.g:9009:3: ( (lv_block_item_0_0= ruleblock_item ) ) ( (lv_block_item_list_linha_1_0= ruleblock_item_list_linha ) )?
            {
            // InternalAnsic.g:9009:3: ( (lv_block_item_0_0= ruleblock_item ) )
            // InternalAnsic.g:9010:4: (lv_block_item_0_0= ruleblock_item )
            {
            // InternalAnsic.g:9010:4: (lv_block_item_0_0= ruleblock_item )
            // InternalAnsic.g:9011:5: lv_block_item_0_0= ruleblock_item
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBlock_item_listAccess().getBlock_itemBlock_itemParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_40);
            lv_block_item_0_0=ruleblock_item();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBlock_item_listRule());
              					}
              					set(
              						current,
              						"block_item",
              						lv_block_item_0_0,
              						"org.xtext.example.Ansic.block_item");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:9028:3: ( (lv_block_item_list_linha_1_0= ruleblock_item_list_linha ) )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==RULE_IDZ||(LA68_0>=RULE_INT && LA68_0<=RULE_CHAR)||(LA68_0>=31 && LA68_0<=34)||(LA68_0>=36 && LA68_0<=54)||(LA68_0>=58 && LA68_0<=60)||(LA68_0>=62 && LA68_0<=67)||(LA68_0>=71 && LA68_0<=72)||LA68_0==74||(LA68_0>=76 && LA68_0<=79)||(LA68_0>=82 && LA68_0<=83)||(LA68_0>=88 && LA68_0<=95)||(LA68_0>=97 && LA68_0<=99)||(LA68_0>=115 && LA68_0<=116)) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // InternalAnsic.g:9029:4: (lv_block_item_list_linha_1_0= ruleblock_item_list_linha )
                    {
                    // InternalAnsic.g:9029:4: (lv_block_item_list_linha_1_0= ruleblock_item_list_linha )
                    // InternalAnsic.g:9030:5: lv_block_item_list_linha_1_0= ruleblock_item_list_linha
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getBlock_item_listAccess().getBlock_item_list_linhaBlock_item_list_linhaParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_block_item_list_linha_1_0=ruleblock_item_list_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getBlock_item_listRule());
                      					}
                      					add(
                      						current,
                      						"block_item_list_linha",
                      						lv_block_item_list_linha_1_0,
                      						"org.xtext.example.Ansic.block_item_list_linha");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleblock_item_list"


    // $ANTLR start "entryRuleblock_item_list_linha"
    // InternalAnsic.g:9051:1: entryRuleblock_item_list_linha returns [EObject current=null] : iv_ruleblock_item_list_linha= ruleblock_item_list_linha EOF ;
    public final EObject entryRuleblock_item_list_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleblock_item_list_linha = null;


        try {
            // InternalAnsic.g:9051:62: (iv_ruleblock_item_list_linha= ruleblock_item_list_linha EOF )
            // InternalAnsic.g:9052:2: iv_ruleblock_item_list_linha= ruleblock_item_list_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBlock_item_list_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleblock_item_list_linha=ruleblock_item_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleblock_item_list_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleblock_item_list_linha"


    // $ANTLR start "ruleblock_item_list_linha"
    // InternalAnsic.g:9058:1: ruleblock_item_list_linha returns [EObject current=null] : ( ( (lv_block_item_0_0= ruleblock_item ) ) ( (lv_block_item_list_linha_1_0= ruleblock_item_list_linha ) )? ) ;
    public final EObject ruleblock_item_list_linha() throws RecognitionException {
        EObject current = null;

        EObject lv_block_item_0_0 = null;

        EObject lv_block_item_list_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:9064:2: ( ( ( (lv_block_item_0_0= ruleblock_item ) ) ( (lv_block_item_list_linha_1_0= ruleblock_item_list_linha ) )? ) )
            // InternalAnsic.g:9065:2: ( ( (lv_block_item_0_0= ruleblock_item ) ) ( (lv_block_item_list_linha_1_0= ruleblock_item_list_linha ) )? )
            {
            // InternalAnsic.g:9065:2: ( ( (lv_block_item_0_0= ruleblock_item ) ) ( (lv_block_item_list_linha_1_0= ruleblock_item_list_linha ) )? )
            // InternalAnsic.g:9066:3: ( (lv_block_item_0_0= ruleblock_item ) ) ( (lv_block_item_list_linha_1_0= ruleblock_item_list_linha ) )?
            {
            // InternalAnsic.g:9066:3: ( (lv_block_item_0_0= ruleblock_item ) )
            // InternalAnsic.g:9067:4: (lv_block_item_0_0= ruleblock_item )
            {
            // InternalAnsic.g:9067:4: (lv_block_item_0_0= ruleblock_item )
            // InternalAnsic.g:9068:5: lv_block_item_0_0= ruleblock_item
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBlock_item_list_linhaAccess().getBlock_itemBlock_itemParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_40);
            lv_block_item_0_0=ruleblock_item();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBlock_item_list_linhaRule());
              					}
              					set(
              						current,
              						"block_item",
              						lv_block_item_0_0,
              						"org.xtext.example.Ansic.block_item");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:9085:3: ( (lv_block_item_list_linha_1_0= ruleblock_item_list_linha ) )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==RULE_IDZ||(LA69_0>=RULE_INT && LA69_0<=RULE_CHAR)||(LA69_0>=31 && LA69_0<=34)||(LA69_0>=36 && LA69_0<=54)||(LA69_0>=58 && LA69_0<=60)||(LA69_0>=62 && LA69_0<=67)||(LA69_0>=71 && LA69_0<=72)||LA69_0==74||(LA69_0>=76 && LA69_0<=79)||(LA69_0>=82 && LA69_0<=83)||(LA69_0>=88 && LA69_0<=95)||(LA69_0>=97 && LA69_0<=99)||(LA69_0>=115 && LA69_0<=116)) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // InternalAnsic.g:9086:4: (lv_block_item_list_linha_1_0= ruleblock_item_list_linha )
                    {
                    // InternalAnsic.g:9086:4: (lv_block_item_list_linha_1_0= ruleblock_item_list_linha )
                    // InternalAnsic.g:9087:5: lv_block_item_list_linha_1_0= ruleblock_item_list_linha
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getBlock_item_list_linhaAccess().getBlock_item_list_linhaBlock_item_list_linhaParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_block_item_list_linha_1_0=ruleblock_item_list_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getBlock_item_list_linhaRule());
                      					}
                      					add(
                      						current,
                      						"block_item_list_linha",
                      						lv_block_item_list_linha_1_0,
                      						"org.xtext.example.Ansic.block_item_list_linha");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleblock_item_list_linha"


    // $ANTLR start "entryRuleblock_item"
    // InternalAnsic.g:9108:1: entryRuleblock_item returns [EObject current=null] : iv_ruleblock_item= ruleblock_item EOF ;
    public final EObject entryRuleblock_item() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleblock_item = null;


        try {
            // InternalAnsic.g:9108:51: (iv_ruleblock_item= ruleblock_item EOF )
            // InternalAnsic.g:9109:2: iv_ruleblock_item= ruleblock_item EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBlock_itemRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleblock_item=ruleblock_item();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleblock_item; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleblock_item"


    // $ANTLR start "ruleblock_item"
    // InternalAnsic.g:9115:1: ruleblock_item returns [EObject current=null] : ( ( (lv_declaration_0_0= ruledeclaration ) ) | ( (lv_statement_1_0= rulestatement ) ) ) ;
    public final EObject ruleblock_item() throws RecognitionException {
        EObject current = null;

        EObject lv_declaration_0_0 = null;

        EObject lv_statement_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:9121:2: ( ( ( (lv_declaration_0_0= ruledeclaration ) ) | ( (lv_statement_1_0= rulestatement ) ) ) )
            // InternalAnsic.g:9122:2: ( ( (lv_declaration_0_0= ruledeclaration ) ) | ( (lv_statement_1_0= rulestatement ) ) )
            {
            // InternalAnsic.g:9122:2: ( ( (lv_declaration_0_0= ruledeclaration ) ) | ( (lv_statement_1_0= rulestatement ) ) )
            int alt70=2;
            switch ( input.LA(1) ) {
            case 31:
            case 32:
            case 33:
            case 36:
            case 37:
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
            case 58:
            case 59:
            case 62:
            case 63:
            case 64:
            case 65:
            case 66:
            case 74:
                {
                alt70=1;
                }
                break;
            case 53:
                {
                int LA70_2 = input.LA(2);

                if ( (LA70_2==RULE_IDZ||LA70_2==54) ) {
                    alt70=1;
                }
                else if ( (LA70_2==34||(LA70_2>=56 && LA70_2<=57)||LA70_2==60||(LA70_2>=67 && LA70_2<=68)||LA70_2==73||(LA70_2>=75 && LA70_2<=77)||(LA70_2>=80 && LA70_2<=87)||(LA70_2>=99 && LA70_2<=114)) ) {
                    alt70=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 70, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_IDZ:
            case RULE_INT:
            case RULE_FLOAT:
            case RULE_CHAR:
            case 34:
            case 54:
            case 60:
            case 67:
            case 71:
            case 72:
            case 76:
            case 77:
            case 78:
            case 79:
            case 82:
            case 83:
            case 88:
            case 89:
            case 90:
            case 91:
            case 92:
            case 93:
            case 94:
            case 95:
            case 97:
            case 98:
            case 99:
            case 115:
            case 116:
                {
                alt70=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 70, 0, input);

                throw nvae;
            }

            switch (alt70) {
                case 1 :
                    // InternalAnsic.g:9123:3: ( (lv_declaration_0_0= ruledeclaration ) )
                    {
                    // InternalAnsic.g:9123:3: ( (lv_declaration_0_0= ruledeclaration ) )
                    // InternalAnsic.g:9124:4: (lv_declaration_0_0= ruledeclaration )
                    {
                    // InternalAnsic.g:9124:4: (lv_declaration_0_0= ruledeclaration )
                    // InternalAnsic.g:9125:5: lv_declaration_0_0= ruledeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getBlock_itemAccess().getDeclarationDeclarationParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaration_0_0=ruledeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getBlock_itemRule());
                      					}
                      					set(
                      						current,
                      						"declaration",
                      						lv_declaration_0_0,
                      						"org.xtext.example.Ansic.declaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:9143:3: ( (lv_statement_1_0= rulestatement ) )
                    {
                    // InternalAnsic.g:9143:3: ( (lv_statement_1_0= rulestatement ) )
                    // InternalAnsic.g:9144:4: (lv_statement_1_0= rulestatement )
                    {
                    // InternalAnsic.g:9144:4: (lv_statement_1_0= rulestatement )
                    // InternalAnsic.g:9145:5: lv_statement_1_0= rulestatement
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getBlock_itemAccess().getStatementStatementParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_statement_1_0=rulestatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getBlock_itemRule());
                      					}
                      					set(
                      						current,
                      						"statement",
                      						lv_statement_1_0,
                      						"org.xtext.example.Ansic.statement");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleblock_item"


    // $ANTLR start "entryRuleexpression_statement"
    // InternalAnsic.g:9166:1: entryRuleexpression_statement returns [EObject current=null] : iv_ruleexpression_statement= ruleexpression_statement EOF ;
    public final EObject entryRuleexpression_statement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleexpression_statement = null;


        try {
            // InternalAnsic.g:9166:61: (iv_ruleexpression_statement= ruleexpression_statement EOF )
            // InternalAnsic.g:9167:2: iv_ruleexpression_statement= ruleexpression_statement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpression_statementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleexpression_statement=ruleexpression_statement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexpression_statement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleexpression_statement"


    // $ANTLR start "ruleexpression_statement"
    // InternalAnsic.g:9173:1: ruleexpression_statement returns [EObject current=null] : (otherlv_0= ';' | ( ( (lv_expression_1_0= ruleexpression ) ) otherlv_2= ';' ) ) ;
    public final EObject ruleexpression_statement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_expression_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:9179:2: ( (otherlv_0= ';' | ( ( (lv_expression_1_0= ruleexpression ) ) otherlv_2= ';' ) ) )
            // InternalAnsic.g:9180:2: (otherlv_0= ';' | ( ( (lv_expression_1_0= ruleexpression ) ) otherlv_2= ';' ) )
            {
            // InternalAnsic.g:9180:2: (otherlv_0= ';' | ( ( (lv_expression_1_0= ruleexpression ) ) otherlv_2= ';' ) )
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==60) ) {
                alt71=1;
            }
            else if ( (LA71_0==RULE_IDZ||(LA71_0>=RULE_INT && LA71_0<=RULE_CHAR)||LA71_0==34||LA71_0==53||LA71_0==67||LA71_0==71||(LA71_0>=76 && LA71_0<=79)||(LA71_0>=82 && LA71_0<=83)||LA71_0==99||(LA71_0>=115 && LA71_0<=116)) ) {
                alt71=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 71, 0, input);

                throw nvae;
            }
            switch (alt71) {
                case 1 :
                    // InternalAnsic.g:9181:3: otherlv_0= ';'
                    {
                    otherlv_0=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_0, grammarAccess.getExpression_statementAccess().getSemicolonKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsic.g:9186:3: ( ( (lv_expression_1_0= ruleexpression ) ) otherlv_2= ';' )
                    {
                    // InternalAnsic.g:9186:3: ( ( (lv_expression_1_0= ruleexpression ) ) otherlv_2= ';' )
                    // InternalAnsic.g:9187:4: ( (lv_expression_1_0= ruleexpression ) ) otherlv_2= ';'
                    {
                    // InternalAnsic.g:9187:4: ( (lv_expression_1_0= ruleexpression ) )
                    // InternalAnsic.g:9188:5: (lv_expression_1_0= ruleexpression )
                    {
                    // InternalAnsic.g:9188:5: (lv_expression_1_0= ruleexpression )
                    // InternalAnsic.g:9189:6: lv_expression_1_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpression_statementAccess().getExpressionExpressionParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_14);
                    lv_expression_1_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpression_statementRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_1_0,
                      							"org.xtext.example.Ansic.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getExpression_statementAccess().getSemicolonKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleexpression_statement"


    // $ANTLR start "entryRuleand_expression"
    // InternalAnsic.g:9215:1: entryRuleand_expression returns [EObject current=null] : iv_ruleand_expression= ruleand_expression EOF ;
    public final EObject entryRuleand_expression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleand_expression = null;


        try {
            // InternalAnsic.g:9215:55: (iv_ruleand_expression= ruleand_expression EOF )
            // InternalAnsic.g:9216:2: iv_ruleand_expression= ruleand_expression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnd_expressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleand_expression=ruleand_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleand_expression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleand_expression"


    // $ANTLR start "ruleand_expression"
    // InternalAnsic.g:9222:1: ruleand_expression returns [EObject current=null] : ( ( (lv_equality_expression_0_0= ruleequality_expression ) ) ( (lv_and_expression_linha_1_0= ruleand_expression_linha ) ) ) ;
    public final EObject ruleand_expression() throws RecognitionException {
        EObject current = null;

        EObject lv_equality_expression_0_0 = null;

        EObject lv_and_expression_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:9228:2: ( ( ( (lv_equality_expression_0_0= ruleequality_expression ) ) ( (lv_and_expression_linha_1_0= ruleand_expression_linha ) ) ) )
            // InternalAnsic.g:9229:2: ( ( (lv_equality_expression_0_0= ruleequality_expression ) ) ( (lv_and_expression_linha_1_0= ruleand_expression_linha ) ) )
            {
            // InternalAnsic.g:9229:2: ( ( (lv_equality_expression_0_0= ruleequality_expression ) ) ( (lv_and_expression_linha_1_0= ruleand_expression_linha ) ) )
            // InternalAnsic.g:9230:3: ( (lv_equality_expression_0_0= ruleequality_expression ) ) ( (lv_and_expression_linha_1_0= ruleand_expression_linha ) )
            {
            // InternalAnsic.g:9230:3: ( (lv_equality_expression_0_0= ruleequality_expression ) )
            // InternalAnsic.g:9231:4: (lv_equality_expression_0_0= ruleequality_expression )
            {
            // InternalAnsic.g:9231:4: (lv_equality_expression_0_0= ruleequality_expression )
            // InternalAnsic.g:9232:5: lv_equality_expression_0_0= ruleequality_expression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAnd_expressionAccess().getEquality_expressionEquality_expressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_41);
            lv_equality_expression_0_0=ruleequality_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAnd_expressionRule());
              					}
              					set(
              						current,
              						"equality_expression",
              						lv_equality_expression_0_0,
              						"org.xtext.example.Ansic.equality_expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:9249:3: ( (lv_and_expression_linha_1_0= ruleand_expression_linha ) )
            // InternalAnsic.g:9250:4: (lv_and_expression_linha_1_0= ruleand_expression_linha )
            {
            // InternalAnsic.g:9250:4: (lv_and_expression_linha_1_0= ruleand_expression_linha )
            // InternalAnsic.g:9251:5: lv_and_expression_linha_1_0= ruleand_expression_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAnd_expressionAccess().getAnd_expression_linhaAnd_expression_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_and_expression_linha_1_0=ruleand_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAnd_expressionRule());
              					}
              					set(
              						current,
              						"and_expression_linha",
              						lv_and_expression_linha_1_0,
              						"org.xtext.example.Ansic.and_expression_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleand_expression"


    // $ANTLR start "entryRuleand_expression_linha"
    // InternalAnsic.g:9272:1: entryRuleand_expression_linha returns [EObject current=null] : iv_ruleand_expression_linha= ruleand_expression_linha EOF ;
    public final EObject entryRuleand_expression_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleand_expression_linha = null;


        try {
            // InternalAnsic.g:9272:61: (iv_ruleand_expression_linha= ruleand_expression_linha EOF )
            // InternalAnsic.g:9273:2: iv_ruleand_expression_linha= ruleand_expression_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnd_expression_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleand_expression_linha=ruleand_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleand_expression_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleand_expression_linha"


    // $ANTLR start "ruleand_expression_linha"
    // InternalAnsic.g:9279:1: ruleand_expression_linha returns [EObject current=null] : (otherlv_0= '&' ( (lv_equality_expression_1_0= ruleequality_expression ) ) ( (lv_and_expression_linha_2_0= ruleand_expression_linha ) ) )? ;
    public final EObject ruleand_expression_linha() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_equality_expression_1_0 = null;

        EObject lv_and_expression_linha_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:9285:2: ( (otherlv_0= '&' ( (lv_equality_expression_1_0= ruleequality_expression ) ) ( (lv_and_expression_linha_2_0= ruleand_expression_linha ) ) )? )
            // InternalAnsic.g:9286:2: (otherlv_0= '&' ( (lv_equality_expression_1_0= ruleequality_expression ) ) ( (lv_and_expression_linha_2_0= ruleand_expression_linha ) ) )?
            {
            // InternalAnsic.g:9286:2: (otherlv_0= '&' ( (lv_equality_expression_1_0= ruleequality_expression ) ) ( (lv_and_expression_linha_2_0= ruleand_expression_linha ) ) )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==99) ) {
                int LA72_1 = input.LA(2);

                if ( (synpred167_InternalAnsic()) ) {
                    alt72=1;
                }
            }
            switch (alt72) {
                case 1 :
                    // InternalAnsic.g:9287:3: otherlv_0= '&' ( (lv_equality_expression_1_0= ruleequality_expression ) ) ( (lv_and_expression_linha_2_0= ruleand_expression_linha ) )
                    {
                    otherlv_0=(Token)match(input,99,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_0, grammarAccess.getAnd_expression_linhaAccess().getAmpersandKeyword_0());
                      		
                    }
                    // InternalAnsic.g:9291:3: ( (lv_equality_expression_1_0= ruleequality_expression ) )
                    // InternalAnsic.g:9292:4: (lv_equality_expression_1_0= ruleequality_expression )
                    {
                    // InternalAnsic.g:9292:4: (lv_equality_expression_1_0= ruleequality_expression )
                    // InternalAnsic.g:9293:5: lv_equality_expression_1_0= ruleequality_expression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAnd_expression_linhaAccess().getEquality_expressionEquality_expressionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_41);
                    lv_equality_expression_1_0=ruleequality_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getAnd_expression_linhaRule());
                      					}
                      					set(
                      						current,
                      						"equality_expression",
                      						lv_equality_expression_1_0,
                      						"org.xtext.example.Ansic.equality_expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }

                    // InternalAnsic.g:9310:3: ( (lv_and_expression_linha_2_0= ruleand_expression_linha ) )
                    // InternalAnsic.g:9311:4: (lv_and_expression_linha_2_0= ruleand_expression_linha )
                    {
                    // InternalAnsic.g:9311:4: (lv_and_expression_linha_2_0= ruleand_expression_linha )
                    // InternalAnsic.g:9312:5: lv_and_expression_linha_2_0= ruleand_expression_linha
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAnd_expression_linhaAccess().getAnd_expression_linhaAnd_expression_linhaParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_and_expression_linha_2_0=ruleand_expression_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getAnd_expression_linhaRule());
                      					}
                      					set(
                      						current,
                      						"and_expression_linha",
                      						lv_and_expression_linha_2_0,
                      						"org.xtext.example.Ansic.and_expression_linha");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleand_expression_linha"


    // $ANTLR start "entryRuleexclusive_or_expression"
    // InternalAnsic.g:9333:1: entryRuleexclusive_or_expression returns [EObject current=null] : iv_ruleexclusive_or_expression= ruleexclusive_or_expression EOF ;
    public final EObject entryRuleexclusive_or_expression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleexclusive_or_expression = null;


        try {
            // InternalAnsic.g:9333:64: (iv_ruleexclusive_or_expression= ruleexclusive_or_expression EOF )
            // InternalAnsic.g:9334:2: iv_ruleexclusive_or_expression= ruleexclusive_or_expression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExclusive_or_expressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleexclusive_or_expression=ruleexclusive_or_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexclusive_or_expression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleexclusive_or_expression"


    // $ANTLR start "ruleexclusive_or_expression"
    // InternalAnsic.g:9340:1: ruleexclusive_or_expression returns [EObject current=null] : ( ( (lv_and_expression_0_0= ruleand_expression ) ) ( (lv_exclusive_or_expression_linha_1_0= ruleexclusive_or_expression_linha ) ) ) ;
    public final EObject ruleexclusive_or_expression() throws RecognitionException {
        EObject current = null;

        EObject lv_and_expression_0_0 = null;

        EObject lv_exclusive_or_expression_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:9346:2: ( ( ( (lv_and_expression_0_0= ruleand_expression ) ) ( (lv_exclusive_or_expression_linha_1_0= ruleexclusive_or_expression_linha ) ) ) )
            // InternalAnsic.g:9347:2: ( ( (lv_and_expression_0_0= ruleand_expression ) ) ( (lv_exclusive_or_expression_linha_1_0= ruleexclusive_or_expression_linha ) ) )
            {
            // InternalAnsic.g:9347:2: ( ( (lv_and_expression_0_0= ruleand_expression ) ) ( (lv_exclusive_or_expression_linha_1_0= ruleexclusive_or_expression_linha ) ) )
            // InternalAnsic.g:9348:3: ( (lv_and_expression_0_0= ruleand_expression ) ) ( (lv_exclusive_or_expression_linha_1_0= ruleexclusive_or_expression_linha ) )
            {
            // InternalAnsic.g:9348:3: ( (lv_and_expression_0_0= ruleand_expression ) )
            // InternalAnsic.g:9349:4: (lv_and_expression_0_0= ruleand_expression )
            {
            // InternalAnsic.g:9349:4: (lv_and_expression_0_0= ruleand_expression )
            // InternalAnsic.g:9350:5: lv_and_expression_0_0= ruleand_expression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExclusive_or_expressionAccess().getAnd_expressionAnd_expressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_42);
            lv_and_expression_0_0=ruleand_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExclusive_or_expressionRule());
              					}
              					set(
              						current,
              						"and_expression",
              						lv_and_expression_0_0,
              						"org.xtext.example.Ansic.and_expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:9367:3: ( (lv_exclusive_or_expression_linha_1_0= ruleexclusive_or_expression_linha ) )
            // InternalAnsic.g:9368:4: (lv_exclusive_or_expression_linha_1_0= ruleexclusive_or_expression_linha )
            {
            // InternalAnsic.g:9368:4: (lv_exclusive_or_expression_linha_1_0= ruleexclusive_or_expression_linha )
            // InternalAnsic.g:9369:5: lv_exclusive_or_expression_linha_1_0= ruleexclusive_or_expression_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExclusive_or_expressionAccess().getExclusive_or_expression_linhaExclusive_or_expression_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_exclusive_or_expression_linha_1_0=ruleexclusive_or_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExclusive_or_expressionRule());
              					}
              					set(
              						current,
              						"exclusive_or_expression_linha",
              						lv_exclusive_or_expression_linha_1_0,
              						"org.xtext.example.Ansic.exclusive_or_expression_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleexclusive_or_expression"


    // $ANTLR start "entryRuleexclusive_or_expression_linha"
    // InternalAnsic.g:9390:1: entryRuleexclusive_or_expression_linha returns [EObject current=null] : iv_ruleexclusive_or_expression_linha= ruleexclusive_or_expression_linha EOF ;
    public final EObject entryRuleexclusive_or_expression_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleexclusive_or_expression_linha = null;


        try {
            // InternalAnsic.g:9390:70: (iv_ruleexclusive_or_expression_linha= ruleexclusive_or_expression_linha EOF )
            // InternalAnsic.g:9391:2: iv_ruleexclusive_or_expression_linha= ruleexclusive_or_expression_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExclusive_or_expression_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleexclusive_or_expression_linha=ruleexclusive_or_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexclusive_or_expression_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleexclusive_or_expression_linha"


    // $ANTLR start "ruleexclusive_or_expression_linha"
    // InternalAnsic.g:9397:1: ruleexclusive_or_expression_linha returns [EObject current=null] : (otherlv_0= '^' ( (lv_and_expression_1_0= ruleand_expression ) ) ( (lv_exclusive_or_expression_linha_2_0= ruleexclusive_or_expression_linha ) ) )? ;
    public final EObject ruleexclusive_or_expression_linha() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_and_expression_1_0 = null;

        EObject lv_exclusive_or_expression_linha_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:9403:2: ( (otherlv_0= '^' ( (lv_and_expression_1_0= ruleand_expression ) ) ( (lv_exclusive_or_expression_linha_2_0= ruleexclusive_or_expression_linha ) ) )? )
            // InternalAnsic.g:9404:2: (otherlv_0= '^' ( (lv_and_expression_1_0= ruleand_expression ) ) ( (lv_exclusive_or_expression_linha_2_0= ruleexclusive_or_expression_linha ) ) )?
            {
            // InternalAnsic.g:9404:2: (otherlv_0= '^' ( (lv_and_expression_1_0= ruleand_expression ) ) ( (lv_exclusive_or_expression_linha_2_0= ruleexclusive_or_expression_linha ) ) )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==100) ) {
                int LA73_1 = input.LA(2);

                if ( (synpred168_InternalAnsic()) ) {
                    alt73=1;
                }
            }
            switch (alt73) {
                case 1 :
                    // InternalAnsic.g:9405:3: otherlv_0= '^' ( (lv_and_expression_1_0= ruleand_expression ) ) ( (lv_exclusive_or_expression_linha_2_0= ruleexclusive_or_expression_linha ) )
                    {
                    otherlv_0=(Token)match(input,100,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_0, grammarAccess.getExclusive_or_expression_linhaAccess().getCircumflexAccentKeyword_0());
                      		
                    }
                    // InternalAnsic.g:9409:3: ( (lv_and_expression_1_0= ruleand_expression ) )
                    // InternalAnsic.g:9410:4: (lv_and_expression_1_0= ruleand_expression )
                    {
                    // InternalAnsic.g:9410:4: (lv_and_expression_1_0= ruleand_expression )
                    // InternalAnsic.g:9411:5: lv_and_expression_1_0= ruleand_expression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getExclusive_or_expression_linhaAccess().getAnd_expressionAnd_expressionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_42);
                    lv_and_expression_1_0=ruleand_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getExclusive_or_expression_linhaRule());
                      					}
                      					set(
                      						current,
                      						"and_expression",
                      						lv_and_expression_1_0,
                      						"org.xtext.example.Ansic.and_expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }

                    // InternalAnsic.g:9428:3: ( (lv_exclusive_or_expression_linha_2_0= ruleexclusive_or_expression_linha ) )
                    // InternalAnsic.g:9429:4: (lv_exclusive_or_expression_linha_2_0= ruleexclusive_or_expression_linha )
                    {
                    // InternalAnsic.g:9429:4: (lv_exclusive_or_expression_linha_2_0= ruleexclusive_or_expression_linha )
                    // InternalAnsic.g:9430:5: lv_exclusive_or_expression_linha_2_0= ruleexclusive_or_expression_linha
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getExclusive_or_expression_linhaAccess().getExclusive_or_expression_linhaExclusive_or_expression_linhaParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_exclusive_or_expression_linha_2_0=ruleexclusive_or_expression_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getExclusive_or_expression_linhaRule());
                      					}
                      					set(
                      						current,
                      						"exclusive_or_expression_linha",
                      						lv_exclusive_or_expression_linha_2_0,
                      						"org.xtext.example.Ansic.exclusive_or_expression_linha");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleexclusive_or_expression_linha"


    // $ANTLR start "entryRuleinclusive_or_expression"
    // InternalAnsic.g:9451:1: entryRuleinclusive_or_expression returns [EObject current=null] : iv_ruleinclusive_or_expression= ruleinclusive_or_expression EOF ;
    public final EObject entryRuleinclusive_or_expression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleinclusive_or_expression = null;


        try {
            // InternalAnsic.g:9451:64: (iv_ruleinclusive_or_expression= ruleinclusive_or_expression EOF )
            // InternalAnsic.g:9452:2: iv_ruleinclusive_or_expression= ruleinclusive_or_expression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInclusive_or_expressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleinclusive_or_expression=ruleinclusive_or_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleinclusive_or_expression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleinclusive_or_expression"


    // $ANTLR start "ruleinclusive_or_expression"
    // InternalAnsic.g:9458:1: ruleinclusive_or_expression returns [EObject current=null] : ( ( (lv_exclusive_or_expression_0_0= ruleexclusive_or_expression ) ) ( (lv_inclusive_or_expression_linha_1_0= ruleinclusive_or_expression_linha ) ) ) ;
    public final EObject ruleinclusive_or_expression() throws RecognitionException {
        EObject current = null;

        EObject lv_exclusive_or_expression_0_0 = null;

        EObject lv_inclusive_or_expression_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:9464:2: ( ( ( (lv_exclusive_or_expression_0_0= ruleexclusive_or_expression ) ) ( (lv_inclusive_or_expression_linha_1_0= ruleinclusive_or_expression_linha ) ) ) )
            // InternalAnsic.g:9465:2: ( ( (lv_exclusive_or_expression_0_0= ruleexclusive_or_expression ) ) ( (lv_inclusive_or_expression_linha_1_0= ruleinclusive_or_expression_linha ) ) )
            {
            // InternalAnsic.g:9465:2: ( ( (lv_exclusive_or_expression_0_0= ruleexclusive_or_expression ) ) ( (lv_inclusive_or_expression_linha_1_0= ruleinclusive_or_expression_linha ) ) )
            // InternalAnsic.g:9466:3: ( (lv_exclusive_or_expression_0_0= ruleexclusive_or_expression ) ) ( (lv_inclusive_or_expression_linha_1_0= ruleinclusive_or_expression_linha ) )
            {
            // InternalAnsic.g:9466:3: ( (lv_exclusive_or_expression_0_0= ruleexclusive_or_expression ) )
            // InternalAnsic.g:9467:4: (lv_exclusive_or_expression_0_0= ruleexclusive_or_expression )
            {
            // InternalAnsic.g:9467:4: (lv_exclusive_or_expression_0_0= ruleexclusive_or_expression )
            // InternalAnsic.g:9468:5: lv_exclusive_or_expression_0_0= ruleexclusive_or_expression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getInclusive_or_expressionAccess().getExclusive_or_expressionExclusive_or_expressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_43);
            lv_exclusive_or_expression_0_0=ruleexclusive_or_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getInclusive_or_expressionRule());
              					}
              					set(
              						current,
              						"exclusive_or_expression",
              						lv_exclusive_or_expression_0_0,
              						"org.xtext.example.Ansic.exclusive_or_expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:9485:3: ( (lv_inclusive_or_expression_linha_1_0= ruleinclusive_or_expression_linha ) )
            // InternalAnsic.g:9486:4: (lv_inclusive_or_expression_linha_1_0= ruleinclusive_or_expression_linha )
            {
            // InternalAnsic.g:9486:4: (lv_inclusive_or_expression_linha_1_0= ruleinclusive_or_expression_linha )
            // InternalAnsic.g:9487:5: lv_inclusive_or_expression_linha_1_0= ruleinclusive_or_expression_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getInclusive_or_expressionAccess().getInclusive_or_expression_linhaInclusive_or_expression_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_inclusive_or_expression_linha_1_0=ruleinclusive_or_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getInclusive_or_expressionRule());
              					}
              					set(
              						current,
              						"inclusive_or_expression_linha",
              						lv_inclusive_or_expression_linha_1_0,
              						"org.xtext.example.Ansic.inclusive_or_expression_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleinclusive_or_expression"


    // $ANTLR start "entryRuleinclusive_or_expression_linha"
    // InternalAnsic.g:9508:1: entryRuleinclusive_or_expression_linha returns [EObject current=null] : iv_ruleinclusive_or_expression_linha= ruleinclusive_or_expression_linha EOF ;
    public final EObject entryRuleinclusive_or_expression_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleinclusive_or_expression_linha = null;


        try {
            // InternalAnsic.g:9508:70: (iv_ruleinclusive_or_expression_linha= ruleinclusive_or_expression_linha EOF )
            // InternalAnsic.g:9509:2: iv_ruleinclusive_or_expression_linha= ruleinclusive_or_expression_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInclusive_or_expression_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleinclusive_or_expression_linha=ruleinclusive_or_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleinclusive_or_expression_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleinclusive_or_expression_linha"


    // $ANTLR start "ruleinclusive_or_expression_linha"
    // InternalAnsic.g:9515:1: ruleinclusive_or_expression_linha returns [EObject current=null] : (otherlv_0= '|' ( (lv_exclusive_or_expression_1_0= ruleexclusive_or_expression ) ) ( (lv_inclusive_or_expression_linha_2_0= ruleinclusive_or_expression_linha ) ) )? ;
    public final EObject ruleinclusive_or_expression_linha() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_exclusive_or_expression_1_0 = null;

        EObject lv_inclusive_or_expression_linha_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:9521:2: ( (otherlv_0= '|' ( (lv_exclusive_or_expression_1_0= ruleexclusive_or_expression ) ) ( (lv_inclusive_or_expression_linha_2_0= ruleinclusive_or_expression_linha ) ) )? )
            // InternalAnsic.g:9522:2: (otherlv_0= '|' ( (lv_exclusive_or_expression_1_0= ruleexclusive_or_expression ) ) ( (lv_inclusive_or_expression_linha_2_0= ruleinclusive_or_expression_linha ) ) )?
            {
            // InternalAnsic.g:9522:2: (otherlv_0= '|' ( (lv_exclusive_or_expression_1_0= ruleexclusive_or_expression ) ) ( (lv_inclusive_or_expression_linha_2_0= ruleinclusive_or_expression_linha ) ) )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==101) ) {
                int LA74_1 = input.LA(2);

                if ( (synpred169_InternalAnsic()) ) {
                    alt74=1;
                }
            }
            switch (alt74) {
                case 1 :
                    // InternalAnsic.g:9523:3: otherlv_0= '|' ( (lv_exclusive_or_expression_1_0= ruleexclusive_or_expression ) ) ( (lv_inclusive_or_expression_linha_2_0= ruleinclusive_or_expression_linha ) )
                    {
                    otherlv_0=(Token)match(input,101,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_0, grammarAccess.getInclusive_or_expression_linhaAccess().getVerticalLineKeyword_0());
                      		
                    }
                    // InternalAnsic.g:9527:3: ( (lv_exclusive_or_expression_1_0= ruleexclusive_or_expression ) )
                    // InternalAnsic.g:9528:4: (lv_exclusive_or_expression_1_0= ruleexclusive_or_expression )
                    {
                    // InternalAnsic.g:9528:4: (lv_exclusive_or_expression_1_0= ruleexclusive_or_expression )
                    // InternalAnsic.g:9529:5: lv_exclusive_or_expression_1_0= ruleexclusive_or_expression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getInclusive_or_expression_linhaAccess().getExclusive_or_expressionExclusive_or_expressionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_43);
                    lv_exclusive_or_expression_1_0=ruleexclusive_or_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getInclusive_or_expression_linhaRule());
                      					}
                      					set(
                      						current,
                      						"exclusive_or_expression",
                      						lv_exclusive_or_expression_1_0,
                      						"org.xtext.example.Ansic.exclusive_or_expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }

                    // InternalAnsic.g:9546:3: ( (lv_inclusive_or_expression_linha_2_0= ruleinclusive_or_expression_linha ) )
                    // InternalAnsic.g:9547:4: (lv_inclusive_or_expression_linha_2_0= ruleinclusive_or_expression_linha )
                    {
                    // InternalAnsic.g:9547:4: (lv_inclusive_or_expression_linha_2_0= ruleinclusive_or_expression_linha )
                    // InternalAnsic.g:9548:5: lv_inclusive_or_expression_linha_2_0= ruleinclusive_or_expression_linha
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getInclusive_or_expression_linhaAccess().getInclusive_or_expression_linhaInclusive_or_expression_linhaParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_inclusive_or_expression_linha_2_0=ruleinclusive_or_expression_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getInclusive_or_expression_linhaRule());
                      					}
                      					set(
                      						current,
                      						"inclusive_or_expression_linha",
                      						lv_inclusive_or_expression_linha_2_0,
                      						"org.xtext.example.Ansic.inclusive_or_expression_linha");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleinclusive_or_expression_linha"


    // $ANTLR start "entryRulelogical_and_expression"
    // InternalAnsic.g:9569:1: entryRulelogical_and_expression returns [EObject current=null] : iv_rulelogical_and_expression= rulelogical_and_expression EOF ;
    public final EObject entryRulelogical_and_expression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulelogical_and_expression = null;


        try {
            // InternalAnsic.g:9569:63: (iv_rulelogical_and_expression= rulelogical_and_expression EOF )
            // InternalAnsic.g:9570:2: iv_rulelogical_and_expression= rulelogical_and_expression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogical_and_expressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulelogical_and_expression=rulelogical_and_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulelogical_and_expression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulelogical_and_expression"


    // $ANTLR start "rulelogical_and_expression"
    // InternalAnsic.g:9576:1: rulelogical_and_expression returns [EObject current=null] : ( ( (lv_inclusive_or_expression_0_0= ruleinclusive_or_expression ) ) ( (lv_logical_and_expression_linha_1_0= rulelogical_and_expression_linha ) ) ) ;
    public final EObject rulelogical_and_expression() throws RecognitionException {
        EObject current = null;

        EObject lv_inclusive_or_expression_0_0 = null;

        EObject lv_logical_and_expression_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:9582:2: ( ( ( (lv_inclusive_or_expression_0_0= ruleinclusive_or_expression ) ) ( (lv_logical_and_expression_linha_1_0= rulelogical_and_expression_linha ) ) ) )
            // InternalAnsic.g:9583:2: ( ( (lv_inclusive_or_expression_0_0= ruleinclusive_or_expression ) ) ( (lv_logical_and_expression_linha_1_0= rulelogical_and_expression_linha ) ) )
            {
            // InternalAnsic.g:9583:2: ( ( (lv_inclusive_or_expression_0_0= ruleinclusive_or_expression ) ) ( (lv_logical_and_expression_linha_1_0= rulelogical_and_expression_linha ) ) )
            // InternalAnsic.g:9584:3: ( (lv_inclusive_or_expression_0_0= ruleinclusive_or_expression ) ) ( (lv_logical_and_expression_linha_1_0= rulelogical_and_expression_linha ) )
            {
            // InternalAnsic.g:9584:3: ( (lv_inclusive_or_expression_0_0= ruleinclusive_or_expression ) )
            // InternalAnsic.g:9585:4: (lv_inclusive_or_expression_0_0= ruleinclusive_or_expression )
            {
            // InternalAnsic.g:9585:4: (lv_inclusive_or_expression_0_0= ruleinclusive_or_expression )
            // InternalAnsic.g:9586:5: lv_inclusive_or_expression_0_0= ruleinclusive_or_expression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLogical_and_expressionAccess().getInclusive_or_expressionInclusive_or_expressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_44);
            lv_inclusive_or_expression_0_0=ruleinclusive_or_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLogical_and_expressionRule());
              					}
              					set(
              						current,
              						"inclusive_or_expression",
              						lv_inclusive_or_expression_0_0,
              						"org.xtext.example.Ansic.inclusive_or_expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:9603:3: ( (lv_logical_and_expression_linha_1_0= rulelogical_and_expression_linha ) )
            // InternalAnsic.g:9604:4: (lv_logical_and_expression_linha_1_0= rulelogical_and_expression_linha )
            {
            // InternalAnsic.g:9604:4: (lv_logical_and_expression_linha_1_0= rulelogical_and_expression_linha )
            // InternalAnsic.g:9605:5: lv_logical_and_expression_linha_1_0= rulelogical_and_expression_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLogical_and_expressionAccess().getLogical_and_expression_linhaLogical_and_expression_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_logical_and_expression_linha_1_0=rulelogical_and_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLogical_and_expressionRule());
              					}
              					set(
              						current,
              						"logical_and_expression_linha",
              						lv_logical_and_expression_linha_1_0,
              						"org.xtext.example.Ansic.logical_and_expression_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulelogical_and_expression"


    // $ANTLR start "entryRulelogical_and_expression_linha"
    // InternalAnsic.g:9626:1: entryRulelogical_and_expression_linha returns [EObject current=null] : iv_rulelogical_and_expression_linha= rulelogical_and_expression_linha EOF ;
    public final EObject entryRulelogical_and_expression_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_rulelogical_and_expression_linha = null;


        try {
            // InternalAnsic.g:9626:69: (iv_rulelogical_and_expression_linha= rulelogical_and_expression_linha EOF )
            // InternalAnsic.g:9627:2: iv_rulelogical_and_expression_linha= rulelogical_and_expression_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogical_and_expression_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulelogical_and_expression_linha=rulelogical_and_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulelogical_and_expression_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulelogical_and_expression_linha"


    // $ANTLR start "rulelogical_and_expression_linha"
    // InternalAnsic.g:9633:1: rulelogical_and_expression_linha returns [EObject current=null] : (otherlv_0= 'and' ( (lv_inclusive_or_expression_1_0= ruleinclusive_or_expression ) ) ( (lv_logical_and_expression_linha_2_0= rulelogical_and_expression_linha ) ) )? ;
    public final EObject rulelogical_and_expression_linha() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_inclusive_or_expression_1_0 = null;

        EObject lv_logical_and_expression_linha_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:9639:2: ( (otherlv_0= 'and' ( (lv_inclusive_or_expression_1_0= ruleinclusive_or_expression ) ) ( (lv_logical_and_expression_linha_2_0= rulelogical_and_expression_linha ) ) )? )
            // InternalAnsic.g:9640:2: (otherlv_0= 'and' ( (lv_inclusive_or_expression_1_0= ruleinclusive_or_expression ) ) ( (lv_logical_and_expression_linha_2_0= rulelogical_and_expression_linha ) ) )?
            {
            // InternalAnsic.g:9640:2: (otherlv_0= 'and' ( (lv_inclusive_or_expression_1_0= ruleinclusive_or_expression ) ) ( (lv_logical_and_expression_linha_2_0= rulelogical_and_expression_linha ) ) )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==102) ) {
                int LA75_1 = input.LA(2);

                if ( (synpred170_InternalAnsic()) ) {
                    alt75=1;
                }
            }
            switch (alt75) {
                case 1 :
                    // InternalAnsic.g:9641:3: otherlv_0= 'and' ( (lv_inclusive_or_expression_1_0= ruleinclusive_or_expression ) ) ( (lv_logical_and_expression_linha_2_0= rulelogical_and_expression_linha ) )
                    {
                    otherlv_0=(Token)match(input,102,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_0, grammarAccess.getLogical_and_expression_linhaAccess().getAndKeyword_0());
                      		
                    }
                    // InternalAnsic.g:9645:3: ( (lv_inclusive_or_expression_1_0= ruleinclusive_or_expression ) )
                    // InternalAnsic.g:9646:4: (lv_inclusive_or_expression_1_0= ruleinclusive_or_expression )
                    {
                    // InternalAnsic.g:9646:4: (lv_inclusive_or_expression_1_0= ruleinclusive_or_expression )
                    // InternalAnsic.g:9647:5: lv_inclusive_or_expression_1_0= ruleinclusive_or_expression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLogical_and_expression_linhaAccess().getInclusive_or_expressionInclusive_or_expressionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_44);
                    lv_inclusive_or_expression_1_0=ruleinclusive_or_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLogical_and_expression_linhaRule());
                      					}
                      					set(
                      						current,
                      						"inclusive_or_expression",
                      						lv_inclusive_or_expression_1_0,
                      						"org.xtext.example.Ansic.inclusive_or_expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }

                    // InternalAnsic.g:9664:3: ( (lv_logical_and_expression_linha_2_0= rulelogical_and_expression_linha ) )
                    // InternalAnsic.g:9665:4: (lv_logical_and_expression_linha_2_0= rulelogical_and_expression_linha )
                    {
                    // InternalAnsic.g:9665:4: (lv_logical_and_expression_linha_2_0= rulelogical_and_expression_linha )
                    // InternalAnsic.g:9666:5: lv_logical_and_expression_linha_2_0= rulelogical_and_expression_linha
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLogical_and_expression_linhaAccess().getLogical_and_expression_linhaLogical_and_expression_linhaParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_logical_and_expression_linha_2_0=rulelogical_and_expression_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLogical_and_expression_linhaRule());
                      					}
                      					set(
                      						current,
                      						"logical_and_expression_linha",
                      						lv_logical_and_expression_linha_2_0,
                      						"org.xtext.example.Ansic.logical_and_expression_linha");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulelogical_and_expression_linha"


    // $ANTLR start "entryRulelogical_or_expression"
    // InternalAnsic.g:9687:1: entryRulelogical_or_expression returns [EObject current=null] : iv_rulelogical_or_expression= rulelogical_or_expression EOF ;
    public final EObject entryRulelogical_or_expression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulelogical_or_expression = null;


        try {
            // InternalAnsic.g:9687:62: (iv_rulelogical_or_expression= rulelogical_or_expression EOF )
            // InternalAnsic.g:9688:2: iv_rulelogical_or_expression= rulelogical_or_expression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogical_or_expressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulelogical_or_expression=rulelogical_or_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulelogical_or_expression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulelogical_or_expression"


    // $ANTLR start "rulelogical_or_expression"
    // InternalAnsic.g:9694:1: rulelogical_or_expression returns [EObject current=null] : ( ( (lv_logical_and_expression_0_0= rulelogical_and_expression ) ) ( (lv_logical_or_expression_linha_1_0= rulelogical_or_expression_linha ) ) ) ;
    public final EObject rulelogical_or_expression() throws RecognitionException {
        EObject current = null;

        EObject lv_logical_and_expression_0_0 = null;

        EObject lv_logical_or_expression_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:9700:2: ( ( ( (lv_logical_and_expression_0_0= rulelogical_and_expression ) ) ( (lv_logical_or_expression_linha_1_0= rulelogical_or_expression_linha ) ) ) )
            // InternalAnsic.g:9701:2: ( ( (lv_logical_and_expression_0_0= rulelogical_and_expression ) ) ( (lv_logical_or_expression_linha_1_0= rulelogical_or_expression_linha ) ) )
            {
            // InternalAnsic.g:9701:2: ( ( (lv_logical_and_expression_0_0= rulelogical_and_expression ) ) ( (lv_logical_or_expression_linha_1_0= rulelogical_or_expression_linha ) ) )
            // InternalAnsic.g:9702:3: ( (lv_logical_and_expression_0_0= rulelogical_and_expression ) ) ( (lv_logical_or_expression_linha_1_0= rulelogical_or_expression_linha ) )
            {
            // InternalAnsic.g:9702:3: ( (lv_logical_and_expression_0_0= rulelogical_and_expression ) )
            // InternalAnsic.g:9703:4: (lv_logical_and_expression_0_0= rulelogical_and_expression )
            {
            // InternalAnsic.g:9703:4: (lv_logical_and_expression_0_0= rulelogical_and_expression )
            // InternalAnsic.g:9704:5: lv_logical_and_expression_0_0= rulelogical_and_expression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLogical_or_expressionAccess().getLogical_and_expressionLogical_and_expressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_45);
            lv_logical_and_expression_0_0=rulelogical_and_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLogical_or_expressionRule());
              					}
              					set(
              						current,
              						"logical_and_expression",
              						lv_logical_and_expression_0_0,
              						"org.xtext.example.Ansic.logical_and_expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:9721:3: ( (lv_logical_or_expression_linha_1_0= rulelogical_or_expression_linha ) )
            // InternalAnsic.g:9722:4: (lv_logical_or_expression_linha_1_0= rulelogical_or_expression_linha )
            {
            // InternalAnsic.g:9722:4: (lv_logical_or_expression_linha_1_0= rulelogical_or_expression_linha )
            // InternalAnsic.g:9723:5: lv_logical_or_expression_linha_1_0= rulelogical_or_expression_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLogical_or_expressionAccess().getLogical_or_expression_linhaLogical_or_expression_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_logical_or_expression_linha_1_0=rulelogical_or_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLogical_or_expressionRule());
              					}
              					set(
              						current,
              						"logical_or_expression_linha",
              						lv_logical_or_expression_linha_1_0,
              						"org.xtext.example.Ansic.logical_or_expression_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulelogical_or_expression"


    // $ANTLR start "entryRulelogical_or_expression_linha"
    // InternalAnsic.g:9744:1: entryRulelogical_or_expression_linha returns [EObject current=null] : iv_rulelogical_or_expression_linha= rulelogical_or_expression_linha EOF ;
    public final EObject entryRulelogical_or_expression_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_rulelogical_or_expression_linha = null;


        try {
            // InternalAnsic.g:9744:68: (iv_rulelogical_or_expression_linha= rulelogical_or_expression_linha EOF )
            // InternalAnsic.g:9745:2: iv_rulelogical_or_expression_linha= rulelogical_or_expression_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogical_or_expression_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulelogical_or_expression_linha=rulelogical_or_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulelogical_or_expression_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulelogical_or_expression_linha"


    // $ANTLR start "rulelogical_or_expression_linha"
    // InternalAnsic.g:9751:1: rulelogical_or_expression_linha returns [EObject current=null] : (otherlv_0= 'or' ( (lv_logical_and_expression_1_0= rulelogical_and_expression ) ) ( (lv_logical_or_expression_linha_2_0= rulelogical_or_expression_linha ) ) )? ;
    public final EObject rulelogical_or_expression_linha() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_logical_and_expression_1_0 = null;

        EObject lv_logical_or_expression_linha_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:9757:2: ( (otherlv_0= 'or' ( (lv_logical_and_expression_1_0= rulelogical_and_expression ) ) ( (lv_logical_or_expression_linha_2_0= rulelogical_or_expression_linha ) ) )? )
            // InternalAnsic.g:9758:2: (otherlv_0= 'or' ( (lv_logical_and_expression_1_0= rulelogical_and_expression ) ) ( (lv_logical_or_expression_linha_2_0= rulelogical_or_expression_linha ) ) )?
            {
            // InternalAnsic.g:9758:2: (otherlv_0= 'or' ( (lv_logical_and_expression_1_0= rulelogical_and_expression ) ) ( (lv_logical_or_expression_linha_2_0= rulelogical_or_expression_linha ) ) )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==103) ) {
                int LA76_1 = input.LA(2);

                if ( (synpred171_InternalAnsic()) ) {
                    alt76=1;
                }
            }
            switch (alt76) {
                case 1 :
                    // InternalAnsic.g:9759:3: otherlv_0= 'or' ( (lv_logical_and_expression_1_0= rulelogical_and_expression ) ) ( (lv_logical_or_expression_linha_2_0= rulelogical_or_expression_linha ) )
                    {
                    otherlv_0=(Token)match(input,103,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_0, grammarAccess.getLogical_or_expression_linhaAccess().getOrKeyword_0());
                      		
                    }
                    // InternalAnsic.g:9763:3: ( (lv_logical_and_expression_1_0= rulelogical_and_expression ) )
                    // InternalAnsic.g:9764:4: (lv_logical_and_expression_1_0= rulelogical_and_expression )
                    {
                    // InternalAnsic.g:9764:4: (lv_logical_and_expression_1_0= rulelogical_and_expression )
                    // InternalAnsic.g:9765:5: lv_logical_and_expression_1_0= rulelogical_and_expression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLogical_or_expression_linhaAccess().getLogical_and_expressionLogical_and_expressionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_45);
                    lv_logical_and_expression_1_0=rulelogical_and_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLogical_or_expression_linhaRule());
                      					}
                      					set(
                      						current,
                      						"logical_and_expression",
                      						lv_logical_and_expression_1_0,
                      						"org.xtext.example.Ansic.logical_and_expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }

                    // InternalAnsic.g:9782:3: ( (lv_logical_or_expression_linha_2_0= rulelogical_or_expression_linha ) )
                    // InternalAnsic.g:9783:4: (lv_logical_or_expression_linha_2_0= rulelogical_or_expression_linha )
                    {
                    // InternalAnsic.g:9783:4: (lv_logical_or_expression_linha_2_0= rulelogical_or_expression_linha )
                    // InternalAnsic.g:9784:5: lv_logical_or_expression_linha_2_0= rulelogical_or_expression_linha
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLogical_or_expression_linhaAccess().getLogical_or_expression_linhaLogical_or_expression_linhaParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_logical_or_expression_linha_2_0=rulelogical_or_expression_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLogical_or_expression_linhaRule());
                      					}
                      					set(
                      						current,
                      						"logical_or_expression_linha",
                      						lv_logical_or_expression_linha_2_0,
                      						"org.xtext.example.Ansic.logical_or_expression_linha");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulelogical_or_expression_linha"


    // $ANTLR start "entryRuleconditional_expression"
    // InternalAnsic.g:9805:1: entryRuleconditional_expression returns [EObject current=null] : iv_ruleconditional_expression= ruleconditional_expression EOF ;
    public final EObject entryRuleconditional_expression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleconditional_expression = null;


        try {
            // InternalAnsic.g:9805:63: (iv_ruleconditional_expression= ruleconditional_expression EOF )
            // InternalAnsic.g:9806:2: iv_ruleconditional_expression= ruleconditional_expression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditional_expressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleconditional_expression=ruleconditional_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleconditional_expression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleconditional_expression"


    // $ANTLR start "ruleconditional_expression"
    // InternalAnsic.g:9812:1: ruleconditional_expression returns [EObject current=null] : ( ( (lv_logical_or_expression_0_0= rulelogical_or_expression ) ) ( (lv_conditional_expression_linha_1_0= ruleconditional_expression_linha ) ) ) ;
    public final EObject ruleconditional_expression() throws RecognitionException {
        EObject current = null;

        EObject lv_logical_or_expression_0_0 = null;

        EObject lv_conditional_expression_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:9818:2: ( ( ( (lv_logical_or_expression_0_0= rulelogical_or_expression ) ) ( (lv_conditional_expression_linha_1_0= ruleconditional_expression_linha ) ) ) )
            // InternalAnsic.g:9819:2: ( ( (lv_logical_or_expression_0_0= rulelogical_or_expression ) ) ( (lv_conditional_expression_linha_1_0= ruleconditional_expression_linha ) ) )
            {
            // InternalAnsic.g:9819:2: ( ( (lv_logical_or_expression_0_0= rulelogical_or_expression ) ) ( (lv_conditional_expression_linha_1_0= ruleconditional_expression_linha ) ) )
            // InternalAnsic.g:9820:3: ( (lv_logical_or_expression_0_0= rulelogical_or_expression ) ) ( (lv_conditional_expression_linha_1_0= ruleconditional_expression_linha ) )
            {
            // InternalAnsic.g:9820:3: ( (lv_logical_or_expression_0_0= rulelogical_or_expression ) )
            // InternalAnsic.g:9821:4: (lv_logical_or_expression_0_0= rulelogical_or_expression )
            {
            // InternalAnsic.g:9821:4: (lv_logical_or_expression_0_0= rulelogical_or_expression )
            // InternalAnsic.g:9822:5: lv_logical_or_expression_0_0= rulelogical_or_expression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConditional_expressionAccess().getLogical_or_expressionLogical_or_expressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_46);
            lv_logical_or_expression_0_0=rulelogical_or_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConditional_expressionRule());
              					}
              					set(
              						current,
              						"logical_or_expression",
              						lv_logical_or_expression_0_0,
              						"org.xtext.example.Ansic.logical_or_expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:9839:3: ( (lv_conditional_expression_linha_1_0= ruleconditional_expression_linha ) )
            // InternalAnsic.g:9840:4: (lv_conditional_expression_linha_1_0= ruleconditional_expression_linha )
            {
            // InternalAnsic.g:9840:4: (lv_conditional_expression_linha_1_0= ruleconditional_expression_linha )
            // InternalAnsic.g:9841:5: lv_conditional_expression_linha_1_0= ruleconditional_expression_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConditional_expressionAccess().getConditional_expression_linhaConditional_expression_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_conditional_expression_linha_1_0=ruleconditional_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConditional_expressionRule());
              					}
              					set(
              						current,
              						"conditional_expression_linha",
              						lv_conditional_expression_linha_1_0,
              						"org.xtext.example.Ansic.conditional_expression_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleconditional_expression"


    // $ANTLR start "entryRuleconditional_expression_linha"
    // InternalAnsic.g:9862:1: entryRuleconditional_expression_linha returns [EObject current=null] : iv_ruleconditional_expression_linha= ruleconditional_expression_linha EOF ;
    public final EObject entryRuleconditional_expression_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleconditional_expression_linha = null;


        try {
            // InternalAnsic.g:9862:69: (iv_ruleconditional_expression_linha= ruleconditional_expression_linha EOF )
            // InternalAnsic.g:9863:2: iv_ruleconditional_expression_linha= ruleconditional_expression_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditional_expression_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleconditional_expression_linha=ruleconditional_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleconditional_expression_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleconditional_expression_linha"


    // $ANTLR start "ruleconditional_expression_linha"
    // InternalAnsic.g:9869:1: ruleconditional_expression_linha returns [EObject current=null] : (otherlv_0= '?' ( (lv_expression_1_0= ruleexpression ) ) otherlv_2= ':' ( (lv_conditional_expression_3_0= ruleconditional_expression ) ) ( (lv_conditional_expression_linha_4_0= ruleconditional_expression_linha ) ) )? ;
    public final EObject ruleconditional_expression_linha() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_expression_1_0 = null;

        EObject lv_conditional_expression_3_0 = null;

        EObject lv_conditional_expression_linha_4_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:9875:2: ( (otherlv_0= '?' ( (lv_expression_1_0= ruleexpression ) ) otherlv_2= ':' ( (lv_conditional_expression_3_0= ruleconditional_expression ) ) ( (lv_conditional_expression_linha_4_0= ruleconditional_expression_linha ) ) )? )
            // InternalAnsic.g:9876:2: (otherlv_0= '?' ( (lv_expression_1_0= ruleexpression ) ) otherlv_2= ':' ( (lv_conditional_expression_3_0= ruleconditional_expression ) ) ( (lv_conditional_expression_linha_4_0= ruleconditional_expression_linha ) ) )?
            {
            // InternalAnsic.g:9876:2: (otherlv_0= '?' ( (lv_expression_1_0= ruleexpression ) ) otherlv_2= ':' ( (lv_conditional_expression_3_0= ruleconditional_expression ) ) ( (lv_conditional_expression_linha_4_0= ruleconditional_expression_linha ) ) )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==104) ) {
                int LA77_1 = input.LA(2);

                if ( (synpred172_InternalAnsic()) ) {
                    alt77=1;
                }
            }
            switch (alt77) {
                case 1 :
                    // InternalAnsic.g:9877:3: otherlv_0= '?' ( (lv_expression_1_0= ruleexpression ) ) otherlv_2= ':' ( (lv_conditional_expression_3_0= ruleconditional_expression ) ) ( (lv_conditional_expression_linha_4_0= ruleconditional_expression_linha ) )
                    {
                    otherlv_0=(Token)match(input,104,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_0, grammarAccess.getConditional_expression_linhaAccess().getQuestionMarkKeyword_0());
                      		
                    }
                    // InternalAnsic.g:9881:3: ( (lv_expression_1_0= ruleexpression ) )
                    // InternalAnsic.g:9882:4: (lv_expression_1_0= ruleexpression )
                    {
                    // InternalAnsic.g:9882:4: (lv_expression_1_0= ruleexpression )
                    // InternalAnsic.g:9883:5: lv_expression_1_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getConditional_expression_linhaAccess().getExpressionExpressionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_16);
                    lv_expression_1_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getConditional_expression_linhaRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_1_0,
                      						"org.xtext.example.Ansic.expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,61,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_2, grammarAccess.getConditional_expression_linhaAccess().getColonKeyword_2());
                      		
                    }
                    // InternalAnsic.g:9904:3: ( (lv_conditional_expression_3_0= ruleconditional_expression ) )
                    // InternalAnsic.g:9905:4: (lv_conditional_expression_3_0= ruleconditional_expression )
                    {
                    // InternalAnsic.g:9905:4: (lv_conditional_expression_3_0= ruleconditional_expression )
                    // InternalAnsic.g:9906:5: lv_conditional_expression_3_0= ruleconditional_expression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getConditional_expression_linhaAccess().getConditional_expressionConditional_expressionParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_46);
                    lv_conditional_expression_3_0=ruleconditional_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getConditional_expression_linhaRule());
                      					}
                      					set(
                      						current,
                      						"conditional_expression",
                      						lv_conditional_expression_3_0,
                      						"org.xtext.example.Ansic.conditional_expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }

                    // InternalAnsic.g:9923:3: ( (lv_conditional_expression_linha_4_0= ruleconditional_expression_linha ) )
                    // InternalAnsic.g:9924:4: (lv_conditional_expression_linha_4_0= ruleconditional_expression_linha )
                    {
                    // InternalAnsic.g:9924:4: (lv_conditional_expression_linha_4_0= ruleconditional_expression_linha )
                    // InternalAnsic.g:9925:5: lv_conditional_expression_linha_4_0= ruleconditional_expression_linha
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getConditional_expression_linhaAccess().getConditional_expression_linhaConditional_expression_linhaParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_conditional_expression_linha_4_0=ruleconditional_expression_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getConditional_expression_linhaRule());
                      					}
                      					set(
                      						current,
                      						"conditional_expression_linha",
                      						lv_conditional_expression_linha_4_0,
                      						"org.xtext.example.Ansic.conditional_expression_linha");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleconditional_expression_linha"


    // $ANTLR start "entryRuleassignment_expression"
    // InternalAnsic.g:9946:1: entryRuleassignment_expression returns [EObject current=null] : iv_ruleassignment_expression= ruleassignment_expression EOF ;
    public final EObject entryRuleassignment_expression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleassignment_expression = null;


        try {
            // InternalAnsic.g:9946:62: (iv_ruleassignment_expression= ruleassignment_expression EOF )
            // InternalAnsic.g:9947:2: iv_ruleassignment_expression= ruleassignment_expression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssignment_expressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleassignment_expression=ruleassignment_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleassignment_expression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleassignment_expression"


    // $ANTLR start "ruleassignment_expression"
    // InternalAnsic.g:9953:1: ruleassignment_expression returns [EObject current=null] : ( ( (lv_conditional_expression_0_0= ruleconditional_expression ) ) | ( ( (lv_unary_expression_1_0= ruleunary_expression ) ) ( (lv_assignment_operator_2_0= ruleassignment_operator ) ) ( (lv_assignment_expression_3_0= ruleassignment_expression ) ) ) ) ;
    public final EObject ruleassignment_expression() throws RecognitionException {
        EObject current = null;

        EObject lv_conditional_expression_0_0 = null;

        EObject lv_unary_expression_1_0 = null;

        AntlrDatatypeRuleToken lv_assignment_operator_2_0 = null;

        EObject lv_assignment_expression_3_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:9959:2: ( ( ( (lv_conditional_expression_0_0= ruleconditional_expression ) ) | ( ( (lv_unary_expression_1_0= ruleunary_expression ) ) ( (lv_assignment_operator_2_0= ruleassignment_operator ) ) ( (lv_assignment_expression_3_0= ruleassignment_expression ) ) ) ) )
            // InternalAnsic.g:9960:2: ( ( (lv_conditional_expression_0_0= ruleconditional_expression ) ) | ( ( (lv_unary_expression_1_0= ruleunary_expression ) ) ( (lv_assignment_operator_2_0= ruleassignment_operator ) ) ( (lv_assignment_expression_3_0= ruleassignment_expression ) ) ) )
            {
            // InternalAnsic.g:9960:2: ( ( (lv_conditional_expression_0_0= ruleconditional_expression ) ) | ( ( (lv_unary_expression_1_0= ruleunary_expression ) ) ( (lv_assignment_operator_2_0= ruleassignment_operator ) ) ( (lv_assignment_expression_3_0= ruleassignment_expression ) ) ) )
            int alt78=2;
            alt78 = dfa78.predict(input);
            switch (alt78) {
                case 1 :
                    // InternalAnsic.g:9961:3: ( (lv_conditional_expression_0_0= ruleconditional_expression ) )
                    {
                    // InternalAnsic.g:9961:3: ( (lv_conditional_expression_0_0= ruleconditional_expression ) )
                    // InternalAnsic.g:9962:4: (lv_conditional_expression_0_0= ruleconditional_expression )
                    {
                    // InternalAnsic.g:9962:4: (lv_conditional_expression_0_0= ruleconditional_expression )
                    // InternalAnsic.g:9963:5: lv_conditional_expression_0_0= ruleconditional_expression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAssignment_expressionAccess().getConditional_expressionConditional_expressionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_conditional_expression_0_0=ruleconditional_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getAssignment_expressionRule());
                      					}
                      					set(
                      						current,
                      						"conditional_expression",
                      						lv_conditional_expression_0_0,
                      						"org.xtext.example.Ansic.conditional_expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:9981:3: ( ( (lv_unary_expression_1_0= ruleunary_expression ) ) ( (lv_assignment_operator_2_0= ruleassignment_operator ) ) ( (lv_assignment_expression_3_0= ruleassignment_expression ) ) )
                    {
                    // InternalAnsic.g:9981:3: ( ( (lv_unary_expression_1_0= ruleunary_expression ) ) ( (lv_assignment_operator_2_0= ruleassignment_operator ) ) ( (lv_assignment_expression_3_0= ruleassignment_expression ) ) )
                    // InternalAnsic.g:9982:4: ( (lv_unary_expression_1_0= ruleunary_expression ) ) ( (lv_assignment_operator_2_0= ruleassignment_operator ) ) ( (lv_assignment_expression_3_0= ruleassignment_expression ) )
                    {
                    // InternalAnsic.g:9982:4: ( (lv_unary_expression_1_0= ruleunary_expression ) )
                    // InternalAnsic.g:9983:5: (lv_unary_expression_1_0= ruleunary_expression )
                    {
                    // InternalAnsic.g:9983:5: (lv_unary_expression_1_0= ruleunary_expression )
                    // InternalAnsic.g:9984:6: lv_unary_expression_1_0= ruleunary_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAssignment_expressionAccess().getUnary_expressionUnary_expressionParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_47);
                    lv_unary_expression_1_0=ruleunary_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAssignment_expressionRule());
                      						}
                      						set(
                      							current,
                      							"unary_expression",
                      							lv_unary_expression_1_0,
                      							"org.xtext.example.Ansic.unary_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:10001:4: ( (lv_assignment_operator_2_0= ruleassignment_operator ) )
                    // InternalAnsic.g:10002:5: (lv_assignment_operator_2_0= ruleassignment_operator )
                    {
                    // InternalAnsic.g:10002:5: (lv_assignment_operator_2_0= ruleassignment_operator )
                    // InternalAnsic.g:10003:6: lv_assignment_operator_2_0= ruleassignment_operator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAssignment_expressionAccess().getAssignment_operatorAssignment_operatorParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_8);
                    lv_assignment_operator_2_0=ruleassignment_operator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAssignment_expressionRule());
                      						}
                      						set(
                      							current,
                      							"assignment_operator",
                      							lv_assignment_operator_2_0,
                      							"org.xtext.example.Ansic.assignment_operator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:10020:4: ( (lv_assignment_expression_3_0= ruleassignment_expression ) )
                    // InternalAnsic.g:10021:5: (lv_assignment_expression_3_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:10021:5: (lv_assignment_expression_3_0= ruleassignment_expression )
                    // InternalAnsic.g:10022:6: lv_assignment_expression_3_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAssignment_expressionAccess().getAssignment_expressionAssignment_expressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_assignment_expression_3_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAssignment_expressionRule());
                      						}
                      						set(
                      							current,
                      							"assignment_expression",
                      							lv_assignment_expression_3_0,
                      							"org.xtext.example.Ansic.assignment_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleassignment_expression"


    // $ANTLR start "entryRuleassignment_operator"
    // InternalAnsic.g:10044:1: entryRuleassignment_operator returns [String current=null] : iv_ruleassignment_operator= ruleassignment_operator EOF ;
    public final String entryRuleassignment_operator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleassignment_operator = null;


        try {
            // InternalAnsic.g:10044:59: (iv_ruleassignment_operator= ruleassignment_operator EOF )
            // InternalAnsic.g:10045:2: iv_ruleassignment_operator= ruleassignment_operator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssignment_operatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleassignment_operator=ruleassignment_operator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleassignment_operator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleassignment_operator"


    // $ANTLR start "ruleassignment_operator"
    // InternalAnsic.g:10051:1: ruleassignment_operator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '=' | kw= '*=' | kw= '/=' | kw= '%=' | kw= '+=' | kw= '-=' | kw= '<<=' | kw= '>>=' | kw= '&=' | kw= '^=' | kw= '|=' ) ;
    public final AntlrDatatypeRuleToken ruleassignment_operator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalAnsic.g:10057:2: ( (kw= '=' | kw= '*=' | kw= '/=' | kw= '%=' | kw= '+=' | kw= '-=' | kw= '<<=' | kw= '>>=' | kw= '&=' | kw= '^=' | kw= '|=' ) )
            // InternalAnsic.g:10058:2: (kw= '=' | kw= '*=' | kw= '/=' | kw= '%=' | kw= '+=' | kw= '-=' | kw= '<<=' | kw= '>>=' | kw= '&=' | kw= '^=' | kw= '|=' )
            {
            // InternalAnsic.g:10058:2: (kw= '=' | kw= '*=' | kw= '/=' | kw= '%=' | kw= '+=' | kw= '-=' | kw= '<<=' | kw= '>>=' | kw= '&=' | kw= '^=' | kw= '|=' )
            int alt79=11;
            switch ( input.LA(1) ) {
            case 57:
                {
                alt79=1;
                }
                break;
            case 105:
                {
                alt79=2;
                }
                break;
            case 106:
                {
                alt79=3;
                }
                break;
            case 107:
                {
                alt79=4;
                }
                break;
            case 108:
                {
                alt79=5;
                }
                break;
            case 109:
                {
                alt79=6;
                }
                break;
            case 110:
                {
                alt79=7;
                }
                break;
            case 111:
                {
                alt79=8;
                }
                break;
            case 112:
                {
                alt79=9;
                }
                break;
            case 113:
                {
                alt79=10;
                }
                break;
            case 114:
                {
                alt79=11;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 79, 0, input);

                throw nvae;
            }

            switch (alt79) {
                case 1 :
                    // InternalAnsic.g:10059:3: kw= '='
                    {
                    kw=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAssignment_operatorAccess().getEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsic.g:10065:3: kw= '*='
                    {
                    kw=(Token)match(input,105,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAssignment_operatorAccess().getAsteriskEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAnsic.g:10071:3: kw= '/='
                    {
                    kw=(Token)match(input,106,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAssignment_operatorAccess().getSolidusEqualsSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAnsic.g:10077:3: kw= '%='
                    {
                    kw=(Token)match(input,107,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAssignment_operatorAccess().getPercentSignEqualsSignKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalAnsic.g:10083:3: kw= '+='
                    {
                    kw=(Token)match(input,108,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAssignment_operatorAccess().getPlusSignEqualsSignKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalAnsic.g:10089:3: kw= '-='
                    {
                    kw=(Token)match(input,109,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAssignment_operatorAccess().getHyphenMinusEqualsSignKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalAnsic.g:10095:3: kw= '<<='
                    {
                    kw=(Token)match(input,110,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAssignment_operatorAccess().getLessThanSignLessThanSignEqualsSignKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalAnsic.g:10101:3: kw= '>>='
                    {
                    kw=(Token)match(input,111,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAssignment_operatorAccess().getGreaterThanSignGreaterThanSignEqualsSignKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalAnsic.g:10107:3: kw= '&='
                    {
                    kw=(Token)match(input,112,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAssignment_operatorAccess().getAmpersandEqualsSignKeyword_8());
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalAnsic.g:10113:3: kw= '^='
                    {
                    kw=(Token)match(input,113,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAssignment_operatorAccess().getCircumflexAccentEqualsSignKeyword_9());
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalAnsic.g:10119:3: kw= '|='
                    {
                    kw=(Token)match(input,114,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAssignment_operatorAccess().getVerticalLineEqualsSignKeyword_10());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleassignment_operator"


    // $ANTLR start "entryRuleunary_operator"
    // InternalAnsic.g:10128:1: entryRuleunary_operator returns [String current=null] : iv_ruleunary_operator= ruleunary_operator EOF ;
    public final String entryRuleunary_operator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleunary_operator = null;


        try {
            // InternalAnsic.g:10128:54: (iv_ruleunary_operator= ruleunary_operator EOF )
            // InternalAnsic.g:10129:2: iv_ruleunary_operator= ruleunary_operator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnary_operatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleunary_operator=ruleunary_operator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleunary_operator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleunary_operator"


    // $ANTLR start "ruleunary_operator"
    // InternalAnsic.g:10135:1: ruleunary_operator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '&' | kw= '*' | kw= '+' | kw= '-' | kw= '~' | kw= '!' ) ;
    public final AntlrDatatypeRuleToken ruleunary_operator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalAnsic.g:10141:2: ( (kw= '&' | kw= '*' | kw= '+' | kw= '-' | kw= '~' | kw= '!' ) )
            // InternalAnsic.g:10142:2: (kw= '&' | kw= '*' | kw= '+' | kw= '-' | kw= '~' | kw= '!' )
            {
            // InternalAnsic.g:10142:2: (kw= '&' | kw= '*' | kw= '+' | kw= '-' | kw= '~' | kw= '!' )
            int alt80=6;
            switch ( input.LA(1) ) {
            case 99:
                {
                alt80=1;
                }
                break;
            case 67:
                {
                alt80=2;
                }
                break;
            case 82:
                {
                alt80=3;
                }
                break;
            case 83:
                {
                alt80=4;
                }
                break;
            case 115:
                {
                alt80=5;
                }
                break;
            case 116:
                {
                alt80=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 80, 0, input);

                throw nvae;
            }

            switch (alt80) {
                case 1 :
                    // InternalAnsic.g:10143:3: kw= '&'
                    {
                    kw=(Token)match(input,99,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnary_operatorAccess().getAmpersandKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsic.g:10149:3: kw= '*'
                    {
                    kw=(Token)match(input,67,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnary_operatorAccess().getAsteriskKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAnsic.g:10155:3: kw= '+'
                    {
                    kw=(Token)match(input,82,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnary_operatorAccess().getPlusSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAnsic.g:10161:3: kw= '-'
                    {
                    kw=(Token)match(input,83,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnary_operatorAccess().getHyphenMinusKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalAnsic.g:10167:3: kw= '~'
                    {
                    kw=(Token)match(input,115,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnary_operatorAccess().getTildeKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalAnsic.g:10173:3: kw= '!'
                    {
                    kw=(Token)match(input,116,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnary_operatorAccess().getExclamationMarkKeyword_5());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleunary_operator"


    // $ANTLR start "entryRuletype_name"
    // InternalAnsic.g:10182:1: entryRuletype_name returns [EObject current=null] : iv_ruletype_name= ruletype_name EOF ;
    public final EObject entryRuletype_name() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletype_name = null;


        try {
            // InternalAnsic.g:10182:50: (iv_ruletype_name= ruletype_name EOF )
            // InternalAnsic.g:10183:2: iv_ruletype_name= ruletype_name EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getType_nameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletype_name=ruletype_name();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletype_name; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletype_name"


    // $ANTLR start "ruletype_name"
    // InternalAnsic.g:10189:1: ruletype_name returns [EObject current=null] : ( ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) ) | ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) ) ) ;
    public final EObject ruletype_name() throws RecognitionException {
        EObject current = null;

        EObject lv_specifier_qualifier_list_0_0 = null;

        EObject lv_abstract_declarator_1_0 = null;

        EObject lv_specifier_qualifier_list_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:10195:2: ( ( ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) ) | ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) ) ) )
            // InternalAnsic.g:10196:2: ( ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) ) | ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) ) )
            {
            // InternalAnsic.g:10196:2: ( ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) ) | ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) ) )
            int alt81=2;
            alt81 = dfa81.predict(input);
            switch (alt81) {
                case 1 :
                    // InternalAnsic.g:10197:3: ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) )
                    {
                    // InternalAnsic.g:10197:3: ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) )
                    // InternalAnsic.g:10198:4: ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) )
                    {
                    // InternalAnsic.g:10198:4: ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) )
                    // InternalAnsic.g:10199:5: (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list )
                    {
                    // InternalAnsic.g:10199:5: (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list )
                    // InternalAnsic.g:10200:6: lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getType_nameAccess().getSpecifier_qualifier_listSpecifier_qualifier_listParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_25);
                    lv_specifier_qualifier_list_0_0=rulespecifier_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getType_nameRule());
                      						}
                      						set(
                      							current,
                      							"specifier_qualifier_list",
                      							lv_specifier_qualifier_list_0_0,
                      							"org.xtext.example.Ansic.specifier_qualifier_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:10217:4: ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) )
                    // InternalAnsic.g:10218:5: (lv_abstract_declarator_1_0= ruleabstract_declarator )
                    {
                    // InternalAnsic.g:10218:5: (lv_abstract_declarator_1_0= ruleabstract_declarator )
                    // InternalAnsic.g:10219:6: lv_abstract_declarator_1_0= ruleabstract_declarator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getType_nameAccess().getAbstract_declaratorAbstract_declaratorParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_abstract_declarator_1_0=ruleabstract_declarator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getType_nameRule());
                      						}
                      						set(
                      							current,
                      							"abstract_declarator",
                      							lv_abstract_declarator_1_0,
                      							"org.xtext.example.Ansic.abstract_declarator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:10238:3: ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) )
                    {
                    // InternalAnsic.g:10238:3: ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) )
                    // InternalAnsic.g:10239:4: (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list )
                    {
                    // InternalAnsic.g:10239:4: (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list )
                    // InternalAnsic.g:10240:5: lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getType_nameAccess().getSpecifier_qualifier_listSpecifier_qualifier_listParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_specifier_qualifier_list_2_0=rulespecifier_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getType_nameRule());
                      					}
                      					set(
                      						current,
                      						"specifier_qualifier_list",
                      						lv_specifier_qualifier_list_2_0,
                      						"org.xtext.example.Ansic.specifier_qualifier_list");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletype_name"


    // $ANTLR start "entryRuleexpression"
    // InternalAnsic.g:10261:1: entryRuleexpression returns [EObject current=null] : iv_ruleexpression= ruleexpression EOF ;
    public final EObject entryRuleexpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleexpression = null;


        try {
            // InternalAnsic.g:10261:51: (iv_ruleexpression= ruleexpression EOF )
            // InternalAnsic.g:10262:2: iv_ruleexpression= ruleexpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleexpression=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleexpression"


    // $ANTLR start "ruleexpression"
    // InternalAnsic.g:10268:1: ruleexpression returns [EObject current=null] : ( ( (lv_assignment_expression_0_0= ruleassignment_expression ) ) ( (lv_expression_linha_1_0= ruleexpression_linha ) ) ) ;
    public final EObject ruleexpression() throws RecognitionException {
        EObject current = null;

        EObject lv_assignment_expression_0_0 = null;

        EObject lv_expression_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:10274:2: ( ( ( (lv_assignment_expression_0_0= ruleassignment_expression ) ) ( (lv_expression_linha_1_0= ruleexpression_linha ) ) ) )
            // InternalAnsic.g:10275:2: ( ( (lv_assignment_expression_0_0= ruleassignment_expression ) ) ( (lv_expression_linha_1_0= ruleexpression_linha ) ) )
            {
            // InternalAnsic.g:10275:2: ( ( (lv_assignment_expression_0_0= ruleassignment_expression ) ) ( (lv_expression_linha_1_0= ruleexpression_linha ) ) )
            // InternalAnsic.g:10276:3: ( (lv_assignment_expression_0_0= ruleassignment_expression ) ) ( (lv_expression_linha_1_0= ruleexpression_linha ) )
            {
            // InternalAnsic.g:10276:3: ( (lv_assignment_expression_0_0= ruleassignment_expression ) )
            // InternalAnsic.g:10277:4: (lv_assignment_expression_0_0= ruleassignment_expression )
            {
            // InternalAnsic.g:10277:4: (lv_assignment_expression_0_0= ruleassignment_expression )
            // InternalAnsic.g:10278:5: lv_assignment_expression_0_0= ruleassignment_expression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExpressionAccess().getAssignment_expressionAssignment_expressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_12);
            lv_assignment_expression_0_0=ruleassignment_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExpressionRule());
              					}
              					set(
              						current,
              						"assignment_expression",
              						lv_assignment_expression_0_0,
              						"org.xtext.example.Ansic.assignment_expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:10295:3: ( (lv_expression_linha_1_0= ruleexpression_linha ) )
            // InternalAnsic.g:10296:4: (lv_expression_linha_1_0= ruleexpression_linha )
            {
            // InternalAnsic.g:10296:4: (lv_expression_linha_1_0= ruleexpression_linha )
            // InternalAnsic.g:10297:5: lv_expression_linha_1_0= ruleexpression_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExpressionAccess().getExpression_linhaExpression_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_linha_1_0=ruleexpression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExpressionRule());
              					}
              					set(
              						current,
              						"expression_linha",
              						lv_expression_linha_1_0,
              						"org.xtext.example.Ansic.expression_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleexpression"


    // $ANTLR start "entryRuleexpression_linha"
    // InternalAnsic.g:10318:1: entryRuleexpression_linha returns [EObject current=null] : iv_ruleexpression_linha= ruleexpression_linha EOF ;
    public final EObject entryRuleexpression_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleexpression_linha = null;


        try {
            // InternalAnsic.g:10318:57: (iv_ruleexpression_linha= ruleexpression_linha EOF )
            // InternalAnsic.g:10319:2: iv_ruleexpression_linha= ruleexpression_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpression_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleexpression_linha=ruleexpression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexpression_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleexpression_linha"


    // $ANTLR start "ruleexpression_linha"
    // InternalAnsic.g:10325:1: ruleexpression_linha returns [EObject current=null] : ( () (otherlv_1= ',' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) ( (lv_expression_linha_3_0= ruleexpression_linha ) ) )? ) ;
    public final EObject ruleexpression_linha() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_assignment_expression_2_0 = null;

        EObject lv_expression_linha_3_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:10331:2: ( ( () (otherlv_1= ',' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) ( (lv_expression_linha_3_0= ruleexpression_linha ) ) )? ) )
            // InternalAnsic.g:10332:2: ( () (otherlv_1= ',' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) ( (lv_expression_linha_3_0= ruleexpression_linha ) ) )? )
            {
            // InternalAnsic.g:10332:2: ( () (otherlv_1= ',' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) ( (lv_expression_linha_3_0= ruleexpression_linha ) ) )? )
            // InternalAnsic.g:10333:3: () (otherlv_1= ',' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) ( (lv_expression_linha_3_0= ruleexpression_linha ) ) )?
            {
            // InternalAnsic.g:10333:3: ()
            // InternalAnsic.g:10334:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getExpression_linhaAccess().getExpressionLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:10343:3: (otherlv_1= ',' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) ( (lv_expression_linha_3_0= ruleexpression_linha ) ) )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==56) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalAnsic.g:10344:4: otherlv_1= ',' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) ( (lv_expression_linha_3_0= ruleexpression_linha ) )
                    {
                    otherlv_1=(Token)match(input,56,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getExpression_linhaAccess().getCommaKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:10348:4: ( (lv_assignment_expression_2_0= ruleassignment_expression ) )
                    // InternalAnsic.g:10349:5: (lv_assignment_expression_2_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:10349:5: (lv_assignment_expression_2_0= ruleassignment_expression )
                    // InternalAnsic.g:10350:6: lv_assignment_expression_2_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpression_linhaAccess().getAssignment_expressionAssignment_expressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_assignment_expression_2_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpression_linhaRule());
                      						}
                      						set(
                      							current,
                      							"assignment_expression",
                      							lv_assignment_expression_2_0,
                      							"org.xtext.example.Ansic.assignment_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:10367:4: ( (lv_expression_linha_3_0= ruleexpression_linha ) )
                    // InternalAnsic.g:10368:5: (lv_expression_linha_3_0= ruleexpression_linha )
                    {
                    // InternalAnsic.g:10368:5: (lv_expression_linha_3_0= ruleexpression_linha )
                    // InternalAnsic.g:10369:6: lv_expression_linha_3_0= ruleexpression_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpression_linhaAccess().getExpression_linhaExpression_linhaParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_linha_3_0=ruleexpression_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpression_linhaRule());
                      						}
                      						set(
                      							current,
                      							"expression_linha",
                      							lv_expression_linha_3_0,
                      							"org.xtext.example.Ansic.expression_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleexpression_linha"


    // $ANTLR start "entryRuleconstant_expression"
    // InternalAnsic.g:10391:1: entryRuleconstant_expression returns [EObject current=null] : iv_ruleconstant_expression= ruleconstant_expression EOF ;
    public final EObject entryRuleconstant_expression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleconstant_expression = null;


        try {
            // InternalAnsic.g:10391:60: (iv_ruleconstant_expression= ruleconstant_expression EOF )
            // InternalAnsic.g:10392:2: iv_ruleconstant_expression= ruleconstant_expression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstant_expressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleconstant_expression=ruleconstant_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleconstant_expression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleconstant_expression"


    // $ANTLR start "ruleconstant_expression"
    // InternalAnsic.g:10398:1: ruleconstant_expression returns [EObject current=null] : ( (lv_conditional_expression_0_0= ruleconditional_expression ) ) ;
    public final EObject ruleconstant_expression() throws RecognitionException {
        EObject current = null;

        EObject lv_conditional_expression_0_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:10404:2: ( ( (lv_conditional_expression_0_0= ruleconditional_expression ) ) )
            // InternalAnsic.g:10405:2: ( (lv_conditional_expression_0_0= ruleconditional_expression ) )
            {
            // InternalAnsic.g:10405:2: ( (lv_conditional_expression_0_0= ruleconditional_expression ) )
            // InternalAnsic.g:10406:3: (lv_conditional_expression_0_0= ruleconditional_expression )
            {
            // InternalAnsic.g:10406:3: (lv_conditional_expression_0_0= ruleconditional_expression )
            // InternalAnsic.g:10407:4: lv_conditional_expression_0_0= ruleconditional_expression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getConstant_expressionAccess().getConditional_expressionConditional_expressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_conditional_expression_0_0=ruleconditional_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getConstant_expressionRule());
              				}
              				set(
              					current,
              					"conditional_expression",
              					lv_conditional_expression_0_0,
              					"org.xtext.example.Ansic.conditional_expression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleconstant_expression"


    // $ANTLR start "entryRuleinit_declarator_list"
    // InternalAnsic.g:10427:1: entryRuleinit_declarator_list returns [EObject current=null] : iv_ruleinit_declarator_list= ruleinit_declarator_list EOF ;
    public final EObject entryRuleinit_declarator_list() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleinit_declarator_list = null;


        try {
            // InternalAnsic.g:10427:61: (iv_ruleinit_declarator_list= ruleinit_declarator_list EOF )
            // InternalAnsic.g:10428:2: iv_ruleinit_declarator_list= ruleinit_declarator_list EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInit_declarator_listRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleinit_declarator_list=ruleinit_declarator_list();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleinit_declarator_list; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleinit_declarator_list"


    // $ANTLR start "ruleinit_declarator_list"
    // InternalAnsic.g:10434:1: ruleinit_declarator_list returns [EObject current=null] : ( ( (lv_init_declarator_0_0= ruleinit_declarator ) ) ( (lv_init_declarator_list_linha_1_0= ruleinit_declarator_list_linha ) ) ) ;
    public final EObject ruleinit_declarator_list() throws RecognitionException {
        EObject current = null;

        EObject lv_init_declarator_0_0 = null;

        EObject lv_init_declarator_list_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:10440:2: ( ( ( (lv_init_declarator_0_0= ruleinit_declarator ) ) ( (lv_init_declarator_list_linha_1_0= ruleinit_declarator_list_linha ) ) ) )
            // InternalAnsic.g:10441:2: ( ( (lv_init_declarator_0_0= ruleinit_declarator ) ) ( (lv_init_declarator_list_linha_1_0= ruleinit_declarator_list_linha ) ) )
            {
            // InternalAnsic.g:10441:2: ( ( (lv_init_declarator_0_0= ruleinit_declarator ) ) ( (lv_init_declarator_list_linha_1_0= ruleinit_declarator_list_linha ) ) )
            // InternalAnsic.g:10442:3: ( (lv_init_declarator_0_0= ruleinit_declarator ) ) ( (lv_init_declarator_list_linha_1_0= ruleinit_declarator_list_linha ) )
            {
            // InternalAnsic.g:10442:3: ( (lv_init_declarator_0_0= ruleinit_declarator ) )
            // InternalAnsic.g:10443:4: (lv_init_declarator_0_0= ruleinit_declarator )
            {
            // InternalAnsic.g:10443:4: (lv_init_declarator_0_0= ruleinit_declarator )
            // InternalAnsic.g:10444:5: lv_init_declarator_0_0= ruleinit_declarator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getInit_declarator_listAccess().getInit_declaratorInit_declaratorParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_12);
            lv_init_declarator_0_0=ruleinit_declarator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getInit_declarator_listRule());
              					}
              					set(
              						current,
              						"init_declarator",
              						lv_init_declarator_0_0,
              						"org.xtext.example.Ansic.init_declarator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:10461:3: ( (lv_init_declarator_list_linha_1_0= ruleinit_declarator_list_linha ) )
            // InternalAnsic.g:10462:4: (lv_init_declarator_list_linha_1_0= ruleinit_declarator_list_linha )
            {
            // InternalAnsic.g:10462:4: (lv_init_declarator_list_linha_1_0= ruleinit_declarator_list_linha )
            // InternalAnsic.g:10463:5: lv_init_declarator_list_linha_1_0= ruleinit_declarator_list_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getInit_declarator_listAccess().getInit_declarator_list_linhaInit_declarator_list_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_init_declarator_list_linha_1_0=ruleinit_declarator_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getInit_declarator_listRule());
              					}
              					set(
              						current,
              						"init_declarator_list_linha",
              						lv_init_declarator_list_linha_1_0,
              						"org.xtext.example.Ansic.init_declarator_list_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleinit_declarator_list"


    // $ANTLR start "entryRuleinit_declarator_list_linha"
    // InternalAnsic.g:10484:1: entryRuleinit_declarator_list_linha returns [EObject current=null] : iv_ruleinit_declarator_list_linha= ruleinit_declarator_list_linha EOF ;
    public final EObject entryRuleinit_declarator_list_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleinit_declarator_list_linha = null;


        try {
            // InternalAnsic.g:10484:67: (iv_ruleinit_declarator_list_linha= ruleinit_declarator_list_linha EOF )
            // InternalAnsic.g:10485:2: iv_ruleinit_declarator_list_linha= ruleinit_declarator_list_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInit_declarator_list_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleinit_declarator_list_linha=ruleinit_declarator_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleinit_declarator_list_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleinit_declarator_list_linha"


    // $ANTLR start "ruleinit_declarator_list_linha"
    // InternalAnsic.g:10491:1: ruleinit_declarator_list_linha returns [EObject current=null] : ( () (otherlv_1= ',' ( (lv_init_declarator_2_0= ruleinit_declarator ) ) ( (lv_init_declarator_list_linha_3_0= ruleinit_declarator_list_linha ) ) )? ) ;
    public final EObject ruleinit_declarator_list_linha() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_init_declarator_2_0 = null;

        EObject lv_init_declarator_list_linha_3_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:10497:2: ( ( () (otherlv_1= ',' ( (lv_init_declarator_2_0= ruleinit_declarator ) ) ( (lv_init_declarator_list_linha_3_0= ruleinit_declarator_list_linha ) ) )? ) )
            // InternalAnsic.g:10498:2: ( () (otherlv_1= ',' ( (lv_init_declarator_2_0= ruleinit_declarator ) ) ( (lv_init_declarator_list_linha_3_0= ruleinit_declarator_list_linha ) ) )? )
            {
            // InternalAnsic.g:10498:2: ( () (otherlv_1= ',' ( (lv_init_declarator_2_0= ruleinit_declarator ) ) ( (lv_init_declarator_list_linha_3_0= ruleinit_declarator_list_linha ) ) )? )
            // InternalAnsic.g:10499:3: () (otherlv_1= ',' ( (lv_init_declarator_2_0= ruleinit_declarator ) ) ( (lv_init_declarator_list_linha_3_0= ruleinit_declarator_list_linha ) ) )?
            {
            // InternalAnsic.g:10499:3: ()
            // InternalAnsic.g:10500:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getInit_declarator_list_linhaAccess().getInitDecclaratorListLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:10509:3: (otherlv_1= ',' ( (lv_init_declarator_2_0= ruleinit_declarator ) ) ( (lv_init_declarator_list_linha_3_0= ruleinit_declarator_list_linha ) ) )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==56) ) {
                int LA83_1 = input.LA(2);

                if ( (LA83_1==RULE_IDZ||LA83_1==34||LA83_1==67) ) {
                    alt83=1;
                }
            }
            switch (alt83) {
                case 1 :
                    // InternalAnsic.g:10510:4: otherlv_1= ',' ( (lv_init_declarator_2_0= ruleinit_declarator ) ) ( (lv_init_declarator_list_linha_3_0= ruleinit_declarator_list_linha ) )
                    {
                    otherlv_1=(Token)match(input,56,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getInit_declarator_list_linhaAccess().getCommaKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:10514:4: ( (lv_init_declarator_2_0= ruleinit_declarator ) )
                    // InternalAnsic.g:10515:5: (lv_init_declarator_2_0= ruleinit_declarator )
                    {
                    // InternalAnsic.g:10515:5: (lv_init_declarator_2_0= ruleinit_declarator )
                    // InternalAnsic.g:10516:6: lv_init_declarator_2_0= ruleinit_declarator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInit_declarator_list_linhaAccess().getInit_declaratorInit_declaratorParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_init_declarator_2_0=ruleinit_declarator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInit_declarator_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"init_declarator",
                      							lv_init_declarator_2_0,
                      							"org.xtext.example.Ansic.init_declarator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:10533:4: ( (lv_init_declarator_list_linha_3_0= ruleinit_declarator_list_linha ) )
                    // InternalAnsic.g:10534:5: (lv_init_declarator_list_linha_3_0= ruleinit_declarator_list_linha )
                    {
                    // InternalAnsic.g:10534:5: (lv_init_declarator_list_linha_3_0= ruleinit_declarator_list_linha )
                    // InternalAnsic.g:10535:6: lv_init_declarator_list_linha_3_0= ruleinit_declarator_list_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInit_declarator_list_linhaAccess().getInit_declarator_list_linhaInit_declarator_list_linhaParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_init_declarator_list_linha_3_0=ruleinit_declarator_list_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInit_declarator_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"init_declarator_list_linha",
                      							lv_init_declarator_list_linha_3_0,
                      							"org.xtext.example.Ansic.init_declarator_list_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleinit_declarator_list_linha"


    // $ANTLR start "entryRuleinit_declarator"
    // InternalAnsic.g:10557:1: entryRuleinit_declarator returns [EObject current=null] : iv_ruleinit_declarator= ruleinit_declarator EOF ;
    public final EObject entryRuleinit_declarator() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleinit_declarator = null;


        try {
            // InternalAnsic.g:10557:56: (iv_ruleinit_declarator= ruleinit_declarator EOF )
            // InternalAnsic.g:10558:2: iv_ruleinit_declarator= ruleinit_declarator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInit_declaratorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleinit_declarator=ruleinit_declarator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleinit_declarator; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleinit_declarator"


    // $ANTLR start "ruleinit_declarator"
    // InternalAnsic.g:10564:1: ruleinit_declarator returns [EObject current=null] : ( ( ( (lv_declarator_0_0= ruledeclarator ) ) otherlv_1= '=' ( (lv_initializer_2_0= ruleinitializer ) ) ) | ( (lv_declarator_3_0= ruledeclarator ) ) ) ;
    public final EObject ruleinit_declarator() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_declarator_0_0 = null;

        EObject lv_initializer_2_0 = null;

        EObject lv_declarator_3_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:10570:2: ( ( ( ( (lv_declarator_0_0= ruledeclarator ) ) otherlv_1= '=' ( (lv_initializer_2_0= ruleinitializer ) ) ) | ( (lv_declarator_3_0= ruledeclarator ) ) ) )
            // InternalAnsic.g:10571:2: ( ( ( (lv_declarator_0_0= ruledeclarator ) ) otherlv_1= '=' ( (lv_initializer_2_0= ruleinitializer ) ) ) | ( (lv_declarator_3_0= ruledeclarator ) ) )
            {
            // InternalAnsic.g:10571:2: ( ( ( (lv_declarator_0_0= ruledeclarator ) ) otherlv_1= '=' ( (lv_initializer_2_0= ruleinitializer ) ) ) | ( (lv_declarator_3_0= ruledeclarator ) ) )
            int alt84=2;
            switch ( input.LA(1) ) {
            case 67:
                {
                int LA84_1 = input.LA(2);

                if ( (synpred192_InternalAnsic()) ) {
                    alt84=1;
                }
                else if ( (true) ) {
                    alt84=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 84, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_IDZ:
                {
                int LA84_2 = input.LA(2);

                if ( (synpred192_InternalAnsic()) ) {
                    alt84=1;
                }
                else if ( (true) ) {
                    alt84=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 84, 2, input);

                    throw nvae;
                }
                }
                break;
            case 34:
                {
                int LA84_3 = input.LA(2);

                if ( (synpred192_InternalAnsic()) ) {
                    alt84=1;
                }
                else if ( (true) ) {
                    alt84=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 84, 3, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 84, 0, input);

                throw nvae;
            }

            switch (alt84) {
                case 1 :
                    // InternalAnsic.g:10572:3: ( ( (lv_declarator_0_0= ruledeclarator ) ) otherlv_1= '=' ( (lv_initializer_2_0= ruleinitializer ) ) )
                    {
                    // InternalAnsic.g:10572:3: ( ( (lv_declarator_0_0= ruledeclarator ) ) otherlv_1= '=' ( (lv_initializer_2_0= ruleinitializer ) ) )
                    // InternalAnsic.g:10573:4: ( (lv_declarator_0_0= ruledeclarator ) ) otherlv_1= '=' ( (lv_initializer_2_0= ruleinitializer ) )
                    {
                    // InternalAnsic.g:10573:4: ( (lv_declarator_0_0= ruledeclarator ) )
                    // InternalAnsic.g:10574:5: (lv_declarator_0_0= ruledeclarator )
                    {
                    // InternalAnsic.g:10574:5: (lv_declarator_0_0= ruledeclarator )
                    // InternalAnsic.g:10575:6: lv_declarator_0_0= ruledeclarator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInit_declaratorAccess().getDeclaratorDeclaratorParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_13);
                    lv_declarator_0_0=ruledeclarator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInit_declaratorRule());
                      						}
                      						set(
                      							current,
                      							"declarator",
                      							lv_declarator_0_0,
                      							"org.xtext.example.Ansic.declarator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,57,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getInit_declaratorAccess().getEqualsSignKeyword_0_1());
                      			
                    }
                    // InternalAnsic.g:10596:4: ( (lv_initializer_2_0= ruleinitializer ) )
                    // InternalAnsic.g:10597:5: (lv_initializer_2_0= ruleinitializer )
                    {
                    // InternalAnsic.g:10597:5: (lv_initializer_2_0= ruleinitializer )
                    // InternalAnsic.g:10598:6: lv_initializer_2_0= ruleinitializer
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInit_declaratorAccess().getInitializerInitializerParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_initializer_2_0=ruleinitializer();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInit_declaratorRule());
                      						}
                      						set(
                      							current,
                      							"initializer",
                      							lv_initializer_2_0,
                      							"org.xtext.example.Ansic.initializer");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:10617:3: ( (lv_declarator_3_0= ruledeclarator ) )
                    {
                    // InternalAnsic.g:10617:3: ( (lv_declarator_3_0= ruledeclarator ) )
                    // InternalAnsic.g:10618:4: (lv_declarator_3_0= ruledeclarator )
                    {
                    // InternalAnsic.g:10618:4: (lv_declarator_3_0= ruledeclarator )
                    // InternalAnsic.g:10619:5: lv_declarator_3_0= ruledeclarator
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getInit_declaratorAccess().getDeclaratorDeclaratorParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_declarator_3_0=ruledeclarator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getInit_declaratorRule());
                      					}
                      					set(
                      						current,
                      						"declarator",
                      						lv_declarator_3_0,
                      						"org.xtext.example.Ansic.declarator");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleinit_declarator"


    // $ANTLR start "entryRuleconstant"
    // InternalAnsic.g:10640:1: entryRuleconstant returns [EObject current=null] : iv_ruleconstant= ruleconstant EOF ;
    public final EObject entryRuleconstant() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleconstant = null;


        try {
            // InternalAnsic.g:10640:49: (iv_ruleconstant= ruleconstant EOF )
            // InternalAnsic.g:10641:2: iv_ruleconstant= ruleconstant EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstantRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleconstant=ruleconstant();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleconstant; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleconstant"


    // $ANTLR start "ruleconstant"
    // InternalAnsic.g:10647:1: ruleconstant returns [EObject current=null] : ( ( (lv_i_constant_0_0= RULE_INT ) ) | ( (lv_f_constant_1_0= RULE_FLOAT ) ) | ( (lv_char_2_0= RULE_CHAR ) ) | ( (lv_enumz_3_0= 'enum' ) ) ) ;
    public final EObject ruleconstant() throws RecognitionException {
        EObject current = null;

        Token lv_i_constant_0_0=null;
        Token lv_f_constant_1_0=null;
        Token lv_char_2_0=null;
        Token lv_enumz_3_0=null;


        	enterRule();

        try {
            // InternalAnsic.g:10653:2: ( ( ( (lv_i_constant_0_0= RULE_INT ) ) | ( (lv_f_constant_1_0= RULE_FLOAT ) ) | ( (lv_char_2_0= RULE_CHAR ) ) | ( (lv_enumz_3_0= 'enum' ) ) ) )
            // InternalAnsic.g:10654:2: ( ( (lv_i_constant_0_0= RULE_INT ) ) | ( (lv_f_constant_1_0= RULE_FLOAT ) ) | ( (lv_char_2_0= RULE_CHAR ) ) | ( (lv_enumz_3_0= 'enum' ) ) )
            {
            // InternalAnsic.g:10654:2: ( ( (lv_i_constant_0_0= RULE_INT ) ) | ( (lv_f_constant_1_0= RULE_FLOAT ) ) | ( (lv_char_2_0= RULE_CHAR ) ) | ( (lv_enumz_3_0= 'enum' ) ) )
            int alt85=4;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt85=1;
                }
                break;
            case RULE_FLOAT:
                {
                alt85=2;
                }
                break;
            case RULE_CHAR:
                {
                alt85=3;
                }
                break;
            case 53:
                {
                alt85=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 85, 0, input);

                throw nvae;
            }

            switch (alt85) {
                case 1 :
                    // InternalAnsic.g:10655:3: ( (lv_i_constant_0_0= RULE_INT ) )
                    {
                    // InternalAnsic.g:10655:3: ( (lv_i_constant_0_0= RULE_INT ) )
                    // InternalAnsic.g:10656:4: (lv_i_constant_0_0= RULE_INT )
                    {
                    // InternalAnsic.g:10656:4: (lv_i_constant_0_0= RULE_INT )
                    // InternalAnsic.g:10657:5: lv_i_constant_0_0= RULE_INT
                    {
                    lv_i_constant_0_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_i_constant_0_0, grammarAccess.getConstantAccess().getI_constantINTTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getConstantRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"i_constant",
                      						lv_i_constant_0_0,
                      						"org.eclipse.xtext.common.Terminals.INT");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:10674:3: ( (lv_f_constant_1_0= RULE_FLOAT ) )
                    {
                    // InternalAnsic.g:10674:3: ( (lv_f_constant_1_0= RULE_FLOAT ) )
                    // InternalAnsic.g:10675:4: (lv_f_constant_1_0= RULE_FLOAT )
                    {
                    // InternalAnsic.g:10675:4: (lv_f_constant_1_0= RULE_FLOAT )
                    // InternalAnsic.g:10676:5: lv_f_constant_1_0= RULE_FLOAT
                    {
                    lv_f_constant_1_0=(Token)match(input,RULE_FLOAT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_f_constant_1_0, grammarAccess.getConstantAccess().getF_constantFLOATTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getConstantRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"f_constant",
                      						lv_f_constant_1_0,
                      						"org.xtext.example.Ansic.FLOAT");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:10693:3: ( (lv_char_2_0= RULE_CHAR ) )
                    {
                    // InternalAnsic.g:10693:3: ( (lv_char_2_0= RULE_CHAR ) )
                    // InternalAnsic.g:10694:4: (lv_char_2_0= RULE_CHAR )
                    {
                    // InternalAnsic.g:10694:4: (lv_char_2_0= RULE_CHAR )
                    // InternalAnsic.g:10695:5: lv_char_2_0= RULE_CHAR
                    {
                    lv_char_2_0=(Token)match(input,RULE_CHAR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_char_2_0, grammarAccess.getConstantAccess().getCharCHARTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getConstantRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"char",
                      						lv_char_2_0,
                      						"org.xtext.example.Ansic.CHAR");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalAnsic.g:10712:3: ( (lv_enumz_3_0= 'enum' ) )
                    {
                    // InternalAnsic.g:10712:3: ( (lv_enumz_3_0= 'enum' ) )
                    // InternalAnsic.g:10713:4: (lv_enumz_3_0= 'enum' )
                    {
                    // InternalAnsic.g:10713:4: (lv_enumz_3_0= 'enum' )
                    // InternalAnsic.g:10714:5: lv_enumz_3_0= 'enum'
                    {
                    lv_enumz_3_0=(Token)match(input,53,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_enumz_3_0, grammarAccess.getConstantAccess().getEnumzEnumKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getConstantRule());
                      					}
                      					setWithLastConsumed(current, "enumz", lv_enumz_3_0, "enum");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleconstant"

    // $ANTLR start synpred1_InternalAnsic
    public final void synpred1_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_function_definitio_0_0 = null;


        // InternalAnsic.g:178:3: ( ( (lv_function_definitio_0_0= rulefunction_definition ) ) )
        // InternalAnsic.g:178:3: ( (lv_function_definitio_0_0= rulefunction_definition ) )
        {
        // InternalAnsic.g:178:3: ( (lv_function_definitio_0_0= rulefunction_definition ) )
        // InternalAnsic.g:179:4: (lv_function_definitio_0_0= rulefunction_definition )
        {
        // InternalAnsic.g:179:4: (lv_function_definitio_0_0= rulefunction_definition )
        // InternalAnsic.g:180:5: lv_function_definitio_0_0= rulefunction_definition
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getExternal_declarationAccess().getFunction_definitioFunction_definitionParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_definitio_0_0=rulefunction_definition();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred1_InternalAnsic

    // $ANTLR start synpred2_InternalAnsic
    public final void synpred2_InternalAnsic_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_storage_class_specifier_0_0 = null;

        EObject lv_declaration_specifiers_1_0 = null;


        // InternalAnsic.g:236:3: ( ( ( (lv_storage_class_specifier_0_0= rulestorage_class_specifier ) ) ( (lv_declaration_specifiers_1_0= ruledeclaration_specifiers ) ) ) )
        // InternalAnsic.g:236:3: ( ( (lv_storage_class_specifier_0_0= rulestorage_class_specifier ) ) ( (lv_declaration_specifiers_1_0= ruledeclaration_specifiers ) ) )
        {
        // InternalAnsic.g:236:3: ( ( (lv_storage_class_specifier_0_0= rulestorage_class_specifier ) ) ( (lv_declaration_specifiers_1_0= ruledeclaration_specifiers ) ) )
        // InternalAnsic.g:237:4: ( (lv_storage_class_specifier_0_0= rulestorage_class_specifier ) ) ( (lv_declaration_specifiers_1_0= ruledeclaration_specifiers ) )
        {
        // InternalAnsic.g:237:4: ( (lv_storage_class_specifier_0_0= rulestorage_class_specifier ) )
        // InternalAnsic.g:238:5: (lv_storage_class_specifier_0_0= rulestorage_class_specifier )
        {
        // InternalAnsic.g:238:5: (lv_storage_class_specifier_0_0= rulestorage_class_specifier )
        // InternalAnsic.g:239:6: lv_storage_class_specifier_0_0= rulestorage_class_specifier
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getStorage_class_specifierStorage_class_specifierParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_storage_class_specifier_0_0=rulestorage_class_specifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:256:4: ( (lv_declaration_specifiers_1_0= ruledeclaration_specifiers ) )
        // InternalAnsic.g:257:5: (lv_declaration_specifiers_1_0= ruledeclaration_specifiers )
        {
        // InternalAnsic.g:257:5: (lv_declaration_specifiers_1_0= ruledeclaration_specifiers )
        // InternalAnsic.g:258:6: lv_declaration_specifiers_1_0= ruledeclaration_specifiers
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_declaration_specifiers_1_0=ruledeclaration_specifiers();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred2_InternalAnsic

    // $ANTLR start synpred3_InternalAnsic
    public final void synpred3_InternalAnsic_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_storage_class_specifier_2_0 = null;


        // InternalAnsic.g:277:3: ( ( (lv_storage_class_specifier_2_0= rulestorage_class_specifier ) ) )
        // InternalAnsic.g:277:3: ( (lv_storage_class_specifier_2_0= rulestorage_class_specifier ) )
        {
        // InternalAnsic.g:277:3: ( (lv_storage_class_specifier_2_0= rulestorage_class_specifier ) )
        // InternalAnsic.g:278:4: (lv_storage_class_specifier_2_0= rulestorage_class_specifier )
        {
        // InternalAnsic.g:278:4: (lv_storage_class_specifier_2_0= rulestorage_class_specifier )
        // InternalAnsic.g:279:5: lv_storage_class_specifier_2_0= rulestorage_class_specifier
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getStorage_class_specifierStorage_class_specifierParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_storage_class_specifier_2_0=rulestorage_class_specifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred3_InternalAnsic

    // $ANTLR start synpred4_InternalAnsic
    public final void synpred4_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_type_specifier_3_0 = null;

        EObject lv_declaration_specifiers_4_0 = null;


        // InternalAnsic.g:297:3: ( ( ( (lv_type_specifier_3_0= ruletype_specifier ) ) ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) ) )
        // InternalAnsic.g:297:3: ( ( (lv_type_specifier_3_0= ruletype_specifier ) ) ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) )
        {
        // InternalAnsic.g:297:3: ( ( (lv_type_specifier_3_0= ruletype_specifier ) ) ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) )
        // InternalAnsic.g:298:4: ( (lv_type_specifier_3_0= ruletype_specifier ) ) ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) )
        {
        // InternalAnsic.g:298:4: ( (lv_type_specifier_3_0= ruletype_specifier ) )
        // InternalAnsic.g:299:5: (lv_type_specifier_3_0= ruletype_specifier )
        {
        // InternalAnsic.g:299:5: (lv_type_specifier_3_0= ruletype_specifier )
        // InternalAnsic.g:300:6: lv_type_specifier_3_0= ruletype_specifier
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getType_specifierType_specifierParserRuleCall_2_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_type_specifier_3_0=ruletype_specifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:317:4: ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) )
        // InternalAnsic.g:318:5: (lv_declaration_specifiers_4_0= ruledeclaration_specifiers )
        {
        // InternalAnsic.g:318:5: (lv_declaration_specifiers_4_0= ruledeclaration_specifiers )
        // InternalAnsic.g:319:6: lv_declaration_specifiers_4_0= ruledeclaration_specifiers
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_2_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_declaration_specifiers_4_0=ruledeclaration_specifiers();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred4_InternalAnsic

    // $ANTLR start synpred5_InternalAnsic
    public final void synpred5_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_type_specifier_5_0 = null;


        // InternalAnsic.g:338:3: ( ( (lv_type_specifier_5_0= ruletype_specifier ) ) )
        // InternalAnsic.g:338:3: ( (lv_type_specifier_5_0= ruletype_specifier ) )
        {
        // InternalAnsic.g:338:3: ( (lv_type_specifier_5_0= ruletype_specifier ) )
        // InternalAnsic.g:339:4: (lv_type_specifier_5_0= ruletype_specifier )
        {
        // InternalAnsic.g:339:4: (lv_type_specifier_5_0= ruletype_specifier )
        // InternalAnsic.g:340:5: lv_type_specifier_5_0= ruletype_specifier
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getType_specifierType_specifierParserRuleCall_3_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_type_specifier_5_0=ruletype_specifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred5_InternalAnsic

    // $ANTLR start synpred6_InternalAnsic
    public final void synpred6_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_type_qualifier_6_0 = null;

        EObject lv_declaration_specifiers_7_0 = null;


        // InternalAnsic.g:358:3: ( ( ( (lv_type_qualifier_6_0= ruletype_qualifier ) ) ( (lv_declaration_specifiers_7_0= ruledeclaration_specifiers ) ) ) )
        // InternalAnsic.g:358:3: ( ( (lv_type_qualifier_6_0= ruletype_qualifier ) ) ( (lv_declaration_specifiers_7_0= ruledeclaration_specifiers ) ) )
        {
        // InternalAnsic.g:358:3: ( ( (lv_type_qualifier_6_0= ruletype_qualifier ) ) ( (lv_declaration_specifiers_7_0= ruledeclaration_specifiers ) ) )
        // InternalAnsic.g:359:4: ( (lv_type_qualifier_6_0= ruletype_qualifier ) ) ( (lv_declaration_specifiers_7_0= ruledeclaration_specifiers ) )
        {
        // InternalAnsic.g:359:4: ( (lv_type_qualifier_6_0= ruletype_qualifier ) )
        // InternalAnsic.g:360:5: (lv_type_qualifier_6_0= ruletype_qualifier )
        {
        // InternalAnsic.g:360:5: (lv_type_qualifier_6_0= ruletype_qualifier )
        // InternalAnsic.g:361:6: lv_type_qualifier_6_0= ruletype_qualifier
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getType_qualifierType_qualifierParserRuleCall_4_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_type_qualifier_6_0=ruletype_qualifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:378:4: ( (lv_declaration_specifiers_7_0= ruledeclaration_specifiers ) )
        // InternalAnsic.g:379:5: (lv_declaration_specifiers_7_0= ruledeclaration_specifiers )
        {
        // InternalAnsic.g:379:5: (lv_declaration_specifiers_7_0= ruledeclaration_specifiers )
        // InternalAnsic.g:380:6: lv_declaration_specifiers_7_0= ruledeclaration_specifiers
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_4_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_declaration_specifiers_7_0=ruledeclaration_specifiers();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred6_InternalAnsic

    // $ANTLR start synpred7_InternalAnsic
    public final void synpred7_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_type_qualifier_8_0 = null;


        // InternalAnsic.g:399:3: ( ( (lv_type_qualifier_8_0= ruletype_qualifier ) ) )
        // InternalAnsic.g:399:3: ( (lv_type_qualifier_8_0= ruletype_qualifier ) )
        {
        // InternalAnsic.g:399:3: ( (lv_type_qualifier_8_0= ruletype_qualifier ) )
        // InternalAnsic.g:400:4: (lv_type_qualifier_8_0= ruletype_qualifier )
        {
        // InternalAnsic.g:400:4: (lv_type_qualifier_8_0= ruletype_qualifier )
        // InternalAnsic.g:401:5: lv_type_qualifier_8_0= ruletype_qualifier
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getType_qualifierType_qualifierParserRuleCall_5_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_type_qualifier_8_0=ruletype_qualifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred7_InternalAnsic

    // $ANTLR start synpred8_InternalAnsic
    public final void synpred8_InternalAnsic_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_function_specifier_9_0 = null;

        EObject lv_declaration_specifiers_10_0 = null;


        // InternalAnsic.g:419:3: ( ( ( (lv_function_specifier_9_0= rulefunction_specifier ) ) ( (lv_declaration_specifiers_10_0= ruledeclaration_specifiers ) ) ) )
        // InternalAnsic.g:419:3: ( ( (lv_function_specifier_9_0= rulefunction_specifier ) ) ( (lv_declaration_specifiers_10_0= ruledeclaration_specifiers ) ) )
        {
        // InternalAnsic.g:419:3: ( ( (lv_function_specifier_9_0= rulefunction_specifier ) ) ( (lv_declaration_specifiers_10_0= ruledeclaration_specifiers ) ) )
        // InternalAnsic.g:420:4: ( (lv_function_specifier_9_0= rulefunction_specifier ) ) ( (lv_declaration_specifiers_10_0= ruledeclaration_specifiers ) )
        {
        // InternalAnsic.g:420:4: ( (lv_function_specifier_9_0= rulefunction_specifier ) )
        // InternalAnsic.g:421:5: (lv_function_specifier_9_0= rulefunction_specifier )
        {
        // InternalAnsic.g:421:5: (lv_function_specifier_9_0= rulefunction_specifier )
        // InternalAnsic.g:422:6: lv_function_specifier_9_0= rulefunction_specifier
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getFunction_specifierFunction_specifierParserRuleCall_6_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_function_specifier_9_0=rulefunction_specifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:439:4: ( (lv_declaration_specifiers_10_0= ruledeclaration_specifiers ) )
        // InternalAnsic.g:440:5: (lv_declaration_specifiers_10_0= ruledeclaration_specifiers )
        {
        // InternalAnsic.g:440:5: (lv_declaration_specifiers_10_0= ruledeclaration_specifiers )
        // InternalAnsic.g:441:6: lv_declaration_specifiers_10_0= ruledeclaration_specifiers
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_6_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_declaration_specifiers_10_0=ruledeclaration_specifiers();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred8_InternalAnsic

    // $ANTLR start synpred9_InternalAnsic
    public final void synpred9_InternalAnsic_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_function_specifier_11_0 = null;


        // InternalAnsic.g:460:3: ( ( (lv_function_specifier_11_0= rulefunction_specifier ) ) )
        // InternalAnsic.g:460:3: ( (lv_function_specifier_11_0= rulefunction_specifier ) )
        {
        // InternalAnsic.g:460:3: ( (lv_function_specifier_11_0= rulefunction_specifier ) )
        // InternalAnsic.g:461:4: (lv_function_specifier_11_0= rulefunction_specifier )
        {
        // InternalAnsic.g:461:4: (lv_function_specifier_11_0= rulefunction_specifier )
        // InternalAnsic.g:462:5: lv_function_specifier_11_0= rulefunction_specifier
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getFunction_specifierFunction_specifierParserRuleCall_7_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_specifier_11_0=rulefunction_specifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred9_InternalAnsic

    // $ANTLR start synpred10_InternalAnsic
    public final void synpred10_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_alignment_specifier_12_0 = null;

        EObject lv_declaration_specifiers_13_0 = null;


        // InternalAnsic.g:480:3: ( ( ( (lv_alignment_specifier_12_0= rulealignment_specifier ) ) ( (lv_declaration_specifiers_13_0= ruledeclaration_specifiers ) ) ) )
        // InternalAnsic.g:480:3: ( ( (lv_alignment_specifier_12_0= rulealignment_specifier ) ) ( (lv_declaration_specifiers_13_0= ruledeclaration_specifiers ) ) )
        {
        // InternalAnsic.g:480:3: ( ( (lv_alignment_specifier_12_0= rulealignment_specifier ) ) ( (lv_declaration_specifiers_13_0= ruledeclaration_specifiers ) ) )
        // InternalAnsic.g:481:4: ( (lv_alignment_specifier_12_0= rulealignment_specifier ) ) ( (lv_declaration_specifiers_13_0= ruledeclaration_specifiers ) )
        {
        // InternalAnsic.g:481:4: ( (lv_alignment_specifier_12_0= rulealignment_specifier ) )
        // InternalAnsic.g:482:5: (lv_alignment_specifier_12_0= rulealignment_specifier )
        {
        // InternalAnsic.g:482:5: (lv_alignment_specifier_12_0= rulealignment_specifier )
        // InternalAnsic.g:483:6: lv_alignment_specifier_12_0= rulealignment_specifier
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getAlignment_specifierAlignment_specifierParserRuleCall_8_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_alignment_specifier_12_0=rulealignment_specifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:500:4: ( (lv_declaration_specifiers_13_0= ruledeclaration_specifiers ) )
        // InternalAnsic.g:501:5: (lv_declaration_specifiers_13_0= ruledeclaration_specifiers )
        {
        // InternalAnsic.g:501:5: (lv_declaration_specifiers_13_0= ruledeclaration_specifiers )
        // InternalAnsic.g:502:6: lv_declaration_specifiers_13_0= ruledeclaration_specifiers
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_8_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_declaration_specifiers_13_0=ruledeclaration_specifiers();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred10_InternalAnsic

    // $ANTLR start synpred31_InternalAnsic
    public final void synpred31_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_enumerator_list_2_0 = null;


        // InternalAnsic.g:1026:3: ( (otherlv_0= 'enum' otherlv_1= '{' ( (lv_enumerator_list_2_0= ruleenumerator_list ) ) otherlv_3= '}' ) )
        // InternalAnsic.g:1026:3: (otherlv_0= 'enum' otherlv_1= '{' ( (lv_enumerator_list_2_0= ruleenumerator_list ) ) otherlv_3= '}' )
        {
        // InternalAnsic.g:1026:3: (otherlv_0= 'enum' otherlv_1= '{' ( (lv_enumerator_list_2_0= ruleenumerator_list ) ) otherlv_3= '}' )
        // InternalAnsic.g:1027:4: otherlv_0= 'enum' otherlv_1= '{' ( (lv_enumerator_list_2_0= ruleenumerator_list ) ) otherlv_3= '}'
        {
        otherlv_0=(Token)match(input,53,FOLLOW_9); if (state.failed) return ;
        otherlv_1=(Token)match(input,54,FOLLOW_10); if (state.failed) return ;
        // InternalAnsic.g:1035:4: ( (lv_enumerator_list_2_0= ruleenumerator_list ) )
        // InternalAnsic.g:1036:5: (lv_enumerator_list_2_0= ruleenumerator_list )
        {
        // InternalAnsic.g:1036:5: (lv_enumerator_list_2_0= ruleenumerator_list )
        // InternalAnsic.g:1037:6: lv_enumerator_list_2_0= ruleenumerator_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getEnum_specifierAccess().getEnumerator_listEnumerator_listParserRuleCall_0_2_0());
          					
        }
        pushFollow(FOLLOW_11);
        lv_enumerator_list_2_0=ruleenumerator_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_3=(Token)match(input,55,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred31_InternalAnsic

    // $ANTLR start synpred32_InternalAnsic
    public final void synpred32_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_enumerator_list_6_0 = null;


        // InternalAnsic.g:1060:3: ( (otherlv_4= 'enum' otherlv_5= '{' ( (lv_enumerator_list_6_0= ruleenumerator_list ) ) otherlv_7= ',' otherlv_8= '}' ) )
        // InternalAnsic.g:1060:3: (otherlv_4= 'enum' otherlv_5= '{' ( (lv_enumerator_list_6_0= ruleenumerator_list ) ) otherlv_7= ',' otherlv_8= '}' )
        {
        // InternalAnsic.g:1060:3: (otherlv_4= 'enum' otherlv_5= '{' ( (lv_enumerator_list_6_0= ruleenumerator_list ) ) otherlv_7= ',' otherlv_8= '}' )
        // InternalAnsic.g:1061:4: otherlv_4= 'enum' otherlv_5= '{' ( (lv_enumerator_list_6_0= ruleenumerator_list ) ) otherlv_7= ',' otherlv_8= '}'
        {
        otherlv_4=(Token)match(input,53,FOLLOW_9); if (state.failed) return ;
        otherlv_5=(Token)match(input,54,FOLLOW_10); if (state.failed) return ;
        // InternalAnsic.g:1069:4: ( (lv_enumerator_list_6_0= ruleenumerator_list ) )
        // InternalAnsic.g:1070:5: (lv_enumerator_list_6_0= ruleenumerator_list )
        {
        // InternalAnsic.g:1070:5: (lv_enumerator_list_6_0= ruleenumerator_list )
        // InternalAnsic.g:1071:6: lv_enumerator_list_6_0= ruleenumerator_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getEnum_specifierAccess().getEnumerator_listEnumerator_listParserRuleCall_1_2_0());
          					
        }
        pushFollow(FOLLOW_12);
        lv_enumerator_list_6_0=ruleenumerator_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_7=(Token)match(input,56,FOLLOW_11); if (state.failed) return ;
        otherlv_8=(Token)match(input,55,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred32_InternalAnsic

    // $ANTLR start synpred33_InternalAnsic
    public final void synpred33_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_9=null;
        Token lv_identifier_10_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_enumerator_list_12_0 = null;


        // InternalAnsic.g:1098:3: ( (otherlv_9= 'enum' ( (lv_identifier_10_0= RULE_IDZ ) ) otherlv_11= '{' ( (lv_enumerator_list_12_0= ruleenumerator_list ) ) otherlv_13= '}' ) )
        // InternalAnsic.g:1098:3: (otherlv_9= 'enum' ( (lv_identifier_10_0= RULE_IDZ ) ) otherlv_11= '{' ( (lv_enumerator_list_12_0= ruleenumerator_list ) ) otherlv_13= '}' )
        {
        // InternalAnsic.g:1098:3: (otherlv_9= 'enum' ( (lv_identifier_10_0= RULE_IDZ ) ) otherlv_11= '{' ( (lv_enumerator_list_12_0= ruleenumerator_list ) ) otherlv_13= '}' )
        // InternalAnsic.g:1099:4: otherlv_9= 'enum' ( (lv_identifier_10_0= RULE_IDZ ) ) otherlv_11= '{' ( (lv_enumerator_list_12_0= ruleenumerator_list ) ) otherlv_13= '}'
        {
        otherlv_9=(Token)match(input,53,FOLLOW_10); if (state.failed) return ;
        // InternalAnsic.g:1103:4: ( (lv_identifier_10_0= RULE_IDZ ) )
        // InternalAnsic.g:1104:5: (lv_identifier_10_0= RULE_IDZ )
        {
        // InternalAnsic.g:1104:5: (lv_identifier_10_0= RULE_IDZ )
        // InternalAnsic.g:1105:6: lv_identifier_10_0= RULE_IDZ
        {
        lv_identifier_10_0=(Token)match(input,RULE_IDZ,FOLLOW_9); if (state.failed) return ;

        }


        }

        otherlv_11=(Token)match(input,54,FOLLOW_10); if (state.failed) return ;
        // InternalAnsic.g:1125:4: ( (lv_enumerator_list_12_0= ruleenumerator_list ) )
        // InternalAnsic.g:1126:5: (lv_enumerator_list_12_0= ruleenumerator_list )
        {
        // InternalAnsic.g:1126:5: (lv_enumerator_list_12_0= ruleenumerator_list )
        // InternalAnsic.g:1127:6: lv_enumerator_list_12_0= ruleenumerator_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getEnum_specifierAccess().getEnumerator_listEnumerator_listParserRuleCall_2_3_0());
          					
        }
        pushFollow(FOLLOW_11);
        lv_enumerator_list_12_0=ruleenumerator_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_13=(Token)match(input,55,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred33_InternalAnsic

    // $ANTLR start synpred34_InternalAnsic
    public final void synpred34_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        Token lv_identifier_15_0=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        EObject lv_enumerator_list_17_0 = null;


        // InternalAnsic.g:1150:3: ( (otherlv_14= 'enum' ( (lv_identifier_15_0= RULE_IDZ ) ) otherlv_16= '{' ( (lv_enumerator_list_17_0= ruleenumerator_list ) ) otherlv_18= ',' otherlv_19= '}' ) )
        // InternalAnsic.g:1150:3: (otherlv_14= 'enum' ( (lv_identifier_15_0= RULE_IDZ ) ) otherlv_16= '{' ( (lv_enumerator_list_17_0= ruleenumerator_list ) ) otherlv_18= ',' otherlv_19= '}' )
        {
        // InternalAnsic.g:1150:3: (otherlv_14= 'enum' ( (lv_identifier_15_0= RULE_IDZ ) ) otherlv_16= '{' ( (lv_enumerator_list_17_0= ruleenumerator_list ) ) otherlv_18= ',' otherlv_19= '}' )
        // InternalAnsic.g:1151:4: otherlv_14= 'enum' ( (lv_identifier_15_0= RULE_IDZ ) ) otherlv_16= '{' ( (lv_enumerator_list_17_0= ruleenumerator_list ) ) otherlv_18= ',' otherlv_19= '}'
        {
        otherlv_14=(Token)match(input,53,FOLLOW_10); if (state.failed) return ;
        // InternalAnsic.g:1155:4: ( (lv_identifier_15_0= RULE_IDZ ) )
        // InternalAnsic.g:1156:5: (lv_identifier_15_0= RULE_IDZ )
        {
        // InternalAnsic.g:1156:5: (lv_identifier_15_0= RULE_IDZ )
        // InternalAnsic.g:1157:6: lv_identifier_15_0= RULE_IDZ
        {
        lv_identifier_15_0=(Token)match(input,RULE_IDZ,FOLLOW_9); if (state.failed) return ;

        }


        }

        otherlv_16=(Token)match(input,54,FOLLOW_10); if (state.failed) return ;
        // InternalAnsic.g:1177:4: ( (lv_enumerator_list_17_0= ruleenumerator_list ) )
        // InternalAnsic.g:1178:5: (lv_enumerator_list_17_0= ruleenumerator_list )
        {
        // InternalAnsic.g:1178:5: (lv_enumerator_list_17_0= ruleenumerator_list )
        // InternalAnsic.g:1179:6: lv_enumerator_list_17_0= ruleenumerator_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getEnum_specifierAccess().getEnumerator_listEnumerator_listParserRuleCall_3_3_0());
          					
        }
        pushFollow(FOLLOW_12);
        lv_enumerator_list_17_0=ruleenumerator_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_18=(Token)match(input,56,FOLLOW_11); if (state.failed) return ;
        otherlv_19=(Token)match(input,55,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred34_InternalAnsic

    // $ANTLR start synpred41_InternalAnsic
    public final void synpred41_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_specifier_qualifier_list_0_0 = null;


        // InternalAnsic.g:1852:3: ( ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) otherlv_1= ';' ) )
        // InternalAnsic.g:1852:3: ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) otherlv_1= ';' )
        {
        // InternalAnsic.g:1852:3: ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) otherlv_1= ';' )
        // InternalAnsic.g:1853:4: ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) otherlv_1= ';'
        {
        // InternalAnsic.g:1853:4: ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) )
        // InternalAnsic.g:1854:5: (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list )
        {
        // InternalAnsic.g:1854:5: (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list )
        // InternalAnsic.g:1855:6: lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStruct_declarationAccess().getSpecifier_qualifier_listSpecifier_qualifier_listParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_14);
        lv_specifier_qualifier_list_0_0=rulespecifier_qualifier_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,60,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred41_InternalAnsic

    // $ANTLR start synpred42_InternalAnsic
    public final void synpred42_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        EObject lv_specifier_qualifier_list_2_0 = null;

        EObject lv_struct_declarator_list_3_0 = null;


        // InternalAnsic.g:1878:3: ( ( ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) ) ( (lv_struct_declarator_list_3_0= rulestruct_declarator_list ) ) otherlv_4= ';' ) )
        // InternalAnsic.g:1878:3: ( ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) ) ( (lv_struct_declarator_list_3_0= rulestruct_declarator_list ) ) otherlv_4= ';' )
        {
        // InternalAnsic.g:1878:3: ( ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) ) ( (lv_struct_declarator_list_3_0= rulestruct_declarator_list ) ) otherlv_4= ';' )
        // InternalAnsic.g:1879:4: ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) ) ( (lv_struct_declarator_list_3_0= rulestruct_declarator_list ) ) otherlv_4= ';'
        {
        // InternalAnsic.g:1879:4: ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) )
        // InternalAnsic.g:1880:5: (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list )
        {
        // InternalAnsic.g:1880:5: (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list )
        // InternalAnsic.g:1881:6: lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStruct_declarationAccess().getSpecifier_qualifier_listSpecifier_qualifier_listParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_15);
        lv_specifier_qualifier_list_2_0=rulespecifier_qualifier_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:1898:4: ( (lv_struct_declarator_list_3_0= rulestruct_declarator_list ) )
        // InternalAnsic.g:1899:5: (lv_struct_declarator_list_3_0= rulestruct_declarator_list )
        {
        // InternalAnsic.g:1899:5: (lv_struct_declarator_list_3_0= rulestruct_declarator_list )
        // InternalAnsic.g:1900:6: lv_struct_declarator_list_3_0= rulestruct_declarator_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStruct_declarationAccess().getStruct_declarator_listStruct_declarator_listParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_14);
        lv_struct_declarator_list_3_0=rulestruct_declarator_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_4=(Token)match(input,60,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred42_InternalAnsic

    // $ANTLR start synpred45_InternalAnsic
    public final void synpred45_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        EObject lv_declarator_2_0 = null;

        EObject lv_constant_expression_4_0 = null;


        // InternalAnsic.g:2117:3: ( ( ( (lv_declarator_2_0= ruledeclarator ) ) otherlv_3= ':' ( (lv_constant_expression_4_0= ruleconstant_expression ) ) ) )
        // InternalAnsic.g:2117:3: ( ( (lv_declarator_2_0= ruledeclarator ) ) otherlv_3= ':' ( (lv_constant_expression_4_0= ruleconstant_expression ) ) )
        {
        // InternalAnsic.g:2117:3: ( ( (lv_declarator_2_0= ruledeclarator ) ) otherlv_3= ':' ( (lv_constant_expression_4_0= ruleconstant_expression ) ) )
        // InternalAnsic.g:2118:4: ( (lv_declarator_2_0= ruledeclarator ) ) otherlv_3= ':' ( (lv_constant_expression_4_0= ruleconstant_expression ) )
        {
        // InternalAnsic.g:2118:4: ( (lv_declarator_2_0= ruledeclarator ) )
        // InternalAnsic.g:2119:5: (lv_declarator_2_0= ruledeclarator )
        {
        // InternalAnsic.g:2119:5: (lv_declarator_2_0= ruledeclarator )
        // InternalAnsic.g:2120:6: lv_declarator_2_0= ruledeclarator
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStruct_declaratorAccess().getDeclaratorDeclaratorParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_16);
        lv_declarator_2_0=ruledeclarator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_3=(Token)match(input,61,FOLLOW_8); if (state.failed) return ;
        // InternalAnsic.g:2141:4: ( (lv_constant_expression_4_0= ruleconstant_expression ) )
        // InternalAnsic.g:2142:5: (lv_constant_expression_4_0= ruleconstant_expression )
        {
        // InternalAnsic.g:2142:5: (lv_constant_expression_4_0= ruleconstant_expression )
        // InternalAnsic.g:2143:6: lv_constant_expression_4_0= ruleconstant_expression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStruct_declaratorAccess().getConstant_expressionConstant_expressionParserRuleCall_1_2_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_constant_expression_4_0=ruleconstant_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred45_InternalAnsic

    // $ANTLR start synpred46_InternalAnsic
    public final void synpred46_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_type_specifier_0_0 = null;

        EObject lv_specifier_qualifier_list_1_0 = null;


        // InternalAnsic.g:2200:3: ( ( ( (lv_type_specifier_0_0= ruletype_specifier ) ) ( (lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list ) ) ) )
        // InternalAnsic.g:2200:3: ( ( (lv_type_specifier_0_0= ruletype_specifier ) ) ( (lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list ) ) )
        {
        // InternalAnsic.g:2200:3: ( ( (lv_type_specifier_0_0= ruletype_specifier ) ) ( (lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list ) ) )
        // InternalAnsic.g:2201:4: ( (lv_type_specifier_0_0= ruletype_specifier ) ) ( (lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list ) )
        {
        // InternalAnsic.g:2201:4: ( (lv_type_specifier_0_0= ruletype_specifier ) )
        // InternalAnsic.g:2202:5: (lv_type_specifier_0_0= ruletype_specifier )
        {
        // InternalAnsic.g:2202:5: (lv_type_specifier_0_0= ruletype_specifier )
        // InternalAnsic.g:2203:6: lv_type_specifier_0_0= ruletype_specifier
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getSpecifier_qualifier_listAccess().getType_specifierType_specifierParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_6);
        lv_type_specifier_0_0=ruletype_specifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:2220:4: ( (lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list ) )
        // InternalAnsic.g:2221:5: (lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list )
        {
        // InternalAnsic.g:2221:5: (lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list )
        // InternalAnsic.g:2222:6: lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getSpecifier_qualifier_listAccess().getSpecifier_qualifier_listSpecifier_qualifier_listParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_specifier_qualifier_list_1_0=rulespecifier_qualifier_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred46_InternalAnsic

    // $ANTLR start synpred47_InternalAnsic
    public final void synpred47_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_type_specifier_2_0 = null;


        // InternalAnsic.g:2241:3: ( ( (lv_type_specifier_2_0= ruletype_specifier ) ) )
        // InternalAnsic.g:2241:3: ( (lv_type_specifier_2_0= ruletype_specifier ) )
        {
        // InternalAnsic.g:2241:3: ( (lv_type_specifier_2_0= ruletype_specifier ) )
        // InternalAnsic.g:2242:4: (lv_type_specifier_2_0= ruletype_specifier )
        {
        // InternalAnsic.g:2242:4: (lv_type_specifier_2_0= ruletype_specifier )
        // InternalAnsic.g:2243:5: lv_type_specifier_2_0= ruletype_specifier
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSpecifier_qualifier_listAccess().getType_specifierType_specifierParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_type_specifier_2_0=ruletype_specifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred47_InternalAnsic

    // $ANTLR start synpred48_InternalAnsic
    public final void synpred48_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_type_qualifier_3_0 = null;

        EObject lv_specifier_qualifier_list_4_0 = null;


        // InternalAnsic.g:2261:3: ( ( ( (lv_type_qualifier_3_0= ruletype_qualifier ) ) ( (lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list ) ) ) )
        // InternalAnsic.g:2261:3: ( ( (lv_type_qualifier_3_0= ruletype_qualifier ) ) ( (lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list ) ) )
        {
        // InternalAnsic.g:2261:3: ( ( (lv_type_qualifier_3_0= ruletype_qualifier ) ) ( (lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list ) ) )
        // InternalAnsic.g:2262:4: ( (lv_type_qualifier_3_0= ruletype_qualifier ) ) ( (lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list ) )
        {
        // InternalAnsic.g:2262:4: ( (lv_type_qualifier_3_0= ruletype_qualifier ) )
        // InternalAnsic.g:2263:5: (lv_type_qualifier_3_0= ruletype_qualifier )
        {
        // InternalAnsic.g:2263:5: (lv_type_qualifier_3_0= ruletype_qualifier )
        // InternalAnsic.g:2264:6: lv_type_qualifier_3_0= ruletype_qualifier
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getSpecifier_qualifier_listAccess().getType_qualifierType_qualifierParserRuleCall_2_0_0());
          					
        }
        pushFollow(FOLLOW_6);
        lv_type_qualifier_3_0=ruletype_qualifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:2281:4: ( (lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list ) )
        // InternalAnsic.g:2282:5: (lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list )
        {
        // InternalAnsic.g:2282:5: (lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list )
        // InternalAnsic.g:2283:6: lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getSpecifier_qualifier_listAccess().getSpecifier_qualifier_listSpecifier_qualifier_listParserRuleCall_2_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_specifier_qualifier_list_4_0=rulespecifier_qualifier_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred48_InternalAnsic

    // $ANTLR start synpred54_InternalAnsic
    public final void synpred54_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_declaration_specifiers_0_0 = null;


        // InternalAnsic.g:2394:3: ( ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) otherlv_1= ';' ) )
        // InternalAnsic.g:2394:3: ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) otherlv_1= ';' )
        {
        // InternalAnsic.g:2394:3: ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) otherlv_1= ';' )
        // InternalAnsic.g:2395:4: ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) otherlv_1= ';'
        {
        // InternalAnsic.g:2395:4: ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) )
        // InternalAnsic.g:2396:5: (lv_declaration_specifiers_0_0= ruledeclaration_specifiers )
        {
        // InternalAnsic.g:2396:5: (lv_declaration_specifiers_0_0= ruledeclaration_specifiers )
        // InternalAnsic.g:2397:6: lv_declaration_specifiers_0_0= ruledeclaration_specifiers
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDeclarationAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_14);
        lv_declaration_specifiers_0_0=ruledeclaration_specifiers();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,60,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred54_InternalAnsic

    // $ANTLR start synpred55_InternalAnsic
    public final void synpred55_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        EObject lv_declaration_specifiers_2_0 = null;

        EObject lv_init_declarator_list_3_0 = null;


        // InternalAnsic.g:2420:3: ( ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_init_declarator_list_3_0= ruleinit_declarator_list ) ) otherlv_4= ';' ) )
        // InternalAnsic.g:2420:3: ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_init_declarator_list_3_0= ruleinit_declarator_list ) ) otherlv_4= ';' )
        {
        // InternalAnsic.g:2420:3: ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_init_declarator_list_3_0= ruleinit_declarator_list ) ) otherlv_4= ';' )
        // InternalAnsic.g:2421:4: ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_init_declarator_list_3_0= ruleinit_declarator_list ) ) otherlv_4= ';'
        {
        // InternalAnsic.g:2421:4: ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) )
        // InternalAnsic.g:2422:5: (lv_declaration_specifiers_2_0= ruledeclaration_specifiers )
        {
        // InternalAnsic.g:2422:5: (lv_declaration_specifiers_2_0= ruledeclaration_specifiers )
        // InternalAnsic.g:2423:6: lv_declaration_specifiers_2_0= ruledeclaration_specifiers
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDeclarationAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_17);
        lv_declaration_specifiers_2_0=ruledeclaration_specifiers();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:2440:4: ( (lv_init_declarator_list_3_0= ruleinit_declarator_list ) )
        // InternalAnsic.g:2441:5: (lv_init_declarator_list_3_0= ruleinit_declarator_list )
        {
        // InternalAnsic.g:2441:5: (lv_init_declarator_list_3_0= ruleinit_declarator_list )
        // InternalAnsic.g:2442:6: lv_init_declarator_list_3_0= ruleinit_declarator_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDeclarationAccess().getInit_declarator_listInit_declarator_listParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_14);
        lv_init_declarator_list_3_0=ruleinit_declarator_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_4=(Token)match(input,60,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred55_InternalAnsic

    // $ANTLR start synpred56_InternalAnsic
    public final void synpred56_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_declaration_specifiers_0_0 = null;

        EObject lv_declarator_1_0 = null;

        EObject lv_declaration_list_2_0 = null;

        EObject lv_compound_statement_3_0 = null;


        // InternalAnsic.g:2503:3: ( ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) ( (lv_declaration_list_2_0= ruledeclaration_list ) ) ( (lv_compound_statement_3_0= rulecompound_statement ) ) ) )
        // InternalAnsic.g:2503:3: ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) ( (lv_declaration_list_2_0= ruledeclaration_list ) ) ( (lv_compound_statement_3_0= rulecompound_statement ) ) )
        {
        // InternalAnsic.g:2503:3: ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) ( (lv_declaration_list_2_0= ruledeclaration_list ) ) ( (lv_compound_statement_3_0= rulecompound_statement ) ) )
        // InternalAnsic.g:2504:4: ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) ( (lv_declaration_list_2_0= ruledeclaration_list ) ) ( (lv_compound_statement_3_0= rulecompound_statement ) )
        {
        // InternalAnsic.g:2504:4: ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) )
        // InternalAnsic.g:2505:5: (lv_declaration_specifiers_0_0= ruledeclaration_specifiers )
        {
        // InternalAnsic.g:2505:5: (lv_declaration_specifiers_0_0= ruledeclaration_specifiers )
        // InternalAnsic.g:2506:6: lv_declaration_specifiers_0_0= ruledeclaration_specifiers
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getFunction_definitionAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_17);
        lv_declaration_specifiers_0_0=ruledeclaration_specifiers();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:2523:4: ( (lv_declarator_1_0= ruledeclarator ) )
        // InternalAnsic.g:2524:5: (lv_declarator_1_0= ruledeclarator )
        {
        // InternalAnsic.g:2524:5: (lv_declarator_1_0= ruledeclarator )
        // InternalAnsic.g:2525:6: lv_declarator_1_0= ruledeclarator
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getFunction_definitionAccess().getDeclaratorDeclaratorParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_3);
        lv_declarator_1_0=ruledeclarator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:2542:4: ( (lv_declaration_list_2_0= ruledeclaration_list ) )
        // InternalAnsic.g:2543:5: (lv_declaration_list_2_0= ruledeclaration_list )
        {
        // InternalAnsic.g:2543:5: (lv_declaration_list_2_0= ruledeclaration_list )
        // InternalAnsic.g:2544:6: lv_declaration_list_2_0= ruledeclaration_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getFunction_definitionAccess().getDeclaration_listDeclaration_listParserRuleCall_0_2_0());
          					
        }
        pushFollow(FOLLOW_9);
        lv_declaration_list_2_0=ruledeclaration_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:2561:4: ( (lv_compound_statement_3_0= rulecompound_statement ) )
        // InternalAnsic.g:2562:5: (lv_compound_statement_3_0= rulecompound_statement )
        {
        // InternalAnsic.g:2562:5: (lv_compound_statement_3_0= rulecompound_statement )
        // InternalAnsic.g:2563:6: lv_compound_statement_3_0= rulecompound_statement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getFunction_definitionAccess().getCompound_statementCompound_statementParserRuleCall_0_3_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_compound_statement_3_0=rulecompound_statement();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred56_InternalAnsic

    // $ANTLR start synpred59_InternalAnsic
    public final void synpred59_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_0=null;
        EObject lv_type_qualifier_list_1_0 = null;

        EObject lv_pointer_2_0 = null;


        // InternalAnsic.g:2865:3: ( (otherlv_0= '*' ( (lv_type_qualifier_list_1_0= ruletype_qualifier_list ) ) ( (lv_pointer_2_0= rulepointer ) ) ) )
        // InternalAnsic.g:2865:3: (otherlv_0= '*' ( (lv_type_qualifier_list_1_0= ruletype_qualifier_list ) ) ( (lv_pointer_2_0= rulepointer ) ) )
        {
        // InternalAnsic.g:2865:3: (otherlv_0= '*' ( (lv_type_qualifier_list_1_0= ruletype_qualifier_list ) ) ( (lv_pointer_2_0= rulepointer ) ) )
        // InternalAnsic.g:2866:4: otherlv_0= '*' ( (lv_type_qualifier_list_1_0= ruletype_qualifier_list ) ) ( (lv_pointer_2_0= rulepointer ) )
        {
        otherlv_0=(Token)match(input,67,FOLLOW_18); if (state.failed) return ;
        // InternalAnsic.g:2870:4: ( (lv_type_qualifier_list_1_0= ruletype_qualifier_list ) )
        // InternalAnsic.g:2871:5: (lv_type_qualifier_list_1_0= ruletype_qualifier_list )
        {
        // InternalAnsic.g:2871:5: (lv_type_qualifier_list_1_0= ruletype_qualifier_list )
        // InternalAnsic.g:2872:6: lv_type_qualifier_list_1_0= ruletype_qualifier_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPointerAccess().getType_qualifier_listType_qualifier_listParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_19);
        lv_type_qualifier_list_1_0=ruletype_qualifier_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:2889:4: ( (lv_pointer_2_0= rulepointer ) )
        // InternalAnsic.g:2890:5: (lv_pointer_2_0= rulepointer )
        {
        // InternalAnsic.g:2890:5: (lv_pointer_2_0= rulepointer )
        // InternalAnsic.g:2891:6: lv_pointer_2_0= rulepointer
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPointerAccess().getPointerPointerParserRuleCall_0_2_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_pointer_2_0=rulepointer();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred59_InternalAnsic

    // $ANTLR start synpred60_InternalAnsic
    public final void synpred60_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        EObject lv_type_qualifier_list_4_0 = null;


        // InternalAnsic.g:2910:3: ( (otherlv_3= '*' ( (lv_type_qualifier_list_4_0= ruletype_qualifier_list ) ) ) )
        // InternalAnsic.g:2910:3: (otherlv_3= '*' ( (lv_type_qualifier_list_4_0= ruletype_qualifier_list ) ) )
        {
        // InternalAnsic.g:2910:3: (otherlv_3= '*' ( (lv_type_qualifier_list_4_0= ruletype_qualifier_list ) ) )
        // InternalAnsic.g:2911:4: otherlv_3= '*' ( (lv_type_qualifier_list_4_0= ruletype_qualifier_list ) )
        {
        otherlv_3=(Token)match(input,67,FOLLOW_18); if (state.failed) return ;
        // InternalAnsic.g:2915:4: ( (lv_type_qualifier_list_4_0= ruletype_qualifier_list ) )
        // InternalAnsic.g:2916:5: (lv_type_qualifier_list_4_0= ruletype_qualifier_list )
        {
        // InternalAnsic.g:2916:5: (lv_type_qualifier_list_4_0= ruletype_qualifier_list )
        // InternalAnsic.g:2917:6: lv_type_qualifier_list_4_0= ruletype_qualifier_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPointerAccess().getType_qualifier_listType_qualifier_listParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_type_qualifier_list_4_0=ruletype_qualifier_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred60_InternalAnsic

    // $ANTLR start synpred61_InternalAnsic
    public final void synpred61_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        EObject lv_pointer_6_0 = null;


        // InternalAnsic.g:2936:3: ( (otherlv_5= '*' ( (lv_pointer_6_0= rulepointer ) ) ) )
        // InternalAnsic.g:2936:3: (otherlv_5= '*' ( (lv_pointer_6_0= rulepointer ) ) )
        {
        // InternalAnsic.g:2936:3: (otherlv_5= '*' ( (lv_pointer_6_0= rulepointer ) ) )
        // InternalAnsic.g:2937:4: otherlv_5= '*' ( (lv_pointer_6_0= rulepointer ) )
        {
        otherlv_5=(Token)match(input,67,FOLLOW_19); if (state.failed) return ;
        // InternalAnsic.g:2941:4: ( (lv_pointer_6_0= rulepointer ) )
        // InternalAnsic.g:2942:5: (lv_pointer_6_0= rulepointer )
        {
        // InternalAnsic.g:2942:5: (lv_pointer_6_0= rulepointer )
        // InternalAnsic.g:2943:6: lv_pointer_6_0= rulepointer
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPointerAccess().getPointerPointerParserRuleCall_2_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_pointer_6_0=rulepointer();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred61_InternalAnsic

    // $ANTLR start synpred65_InternalAnsic
    public final void synpred65_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_0=null;
        Token otherlv_1=null;

        // InternalAnsic.g:3275:3: ( (otherlv_0= '[' otherlv_1= ']' ) )
        // InternalAnsic.g:3275:3: (otherlv_0= '[' otherlv_1= ']' )
        {
        // InternalAnsic.g:3275:3: (otherlv_0= '[' otherlv_1= ']' )
        // InternalAnsic.g:3276:4: otherlv_0= '[' otherlv_1= ']'
        {
        otherlv_0=(Token)match(input,68,FOLLOW_21); if (state.failed) return ;
        otherlv_1=(Token)match(input,69,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred65_InternalAnsic

    // $ANTLR start synpred66_InternalAnsic
    public final void synpred66_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;

        // InternalAnsic.g:3286:3: ( (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' ) )
        // InternalAnsic.g:3286:3: (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' )
        {
        // InternalAnsic.g:3286:3: (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' )
        // InternalAnsic.g:3287:4: otherlv_2= '[' otherlv_3= '*' otherlv_4= ']'
        {
        otherlv_2=(Token)match(input,68,FOLLOW_19); if (state.failed) return ;
        otherlv_3=(Token)match(input,67,FOLLOW_21); if (state.failed) return ;
        otherlv_4=(Token)match(input,69,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred66_InternalAnsic

    // $ANTLR start synpred67_InternalAnsic
    public final void synpred67_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        EObject lv_type_qualifier_list_7_0 = null;

        EObject lv_assignment_expression_8_0 = null;


        // InternalAnsic.g:3301:3: ( (otherlv_5= '[' otherlv_6= 'static' ( (lv_type_qualifier_list_7_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' ) )
        // InternalAnsic.g:3301:3: (otherlv_5= '[' otherlv_6= 'static' ( (lv_type_qualifier_list_7_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' )
        {
        // InternalAnsic.g:3301:3: (otherlv_5= '[' otherlv_6= 'static' ( (lv_type_qualifier_list_7_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' )
        // InternalAnsic.g:3302:4: otherlv_5= '[' otherlv_6= 'static' ( (lv_type_qualifier_list_7_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']'
        {
        otherlv_5=(Token)match(input,68,FOLLOW_22); if (state.failed) return ;
        otherlv_6=(Token)match(input,63,FOLLOW_18); if (state.failed) return ;
        // InternalAnsic.g:3310:4: ( (lv_type_qualifier_list_7_0= ruletype_qualifier_list ) )
        // InternalAnsic.g:3311:5: (lv_type_qualifier_list_7_0= ruletype_qualifier_list )
        {
        // InternalAnsic.g:3311:5: (lv_type_qualifier_list_7_0= ruletype_qualifier_list )
        // InternalAnsic.g:3312:6: lv_type_qualifier_list_7_0= ruletype_qualifier_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getType_qualifier_listType_qualifier_listParserRuleCall_2_2_0());
          					
        }
        pushFollow(FOLLOW_8);
        lv_type_qualifier_list_7_0=ruletype_qualifier_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:3329:4: ( (lv_assignment_expression_8_0= ruleassignment_expression ) )
        // InternalAnsic.g:3330:5: (lv_assignment_expression_8_0= ruleassignment_expression )
        {
        // InternalAnsic.g:3330:5: (lv_assignment_expression_8_0= ruleassignment_expression )
        // InternalAnsic.g:3331:6: lv_assignment_expression_8_0= ruleassignment_expression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getAssignment_expressionAssignment_expressionParserRuleCall_2_3_0());
          					
        }
        pushFollow(FOLLOW_21);
        lv_assignment_expression_8_0=ruleassignment_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_9=(Token)match(input,69,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred67_InternalAnsic

    // $ANTLR start synpred68_InternalAnsic
    public final void synpred68_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_assignment_expression_12_0 = null;


        // InternalAnsic.g:3354:3: ( (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' ) )
        // InternalAnsic.g:3354:3: (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' )
        {
        // InternalAnsic.g:3354:3: (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' )
        // InternalAnsic.g:3355:4: otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']'
        {
        otherlv_10=(Token)match(input,68,FOLLOW_22); if (state.failed) return ;
        otherlv_11=(Token)match(input,63,FOLLOW_8); if (state.failed) return ;
        // InternalAnsic.g:3363:4: ( (lv_assignment_expression_12_0= ruleassignment_expression ) )
        // InternalAnsic.g:3364:5: (lv_assignment_expression_12_0= ruleassignment_expression )
        {
        // InternalAnsic.g:3364:5: (lv_assignment_expression_12_0= ruleassignment_expression )
        // InternalAnsic.g:3365:6: lv_assignment_expression_12_0= ruleassignment_expression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getAssignment_expressionAssignment_expressionParserRuleCall_3_2_0());
          					
        }
        pushFollow(FOLLOW_21);
        lv_assignment_expression_12_0=ruleassignment_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_13=(Token)match(input,69,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred68_InternalAnsic

    // $ANTLR start synpred69_InternalAnsic
    public final void synpred69_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        EObject lv_type_qualifier_list_15_0 = null;


        // InternalAnsic.g:3388:3: ( (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) otherlv_16= '*' otherlv_17= ']' ) )
        // InternalAnsic.g:3388:3: (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) otherlv_16= '*' otherlv_17= ']' )
        {
        // InternalAnsic.g:3388:3: (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) otherlv_16= '*' otherlv_17= ']' )
        // InternalAnsic.g:3389:4: otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) otherlv_16= '*' otherlv_17= ']'
        {
        otherlv_14=(Token)match(input,68,FOLLOW_18); if (state.failed) return ;
        // InternalAnsic.g:3393:4: ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) )
        // InternalAnsic.g:3394:5: (lv_type_qualifier_list_15_0= ruletype_qualifier_list )
        {
        // InternalAnsic.g:3394:5: (lv_type_qualifier_list_15_0= ruletype_qualifier_list )
        // InternalAnsic.g:3395:6: lv_type_qualifier_list_15_0= ruletype_qualifier_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getType_qualifier_listType_qualifier_listParserRuleCall_4_1_0());
          					
        }
        pushFollow(FOLLOW_19);
        lv_type_qualifier_list_15_0=ruletype_qualifier_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_16=(Token)match(input,67,FOLLOW_21); if (state.failed) return ;
        otherlv_17=(Token)match(input,69,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred69_InternalAnsic

    // $ANTLR start synpred70_InternalAnsic
    public final void synpred70_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        EObject lv_type_qualifier_list_19_0 = null;

        EObject lv_assignment_expression_21_0 = null;


        // InternalAnsic.g:3422:3: ( (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' ) )
        // InternalAnsic.g:3422:3: (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' )
        {
        // InternalAnsic.g:3422:3: (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' )
        // InternalAnsic.g:3423:4: otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']'
        {
        otherlv_18=(Token)match(input,68,FOLLOW_18); if (state.failed) return ;
        // InternalAnsic.g:3427:4: ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) )
        // InternalAnsic.g:3428:5: (lv_type_qualifier_list_19_0= ruletype_qualifier_list )
        {
        // InternalAnsic.g:3428:5: (lv_type_qualifier_list_19_0= ruletype_qualifier_list )
        // InternalAnsic.g:3429:6: lv_type_qualifier_list_19_0= ruletype_qualifier_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getType_qualifier_listType_qualifier_listParserRuleCall_5_1_0());
          					
        }
        pushFollow(FOLLOW_22);
        lv_type_qualifier_list_19_0=ruletype_qualifier_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_20=(Token)match(input,63,FOLLOW_8); if (state.failed) return ;
        // InternalAnsic.g:3450:4: ( (lv_assignment_expression_21_0= ruleassignment_expression ) )
        // InternalAnsic.g:3451:5: (lv_assignment_expression_21_0= ruleassignment_expression )
        {
        // InternalAnsic.g:3451:5: (lv_assignment_expression_21_0= ruleassignment_expression )
        // InternalAnsic.g:3452:6: lv_assignment_expression_21_0= ruleassignment_expression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getAssignment_expressionAssignment_expressionParserRuleCall_5_3_0());
          					
        }
        pushFollow(FOLLOW_21);
        lv_assignment_expression_21_0=ruleassignment_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_22=(Token)match(input,69,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred70_InternalAnsic

    // $ANTLR start synpred71_InternalAnsic
    public final void synpred71_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_23=null;
        Token otherlv_26=null;
        EObject lv_type_qualifier_list_24_0 = null;

        EObject lv_assignment_expression_25_0 = null;


        // InternalAnsic.g:3475:3: ( (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_25_0= ruleassignment_expression ) ) otherlv_26= ']' ) )
        // InternalAnsic.g:3475:3: (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_25_0= ruleassignment_expression ) ) otherlv_26= ']' )
        {
        // InternalAnsic.g:3475:3: (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_25_0= ruleassignment_expression ) ) otherlv_26= ']' )
        // InternalAnsic.g:3476:4: otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_25_0= ruleassignment_expression ) ) otherlv_26= ']'
        {
        otherlv_23=(Token)match(input,68,FOLLOW_18); if (state.failed) return ;
        // InternalAnsic.g:3480:4: ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) )
        // InternalAnsic.g:3481:5: (lv_type_qualifier_list_24_0= ruletype_qualifier_list )
        {
        // InternalAnsic.g:3481:5: (lv_type_qualifier_list_24_0= ruletype_qualifier_list )
        // InternalAnsic.g:3482:6: lv_type_qualifier_list_24_0= ruletype_qualifier_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getType_qualifier_listType_qualifier_listParserRuleCall_6_1_0());
          					
        }
        pushFollow(FOLLOW_8);
        lv_type_qualifier_list_24_0=ruletype_qualifier_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:3499:4: ( (lv_assignment_expression_25_0= ruleassignment_expression ) )
        // InternalAnsic.g:3500:5: (lv_assignment_expression_25_0= ruleassignment_expression )
        {
        // InternalAnsic.g:3500:5: (lv_assignment_expression_25_0= ruleassignment_expression )
        // InternalAnsic.g:3501:6: lv_assignment_expression_25_0= ruleassignment_expression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getAssignment_expressionAssignment_expressionParserRuleCall_6_2_0());
          					
        }
        pushFollow(FOLLOW_21);
        lv_assignment_expression_25_0=ruleassignment_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_26=(Token)match(input,69,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred71_InternalAnsic

    // $ANTLR start synpred72_InternalAnsic
    public final void synpred72_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_27=null;
        Token otherlv_29=null;
        EObject lv_type_qualifier_list_28_0 = null;


        // InternalAnsic.g:3524:3: ( (otherlv_27= '[' ( (lv_type_qualifier_list_28_0= ruletype_qualifier_list ) ) otherlv_29= ']' ) )
        // InternalAnsic.g:3524:3: (otherlv_27= '[' ( (lv_type_qualifier_list_28_0= ruletype_qualifier_list ) ) otherlv_29= ']' )
        {
        // InternalAnsic.g:3524:3: (otherlv_27= '[' ( (lv_type_qualifier_list_28_0= ruletype_qualifier_list ) ) otherlv_29= ']' )
        // InternalAnsic.g:3525:4: otherlv_27= '[' ( (lv_type_qualifier_list_28_0= ruletype_qualifier_list ) ) otherlv_29= ']'
        {
        otherlv_27=(Token)match(input,68,FOLLOW_18); if (state.failed) return ;
        // InternalAnsic.g:3529:4: ( (lv_type_qualifier_list_28_0= ruletype_qualifier_list ) )
        // InternalAnsic.g:3530:5: (lv_type_qualifier_list_28_0= ruletype_qualifier_list )
        {
        // InternalAnsic.g:3530:5: (lv_type_qualifier_list_28_0= ruletype_qualifier_list )
        // InternalAnsic.g:3531:6: lv_type_qualifier_list_28_0= ruletype_qualifier_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getType_qualifier_listType_qualifier_listParserRuleCall_7_1_0());
          					
        }
        pushFollow(FOLLOW_21);
        lv_type_qualifier_list_28_0=ruletype_qualifier_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_29=(Token)match(input,69,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred72_InternalAnsic

    // $ANTLR start synpred73_InternalAnsic
    public final void synpred73_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_30=null;
        Token otherlv_32=null;
        EObject lv_assignment_expression_31_0 = null;


        // InternalAnsic.g:3554:3: ( (otherlv_30= '[' ( (lv_assignment_expression_31_0= ruleassignment_expression ) ) otherlv_32= ']' ) )
        // InternalAnsic.g:3554:3: (otherlv_30= '[' ( (lv_assignment_expression_31_0= ruleassignment_expression ) ) otherlv_32= ']' )
        {
        // InternalAnsic.g:3554:3: (otherlv_30= '[' ( (lv_assignment_expression_31_0= ruleassignment_expression ) ) otherlv_32= ']' )
        // InternalAnsic.g:3555:4: otherlv_30= '[' ( (lv_assignment_expression_31_0= ruleassignment_expression ) ) otherlv_32= ']'
        {
        otherlv_30=(Token)match(input,68,FOLLOW_8); if (state.failed) return ;
        // InternalAnsic.g:3559:4: ( (lv_assignment_expression_31_0= ruleassignment_expression ) )
        // InternalAnsic.g:3560:5: (lv_assignment_expression_31_0= ruleassignment_expression )
        {
        // InternalAnsic.g:3560:5: (lv_assignment_expression_31_0= ruleassignment_expression )
        // InternalAnsic.g:3561:6: lv_assignment_expression_31_0= ruleassignment_expression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getAssignment_expressionAssignment_expressionParserRuleCall_8_1_0());
          					
        }
        pushFollow(FOLLOW_21);
        lv_assignment_expression_31_0=ruleassignment_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_32=(Token)match(input,69,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred73_InternalAnsic

    // $ANTLR start synpred74_InternalAnsic
    public final void synpred74_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_33=null;
        Token otherlv_35=null;
        EObject lv_parameter_type_list_34_0 = null;


        // InternalAnsic.g:3584:3: ( (otherlv_33= '(' ( (lv_parameter_type_list_34_0= ruleparameter_type_list ) ) otherlv_35= ')' ) )
        // InternalAnsic.g:3584:3: (otherlv_33= '(' ( (lv_parameter_type_list_34_0= ruleparameter_type_list ) ) otherlv_35= ')' )
        {
        // InternalAnsic.g:3584:3: (otherlv_33= '(' ( (lv_parameter_type_list_34_0= ruleparameter_type_list ) ) otherlv_35= ')' )
        // InternalAnsic.g:3585:4: otherlv_33= '(' ( (lv_parameter_type_list_34_0= ruleparameter_type_list ) ) otherlv_35= ')'
        {
        otherlv_33=(Token)match(input,34,FOLLOW_4); if (state.failed) return ;
        // InternalAnsic.g:3589:4: ( (lv_parameter_type_list_34_0= ruleparameter_type_list ) )
        // InternalAnsic.g:3590:5: (lv_parameter_type_list_34_0= ruleparameter_type_list )
        {
        // InternalAnsic.g:3590:5: (lv_parameter_type_list_34_0= ruleparameter_type_list )
        // InternalAnsic.g:3591:6: lv_parameter_type_list_34_0= ruleparameter_type_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getParameter_type_listParameter_type_listParserRuleCall_9_1_0());
          					
        }
        pushFollow(FOLLOW_7);
        lv_parameter_type_list_34_0=ruleparameter_type_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_35=(Token)match(input,35,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred74_InternalAnsic

    // $ANTLR start synpred75_InternalAnsic
    public final void synpred75_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_36=null;
        Token otherlv_37=null;

        // InternalAnsic.g:3614:3: ( (otherlv_36= '(' otherlv_37= ')' ) )
        // InternalAnsic.g:3614:3: (otherlv_36= '(' otherlv_37= ')' )
        {
        // InternalAnsic.g:3614:3: (otherlv_36= '(' otherlv_37= ')' )
        // InternalAnsic.g:3615:4: otherlv_36= '(' otherlv_37= ')'
        {
        otherlv_36=(Token)match(input,34,FOLLOW_7); if (state.failed) return ;
        otherlv_37=(Token)match(input,35,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred75_InternalAnsic

    // $ANTLR start synpred76_InternalAnsic
    public final void synpred76_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_parameter_lista_0_0 = null;


        // InternalAnsic.g:3673:3: ( ( ( (lv_parameter_lista_0_0= ruleparameter_lista ) ) otherlv_1= ',' otherlv_2= '...' ) )
        // InternalAnsic.g:3673:3: ( ( (lv_parameter_lista_0_0= ruleparameter_lista ) ) otherlv_1= ',' otherlv_2= '...' )
        {
        // InternalAnsic.g:3673:3: ( ( (lv_parameter_lista_0_0= ruleparameter_lista ) ) otherlv_1= ',' otherlv_2= '...' )
        // InternalAnsic.g:3674:4: ( (lv_parameter_lista_0_0= ruleparameter_lista ) ) otherlv_1= ',' otherlv_2= '...'
        {
        // InternalAnsic.g:3674:4: ( (lv_parameter_lista_0_0= ruleparameter_lista ) )
        // InternalAnsic.g:3675:5: (lv_parameter_lista_0_0= ruleparameter_lista )
        {
        // InternalAnsic.g:3675:5: (lv_parameter_lista_0_0= ruleparameter_lista )
        // InternalAnsic.g:3676:6: lv_parameter_lista_0_0= ruleparameter_lista
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getParameter_type_listAccess().getParameter_listaParameter_listaParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_12);
        lv_parameter_lista_0_0=ruleparameter_lista();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,56,FOLLOW_23); if (state.failed) return ;
        otherlv_2=(Token)match(input,70,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred76_InternalAnsic

    // $ANTLR start synpred79_InternalAnsic
    public final void synpred79_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_declaration_specifiers_0_0 = null;

        EObject lv_declarator_1_0 = null;


        // InternalAnsic.g:3865:3: ( ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) ) )
        // InternalAnsic.g:3865:3: ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) )
        {
        // InternalAnsic.g:3865:3: ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) )
        // InternalAnsic.g:3866:4: ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) )
        {
        // InternalAnsic.g:3866:4: ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) )
        // InternalAnsic.g:3867:5: (lv_declaration_specifiers_0_0= ruledeclaration_specifiers )
        {
        // InternalAnsic.g:3867:5: (lv_declaration_specifiers_0_0= ruledeclaration_specifiers )
        // InternalAnsic.g:3868:6: lv_declaration_specifiers_0_0= ruledeclaration_specifiers
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getParameter_declarationAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_17);
        lv_declaration_specifiers_0_0=ruledeclaration_specifiers();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:3885:4: ( (lv_declarator_1_0= ruledeclarator ) )
        // InternalAnsic.g:3886:5: (lv_declarator_1_0= ruledeclarator )
        {
        // InternalAnsic.g:3886:5: (lv_declarator_1_0= ruledeclarator )
        // InternalAnsic.g:3887:6: lv_declarator_1_0= ruledeclarator
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getParameter_declarationAccess().getDeclaratorDeclaratorParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_declarator_1_0=ruledeclarator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred79_InternalAnsic

    // $ANTLR start synpred80_InternalAnsic
    public final void synpred80_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_declaration_specifiers_2_0 = null;

        EObject lv_abstract_declarator_3_0 = null;


        // InternalAnsic.g:3906:3: ( ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_abstract_declarator_3_0= ruleabstract_declarator ) ) ) )
        // InternalAnsic.g:3906:3: ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_abstract_declarator_3_0= ruleabstract_declarator ) ) )
        {
        // InternalAnsic.g:3906:3: ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_abstract_declarator_3_0= ruleabstract_declarator ) ) )
        // InternalAnsic.g:3907:4: ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_abstract_declarator_3_0= ruleabstract_declarator ) )
        {
        // InternalAnsic.g:3907:4: ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) )
        // InternalAnsic.g:3908:5: (lv_declaration_specifiers_2_0= ruledeclaration_specifiers )
        {
        // InternalAnsic.g:3908:5: (lv_declaration_specifiers_2_0= ruledeclaration_specifiers )
        // InternalAnsic.g:3909:6: lv_declaration_specifiers_2_0= ruledeclaration_specifiers
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getParameter_declarationAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_25);
        lv_declaration_specifiers_2_0=ruledeclaration_specifiers();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:3926:4: ( (lv_abstract_declarator_3_0= ruleabstract_declarator ) )
        // InternalAnsic.g:3927:5: (lv_abstract_declarator_3_0= ruleabstract_declarator )
        {
        // InternalAnsic.g:3927:5: (lv_abstract_declarator_3_0= ruleabstract_declarator )
        // InternalAnsic.g:3928:6: lv_abstract_declarator_3_0= ruleabstract_declarator
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getParameter_declarationAccess().getAbstract_declaratorAbstract_declaratorParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_abstract_declarator_3_0=ruleabstract_declarator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred80_InternalAnsic

    // $ANTLR start synpred81_InternalAnsic
    public final void synpred81_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_pointer_0_0 = null;

        EObject lv_direct_abstract_declarator_1_0 = null;


        // InternalAnsic.g:3985:3: ( ( ( (lv_pointer_0_0= rulepointer ) ) ( (lv_direct_abstract_declarator_1_0= ruledirect_abstract_declarator ) ) ) )
        // InternalAnsic.g:3985:3: ( ( (lv_pointer_0_0= rulepointer ) ) ( (lv_direct_abstract_declarator_1_0= ruledirect_abstract_declarator ) ) )
        {
        // InternalAnsic.g:3985:3: ( ( (lv_pointer_0_0= rulepointer ) ) ( (lv_direct_abstract_declarator_1_0= ruledirect_abstract_declarator ) ) )
        // InternalAnsic.g:3986:4: ( (lv_pointer_0_0= rulepointer ) ) ( (lv_direct_abstract_declarator_1_0= ruledirect_abstract_declarator ) )
        {
        // InternalAnsic.g:3986:4: ( (lv_pointer_0_0= rulepointer ) )
        // InternalAnsic.g:3987:5: (lv_pointer_0_0= rulepointer )
        {
        // InternalAnsic.g:3987:5: (lv_pointer_0_0= rulepointer )
        // InternalAnsic.g:3988:6: lv_pointer_0_0= rulepointer
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getAbstract_declaratorAccess().getPointerPointerParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_25);
        lv_pointer_0_0=rulepointer();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:4005:4: ( (lv_direct_abstract_declarator_1_0= ruledirect_abstract_declarator ) )
        // InternalAnsic.g:4006:5: (lv_direct_abstract_declarator_1_0= ruledirect_abstract_declarator )
        {
        // InternalAnsic.g:4006:5: (lv_direct_abstract_declarator_1_0= ruledirect_abstract_declarator )
        // InternalAnsic.g:4007:6: lv_direct_abstract_declarator_1_0= ruledirect_abstract_declarator
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getAbstract_declaratorAccess().getDirect_abstract_declaratorDirect_abstract_declaratorParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_direct_abstract_declarator_1_0=ruledirect_abstract_declarator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred81_InternalAnsic

    // $ANTLR start synpred82_InternalAnsic
    public final void synpred82_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_pointer_2_0 = null;


        // InternalAnsic.g:4026:3: ( ( (lv_pointer_2_0= rulepointer ) ) )
        // InternalAnsic.g:4026:3: ( (lv_pointer_2_0= rulepointer ) )
        {
        // InternalAnsic.g:4026:3: ( (lv_pointer_2_0= rulepointer ) )
        // InternalAnsic.g:4027:4: (lv_pointer_2_0= rulepointer )
        {
        // InternalAnsic.g:4027:4: (lv_pointer_2_0= rulepointer )
        // InternalAnsic.g:4028:5: lv_pointer_2_0= rulepointer
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getAbstract_declaratorAccess().getPointerPointerParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_pointer_2_0=rulepointer();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred82_InternalAnsic

    // $ANTLR start synpred83_InternalAnsic
    public final void synpred83_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_abstract_declarator_1_0 = null;


        // InternalAnsic.g:4085:4: ( (otherlv_0= '(' ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) otherlv_2= ')' ) )
        // InternalAnsic.g:4085:4: (otherlv_0= '(' ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) otherlv_2= ')' )
        {
        // InternalAnsic.g:4085:4: (otherlv_0= '(' ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) otherlv_2= ')' )
        // InternalAnsic.g:4086:5: otherlv_0= '(' ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) otherlv_2= ')'
        {
        otherlv_0=(Token)match(input,34,FOLLOW_25); if (state.failed) return ;
        // InternalAnsic.g:4090:5: ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) )
        // InternalAnsic.g:4091:6: (lv_abstract_declarator_1_0= ruleabstract_declarator )
        {
        // InternalAnsic.g:4091:6: (lv_abstract_declarator_1_0= ruleabstract_declarator )
        // InternalAnsic.g:4092:7: lv_abstract_declarator_1_0= ruleabstract_declarator
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getAbstract_declaratorAbstract_declaratorParserRuleCall_0_0_1_0());
          						
        }
        pushFollow(FOLLOW_7);
        lv_abstract_declarator_1_0=ruleabstract_declarator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_2=(Token)match(input,35,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred83_InternalAnsic

    // $ANTLR start synpred84_InternalAnsic
    public final void synpred84_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        Token otherlv_4=null;

        // InternalAnsic.g:4115:4: ( (otherlv_3= '[' otherlv_4= ']' ) )
        // InternalAnsic.g:4115:4: (otherlv_3= '[' otherlv_4= ']' )
        {
        // InternalAnsic.g:4115:4: (otherlv_3= '[' otherlv_4= ']' )
        // InternalAnsic.g:4116:5: otherlv_3= '[' otherlv_4= ']'
        {
        otherlv_3=(Token)match(input,68,FOLLOW_21); if (state.failed) return ;
        otherlv_4=(Token)match(input,69,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred84_InternalAnsic

    // $ANTLR start synpred85_InternalAnsic
    public final void synpred85_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;

        // InternalAnsic.g:4126:4: ( (otherlv_5= '[' otherlv_6= '*' otherlv_7= ']' ) )
        // InternalAnsic.g:4126:4: (otherlv_5= '[' otherlv_6= '*' otherlv_7= ']' )
        {
        // InternalAnsic.g:4126:4: (otherlv_5= '[' otherlv_6= '*' otherlv_7= ']' )
        // InternalAnsic.g:4127:5: otherlv_5= '[' otherlv_6= '*' otherlv_7= ']'
        {
        otherlv_5=(Token)match(input,68,FOLLOW_19); if (state.failed) return ;
        otherlv_6=(Token)match(input,67,FOLLOW_21); if (state.failed) return ;
        otherlv_7=(Token)match(input,69,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred85_InternalAnsic

    // $ANTLR start synpred86_InternalAnsic
    public final void synpred86_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_12=null;
        EObject lv_type_qualifier_list_10_0 = null;

        EObject lv_assignment_expression_11_0 = null;


        // InternalAnsic.g:4141:4: ( (otherlv_8= '[' otherlv_9= 'static' ( (lv_type_qualifier_list_10_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_11_0= ruleassignment_expression ) ) otherlv_12= ']' ) )
        // InternalAnsic.g:4141:4: (otherlv_8= '[' otherlv_9= 'static' ( (lv_type_qualifier_list_10_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_11_0= ruleassignment_expression ) ) otherlv_12= ']' )
        {
        // InternalAnsic.g:4141:4: (otherlv_8= '[' otherlv_9= 'static' ( (lv_type_qualifier_list_10_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_11_0= ruleassignment_expression ) ) otherlv_12= ']' )
        // InternalAnsic.g:4142:5: otherlv_8= '[' otherlv_9= 'static' ( (lv_type_qualifier_list_10_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_11_0= ruleassignment_expression ) ) otherlv_12= ']'
        {
        otherlv_8=(Token)match(input,68,FOLLOW_22); if (state.failed) return ;
        otherlv_9=(Token)match(input,63,FOLLOW_18); if (state.failed) return ;
        // InternalAnsic.g:4150:5: ( (lv_type_qualifier_list_10_0= ruletype_qualifier_list ) )
        // InternalAnsic.g:4151:6: (lv_type_qualifier_list_10_0= ruletype_qualifier_list )
        {
        // InternalAnsic.g:4151:6: (lv_type_qualifier_list_10_0= ruletype_qualifier_list )
        // InternalAnsic.g:4152:7: lv_type_qualifier_list_10_0= ruletype_qualifier_list
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getType_qualifier_listType_qualifier_listParserRuleCall_0_3_2_0());
          						
        }
        pushFollow(FOLLOW_8);
        lv_type_qualifier_list_10_0=ruletype_qualifier_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:4169:5: ( (lv_assignment_expression_11_0= ruleassignment_expression ) )
        // InternalAnsic.g:4170:6: (lv_assignment_expression_11_0= ruleassignment_expression )
        {
        // InternalAnsic.g:4170:6: (lv_assignment_expression_11_0= ruleassignment_expression )
        // InternalAnsic.g:4171:7: lv_assignment_expression_11_0= ruleassignment_expression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getAssignment_expressionAssignment_expressionParserRuleCall_0_3_3_0());
          						
        }
        pushFollow(FOLLOW_21);
        lv_assignment_expression_11_0=ruleassignment_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_12=(Token)match(input,69,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred86_InternalAnsic

    // $ANTLR start synpred87_InternalAnsic
    public final void synpred87_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        EObject lv_assignment_expression_15_0 = null;


        // InternalAnsic.g:4194:4: ( (otherlv_13= '[' otherlv_14= 'static' ( (lv_assignment_expression_15_0= ruleassignment_expression ) ) otherlv_16= ']' ) )
        // InternalAnsic.g:4194:4: (otherlv_13= '[' otherlv_14= 'static' ( (lv_assignment_expression_15_0= ruleassignment_expression ) ) otherlv_16= ']' )
        {
        // InternalAnsic.g:4194:4: (otherlv_13= '[' otherlv_14= 'static' ( (lv_assignment_expression_15_0= ruleassignment_expression ) ) otherlv_16= ']' )
        // InternalAnsic.g:4195:5: otherlv_13= '[' otherlv_14= 'static' ( (lv_assignment_expression_15_0= ruleassignment_expression ) ) otherlv_16= ']'
        {
        otherlv_13=(Token)match(input,68,FOLLOW_22); if (state.failed) return ;
        otherlv_14=(Token)match(input,63,FOLLOW_8); if (state.failed) return ;
        // InternalAnsic.g:4203:5: ( (lv_assignment_expression_15_0= ruleassignment_expression ) )
        // InternalAnsic.g:4204:6: (lv_assignment_expression_15_0= ruleassignment_expression )
        {
        // InternalAnsic.g:4204:6: (lv_assignment_expression_15_0= ruleassignment_expression )
        // InternalAnsic.g:4205:7: lv_assignment_expression_15_0= ruleassignment_expression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getAssignment_expressionAssignment_expressionParserRuleCall_0_4_2_0());
          						
        }
        pushFollow(FOLLOW_21);
        lv_assignment_expression_15_0=ruleassignment_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_16=(Token)match(input,69,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred87_InternalAnsic

    // $ANTLR start synpred88_InternalAnsic
    public final void synpred88_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        EObject lv_type_qualifier_list_18_0 = null;

        EObject lv_assignment_expression_20_0 = null;


        // InternalAnsic.g:4228:4: ( (otherlv_17= '[' ( (lv_type_qualifier_list_18_0= ruletype_qualifier_list ) ) otherlv_19= 'static' ( (lv_assignment_expression_20_0= ruleassignment_expression ) ) otherlv_21= ']' ) )
        // InternalAnsic.g:4228:4: (otherlv_17= '[' ( (lv_type_qualifier_list_18_0= ruletype_qualifier_list ) ) otherlv_19= 'static' ( (lv_assignment_expression_20_0= ruleassignment_expression ) ) otherlv_21= ']' )
        {
        // InternalAnsic.g:4228:4: (otherlv_17= '[' ( (lv_type_qualifier_list_18_0= ruletype_qualifier_list ) ) otherlv_19= 'static' ( (lv_assignment_expression_20_0= ruleassignment_expression ) ) otherlv_21= ']' )
        // InternalAnsic.g:4229:5: otherlv_17= '[' ( (lv_type_qualifier_list_18_0= ruletype_qualifier_list ) ) otherlv_19= 'static' ( (lv_assignment_expression_20_0= ruleassignment_expression ) ) otherlv_21= ']'
        {
        otherlv_17=(Token)match(input,68,FOLLOW_18); if (state.failed) return ;
        // InternalAnsic.g:4233:5: ( (lv_type_qualifier_list_18_0= ruletype_qualifier_list ) )
        // InternalAnsic.g:4234:6: (lv_type_qualifier_list_18_0= ruletype_qualifier_list )
        {
        // InternalAnsic.g:4234:6: (lv_type_qualifier_list_18_0= ruletype_qualifier_list )
        // InternalAnsic.g:4235:7: lv_type_qualifier_list_18_0= ruletype_qualifier_list
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getType_qualifier_listType_qualifier_listParserRuleCall_0_5_1_0());
          						
        }
        pushFollow(FOLLOW_22);
        lv_type_qualifier_list_18_0=ruletype_qualifier_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_19=(Token)match(input,63,FOLLOW_8); if (state.failed) return ;
        // InternalAnsic.g:4256:5: ( (lv_assignment_expression_20_0= ruleassignment_expression ) )
        // InternalAnsic.g:4257:6: (lv_assignment_expression_20_0= ruleassignment_expression )
        {
        // InternalAnsic.g:4257:6: (lv_assignment_expression_20_0= ruleassignment_expression )
        // InternalAnsic.g:4258:7: lv_assignment_expression_20_0= ruleassignment_expression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getAssignment_expressionAssignment_expressionParserRuleCall_0_5_3_0());
          						
        }
        pushFollow(FOLLOW_21);
        lv_assignment_expression_20_0=ruleassignment_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_21=(Token)match(input,69,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred88_InternalAnsic

    // $ANTLR start synpred89_InternalAnsic
    public final void synpred89_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_22=null;
        Token otherlv_25=null;
        EObject lv_type_qualifier_list_23_0 = null;

        EObject lv_assignment_expression_24_0 = null;


        // InternalAnsic.g:4281:4: ( (otherlv_22= '[' ( (lv_type_qualifier_list_23_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_24_0= ruleassignment_expression ) ) otherlv_25= ']' ) )
        // InternalAnsic.g:4281:4: (otherlv_22= '[' ( (lv_type_qualifier_list_23_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_24_0= ruleassignment_expression ) ) otherlv_25= ']' )
        {
        // InternalAnsic.g:4281:4: (otherlv_22= '[' ( (lv_type_qualifier_list_23_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_24_0= ruleassignment_expression ) ) otherlv_25= ']' )
        // InternalAnsic.g:4282:5: otherlv_22= '[' ( (lv_type_qualifier_list_23_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_24_0= ruleassignment_expression ) ) otherlv_25= ']'
        {
        otherlv_22=(Token)match(input,68,FOLLOW_18); if (state.failed) return ;
        // InternalAnsic.g:4286:5: ( (lv_type_qualifier_list_23_0= ruletype_qualifier_list ) )
        // InternalAnsic.g:4287:6: (lv_type_qualifier_list_23_0= ruletype_qualifier_list )
        {
        // InternalAnsic.g:4287:6: (lv_type_qualifier_list_23_0= ruletype_qualifier_list )
        // InternalAnsic.g:4288:7: lv_type_qualifier_list_23_0= ruletype_qualifier_list
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getType_qualifier_listType_qualifier_listParserRuleCall_0_6_1_0());
          						
        }
        pushFollow(FOLLOW_8);
        lv_type_qualifier_list_23_0=ruletype_qualifier_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:4305:5: ( (lv_assignment_expression_24_0= ruleassignment_expression ) )
        // InternalAnsic.g:4306:6: (lv_assignment_expression_24_0= ruleassignment_expression )
        {
        // InternalAnsic.g:4306:6: (lv_assignment_expression_24_0= ruleassignment_expression )
        // InternalAnsic.g:4307:7: lv_assignment_expression_24_0= ruleassignment_expression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getAssignment_expressionAssignment_expressionParserRuleCall_0_6_2_0());
          						
        }
        pushFollow(FOLLOW_21);
        lv_assignment_expression_24_0=ruleassignment_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_25=(Token)match(input,69,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred89_InternalAnsic

    // $ANTLR start synpred90_InternalAnsic
    public final void synpred90_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_26=null;
        Token otherlv_28=null;
        EObject lv_type_qualifier_list_27_0 = null;


        // InternalAnsic.g:4330:4: ( (otherlv_26= '[' ( (lv_type_qualifier_list_27_0= ruletype_qualifier_list ) ) otherlv_28= ']' ) )
        // InternalAnsic.g:4330:4: (otherlv_26= '[' ( (lv_type_qualifier_list_27_0= ruletype_qualifier_list ) ) otherlv_28= ']' )
        {
        // InternalAnsic.g:4330:4: (otherlv_26= '[' ( (lv_type_qualifier_list_27_0= ruletype_qualifier_list ) ) otherlv_28= ']' )
        // InternalAnsic.g:4331:5: otherlv_26= '[' ( (lv_type_qualifier_list_27_0= ruletype_qualifier_list ) ) otherlv_28= ']'
        {
        otherlv_26=(Token)match(input,68,FOLLOW_18); if (state.failed) return ;
        // InternalAnsic.g:4335:5: ( (lv_type_qualifier_list_27_0= ruletype_qualifier_list ) )
        // InternalAnsic.g:4336:6: (lv_type_qualifier_list_27_0= ruletype_qualifier_list )
        {
        // InternalAnsic.g:4336:6: (lv_type_qualifier_list_27_0= ruletype_qualifier_list )
        // InternalAnsic.g:4337:7: lv_type_qualifier_list_27_0= ruletype_qualifier_list
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getType_qualifier_listType_qualifier_listParserRuleCall_0_7_1_0());
          						
        }
        pushFollow(FOLLOW_21);
        lv_type_qualifier_list_27_0=ruletype_qualifier_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_28=(Token)match(input,69,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred90_InternalAnsic

    // $ANTLR start synpred91_InternalAnsic
    public final void synpred91_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_29=null;
        Token otherlv_31=null;
        EObject lv_assignment_expression_30_0 = null;


        // InternalAnsic.g:4360:4: ( (otherlv_29= '[' ( (lv_assignment_expression_30_0= ruleassignment_expression ) ) otherlv_31= ']' ) )
        // InternalAnsic.g:4360:4: (otherlv_29= '[' ( (lv_assignment_expression_30_0= ruleassignment_expression ) ) otherlv_31= ']' )
        {
        // InternalAnsic.g:4360:4: (otherlv_29= '[' ( (lv_assignment_expression_30_0= ruleassignment_expression ) ) otherlv_31= ']' )
        // InternalAnsic.g:4361:5: otherlv_29= '[' ( (lv_assignment_expression_30_0= ruleassignment_expression ) ) otherlv_31= ']'
        {
        otherlv_29=(Token)match(input,68,FOLLOW_8); if (state.failed) return ;
        // InternalAnsic.g:4365:5: ( (lv_assignment_expression_30_0= ruleassignment_expression ) )
        // InternalAnsic.g:4366:6: (lv_assignment_expression_30_0= ruleassignment_expression )
        {
        // InternalAnsic.g:4366:6: (lv_assignment_expression_30_0= ruleassignment_expression )
        // InternalAnsic.g:4367:7: lv_assignment_expression_30_0= ruleassignment_expression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getAssignment_expressionAssignment_expressionParserRuleCall_0_8_1_0());
          						
        }
        pushFollow(FOLLOW_21);
        lv_assignment_expression_30_0=ruleassignment_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_31=(Token)match(input,69,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred91_InternalAnsic

    // $ANTLR start synpred92_InternalAnsic
    public final void synpred92_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_32=null;
        Token otherlv_33=null;

        // InternalAnsic.g:4390:4: ( (otherlv_32= '(' otherlv_33= ')' ) )
        // InternalAnsic.g:4390:4: (otherlv_32= '(' otherlv_33= ')' )
        {
        // InternalAnsic.g:4390:4: (otherlv_32= '(' otherlv_33= ')' )
        // InternalAnsic.g:4391:5: otherlv_32= '(' otherlv_33= ')'
        {
        otherlv_32=(Token)match(input,34,FOLLOW_7); if (state.failed) return ;
        otherlv_33=(Token)match(input,35,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred92_InternalAnsic

    // $ANTLR start synpred93_InternalAnsic
    public final void synpred93_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_init_declarator_list_1_0 = null;


        // InternalAnsic.g:4469:3: ( (otherlv_0= '{' ( (lv_init_declarator_list_1_0= ruleinitializer_list ) ) otherlv_2= '}' ) )
        // InternalAnsic.g:4469:3: (otherlv_0= '{' ( (lv_init_declarator_list_1_0= ruleinitializer_list ) ) otherlv_2= '}' )
        {
        // InternalAnsic.g:4469:3: (otherlv_0= '{' ( (lv_init_declarator_list_1_0= ruleinitializer_list ) ) otherlv_2= '}' )
        // InternalAnsic.g:4470:4: otherlv_0= '{' ( (lv_init_declarator_list_1_0= ruleinitializer_list ) ) otherlv_2= '}'
        {
        otherlv_0=(Token)match(input,54,FOLLOW_26); if (state.failed) return ;
        // InternalAnsic.g:4474:4: ( (lv_init_declarator_list_1_0= ruleinitializer_list ) )
        // InternalAnsic.g:4475:5: (lv_init_declarator_list_1_0= ruleinitializer_list )
        {
        // InternalAnsic.g:4475:5: (lv_init_declarator_list_1_0= ruleinitializer_list )
        // InternalAnsic.g:4476:6: lv_init_declarator_list_1_0= ruleinitializer_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getInitializerAccess().getInit_declarator_listInitializer_listParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_11);
        lv_init_declarator_list_1_0=ruleinitializer_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_2=(Token)match(input,55,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred93_InternalAnsic

    // $ANTLR start synpred94_InternalAnsic
    public final void synpred94_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_init_declarator_list_4_0 = null;


        // InternalAnsic.g:4499:3: ( (otherlv_3= '{' ( (lv_init_declarator_list_4_0= ruleinitializer_list ) ) otherlv_5= ',' otherlv_6= '}' ) )
        // InternalAnsic.g:4499:3: (otherlv_3= '{' ( (lv_init_declarator_list_4_0= ruleinitializer_list ) ) otherlv_5= ',' otherlv_6= '}' )
        {
        // InternalAnsic.g:4499:3: (otherlv_3= '{' ( (lv_init_declarator_list_4_0= ruleinitializer_list ) ) otherlv_5= ',' otherlv_6= '}' )
        // InternalAnsic.g:4500:4: otherlv_3= '{' ( (lv_init_declarator_list_4_0= ruleinitializer_list ) ) otherlv_5= ',' otherlv_6= '}'
        {
        otherlv_3=(Token)match(input,54,FOLLOW_26); if (state.failed) return ;
        // InternalAnsic.g:4504:4: ( (lv_init_declarator_list_4_0= ruleinitializer_list ) )
        // InternalAnsic.g:4505:5: (lv_init_declarator_list_4_0= ruleinitializer_list )
        {
        // InternalAnsic.g:4505:5: (lv_init_declarator_list_4_0= ruleinitializer_list )
        // InternalAnsic.g:4506:6: lv_init_declarator_list_4_0= ruleinitializer_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getInitializerAccess().getInit_declarator_listInitializer_listParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_12);
        lv_init_declarator_list_4_0=ruleinitializer_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_5=(Token)match(input,56,FOLLOW_11); if (state.failed) return ;
        otherlv_6=(Token)match(input,55,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred94_InternalAnsic

    // $ANTLR start synpred96_InternalAnsic
    public final void synpred96_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_0=null;
        Token otherlv_1=null;

        // InternalAnsic.g:4640:3: ( (otherlv_0= '[' otherlv_1= ']' ) )
        // InternalAnsic.g:4640:3: (otherlv_0= '[' otherlv_1= ']' )
        {
        // InternalAnsic.g:4640:3: (otherlv_0= '[' otherlv_1= ']' )
        // InternalAnsic.g:4641:4: otherlv_0= '[' otherlv_1= ']'
        {
        otherlv_0=(Token)match(input,68,FOLLOW_21); if (state.failed) return ;
        otherlv_1=(Token)match(input,69,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred96_InternalAnsic

    // $ANTLR start synpred97_InternalAnsic
    public final void synpred97_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;

        // InternalAnsic.g:4651:3: ( (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' ) )
        // InternalAnsic.g:4651:3: (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' )
        {
        // InternalAnsic.g:4651:3: (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' )
        // InternalAnsic.g:4652:4: otherlv_2= '[' otherlv_3= '*' otherlv_4= ']'
        {
        otherlv_2=(Token)match(input,68,FOLLOW_19); if (state.failed) return ;
        otherlv_3=(Token)match(input,67,FOLLOW_21); if (state.failed) return ;
        otherlv_4=(Token)match(input,69,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred97_InternalAnsic

    // $ANTLR start synpred98_InternalAnsic
    public final void synpred98_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        EObject this_type_qualifier_list_7 = null;

        EObject lv_assignment_expression_8_0 = null;


        // InternalAnsic.g:4666:3: ( (otherlv_5= '[' otherlv_6= 'static' this_type_qualifier_list_7= ruletype_qualifier_list ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' ) )
        // InternalAnsic.g:4666:3: (otherlv_5= '[' otherlv_6= 'static' this_type_qualifier_list_7= ruletype_qualifier_list ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' )
        {
        // InternalAnsic.g:4666:3: (otherlv_5= '[' otherlv_6= 'static' this_type_qualifier_list_7= ruletype_qualifier_list ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' )
        // InternalAnsic.g:4667:4: otherlv_5= '[' otherlv_6= 'static' this_type_qualifier_list_7= ruletype_qualifier_list ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']'
        {
        otherlv_5=(Token)match(input,68,FOLLOW_22); if (state.failed) return ;
        otherlv_6=(Token)match(input,63,FOLLOW_18); if (state.failed) return ;
        pushFollow(FOLLOW_8);
        this_type_qualifier_list_7=ruletype_qualifier_list();

        state._fsp--;
        if (state.failed) return ;
        // InternalAnsic.g:4686:4: ( (lv_assignment_expression_8_0= ruleassignment_expression ) )
        // InternalAnsic.g:4687:5: (lv_assignment_expression_8_0= ruleassignment_expression )
        {
        // InternalAnsic.g:4687:5: (lv_assignment_expression_8_0= ruleassignment_expression )
        // InternalAnsic.g:4688:6: lv_assignment_expression_8_0= ruleassignment_expression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDirect_abstract_declarator_complementAccess().getAssignment_expressionAssignment_expressionParserRuleCall_2_3_0());
          					
        }
        pushFollow(FOLLOW_21);
        lv_assignment_expression_8_0=ruleassignment_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_9=(Token)match(input,69,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred98_InternalAnsic

    // $ANTLR start synpred99_InternalAnsic
    public final void synpred99_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_assignment_expression_12_0 = null;


        // InternalAnsic.g:4711:3: ( (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' ) )
        // InternalAnsic.g:4711:3: (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' )
        {
        // InternalAnsic.g:4711:3: (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' )
        // InternalAnsic.g:4712:4: otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']'
        {
        otherlv_10=(Token)match(input,68,FOLLOW_22); if (state.failed) return ;
        otherlv_11=(Token)match(input,63,FOLLOW_8); if (state.failed) return ;
        // InternalAnsic.g:4720:4: ( (lv_assignment_expression_12_0= ruleassignment_expression ) )
        // InternalAnsic.g:4721:5: (lv_assignment_expression_12_0= ruleassignment_expression )
        {
        // InternalAnsic.g:4721:5: (lv_assignment_expression_12_0= ruleassignment_expression )
        // InternalAnsic.g:4722:6: lv_assignment_expression_12_0= ruleassignment_expression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDirect_abstract_declarator_complementAccess().getAssignment_expressionAssignment_expressionParserRuleCall_3_2_0());
          					
        }
        pushFollow(FOLLOW_21);
        lv_assignment_expression_12_0=ruleassignment_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_13=(Token)match(input,69,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred99_InternalAnsic

    // $ANTLR start synpred100_InternalAnsic
    public final void synpred100_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        Token otherlv_17=null;
        EObject lv_type_qualifier_list_15_0 = null;

        EObject lv_assignment_expression_16_0 = null;


        // InternalAnsic.g:4745:3: ( (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_16_0= ruleassignment_expression ) ) otherlv_17= ']' ) )
        // InternalAnsic.g:4745:3: (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_16_0= ruleassignment_expression ) ) otherlv_17= ']' )
        {
        // InternalAnsic.g:4745:3: (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_16_0= ruleassignment_expression ) ) otherlv_17= ']' )
        // InternalAnsic.g:4746:4: otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_16_0= ruleassignment_expression ) ) otherlv_17= ']'
        {
        otherlv_14=(Token)match(input,68,FOLLOW_18); if (state.failed) return ;
        // InternalAnsic.g:4750:4: ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) )
        // InternalAnsic.g:4751:5: (lv_type_qualifier_list_15_0= ruletype_qualifier_list )
        {
        // InternalAnsic.g:4751:5: (lv_type_qualifier_list_15_0= ruletype_qualifier_list )
        // InternalAnsic.g:4752:6: lv_type_qualifier_list_15_0= ruletype_qualifier_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDirect_abstract_declarator_complementAccess().getType_qualifier_listType_qualifier_listParserRuleCall_4_1_0());
          					
        }
        pushFollow(FOLLOW_8);
        lv_type_qualifier_list_15_0=ruletype_qualifier_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:4769:4: ( (lv_assignment_expression_16_0= ruleassignment_expression ) )
        // InternalAnsic.g:4770:5: (lv_assignment_expression_16_0= ruleassignment_expression )
        {
        // InternalAnsic.g:4770:5: (lv_assignment_expression_16_0= ruleassignment_expression )
        // InternalAnsic.g:4771:6: lv_assignment_expression_16_0= ruleassignment_expression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDirect_abstract_declarator_complementAccess().getAssignment_expressionAssignment_expressionParserRuleCall_4_2_0());
          					
        }
        pushFollow(FOLLOW_21);
        lv_assignment_expression_16_0=ruleassignment_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_17=(Token)match(input,69,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred100_InternalAnsic

    // $ANTLR start synpred101_InternalAnsic
    public final void synpred101_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        EObject lv_type_qualifier_list_19_0 = null;

        EObject lv_assignment_expression_21_0 = null;


        // InternalAnsic.g:4794:3: ( (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' ) )
        // InternalAnsic.g:4794:3: (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' )
        {
        // InternalAnsic.g:4794:3: (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' )
        // InternalAnsic.g:4795:4: otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']'
        {
        otherlv_18=(Token)match(input,68,FOLLOW_18); if (state.failed) return ;
        // InternalAnsic.g:4799:4: ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) )
        // InternalAnsic.g:4800:5: (lv_type_qualifier_list_19_0= ruletype_qualifier_list )
        {
        // InternalAnsic.g:4800:5: (lv_type_qualifier_list_19_0= ruletype_qualifier_list )
        // InternalAnsic.g:4801:6: lv_type_qualifier_list_19_0= ruletype_qualifier_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDirect_abstract_declarator_complementAccess().getType_qualifier_listType_qualifier_listParserRuleCall_5_1_0());
          					
        }
        pushFollow(FOLLOW_22);
        lv_type_qualifier_list_19_0=ruletype_qualifier_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_20=(Token)match(input,63,FOLLOW_8); if (state.failed) return ;
        // InternalAnsic.g:4822:4: ( (lv_assignment_expression_21_0= ruleassignment_expression ) )
        // InternalAnsic.g:4823:5: (lv_assignment_expression_21_0= ruleassignment_expression )
        {
        // InternalAnsic.g:4823:5: (lv_assignment_expression_21_0= ruleassignment_expression )
        // InternalAnsic.g:4824:6: lv_assignment_expression_21_0= ruleassignment_expression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDirect_abstract_declarator_complementAccess().getAssignment_expressionAssignment_expressionParserRuleCall_5_3_0());
          					
        }
        pushFollow(FOLLOW_21);
        lv_assignment_expression_21_0=ruleassignment_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_22=(Token)match(input,69,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred101_InternalAnsic

    // $ANTLR start synpred102_InternalAnsic
    public final void synpred102_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_23=null;
        Token otherlv_25=null;
        EObject lv_type_qualifier_list_24_0 = null;


        // InternalAnsic.g:4847:3: ( (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) otherlv_25= ']' ) )
        // InternalAnsic.g:4847:3: (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) otherlv_25= ']' )
        {
        // InternalAnsic.g:4847:3: (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) otherlv_25= ']' )
        // InternalAnsic.g:4848:4: otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) otherlv_25= ']'
        {
        otherlv_23=(Token)match(input,68,FOLLOW_18); if (state.failed) return ;
        // InternalAnsic.g:4852:4: ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) )
        // InternalAnsic.g:4853:5: (lv_type_qualifier_list_24_0= ruletype_qualifier_list )
        {
        // InternalAnsic.g:4853:5: (lv_type_qualifier_list_24_0= ruletype_qualifier_list )
        // InternalAnsic.g:4854:6: lv_type_qualifier_list_24_0= ruletype_qualifier_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDirect_abstract_declarator_complementAccess().getType_qualifier_listType_qualifier_listParserRuleCall_6_1_0());
          					
        }
        pushFollow(FOLLOW_21);
        lv_type_qualifier_list_24_0=ruletype_qualifier_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_25=(Token)match(input,69,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred102_InternalAnsic

    // $ANTLR start synpred103_InternalAnsic
    public final void synpred103_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_26=null;
        Token otherlv_28=null;
        EObject lv_assignment_expression_27_0 = null;


        // InternalAnsic.g:4877:3: ( (otherlv_26= '[' ( (lv_assignment_expression_27_0= ruleassignment_expression ) ) otherlv_28= ']' ) )
        // InternalAnsic.g:4877:3: (otherlv_26= '[' ( (lv_assignment_expression_27_0= ruleassignment_expression ) ) otherlv_28= ']' )
        {
        // InternalAnsic.g:4877:3: (otherlv_26= '[' ( (lv_assignment_expression_27_0= ruleassignment_expression ) ) otherlv_28= ']' )
        // InternalAnsic.g:4878:4: otherlv_26= '[' ( (lv_assignment_expression_27_0= ruleassignment_expression ) ) otherlv_28= ']'
        {
        otherlv_26=(Token)match(input,68,FOLLOW_8); if (state.failed) return ;
        // InternalAnsic.g:4882:4: ( (lv_assignment_expression_27_0= ruleassignment_expression ) )
        // InternalAnsic.g:4883:5: (lv_assignment_expression_27_0= ruleassignment_expression )
        {
        // InternalAnsic.g:4883:5: (lv_assignment_expression_27_0= ruleassignment_expression )
        // InternalAnsic.g:4884:6: lv_assignment_expression_27_0= ruleassignment_expression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDirect_abstract_declarator_complementAccess().getAssignment_expressionAssignment_expressionParserRuleCall_7_1_0());
          					
        }
        pushFollow(FOLLOW_21);
        lv_assignment_expression_27_0=ruleassignment_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_28=(Token)match(input,69,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred103_InternalAnsic

    // $ANTLR start synpred104_InternalAnsic
    public final void synpred104_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_29=null;
        Token otherlv_30=null;

        // InternalAnsic.g:4907:3: ( (otherlv_29= '(' otherlv_30= ')' ) )
        // InternalAnsic.g:4907:3: (otherlv_29= '(' otherlv_30= ')' )
        {
        // InternalAnsic.g:4907:3: (otherlv_29= '(' otherlv_30= ')' )
        // InternalAnsic.g:4908:4: otherlv_29= '(' otherlv_30= ')'
        {
        otherlv_29=(Token)match(input,34,FOLLOW_7); if (state.failed) return ;
        otherlv_30=(Token)match(input,35,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred104_InternalAnsic

    // $ANTLR start synpred112_InternalAnsic
    public final void synpred112_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_primary_expression_0_0 = null;

        EObject lv_postfix_expression_linha_1_0 = null;


        // InternalAnsic.g:5621:3: ( ( ( (lv_primary_expression_0_0= ruleprimary_expression ) ) ( (lv_postfix_expression_linha_1_0= rulepostfix_expression_linha ) ) ) )
        // InternalAnsic.g:5621:3: ( ( (lv_primary_expression_0_0= ruleprimary_expression ) ) ( (lv_postfix_expression_linha_1_0= rulepostfix_expression_linha ) ) )
        {
        // InternalAnsic.g:5621:3: ( ( (lv_primary_expression_0_0= ruleprimary_expression ) ) ( (lv_postfix_expression_linha_1_0= rulepostfix_expression_linha ) ) )
        // InternalAnsic.g:5622:4: ( (lv_primary_expression_0_0= ruleprimary_expression ) ) ( (lv_postfix_expression_linha_1_0= rulepostfix_expression_linha ) )
        {
        // InternalAnsic.g:5622:4: ( (lv_primary_expression_0_0= ruleprimary_expression ) )
        // InternalAnsic.g:5623:5: (lv_primary_expression_0_0= ruleprimary_expression )
        {
        // InternalAnsic.g:5623:5: (lv_primary_expression_0_0= ruleprimary_expression )
        // InternalAnsic.g:5624:6: lv_primary_expression_0_0= ruleprimary_expression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPostfix_expressionAccess().getPrimary_expressionPrimary_expressionParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_28);
        lv_primary_expression_0_0=ruleprimary_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:5641:4: ( (lv_postfix_expression_linha_1_0= rulepostfix_expression_linha ) )
        // InternalAnsic.g:5642:5: (lv_postfix_expression_linha_1_0= rulepostfix_expression_linha )
        {
        // InternalAnsic.g:5642:5: (lv_postfix_expression_linha_1_0= rulepostfix_expression_linha )
        // InternalAnsic.g:5643:6: lv_postfix_expression_linha_1_0= rulepostfix_expression_linha
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPostfix_expressionAccess().getPostfix_expression_linhaPostfix_expression_linhaParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_postfix_expression_linha_1_0=rulepostfix_expression_linha();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred112_InternalAnsic

    // $ANTLR start synpred113_InternalAnsic
    public final void synpred113_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject this_type_name_3 = null;

        EObject lv_initializer_list_6_0 = null;

        EObject lv_postfix_expression_linha_8_0 = null;


        // InternalAnsic.g:5662:3: ( (otherlv_2= '(' this_type_name_3= ruletype_name otherlv_4= ')' otherlv_5= '{' ( (lv_initializer_list_6_0= ruleinitializer_list ) ) otherlv_7= '}' ( (lv_postfix_expression_linha_8_0= rulepostfix_expression_linha ) ) ) )
        // InternalAnsic.g:5662:3: (otherlv_2= '(' this_type_name_3= ruletype_name otherlv_4= ')' otherlv_5= '{' ( (lv_initializer_list_6_0= ruleinitializer_list ) ) otherlv_7= '}' ( (lv_postfix_expression_linha_8_0= rulepostfix_expression_linha ) ) )
        {
        // InternalAnsic.g:5662:3: (otherlv_2= '(' this_type_name_3= ruletype_name otherlv_4= ')' otherlv_5= '{' ( (lv_initializer_list_6_0= ruleinitializer_list ) ) otherlv_7= '}' ( (lv_postfix_expression_linha_8_0= rulepostfix_expression_linha ) ) )
        // InternalAnsic.g:5663:4: otherlv_2= '(' this_type_name_3= ruletype_name otherlv_4= ')' otherlv_5= '{' ( (lv_initializer_list_6_0= ruleinitializer_list ) ) otherlv_7= '}' ( (lv_postfix_expression_linha_8_0= rulepostfix_expression_linha ) )
        {
        otherlv_2=(Token)match(input,34,FOLLOW_6); if (state.failed) return ;
        pushFollow(FOLLOW_7);
        this_type_name_3=ruletype_name();

        state._fsp--;
        if (state.failed) return ;
        otherlv_4=(Token)match(input,35,FOLLOW_9); if (state.failed) return ;
        otherlv_5=(Token)match(input,54,FOLLOW_26); if (state.failed) return ;
        // InternalAnsic.g:5686:4: ( (lv_initializer_list_6_0= ruleinitializer_list ) )
        // InternalAnsic.g:5687:5: (lv_initializer_list_6_0= ruleinitializer_list )
        {
        // InternalAnsic.g:5687:5: (lv_initializer_list_6_0= ruleinitializer_list )
        // InternalAnsic.g:5688:6: lv_initializer_list_6_0= ruleinitializer_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPostfix_expressionAccess().getInitializer_listInitializer_listParserRuleCall_1_4_0());
          					
        }
        pushFollow(FOLLOW_11);
        lv_initializer_list_6_0=ruleinitializer_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_7=(Token)match(input,55,FOLLOW_28); if (state.failed) return ;
        // InternalAnsic.g:5709:4: ( (lv_postfix_expression_linha_8_0= rulepostfix_expression_linha ) )
        // InternalAnsic.g:5710:5: (lv_postfix_expression_linha_8_0= rulepostfix_expression_linha )
        {
        // InternalAnsic.g:5710:5: (lv_postfix_expression_linha_8_0= rulepostfix_expression_linha )
        // InternalAnsic.g:5711:6: lv_postfix_expression_linha_8_0= rulepostfix_expression_linha
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPostfix_expressionAccess().getPostfix_expression_linhaPostfix_expression_linhaParserRuleCall_1_6_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_postfix_expression_linha_8_0=rulepostfix_expression_linha();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred113_InternalAnsic

    // $ANTLR start synpred131_InternalAnsic
    public final void synpred131_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_8=null;
        EObject lv_unary_expression_9_0 = null;


        // InternalAnsic.g:6828:3: ( (otherlv_8= 'sizeof' ( (lv_unary_expression_9_0= ruleunary_expression ) ) ) )
        // InternalAnsic.g:6828:3: (otherlv_8= 'sizeof' ( (lv_unary_expression_9_0= ruleunary_expression ) ) )
        {
        // InternalAnsic.g:6828:3: (otherlv_8= 'sizeof' ( (lv_unary_expression_9_0= ruleunary_expression ) ) )
        // InternalAnsic.g:6829:4: otherlv_8= 'sizeof' ( (lv_unary_expression_9_0= ruleunary_expression ) )
        {
        otherlv_8=(Token)match(input,78,FOLLOW_8); if (state.failed) return ;
        // InternalAnsic.g:6833:4: ( (lv_unary_expression_9_0= ruleunary_expression ) )
        // InternalAnsic.g:6834:5: (lv_unary_expression_9_0= ruleunary_expression )
        {
        // InternalAnsic.g:6834:5: (lv_unary_expression_9_0= ruleunary_expression )
        // InternalAnsic.g:6835:6: lv_unary_expression_9_0= ruleunary_expression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getUnary_expressionAccess().getUnary_expressionUnary_expressionParserRuleCall_4_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_unary_expression_9_0=ruleunary_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred131_InternalAnsic

    // $ANTLR start synpred132_InternalAnsic
    public final void synpred132_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_type_name_12_0 = null;


        // InternalAnsic.g:6854:3: ( (otherlv_10= 'sizeof' otherlv_11= '(' ( (lv_type_name_12_0= ruletype_name ) ) otherlv_13= ')' ) )
        // InternalAnsic.g:6854:3: (otherlv_10= 'sizeof' otherlv_11= '(' ( (lv_type_name_12_0= ruletype_name ) ) otherlv_13= ')' )
        {
        // InternalAnsic.g:6854:3: (otherlv_10= 'sizeof' otherlv_11= '(' ( (lv_type_name_12_0= ruletype_name ) ) otherlv_13= ')' )
        // InternalAnsic.g:6855:4: otherlv_10= 'sizeof' otherlv_11= '(' ( (lv_type_name_12_0= ruletype_name ) ) otherlv_13= ')'
        {
        otherlv_10=(Token)match(input,78,FOLLOW_5); if (state.failed) return ;
        otherlv_11=(Token)match(input,34,FOLLOW_6); if (state.failed) return ;
        // InternalAnsic.g:6863:4: ( (lv_type_name_12_0= ruletype_name ) )
        // InternalAnsic.g:6864:5: (lv_type_name_12_0= ruletype_name )
        {
        // InternalAnsic.g:6864:5: (lv_type_name_12_0= ruletype_name )
        // InternalAnsic.g:6865:6: lv_type_name_12_0= ruletype_name
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getUnary_expressionAccess().getType_nameType_nameParserRuleCall_5_2_0());
          					
        }
        pushFollow(FOLLOW_7);
        lv_type_name_12_0=ruletype_name();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_13=(Token)match(input,35,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred132_InternalAnsic

    // $ANTLR start synpred133_InternalAnsic
    public final void synpred133_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_unary_expression_0_0 = null;


        // InternalAnsic.g:6940:3: ( ( (lv_unary_expression_0_0= ruleunary_expression ) ) )
        // InternalAnsic.g:6940:3: ( (lv_unary_expression_0_0= ruleunary_expression ) )
        {
        // InternalAnsic.g:6940:3: ( (lv_unary_expression_0_0= ruleunary_expression ) )
        // InternalAnsic.g:6941:4: (lv_unary_expression_0_0= ruleunary_expression )
        {
        // InternalAnsic.g:6941:4: (lv_unary_expression_0_0= ruleunary_expression )
        // InternalAnsic.g:6942:5: lv_unary_expression_0_0= ruleunary_expression
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getCast_expressionAccess().getUnary_expressionUnary_expressionParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_unary_expression_0_0=ruleunary_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred133_InternalAnsic

    // $ANTLR start synpred134_InternalAnsic
    public final void synpred134_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_multiplicative_expression_complement_0_0 = null;

        EObject lv_multiplicative_expression_linha_1_0 = null;


        // InternalAnsic.g:7084:3: ( ( (lv_multiplicative_expression_complement_0_0= rulemultiplicative_expression_complement ) ) ( (lv_multiplicative_expression_linha_1_0= rulemultiplicative_expression_linha ) ) )
        // InternalAnsic.g:7084:3: ( (lv_multiplicative_expression_complement_0_0= rulemultiplicative_expression_complement ) ) ( (lv_multiplicative_expression_linha_1_0= rulemultiplicative_expression_linha ) )
        {
        // InternalAnsic.g:7084:3: ( (lv_multiplicative_expression_complement_0_0= rulemultiplicative_expression_complement ) )
        // InternalAnsic.g:7085:4: (lv_multiplicative_expression_complement_0_0= rulemultiplicative_expression_complement )
        {
        // InternalAnsic.g:7085:4: (lv_multiplicative_expression_complement_0_0= rulemultiplicative_expression_complement )
        // InternalAnsic.g:7086:5: lv_multiplicative_expression_complement_0_0= rulemultiplicative_expression_complement
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getMultiplicative_expression_linhaAccess().getMultiplicative_expression_complementMultiplicative_expression_complementParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_31);
        lv_multiplicative_expression_complement_0_0=rulemultiplicative_expression_complement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:7103:3: ( (lv_multiplicative_expression_linha_1_0= rulemultiplicative_expression_linha ) )
        // InternalAnsic.g:7104:4: (lv_multiplicative_expression_linha_1_0= rulemultiplicative_expression_linha )
        {
        // InternalAnsic.g:7104:4: (lv_multiplicative_expression_linha_1_0= rulemultiplicative_expression_linha )
        // InternalAnsic.g:7105:5: lv_multiplicative_expression_linha_1_0= rulemultiplicative_expression_linha
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getMultiplicative_expression_linhaAccess().getMultiplicative_expression_linhaMultiplicative_expression_linhaParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_multiplicative_expression_linha_1_0=rulemultiplicative_expression_linha();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred134_InternalAnsic

    // $ANTLR start synpred137_InternalAnsic
    public final void synpred137_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_additive_expression_complement_0_0 = null;

        EObject lv_additive_expression_linha_1_0 = null;


        // InternalAnsic.g:7294:3: ( ( (lv_additive_expression_complement_0_0= ruleadditive_expression_complement ) ) ( (lv_additive_expression_linha_1_0= ruleadditive_expression_linha ) ) )
        // InternalAnsic.g:7294:3: ( (lv_additive_expression_complement_0_0= ruleadditive_expression_complement ) ) ( (lv_additive_expression_linha_1_0= ruleadditive_expression_linha ) )
        {
        // InternalAnsic.g:7294:3: ( (lv_additive_expression_complement_0_0= ruleadditive_expression_complement ) )
        // InternalAnsic.g:7295:4: (lv_additive_expression_complement_0_0= ruleadditive_expression_complement )
        {
        // InternalAnsic.g:7295:4: (lv_additive_expression_complement_0_0= ruleadditive_expression_complement )
        // InternalAnsic.g:7296:5: lv_additive_expression_complement_0_0= ruleadditive_expression_complement
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getAdditive_expression_linhaAccess().getAdditive_expression_complementAdditive_expression_complementParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_32);
        lv_additive_expression_complement_0_0=ruleadditive_expression_complement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:7313:3: ( (lv_additive_expression_linha_1_0= ruleadditive_expression_linha ) )
        // InternalAnsic.g:7314:4: (lv_additive_expression_linha_1_0= ruleadditive_expression_linha )
        {
        // InternalAnsic.g:7314:4: (lv_additive_expression_linha_1_0= ruleadditive_expression_linha )
        // InternalAnsic.g:7315:5: lv_additive_expression_linha_1_0= ruleadditive_expression_linha
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getAdditive_expression_linhaAccess().getAdditive_expression_linhaAdditive_expression_linhaParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_additive_expression_linha_1_0=ruleadditive_expression_linha();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred137_InternalAnsic

    // $ANTLR start synpred139_InternalAnsic
    public final void synpred139_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_shift_expression_complement_0_0 = null;

        EObject lv_shift_expression_linha_1_0 = null;


        // InternalAnsic.g:7478:3: ( ( (lv_shift_expression_complement_0_0= ruleshift_expression_complement ) ) ( (lv_shift_expression_linha_1_0= ruleshift_expression_linha ) ) )
        // InternalAnsic.g:7478:3: ( (lv_shift_expression_complement_0_0= ruleshift_expression_complement ) ) ( (lv_shift_expression_linha_1_0= ruleshift_expression_linha ) )
        {
        // InternalAnsic.g:7478:3: ( (lv_shift_expression_complement_0_0= ruleshift_expression_complement ) )
        // InternalAnsic.g:7479:4: (lv_shift_expression_complement_0_0= ruleshift_expression_complement )
        {
        // InternalAnsic.g:7479:4: (lv_shift_expression_complement_0_0= ruleshift_expression_complement )
        // InternalAnsic.g:7480:5: lv_shift_expression_complement_0_0= ruleshift_expression_complement
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getShift_expression_linhaAccess().getShift_expression_complementShift_expression_complementParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_33);
        lv_shift_expression_complement_0_0=ruleshift_expression_complement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:7497:3: ( (lv_shift_expression_linha_1_0= ruleshift_expression_linha ) )
        // InternalAnsic.g:7498:4: (lv_shift_expression_linha_1_0= ruleshift_expression_linha )
        {
        // InternalAnsic.g:7498:4: (lv_shift_expression_linha_1_0= ruleshift_expression_linha )
        // InternalAnsic.g:7499:5: lv_shift_expression_linha_1_0= ruleshift_expression_linha
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getShift_expression_linhaAccess().getShift_expression_linhaShift_expression_linhaParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_shift_expression_linha_1_0=ruleshift_expression_linha();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred139_InternalAnsic

    // $ANTLR start synpred141_InternalAnsic
    public final void synpred141_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_shift_expression_complement_0_0 = null;

        EObject lv_relational_expression_linha_1_0 = null;


        // InternalAnsic.g:7662:3: ( ( (lv_shift_expression_complement_0_0= ruleshift_expression_complement ) ) ( (lv_relational_expression_linha_1_0= rulerelational_expression_linha ) ) )
        // InternalAnsic.g:7662:3: ( (lv_shift_expression_complement_0_0= ruleshift_expression_complement ) ) ( (lv_relational_expression_linha_1_0= rulerelational_expression_linha ) )
        {
        // InternalAnsic.g:7662:3: ( (lv_shift_expression_complement_0_0= ruleshift_expression_complement ) )
        // InternalAnsic.g:7663:4: (lv_shift_expression_complement_0_0= ruleshift_expression_complement )
        {
        // InternalAnsic.g:7663:4: (lv_shift_expression_complement_0_0= ruleshift_expression_complement )
        // InternalAnsic.g:7664:5: lv_shift_expression_complement_0_0= ruleshift_expression_complement
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getRelational_expression_linhaAccess().getShift_expression_complementShift_expression_complementParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_33);
        lv_shift_expression_complement_0_0=ruleshift_expression_complement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:7681:3: ( (lv_relational_expression_linha_1_0= rulerelational_expression_linha ) )
        // InternalAnsic.g:7682:4: (lv_relational_expression_linha_1_0= rulerelational_expression_linha )
        {
        // InternalAnsic.g:7682:4: (lv_relational_expression_linha_1_0= rulerelational_expression_linha )
        // InternalAnsic.g:7683:5: lv_relational_expression_linha_1_0= rulerelational_expression_linha
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getRelational_expression_linhaAccess().getRelational_expression_linhaRelational_expression_linhaParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_relational_expression_linha_1_0=rulerelational_expression_linha();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred141_InternalAnsic

    // $ANTLR start synpred142_InternalAnsic
    public final void synpred142_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_equality_expression_complement_0_0 = null;

        EObject lv_equality_expression_linha_1_0 = null;


        // InternalAnsic.g:7776:3: ( ( (lv_equality_expression_complement_0_0= ruleequality_expression_complement ) ) ( (lv_equality_expression_linha_1_0= ruleequality_expression_linha ) ) )
        // InternalAnsic.g:7776:3: ( (lv_equality_expression_complement_0_0= ruleequality_expression_complement ) ) ( (lv_equality_expression_linha_1_0= ruleequality_expression_linha ) )
        {
        // InternalAnsic.g:7776:3: ( (lv_equality_expression_complement_0_0= ruleequality_expression_complement ) )
        // InternalAnsic.g:7777:4: (lv_equality_expression_complement_0_0= ruleequality_expression_complement )
        {
        // InternalAnsic.g:7777:4: (lv_equality_expression_complement_0_0= ruleequality_expression_complement )
        // InternalAnsic.g:7778:5: lv_equality_expression_complement_0_0= ruleequality_expression_complement
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getEquality_expression_linhaAccess().getEquality_expression_complementEquality_expression_complementParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_34);
        lv_equality_expression_complement_0_0=ruleequality_expression_complement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:7795:3: ( (lv_equality_expression_linha_1_0= ruleequality_expression_linha ) )
        // InternalAnsic.g:7796:4: (lv_equality_expression_linha_1_0= ruleequality_expression_linha )
        {
        // InternalAnsic.g:7796:4: (lv_equality_expression_linha_1_0= ruleequality_expression_linha )
        // InternalAnsic.g:7797:5: lv_equality_expression_linha_1_0= ruleequality_expression_linha
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getEquality_expression_linhaAccess().getEquality_expression_linhaEquality_expression_linhaParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_equality_expression_linha_1_0=ruleequality_expression_linha();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred142_InternalAnsic

    // $ANTLR start synpred155_InternalAnsic
    public final void synpred155_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_16=null;
        EObject lv_expression_statement_14_0 = null;

        EObject lv_expression_statement2_15_0 = null;

        EObject lv_statement_17_0 = null;


        // InternalAnsic.g:8265:3: ( (otherlv_12= 'for' otherlv_13= '(' ( (lv_expression_statement_14_0= ruleexpression_statement ) ) ( (lv_expression_statement2_15_0= ruleexpression_statement ) ) otherlv_16= ')' ( (lv_statement_17_0= rulestatement ) ) ) )
        // InternalAnsic.g:8265:3: (otherlv_12= 'for' otherlv_13= '(' ( (lv_expression_statement_14_0= ruleexpression_statement ) ) ( (lv_expression_statement2_15_0= ruleexpression_statement ) ) otherlv_16= ')' ( (lv_statement_17_0= rulestatement ) ) )
        {
        // InternalAnsic.g:8265:3: (otherlv_12= 'for' otherlv_13= '(' ( (lv_expression_statement_14_0= ruleexpression_statement ) ) ( (lv_expression_statement2_15_0= ruleexpression_statement ) ) otherlv_16= ')' ( (lv_statement_17_0= rulestatement ) ) )
        // InternalAnsic.g:8266:4: otherlv_12= 'for' otherlv_13= '(' ( (lv_expression_statement_14_0= ruleexpression_statement ) ) ( (lv_expression_statement2_15_0= ruleexpression_statement ) ) otherlv_16= ')' ( (lv_statement_17_0= rulestatement ) )
        {
        otherlv_12=(Token)match(input,94,FOLLOW_5); if (state.failed) return ;
        otherlv_13=(Token)match(input,34,FOLLOW_37); if (state.failed) return ;
        // InternalAnsic.g:8274:4: ( (lv_expression_statement_14_0= ruleexpression_statement ) )
        // InternalAnsic.g:8275:5: (lv_expression_statement_14_0= ruleexpression_statement )
        {
        // InternalAnsic.g:8275:5: (lv_expression_statement_14_0= ruleexpression_statement )
        // InternalAnsic.g:8276:6: lv_expression_statement_14_0= ruleexpression_statement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getIteration_statementAccess().getExpression_statementExpression_statementParserRuleCall_2_2_0());
          					
        }
        pushFollow(FOLLOW_37);
        lv_expression_statement_14_0=ruleexpression_statement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:8293:4: ( (lv_expression_statement2_15_0= ruleexpression_statement ) )
        // InternalAnsic.g:8294:5: (lv_expression_statement2_15_0= ruleexpression_statement )
        {
        // InternalAnsic.g:8294:5: (lv_expression_statement2_15_0= ruleexpression_statement )
        // InternalAnsic.g:8295:6: lv_expression_statement2_15_0= ruleexpression_statement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getIteration_statementAccess().getExpression_statement2Expression_statementParserRuleCall_2_3_0());
          					
        }
        pushFollow(FOLLOW_7);
        lv_expression_statement2_15_0=ruleexpression_statement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_16=(Token)match(input,35,FOLLOW_35); if (state.failed) return ;
        // InternalAnsic.g:8316:4: ( (lv_statement_17_0= rulestatement ) )
        // InternalAnsic.g:8317:5: (lv_statement_17_0= rulestatement )
        {
        // InternalAnsic.g:8317:5: (lv_statement_17_0= rulestatement )
        // InternalAnsic.g:8318:6: lv_statement_17_0= rulestatement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getIteration_statementAccess().getStatementStatementParserRuleCall_2_5_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_statement_17_0=rulestatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred155_InternalAnsic

    // $ANTLR start synpred156_InternalAnsic
    public final void synpred156_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_23=null;
        EObject lv_expression_statement_20_0 = null;

        EObject lv_expression_statement2_21_0 = null;

        EObject lv_expression_22_0 = null;

        EObject lv_statement_24_0 = null;


        // InternalAnsic.g:8337:3: ( (otherlv_18= 'for' otherlv_19= '(' ( (lv_expression_statement_20_0= ruleexpression_statement ) ) ( (lv_expression_statement2_21_0= ruleexpression_statement ) ) ( (lv_expression_22_0= ruleexpression ) ) otherlv_23= ')' ( (lv_statement_24_0= rulestatement ) ) ) )
        // InternalAnsic.g:8337:3: (otherlv_18= 'for' otherlv_19= '(' ( (lv_expression_statement_20_0= ruleexpression_statement ) ) ( (lv_expression_statement2_21_0= ruleexpression_statement ) ) ( (lv_expression_22_0= ruleexpression ) ) otherlv_23= ')' ( (lv_statement_24_0= rulestatement ) ) )
        {
        // InternalAnsic.g:8337:3: (otherlv_18= 'for' otherlv_19= '(' ( (lv_expression_statement_20_0= ruleexpression_statement ) ) ( (lv_expression_statement2_21_0= ruleexpression_statement ) ) ( (lv_expression_22_0= ruleexpression ) ) otherlv_23= ')' ( (lv_statement_24_0= rulestatement ) ) )
        // InternalAnsic.g:8338:4: otherlv_18= 'for' otherlv_19= '(' ( (lv_expression_statement_20_0= ruleexpression_statement ) ) ( (lv_expression_statement2_21_0= ruleexpression_statement ) ) ( (lv_expression_22_0= ruleexpression ) ) otherlv_23= ')' ( (lv_statement_24_0= rulestatement ) )
        {
        otherlv_18=(Token)match(input,94,FOLLOW_5); if (state.failed) return ;
        otherlv_19=(Token)match(input,34,FOLLOW_37); if (state.failed) return ;
        // InternalAnsic.g:8346:4: ( (lv_expression_statement_20_0= ruleexpression_statement ) )
        // InternalAnsic.g:8347:5: (lv_expression_statement_20_0= ruleexpression_statement )
        {
        // InternalAnsic.g:8347:5: (lv_expression_statement_20_0= ruleexpression_statement )
        // InternalAnsic.g:8348:6: lv_expression_statement_20_0= ruleexpression_statement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getIteration_statementAccess().getExpression_statementExpression_statementParserRuleCall_3_2_0());
          					
        }
        pushFollow(FOLLOW_37);
        lv_expression_statement_20_0=ruleexpression_statement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:8365:4: ( (lv_expression_statement2_21_0= ruleexpression_statement ) )
        // InternalAnsic.g:8366:5: (lv_expression_statement2_21_0= ruleexpression_statement )
        {
        // InternalAnsic.g:8366:5: (lv_expression_statement2_21_0= ruleexpression_statement )
        // InternalAnsic.g:8367:6: lv_expression_statement2_21_0= ruleexpression_statement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getIteration_statementAccess().getExpression_statement2Expression_statementParserRuleCall_3_3_0());
          					
        }
        pushFollow(FOLLOW_8);
        lv_expression_statement2_21_0=ruleexpression_statement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:8384:4: ( (lv_expression_22_0= ruleexpression ) )
        // InternalAnsic.g:8385:5: (lv_expression_22_0= ruleexpression )
        {
        // InternalAnsic.g:8385:5: (lv_expression_22_0= ruleexpression )
        // InternalAnsic.g:8386:6: lv_expression_22_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getIteration_statementAccess().getExpressionExpressionParserRuleCall_3_4_0());
          					
        }
        pushFollow(FOLLOW_7);
        lv_expression_22_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_23=(Token)match(input,35,FOLLOW_35); if (state.failed) return ;
        // InternalAnsic.g:8407:4: ( (lv_statement_24_0= rulestatement ) )
        // InternalAnsic.g:8408:5: (lv_statement_24_0= rulestatement )
        {
        // InternalAnsic.g:8408:5: (lv_statement_24_0= rulestatement )
        // InternalAnsic.g:8409:6: lv_statement_24_0= rulestatement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getIteration_statementAccess().getStatementStatementParserRuleCall_3_6_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_statement_24_0=rulestatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred156_InternalAnsic

    // $ANTLR start synpred157_InternalAnsic
    public final void synpred157_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_25=null;
        Token otherlv_26=null;
        Token otherlv_29=null;
        EObject lv_declaration_27_0 = null;

        EObject lv_expression_statement_28_0 = null;

        EObject lv_statement_30_0 = null;


        // InternalAnsic.g:8428:3: ( (otherlv_25= 'for' otherlv_26= '(' ( (lv_declaration_27_0= ruledeclaration ) ) ( (lv_expression_statement_28_0= ruleexpression_statement ) ) otherlv_29= ')' ( (lv_statement_30_0= rulestatement ) ) ) )
        // InternalAnsic.g:8428:3: (otherlv_25= 'for' otherlv_26= '(' ( (lv_declaration_27_0= ruledeclaration ) ) ( (lv_expression_statement_28_0= ruleexpression_statement ) ) otherlv_29= ')' ( (lv_statement_30_0= rulestatement ) ) )
        {
        // InternalAnsic.g:8428:3: (otherlv_25= 'for' otherlv_26= '(' ( (lv_declaration_27_0= ruledeclaration ) ) ( (lv_expression_statement_28_0= ruleexpression_statement ) ) otherlv_29= ')' ( (lv_statement_30_0= rulestatement ) ) )
        // InternalAnsic.g:8429:4: otherlv_25= 'for' otherlv_26= '(' ( (lv_declaration_27_0= ruledeclaration ) ) ( (lv_expression_statement_28_0= ruleexpression_statement ) ) otherlv_29= ')' ( (lv_statement_30_0= rulestatement ) )
        {
        otherlv_25=(Token)match(input,94,FOLLOW_5); if (state.failed) return ;
        otherlv_26=(Token)match(input,34,FOLLOW_3); if (state.failed) return ;
        // InternalAnsic.g:8437:4: ( (lv_declaration_27_0= ruledeclaration ) )
        // InternalAnsic.g:8438:5: (lv_declaration_27_0= ruledeclaration )
        {
        // InternalAnsic.g:8438:5: (lv_declaration_27_0= ruledeclaration )
        // InternalAnsic.g:8439:6: lv_declaration_27_0= ruledeclaration
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getIteration_statementAccess().getDeclarationDeclarationParserRuleCall_4_2_0());
          					
        }
        pushFollow(FOLLOW_37);
        lv_declaration_27_0=ruledeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:8456:4: ( (lv_expression_statement_28_0= ruleexpression_statement ) )
        // InternalAnsic.g:8457:5: (lv_expression_statement_28_0= ruleexpression_statement )
        {
        // InternalAnsic.g:8457:5: (lv_expression_statement_28_0= ruleexpression_statement )
        // InternalAnsic.g:8458:6: lv_expression_statement_28_0= ruleexpression_statement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getIteration_statementAccess().getExpression_statementExpression_statementParserRuleCall_4_3_0());
          					
        }
        pushFollow(FOLLOW_7);
        lv_expression_statement_28_0=ruleexpression_statement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_29=(Token)match(input,35,FOLLOW_35); if (state.failed) return ;
        // InternalAnsic.g:8479:4: ( (lv_statement_30_0= rulestatement ) )
        // InternalAnsic.g:8480:5: (lv_statement_30_0= rulestatement )
        {
        // InternalAnsic.g:8480:5: (lv_statement_30_0= rulestatement )
        // InternalAnsic.g:8481:6: lv_statement_30_0= rulestatement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getIteration_statementAccess().getStatementStatementParserRuleCall_4_5_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_statement_30_0=rulestatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred157_InternalAnsic

    // $ANTLR start synpred158_InternalAnsic
    public final void synpred158_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_expression_2_0 = null;

        EObject lv_statement_4_0 = null;

        EObject lv_statement2_6_0 = null;


        // InternalAnsic.g:8609:3: ( (otherlv_0= 'if' otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_statement_4_0= rulestatement ) ) otherlv_5= 'else' ( (lv_statement2_6_0= rulestatement ) ) ) )
        // InternalAnsic.g:8609:3: (otherlv_0= 'if' otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_statement_4_0= rulestatement ) ) otherlv_5= 'else' ( (lv_statement2_6_0= rulestatement ) ) )
        {
        // InternalAnsic.g:8609:3: (otherlv_0= 'if' otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_statement_4_0= rulestatement ) ) otherlv_5= 'else' ( (lv_statement2_6_0= rulestatement ) ) )
        // InternalAnsic.g:8610:4: otherlv_0= 'if' otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_statement_4_0= rulestatement ) ) otherlv_5= 'else' ( (lv_statement2_6_0= rulestatement ) )
        {
        otherlv_0=(Token)match(input,95,FOLLOW_5); if (state.failed) return ;
        otherlv_1=(Token)match(input,34,FOLLOW_8); if (state.failed) return ;
        // InternalAnsic.g:8618:4: ( (lv_expression_2_0= ruleexpression ) )
        // InternalAnsic.g:8619:5: (lv_expression_2_0= ruleexpression )
        {
        // InternalAnsic.g:8619:5: (lv_expression_2_0= ruleexpression )
        // InternalAnsic.g:8620:6: lv_expression_2_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getSelection_statementAccess().getExpressionExpressionParserRuleCall_0_2_0());
          					
        }
        pushFollow(FOLLOW_7);
        lv_expression_2_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_3=(Token)match(input,35,FOLLOW_35); if (state.failed) return ;
        // InternalAnsic.g:8641:4: ( (lv_statement_4_0= rulestatement ) )
        // InternalAnsic.g:8642:5: (lv_statement_4_0= rulestatement )
        {
        // InternalAnsic.g:8642:5: (lv_statement_4_0= rulestatement )
        // InternalAnsic.g:8643:6: lv_statement_4_0= rulestatement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getSelection_statementAccess().getStatementStatementParserRuleCall_0_4_0());
          					
        }
        pushFollow(FOLLOW_38);
        lv_statement_4_0=rulestatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_5=(Token)match(input,96,FOLLOW_35); if (state.failed) return ;
        // InternalAnsic.g:8664:4: ( (lv_statement2_6_0= rulestatement ) )
        // InternalAnsic.g:8665:5: (lv_statement2_6_0= rulestatement )
        {
        // InternalAnsic.g:8665:5: (lv_statement2_6_0= rulestatement )
        // InternalAnsic.g:8666:6: lv_statement2_6_0= rulestatement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getSelection_statementAccess().getStatement2StatementParserRuleCall_0_6_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_statement2_6_0=rulestatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred158_InternalAnsic

    // $ANTLR start synpred159_InternalAnsic
    public final void synpred159_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        EObject lv_expression_9_0 = null;

        EObject lv_statement_11_0 = null;


        // InternalAnsic.g:8685:3: ( (otherlv_7= 'if' otherlv_8= '(' ( (lv_expression_9_0= ruleexpression ) ) otherlv_10= ')' ( (lv_statement_11_0= rulestatement ) ) ) )
        // InternalAnsic.g:8685:3: (otherlv_7= 'if' otherlv_8= '(' ( (lv_expression_9_0= ruleexpression ) ) otherlv_10= ')' ( (lv_statement_11_0= rulestatement ) ) )
        {
        // InternalAnsic.g:8685:3: (otherlv_7= 'if' otherlv_8= '(' ( (lv_expression_9_0= ruleexpression ) ) otherlv_10= ')' ( (lv_statement_11_0= rulestatement ) ) )
        // InternalAnsic.g:8686:4: otherlv_7= 'if' otherlv_8= '(' ( (lv_expression_9_0= ruleexpression ) ) otherlv_10= ')' ( (lv_statement_11_0= rulestatement ) )
        {
        otherlv_7=(Token)match(input,95,FOLLOW_5); if (state.failed) return ;
        otherlv_8=(Token)match(input,34,FOLLOW_8); if (state.failed) return ;
        // InternalAnsic.g:8694:4: ( (lv_expression_9_0= ruleexpression ) )
        // InternalAnsic.g:8695:5: (lv_expression_9_0= ruleexpression )
        {
        // InternalAnsic.g:8695:5: (lv_expression_9_0= ruleexpression )
        // InternalAnsic.g:8696:6: lv_expression_9_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getSelection_statementAccess().getExpressionExpressionParserRuleCall_1_2_0());
          					
        }
        pushFollow(FOLLOW_7);
        lv_expression_9_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_10=(Token)match(input,35,FOLLOW_35); if (state.failed) return ;
        // InternalAnsic.g:8717:4: ( (lv_statement_11_0= rulestatement ) )
        // InternalAnsic.g:8718:5: (lv_statement_11_0= rulestatement )
        {
        // InternalAnsic.g:8718:5: (lv_statement_11_0= rulestatement )
        // InternalAnsic.g:8719:6: lv_statement_11_0= rulestatement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getSelection_statementAccess().getStatementStatementParserRuleCall_1_4_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_statement_11_0=rulestatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred159_InternalAnsic

    // $ANTLR start synpred167_InternalAnsic
    public final void synpred167_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_0=null;
        EObject lv_equality_expression_1_0 = null;

        EObject lv_and_expression_linha_2_0 = null;


        // InternalAnsic.g:9287:3: (otherlv_0= '&' ( (lv_equality_expression_1_0= ruleequality_expression ) ) ( (lv_and_expression_linha_2_0= ruleand_expression_linha ) ) )
        // InternalAnsic.g:9287:3: otherlv_0= '&' ( (lv_equality_expression_1_0= ruleequality_expression ) ) ( (lv_and_expression_linha_2_0= ruleand_expression_linha ) )
        {
        otherlv_0=(Token)match(input,99,FOLLOW_8); if (state.failed) return ;
        // InternalAnsic.g:9291:3: ( (lv_equality_expression_1_0= ruleequality_expression ) )
        // InternalAnsic.g:9292:4: (lv_equality_expression_1_0= ruleequality_expression )
        {
        // InternalAnsic.g:9292:4: (lv_equality_expression_1_0= ruleequality_expression )
        // InternalAnsic.g:9293:5: lv_equality_expression_1_0= ruleequality_expression
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getAnd_expression_linhaAccess().getEquality_expressionEquality_expressionParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_41);
        lv_equality_expression_1_0=ruleequality_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:9310:3: ( (lv_and_expression_linha_2_0= ruleand_expression_linha ) )
        // InternalAnsic.g:9311:4: (lv_and_expression_linha_2_0= ruleand_expression_linha )
        {
        // InternalAnsic.g:9311:4: (lv_and_expression_linha_2_0= ruleand_expression_linha )
        // InternalAnsic.g:9312:5: lv_and_expression_linha_2_0= ruleand_expression_linha
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getAnd_expression_linhaAccess().getAnd_expression_linhaAnd_expression_linhaParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_and_expression_linha_2_0=ruleand_expression_linha();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred167_InternalAnsic

    // $ANTLR start synpred168_InternalAnsic
    public final void synpred168_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_0=null;
        EObject lv_and_expression_1_0 = null;

        EObject lv_exclusive_or_expression_linha_2_0 = null;


        // InternalAnsic.g:9405:3: (otherlv_0= '^' ( (lv_and_expression_1_0= ruleand_expression ) ) ( (lv_exclusive_or_expression_linha_2_0= ruleexclusive_or_expression_linha ) ) )
        // InternalAnsic.g:9405:3: otherlv_0= '^' ( (lv_and_expression_1_0= ruleand_expression ) ) ( (lv_exclusive_or_expression_linha_2_0= ruleexclusive_or_expression_linha ) )
        {
        otherlv_0=(Token)match(input,100,FOLLOW_8); if (state.failed) return ;
        // InternalAnsic.g:9409:3: ( (lv_and_expression_1_0= ruleand_expression ) )
        // InternalAnsic.g:9410:4: (lv_and_expression_1_0= ruleand_expression )
        {
        // InternalAnsic.g:9410:4: (lv_and_expression_1_0= ruleand_expression )
        // InternalAnsic.g:9411:5: lv_and_expression_1_0= ruleand_expression
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getExclusive_or_expression_linhaAccess().getAnd_expressionAnd_expressionParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_42);
        lv_and_expression_1_0=ruleand_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:9428:3: ( (lv_exclusive_or_expression_linha_2_0= ruleexclusive_or_expression_linha ) )
        // InternalAnsic.g:9429:4: (lv_exclusive_or_expression_linha_2_0= ruleexclusive_or_expression_linha )
        {
        // InternalAnsic.g:9429:4: (lv_exclusive_or_expression_linha_2_0= ruleexclusive_or_expression_linha )
        // InternalAnsic.g:9430:5: lv_exclusive_or_expression_linha_2_0= ruleexclusive_or_expression_linha
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getExclusive_or_expression_linhaAccess().getExclusive_or_expression_linhaExclusive_or_expression_linhaParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_exclusive_or_expression_linha_2_0=ruleexclusive_or_expression_linha();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred168_InternalAnsic

    // $ANTLR start synpred169_InternalAnsic
    public final void synpred169_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_0=null;
        EObject lv_exclusive_or_expression_1_0 = null;

        EObject lv_inclusive_or_expression_linha_2_0 = null;


        // InternalAnsic.g:9523:3: (otherlv_0= '|' ( (lv_exclusive_or_expression_1_0= ruleexclusive_or_expression ) ) ( (lv_inclusive_or_expression_linha_2_0= ruleinclusive_or_expression_linha ) ) )
        // InternalAnsic.g:9523:3: otherlv_0= '|' ( (lv_exclusive_or_expression_1_0= ruleexclusive_or_expression ) ) ( (lv_inclusive_or_expression_linha_2_0= ruleinclusive_or_expression_linha ) )
        {
        otherlv_0=(Token)match(input,101,FOLLOW_8); if (state.failed) return ;
        // InternalAnsic.g:9527:3: ( (lv_exclusive_or_expression_1_0= ruleexclusive_or_expression ) )
        // InternalAnsic.g:9528:4: (lv_exclusive_or_expression_1_0= ruleexclusive_or_expression )
        {
        // InternalAnsic.g:9528:4: (lv_exclusive_or_expression_1_0= ruleexclusive_or_expression )
        // InternalAnsic.g:9529:5: lv_exclusive_or_expression_1_0= ruleexclusive_or_expression
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getInclusive_or_expression_linhaAccess().getExclusive_or_expressionExclusive_or_expressionParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_43);
        lv_exclusive_or_expression_1_0=ruleexclusive_or_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:9546:3: ( (lv_inclusive_or_expression_linha_2_0= ruleinclusive_or_expression_linha ) )
        // InternalAnsic.g:9547:4: (lv_inclusive_or_expression_linha_2_0= ruleinclusive_or_expression_linha )
        {
        // InternalAnsic.g:9547:4: (lv_inclusive_or_expression_linha_2_0= ruleinclusive_or_expression_linha )
        // InternalAnsic.g:9548:5: lv_inclusive_or_expression_linha_2_0= ruleinclusive_or_expression_linha
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getInclusive_or_expression_linhaAccess().getInclusive_or_expression_linhaInclusive_or_expression_linhaParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_inclusive_or_expression_linha_2_0=ruleinclusive_or_expression_linha();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred169_InternalAnsic

    // $ANTLR start synpred170_InternalAnsic
    public final void synpred170_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_0=null;
        EObject lv_inclusive_or_expression_1_0 = null;

        EObject lv_logical_and_expression_linha_2_0 = null;


        // InternalAnsic.g:9641:3: (otherlv_0= 'and' ( (lv_inclusive_or_expression_1_0= ruleinclusive_or_expression ) ) ( (lv_logical_and_expression_linha_2_0= rulelogical_and_expression_linha ) ) )
        // InternalAnsic.g:9641:3: otherlv_0= 'and' ( (lv_inclusive_or_expression_1_0= ruleinclusive_or_expression ) ) ( (lv_logical_and_expression_linha_2_0= rulelogical_and_expression_linha ) )
        {
        otherlv_0=(Token)match(input,102,FOLLOW_8); if (state.failed) return ;
        // InternalAnsic.g:9645:3: ( (lv_inclusive_or_expression_1_0= ruleinclusive_or_expression ) )
        // InternalAnsic.g:9646:4: (lv_inclusive_or_expression_1_0= ruleinclusive_or_expression )
        {
        // InternalAnsic.g:9646:4: (lv_inclusive_or_expression_1_0= ruleinclusive_or_expression )
        // InternalAnsic.g:9647:5: lv_inclusive_or_expression_1_0= ruleinclusive_or_expression
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getLogical_and_expression_linhaAccess().getInclusive_or_expressionInclusive_or_expressionParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_44);
        lv_inclusive_or_expression_1_0=ruleinclusive_or_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:9664:3: ( (lv_logical_and_expression_linha_2_0= rulelogical_and_expression_linha ) )
        // InternalAnsic.g:9665:4: (lv_logical_and_expression_linha_2_0= rulelogical_and_expression_linha )
        {
        // InternalAnsic.g:9665:4: (lv_logical_and_expression_linha_2_0= rulelogical_and_expression_linha )
        // InternalAnsic.g:9666:5: lv_logical_and_expression_linha_2_0= rulelogical_and_expression_linha
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getLogical_and_expression_linhaAccess().getLogical_and_expression_linhaLogical_and_expression_linhaParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_logical_and_expression_linha_2_0=rulelogical_and_expression_linha();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred170_InternalAnsic

    // $ANTLR start synpred171_InternalAnsic
    public final void synpred171_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_0=null;
        EObject lv_logical_and_expression_1_0 = null;

        EObject lv_logical_or_expression_linha_2_0 = null;


        // InternalAnsic.g:9759:3: (otherlv_0= 'or' ( (lv_logical_and_expression_1_0= rulelogical_and_expression ) ) ( (lv_logical_or_expression_linha_2_0= rulelogical_or_expression_linha ) ) )
        // InternalAnsic.g:9759:3: otherlv_0= 'or' ( (lv_logical_and_expression_1_0= rulelogical_and_expression ) ) ( (lv_logical_or_expression_linha_2_0= rulelogical_or_expression_linha ) )
        {
        otherlv_0=(Token)match(input,103,FOLLOW_8); if (state.failed) return ;
        // InternalAnsic.g:9763:3: ( (lv_logical_and_expression_1_0= rulelogical_and_expression ) )
        // InternalAnsic.g:9764:4: (lv_logical_and_expression_1_0= rulelogical_and_expression )
        {
        // InternalAnsic.g:9764:4: (lv_logical_and_expression_1_0= rulelogical_and_expression )
        // InternalAnsic.g:9765:5: lv_logical_and_expression_1_0= rulelogical_and_expression
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getLogical_or_expression_linhaAccess().getLogical_and_expressionLogical_and_expressionParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_45);
        lv_logical_and_expression_1_0=rulelogical_and_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:9782:3: ( (lv_logical_or_expression_linha_2_0= rulelogical_or_expression_linha ) )
        // InternalAnsic.g:9783:4: (lv_logical_or_expression_linha_2_0= rulelogical_or_expression_linha )
        {
        // InternalAnsic.g:9783:4: (lv_logical_or_expression_linha_2_0= rulelogical_or_expression_linha )
        // InternalAnsic.g:9784:5: lv_logical_or_expression_linha_2_0= rulelogical_or_expression_linha
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getLogical_or_expression_linhaAccess().getLogical_or_expression_linhaLogical_or_expression_linhaParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_logical_or_expression_linha_2_0=rulelogical_or_expression_linha();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred171_InternalAnsic

    // $ANTLR start synpred172_InternalAnsic
    public final void synpred172_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_expression_1_0 = null;

        EObject lv_conditional_expression_3_0 = null;

        EObject lv_conditional_expression_linha_4_0 = null;


        // InternalAnsic.g:9877:3: (otherlv_0= '?' ( (lv_expression_1_0= ruleexpression ) ) otherlv_2= ':' ( (lv_conditional_expression_3_0= ruleconditional_expression ) ) ( (lv_conditional_expression_linha_4_0= ruleconditional_expression_linha ) ) )
        // InternalAnsic.g:9877:3: otherlv_0= '?' ( (lv_expression_1_0= ruleexpression ) ) otherlv_2= ':' ( (lv_conditional_expression_3_0= ruleconditional_expression ) ) ( (lv_conditional_expression_linha_4_0= ruleconditional_expression_linha ) )
        {
        otherlv_0=(Token)match(input,104,FOLLOW_8); if (state.failed) return ;
        // InternalAnsic.g:9881:3: ( (lv_expression_1_0= ruleexpression ) )
        // InternalAnsic.g:9882:4: (lv_expression_1_0= ruleexpression )
        {
        // InternalAnsic.g:9882:4: (lv_expression_1_0= ruleexpression )
        // InternalAnsic.g:9883:5: lv_expression_1_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getConditional_expression_linhaAccess().getExpressionExpressionParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_16);
        lv_expression_1_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_2=(Token)match(input,61,FOLLOW_8); if (state.failed) return ;
        // InternalAnsic.g:9904:3: ( (lv_conditional_expression_3_0= ruleconditional_expression ) )
        // InternalAnsic.g:9905:4: (lv_conditional_expression_3_0= ruleconditional_expression )
        {
        // InternalAnsic.g:9905:4: (lv_conditional_expression_3_0= ruleconditional_expression )
        // InternalAnsic.g:9906:5: lv_conditional_expression_3_0= ruleconditional_expression
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getConditional_expression_linhaAccess().getConditional_expressionConditional_expressionParserRuleCall_3_0());
          				
        }
        pushFollow(FOLLOW_46);
        lv_conditional_expression_3_0=ruleconditional_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:9923:3: ( (lv_conditional_expression_linha_4_0= ruleconditional_expression_linha ) )
        // InternalAnsic.g:9924:4: (lv_conditional_expression_linha_4_0= ruleconditional_expression_linha )
        {
        // InternalAnsic.g:9924:4: (lv_conditional_expression_linha_4_0= ruleconditional_expression_linha )
        // InternalAnsic.g:9925:5: lv_conditional_expression_linha_4_0= ruleconditional_expression_linha
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getConditional_expression_linhaAccess().getConditional_expression_linhaConditional_expression_linhaParserRuleCall_4_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_conditional_expression_linha_4_0=ruleconditional_expression_linha();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred172_InternalAnsic

    // $ANTLR start synpred173_InternalAnsic
    public final void synpred173_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_conditional_expression_0_0 = null;


        // InternalAnsic.g:9961:3: ( ( (lv_conditional_expression_0_0= ruleconditional_expression ) ) )
        // InternalAnsic.g:9961:3: ( (lv_conditional_expression_0_0= ruleconditional_expression ) )
        {
        // InternalAnsic.g:9961:3: ( (lv_conditional_expression_0_0= ruleconditional_expression ) )
        // InternalAnsic.g:9962:4: (lv_conditional_expression_0_0= ruleconditional_expression )
        {
        // InternalAnsic.g:9962:4: (lv_conditional_expression_0_0= ruleconditional_expression )
        // InternalAnsic.g:9963:5: lv_conditional_expression_0_0= ruleconditional_expression
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getAssignment_expressionAccess().getConditional_expressionConditional_expressionParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_conditional_expression_0_0=ruleconditional_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred173_InternalAnsic

    // $ANTLR start synpred189_InternalAnsic
    public final void synpred189_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_specifier_qualifier_list_0_0 = null;

        EObject lv_abstract_declarator_1_0 = null;


        // InternalAnsic.g:10197:3: ( ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) ) )
        // InternalAnsic.g:10197:3: ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) )
        {
        // InternalAnsic.g:10197:3: ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) )
        // InternalAnsic.g:10198:4: ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) )
        {
        // InternalAnsic.g:10198:4: ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) )
        // InternalAnsic.g:10199:5: (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list )
        {
        // InternalAnsic.g:10199:5: (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list )
        // InternalAnsic.g:10200:6: lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getType_nameAccess().getSpecifier_qualifier_listSpecifier_qualifier_listParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_25);
        lv_specifier_qualifier_list_0_0=rulespecifier_qualifier_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:10217:4: ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) )
        // InternalAnsic.g:10218:5: (lv_abstract_declarator_1_0= ruleabstract_declarator )
        {
        // InternalAnsic.g:10218:5: (lv_abstract_declarator_1_0= ruleabstract_declarator )
        // InternalAnsic.g:10219:6: lv_abstract_declarator_1_0= ruleabstract_declarator
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getType_nameAccess().getAbstract_declaratorAbstract_declaratorParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_abstract_declarator_1_0=ruleabstract_declarator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred189_InternalAnsic

    // $ANTLR start synpred192_InternalAnsic
    public final void synpred192_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_declarator_0_0 = null;

        EObject lv_initializer_2_0 = null;


        // InternalAnsic.g:10572:3: ( ( ( (lv_declarator_0_0= ruledeclarator ) ) otherlv_1= '=' ( (lv_initializer_2_0= ruleinitializer ) ) ) )
        // InternalAnsic.g:10572:3: ( ( (lv_declarator_0_0= ruledeclarator ) ) otherlv_1= '=' ( (lv_initializer_2_0= ruleinitializer ) ) )
        {
        // InternalAnsic.g:10572:3: ( ( (lv_declarator_0_0= ruledeclarator ) ) otherlv_1= '=' ( (lv_initializer_2_0= ruleinitializer ) ) )
        // InternalAnsic.g:10573:4: ( (lv_declarator_0_0= ruledeclarator ) ) otherlv_1= '=' ( (lv_initializer_2_0= ruleinitializer ) )
        {
        // InternalAnsic.g:10573:4: ( (lv_declarator_0_0= ruledeclarator ) )
        // InternalAnsic.g:10574:5: (lv_declarator_0_0= ruledeclarator )
        {
        // InternalAnsic.g:10574:5: (lv_declarator_0_0= ruledeclarator )
        // InternalAnsic.g:10575:6: lv_declarator_0_0= ruledeclarator
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getInit_declaratorAccess().getDeclaratorDeclaratorParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_13);
        lv_declarator_0_0=ruledeclarator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,57,FOLLOW_26); if (state.failed) return ;
        // InternalAnsic.g:10596:4: ( (lv_initializer_2_0= ruleinitializer ) )
        // InternalAnsic.g:10597:5: (lv_initializer_2_0= ruleinitializer )
        {
        // InternalAnsic.g:10597:5: (lv_initializer_2_0= ruleinitializer )
        // InternalAnsic.g:10598:6: lv_initializer_2_0= ruleinitializer
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getInit_declaratorAccess().getInitializerInitializerParserRuleCall_0_2_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_initializer_2_0=ruleinitializer();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred192_InternalAnsic

    // Delegated rules

    public final boolean synpred48_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred48_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred69_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred69_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred101_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred101_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred172_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred172_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred56_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred56_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred93_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred93_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred98_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred98_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred72_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred72_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred85_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred85_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred31_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred94_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred94_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred73_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred73_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred169_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred169_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred60_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred60_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred156_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred156_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred81_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred81_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred71_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred71_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred92_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred92_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred97_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred97_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred102_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred102_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred86_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred86_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred139_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred139_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred171_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred171_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred192_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred192_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred65_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred65_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred87_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred87_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred159_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred159_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred66_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred66_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred82_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred82_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred113_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred113_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred134_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred134_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred155_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred155_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred55_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred55_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred76_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred76_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred61_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred61_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred158_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred158_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred70_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred70_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred170_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred170_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred103_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred103_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred79_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred79_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred59_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred59_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred91_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred91_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred104_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred104_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred167_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred167_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred67_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred67_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred88_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred88_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred46_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred133_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred133_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred112_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred112_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred137_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred137_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred83_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred83_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred54_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred54_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred33_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred41_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred41_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred141_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred141_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred75_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred75_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred96_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred96_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred84_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred84_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred157_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred157_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred47_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred131_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred131_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred173_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred173_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred90_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred90_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred99_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred99_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred74_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred74_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred132_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred132_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred168_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred168_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred80_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred80_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred68_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred68_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred89_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred89_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred142_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred142_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred189_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred189_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred100_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred100_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA1 dfa1 = new DFA1(this);
    protected DFA2 dfa2 = new DFA2(this);
    protected DFA14 dfa14 = new DFA14(this);
    protected DFA17 dfa17 = new DFA17(this);
    protected DFA19 dfa19 = new DFA19(this);
    protected DFA20 dfa20 = new DFA20(this);
    protected DFA27 dfa27 = new DFA27(this);
    protected DFA28 dfa28 = new DFA28(this);
    protected DFA31 dfa31 = new DFA31(this);
    protected DFA33 dfa33 = new DFA33(this);
    protected DFA34 dfa34 = new DFA34(this);
    protected DFA36 dfa36 = new DFA36(this);
    protected DFA42 dfa42 = new DFA42(this);
    protected DFA51 dfa51 = new DFA51(this);
    protected DFA52 dfa52 = new DFA52(this);
    protected DFA78 dfa78 = new DFA78(this);
    protected DFA81 dfa81 = new DFA81(this);
    static final String dfa_1s = "\37\uffff";
    static final String dfa_2s = "\1\37\34\0\2\uffff";
    static final String dfa_3s = "\1\112\34\0\2\uffff";
    static final String dfa_4s = "\35\uffff\1\2\1\1";
    static final String dfa_5s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\2\uffff}>";
    static final String[] dfa_6s = {
            "\1\32\1\33\1\34\2\uffff\1\27\1\30\1\31\1\23\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\1\1\26\4\uffff\1\24\1\25\2\uffff\1\2\1\3\1\4\1\5\1\6\7\uffff\1\35",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "177:2: ( ( (lv_function_definitio_0_0= rulefunction_definition ) ) | ( (lv_declaration_1_0= ruledeclaration ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA1_1 = input.LA(1);

                         
                        int index1_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA1_2 = input.LA(1);

                         
                        int index1_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA1_3 = input.LA(1);

                         
                        int index1_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA1_4 = input.LA(1);

                         
                        int index1_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA1_5 = input.LA(1);

                         
                        int index1_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA1_6 = input.LA(1);

                         
                        int index1_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA1_7 = input.LA(1);

                         
                        int index1_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA1_8 = input.LA(1);

                         
                        int index1_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA1_9 = input.LA(1);

                         
                        int index1_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA1_10 = input.LA(1);

                         
                        int index1_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA1_11 = input.LA(1);

                         
                        int index1_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA1_12 = input.LA(1);

                         
                        int index1_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA1_13 = input.LA(1);

                         
                        int index1_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA1_14 = input.LA(1);

                         
                        int index1_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA1_15 = input.LA(1);

                         
                        int index1_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA1_16 = input.LA(1);

                         
                        int index1_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA1_17 = input.LA(1);

                         
                        int index1_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA1_18 = input.LA(1);

                         
                        int index1_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA1_19 = input.LA(1);

                         
                        int index1_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA1_20 = input.LA(1);

                         
                        int index1_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA1_21 = input.LA(1);

                         
                        int index1_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA1_22 = input.LA(1);

                         
                        int index1_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA1_23 = input.LA(1);

                         
                        int index1_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA1_24 = input.LA(1);

                         
                        int index1_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA1_25 = input.LA(1);

                         
                        int index1_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA1_26 = input.LA(1);

                         
                        int index1_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA1_27 = input.LA(1);

                         
                        int index1_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA1_28 = input.LA(1);

                         
                        int index1_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_28);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 1, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_7s = "\47\uffff";
    static final String dfa_8s = "\1\37\34\0\12\uffff";
    static final String dfa_9s = "\1\102\34\0\12\uffff";
    static final String dfa_10s = "\35\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12";
    static final String dfa_11s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\12\uffff}>";
    static final String[] dfa_12s = {
            "\1\32\1\33\1\34\2\uffff\1\27\1\30\1\31\1\23\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\1\1\26\4\uffff\1\24\1\25\2\uffff\1\2\1\3\1\4\1\5\1\6",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA2 extends DFA {

        public DFA2(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 2;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "235:2: ( ( ( (lv_storage_class_specifier_0_0= rulestorage_class_specifier ) ) ( (lv_declaration_specifiers_1_0= ruledeclaration_specifiers ) ) ) | ( (lv_storage_class_specifier_2_0= rulestorage_class_specifier ) ) | ( ( (lv_type_specifier_3_0= ruletype_specifier ) ) ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) ) | ( (lv_type_specifier_5_0= ruletype_specifier ) ) | ( ( (lv_type_qualifier_6_0= ruletype_qualifier ) ) ( (lv_declaration_specifiers_7_0= ruledeclaration_specifiers ) ) ) | ( (lv_type_qualifier_8_0= ruletype_qualifier ) ) | ( ( (lv_function_specifier_9_0= rulefunction_specifier ) ) ( (lv_declaration_specifiers_10_0= ruledeclaration_specifiers ) ) ) | ( (lv_function_specifier_11_0= rulefunction_specifier ) ) | ( ( (lv_alignment_specifier_12_0= rulealignment_specifier ) ) ( (lv_declaration_specifiers_13_0= ruledeclaration_specifiers ) ) ) | ( (lv_alignment_specifier_14_0= rulealignment_specifier ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA2_1 = input.LA(1);

                         
                        int index2_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred3_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred4_InternalAnsic()) ) {s = 31;}

                        else if ( (synpred5_InternalAnsic()) ) {s = 32;}

                         
                        input.seek(index2_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA2_2 = input.LA(1);

                         
                        int index2_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred3_InternalAnsic()) ) {s = 30;}

                         
                        input.seek(index2_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA2_3 = input.LA(1);

                         
                        int index2_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred3_InternalAnsic()) ) {s = 30;}

                         
                        input.seek(index2_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA2_4 = input.LA(1);

                         
                        int index2_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred3_InternalAnsic()) ) {s = 30;}

                         
                        input.seek(index2_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA2_5 = input.LA(1);

                         
                        int index2_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred3_InternalAnsic()) ) {s = 30;}

                         
                        input.seek(index2_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA2_6 = input.LA(1);

                         
                        int index2_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred3_InternalAnsic()) ) {s = 30;}

                         
                        input.seek(index2_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA2_7 = input.LA(1);

                         
                        int index2_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalAnsic()) ) {s = 31;}

                        else if ( (synpred5_InternalAnsic()) ) {s = 32;}

                         
                        input.seek(index2_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA2_8 = input.LA(1);

                         
                        int index2_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalAnsic()) ) {s = 31;}

                        else if ( (synpred5_InternalAnsic()) ) {s = 32;}

                         
                        input.seek(index2_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA2_9 = input.LA(1);

                         
                        int index2_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalAnsic()) ) {s = 31;}

                        else if ( (synpred5_InternalAnsic()) ) {s = 32;}

                         
                        input.seek(index2_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA2_10 = input.LA(1);

                         
                        int index2_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalAnsic()) ) {s = 31;}

                        else if ( (synpred5_InternalAnsic()) ) {s = 32;}

                         
                        input.seek(index2_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA2_11 = input.LA(1);

                         
                        int index2_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalAnsic()) ) {s = 31;}

                        else if ( (synpred5_InternalAnsic()) ) {s = 32;}

                         
                        input.seek(index2_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA2_12 = input.LA(1);

                         
                        int index2_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalAnsic()) ) {s = 31;}

                        else if ( (synpred5_InternalAnsic()) ) {s = 32;}

                         
                        input.seek(index2_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA2_13 = input.LA(1);

                         
                        int index2_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalAnsic()) ) {s = 31;}

                        else if ( (synpred5_InternalAnsic()) ) {s = 32;}

                         
                        input.seek(index2_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA2_14 = input.LA(1);

                         
                        int index2_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalAnsic()) ) {s = 31;}

                        else if ( (synpred5_InternalAnsic()) ) {s = 32;}

                         
                        input.seek(index2_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA2_15 = input.LA(1);

                         
                        int index2_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalAnsic()) ) {s = 31;}

                        else if ( (synpred5_InternalAnsic()) ) {s = 32;}

                         
                        input.seek(index2_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA2_16 = input.LA(1);

                         
                        int index2_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalAnsic()) ) {s = 31;}

                        else if ( (synpred5_InternalAnsic()) ) {s = 32;}

                         
                        input.seek(index2_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA2_17 = input.LA(1);

                         
                        int index2_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalAnsic()) ) {s = 31;}

                        else if ( (synpred5_InternalAnsic()) ) {s = 32;}

                         
                        input.seek(index2_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA2_18 = input.LA(1);

                         
                        int index2_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalAnsic()) ) {s = 31;}

                        else if ( (synpred5_InternalAnsic()) ) {s = 32;}

                         
                        input.seek(index2_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA2_19 = input.LA(1);

                         
                        int index2_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalAnsic()) ) {s = 31;}

                        else if ( (synpred5_InternalAnsic()) ) {s = 32;}

                        else if ( (synpred6_InternalAnsic()) ) {s = 33;}

                        else if ( (synpred7_InternalAnsic()) ) {s = 34;}

                         
                        input.seek(index2_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA2_20 = input.LA(1);

                         
                        int index2_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalAnsic()) ) {s = 31;}

                        else if ( (synpred5_InternalAnsic()) ) {s = 32;}

                         
                        input.seek(index2_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA2_21 = input.LA(1);

                         
                        int index2_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalAnsic()) ) {s = 31;}

                        else if ( (synpred5_InternalAnsic()) ) {s = 32;}

                         
                        input.seek(index2_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA2_22 = input.LA(1);

                         
                        int index2_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalAnsic()) ) {s = 31;}

                        else if ( (synpred5_InternalAnsic()) ) {s = 32;}

                         
                        input.seek(index2_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA2_23 = input.LA(1);

                         
                        int index2_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_InternalAnsic()) ) {s = 33;}

                        else if ( (synpred7_InternalAnsic()) ) {s = 34;}

                         
                        input.seek(index2_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA2_24 = input.LA(1);

                         
                        int index2_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_InternalAnsic()) ) {s = 33;}

                        else if ( (synpred7_InternalAnsic()) ) {s = 34;}

                         
                        input.seek(index2_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA2_25 = input.LA(1);

                         
                        int index2_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_InternalAnsic()) ) {s = 33;}

                        else if ( (synpred7_InternalAnsic()) ) {s = 34;}

                         
                        input.seek(index2_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA2_26 = input.LA(1);

                         
                        int index2_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalAnsic()) ) {s = 35;}

                        else if ( (synpred9_InternalAnsic()) ) {s = 36;}

                         
                        input.seek(index2_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA2_27 = input.LA(1);

                         
                        int index2_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalAnsic()) ) {s = 35;}

                        else if ( (synpred9_InternalAnsic()) ) {s = 36;}

                         
                        input.seek(index2_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA2_28 = input.LA(1);

                         
                        int index2_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalAnsic()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index2_28);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 2, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_13s = "\30\uffff";
    static final String dfa_14s = "\1\44\24\0\3\uffff";
    static final String dfa_15s = "\1\112\24\0\3\uffff";
    static final String dfa_16s = "\25\uffff\1\3\1\1\1\2";
    static final String dfa_17s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\3\uffff}>";
    static final String[] dfa_18s = {
            "\1\22\1\23\1\24\1\15\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\21\1\20\4\uffff\1\16\1\17\16\uffff\1\25",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final char[] dfa_14 = DFA.unpackEncodedStringToUnsignedChars(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[][] dfa_18 = unpackEncodedStringArray(dfa_18s);

    class DFA14 extends DFA {

        public DFA14(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 14;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_14;
            this.max = dfa_15;
            this.accept = dfa_16;
            this.special = dfa_17;
            this.transition = dfa_18;
        }
        public String getDescription() {
            return "1851:2: ( ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) otherlv_1= ';' ) | ( ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) ) ( (lv_struct_declarator_list_3_0= rulestruct_declarator_list ) ) otherlv_4= ';' ) | ( (lv_static_assert_declaration_5_0= rulestatic_assert_declaration ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA14_1 = input.LA(1);

                         
                        int index14_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA14_2 = input.LA(1);

                         
                        int index14_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA14_3 = input.LA(1);

                         
                        int index14_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA14_4 = input.LA(1);

                         
                        int index14_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA14_5 = input.LA(1);

                         
                        int index14_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA14_6 = input.LA(1);

                         
                        int index14_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA14_7 = input.LA(1);

                         
                        int index14_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA14_8 = input.LA(1);

                         
                        int index14_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA14_9 = input.LA(1);

                         
                        int index14_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA14_10 = input.LA(1);

                         
                        int index14_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA14_11 = input.LA(1);

                         
                        int index14_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA14_12 = input.LA(1);

                         
                        int index14_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA14_13 = input.LA(1);

                         
                        int index14_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA14_14 = input.LA(1);

                         
                        int index14_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA14_15 = input.LA(1);

                         
                        int index14_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA14_16 = input.LA(1);

                         
                        int index14_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA14_17 = input.LA(1);

                         
                        int index14_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA14_18 = input.LA(1);

                         
                        int index14_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA14_19 = input.LA(1);

                         
                        int index14_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA14_20 = input.LA(1);

                         
                        int index14_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_20);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 14, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_19s = "\31\uffff";
    static final String dfa_20s = "\1\44\24\0\4\uffff";
    static final String dfa_21s = "\1\73\24\0\4\uffff";
    static final String dfa_22s = "\25\uffff\1\1\1\2\1\3\1\4";
    static final String dfa_23s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\4\uffff}>";
    static final String[] dfa_24s = {
            "\1\22\1\23\1\24\1\15\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\21\1\20\4\uffff\1\16\1\17",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final char[] dfa_20 = DFA.unpackEncodedStringToUnsignedChars(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[][] dfa_24 = unpackEncodedStringArray(dfa_24s);

    class DFA17 extends DFA {

        public DFA17(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 17;
            this.eot = dfa_19;
            this.eof = dfa_19;
            this.min = dfa_20;
            this.max = dfa_21;
            this.accept = dfa_22;
            this.special = dfa_23;
            this.transition = dfa_24;
        }
        public String getDescription() {
            return "2199:2: ( ( ( (lv_type_specifier_0_0= ruletype_specifier ) ) ( (lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list ) ) ) | ( (lv_type_specifier_2_0= ruletype_specifier ) ) | ( ( (lv_type_qualifier_3_0= ruletype_qualifier ) ) ( (lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list ) ) ) | ( (lv_type_qualifier_5_0= ruletype_qualifier ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA17_1 = input.LA(1);

                         
                        int index17_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalAnsic()) ) {s = 21;}

                        else if ( (synpred47_InternalAnsic()) ) {s = 22;}

                         
                        input.seek(index17_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA17_2 = input.LA(1);

                         
                        int index17_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalAnsic()) ) {s = 21;}

                        else if ( (synpred47_InternalAnsic()) ) {s = 22;}

                         
                        input.seek(index17_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA17_3 = input.LA(1);

                         
                        int index17_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalAnsic()) ) {s = 21;}

                        else if ( (synpred47_InternalAnsic()) ) {s = 22;}

                         
                        input.seek(index17_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA17_4 = input.LA(1);

                         
                        int index17_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalAnsic()) ) {s = 21;}

                        else if ( (synpred47_InternalAnsic()) ) {s = 22;}

                         
                        input.seek(index17_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA17_5 = input.LA(1);

                         
                        int index17_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalAnsic()) ) {s = 21;}

                        else if ( (synpred47_InternalAnsic()) ) {s = 22;}

                         
                        input.seek(index17_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA17_6 = input.LA(1);

                         
                        int index17_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalAnsic()) ) {s = 21;}

                        else if ( (synpred47_InternalAnsic()) ) {s = 22;}

                         
                        input.seek(index17_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA17_7 = input.LA(1);

                         
                        int index17_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalAnsic()) ) {s = 21;}

                        else if ( (synpred47_InternalAnsic()) ) {s = 22;}

                         
                        input.seek(index17_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA17_8 = input.LA(1);

                         
                        int index17_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalAnsic()) ) {s = 21;}

                        else if ( (synpred47_InternalAnsic()) ) {s = 22;}

                         
                        input.seek(index17_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA17_9 = input.LA(1);

                         
                        int index17_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalAnsic()) ) {s = 21;}

                        else if ( (synpred47_InternalAnsic()) ) {s = 22;}

                         
                        input.seek(index17_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA17_10 = input.LA(1);

                         
                        int index17_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalAnsic()) ) {s = 21;}

                        else if ( (synpred47_InternalAnsic()) ) {s = 22;}

                         
                        input.seek(index17_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA17_11 = input.LA(1);

                         
                        int index17_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalAnsic()) ) {s = 21;}

                        else if ( (synpred47_InternalAnsic()) ) {s = 22;}

                         
                        input.seek(index17_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA17_12 = input.LA(1);

                         
                        int index17_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalAnsic()) ) {s = 21;}

                        else if ( (synpred47_InternalAnsic()) ) {s = 22;}

                         
                        input.seek(index17_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA17_13 = input.LA(1);

                         
                        int index17_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalAnsic()) ) {s = 21;}

                        else if ( (synpred47_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred48_InternalAnsic()) ) {s = 23;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index17_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA17_14 = input.LA(1);

                         
                        int index17_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalAnsic()) ) {s = 21;}

                        else if ( (synpred47_InternalAnsic()) ) {s = 22;}

                         
                        input.seek(index17_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA17_15 = input.LA(1);

                         
                        int index17_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalAnsic()) ) {s = 21;}

                        else if ( (synpred47_InternalAnsic()) ) {s = 22;}

                         
                        input.seek(index17_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA17_16 = input.LA(1);

                         
                        int index17_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalAnsic()) ) {s = 21;}

                        else if ( (synpred47_InternalAnsic()) ) {s = 22;}

                         
                        input.seek(index17_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA17_17 = input.LA(1);

                         
                        int index17_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalAnsic()) ) {s = 21;}

                        else if ( (synpred47_InternalAnsic()) ) {s = 22;}

                         
                        input.seek(index17_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA17_18 = input.LA(1);

                         
                        int index17_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred48_InternalAnsic()) ) {s = 23;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index17_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA17_19 = input.LA(1);

                         
                        int index17_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred48_InternalAnsic()) ) {s = 23;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index17_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA17_20 = input.LA(1);

                         
                        int index17_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred48_InternalAnsic()) ) {s = 23;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index17_20);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 17, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_25s = "\40\uffff";
    static final String dfa_26s = "\1\37\34\0\3\uffff";
    static final String dfa_27s = "\1\112\34\0\3\uffff";
    static final String dfa_28s = "\35\uffff\1\3\1\1\1\2";
    static final String dfa_29s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\3\uffff}>";
    static final String[] dfa_30s = {
            "\1\32\1\33\1\34\2\uffff\1\27\1\30\1\31\1\23\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\1\1\26\4\uffff\1\24\1\25\2\uffff\1\2\1\3\1\4\1\5\1\6\7\uffff\1\35",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final char[] dfa_26 = DFA.unpackEncodedStringToUnsignedChars(dfa_26s);
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[][] dfa_30 = unpackEncodedStringArray(dfa_30s);

    class DFA19 extends DFA {

        public DFA19(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 19;
            this.eot = dfa_25;
            this.eof = dfa_25;
            this.min = dfa_26;
            this.max = dfa_27;
            this.accept = dfa_28;
            this.special = dfa_29;
            this.transition = dfa_30;
        }
        public String getDescription() {
            return "2393:2: ( ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) otherlv_1= ';' ) | ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_init_declarator_list_3_0= ruleinit_declarator_list ) ) otherlv_4= ';' ) | ( (lv_static_assert_declaration_5_0= rulestatic_assert_declaration ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA19_1 = input.LA(1);

                         
                        int index19_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA19_2 = input.LA(1);

                         
                        int index19_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA19_3 = input.LA(1);

                         
                        int index19_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA19_4 = input.LA(1);

                         
                        int index19_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA19_5 = input.LA(1);

                         
                        int index19_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA19_6 = input.LA(1);

                         
                        int index19_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA19_7 = input.LA(1);

                         
                        int index19_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA19_8 = input.LA(1);

                         
                        int index19_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA19_9 = input.LA(1);

                         
                        int index19_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA19_10 = input.LA(1);

                         
                        int index19_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA19_11 = input.LA(1);

                         
                        int index19_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA19_12 = input.LA(1);

                         
                        int index19_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA19_13 = input.LA(1);

                         
                        int index19_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA19_14 = input.LA(1);

                         
                        int index19_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA19_15 = input.LA(1);

                         
                        int index19_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA19_16 = input.LA(1);

                         
                        int index19_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA19_17 = input.LA(1);

                         
                        int index19_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA19_18 = input.LA(1);

                         
                        int index19_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA19_19 = input.LA(1);

                         
                        int index19_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA19_20 = input.LA(1);

                         
                        int index19_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA19_21 = input.LA(1);

                         
                        int index19_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA19_22 = input.LA(1);

                         
                        int index19_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA19_23 = input.LA(1);

                         
                        int index19_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA19_24 = input.LA(1);

                         
                        int index19_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA19_25 = input.LA(1);

                         
                        int index19_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA19_26 = input.LA(1);

                         
                        int index19_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA19_27 = input.LA(1);

                         
                        int index19_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA19_28 = input.LA(1);

                         
                        int index19_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_28);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 19, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_31s = "\1\102\34\0\2\uffff";
    static final String dfa_32s = "\35\uffff\1\1\1\2";
    static final String[] dfa_33s = {
            "\1\32\1\33\1\34\2\uffff\1\27\1\30\1\31\1\23\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\1\1\26\4\uffff\1\24\1\25\2\uffff\1\2\1\3\1\4\1\5\1\6",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_31 = DFA.unpackEncodedStringToUnsignedChars(dfa_31s);
    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[][] dfa_33 = unpackEncodedStringArray(dfa_33s);

    class DFA20 extends DFA {

        public DFA20(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 20;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_31;
            this.accept = dfa_32;
            this.special = dfa_5;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "2502:2: ( ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) ( (lv_declaration_list_2_0= ruledeclaration_list ) ) ( (lv_compound_statement_3_0= rulecompound_statement ) ) ) | ( ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) ( (lv_declarator_5_0= ruledeclarator ) ) ( (lv_compound_statement_6_0= rulecompound_statement ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA20_1 = input.LA(1);

                         
                        int index20_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA20_2 = input.LA(1);

                         
                        int index20_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA20_3 = input.LA(1);

                         
                        int index20_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA20_4 = input.LA(1);

                         
                        int index20_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA20_5 = input.LA(1);

                         
                        int index20_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA20_6 = input.LA(1);

                         
                        int index20_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA20_7 = input.LA(1);

                         
                        int index20_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA20_8 = input.LA(1);

                         
                        int index20_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA20_9 = input.LA(1);

                         
                        int index20_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA20_10 = input.LA(1);

                         
                        int index20_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA20_11 = input.LA(1);

                         
                        int index20_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA20_12 = input.LA(1);

                         
                        int index20_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA20_13 = input.LA(1);

                         
                        int index20_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA20_14 = input.LA(1);

                         
                        int index20_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA20_15 = input.LA(1);

                         
                        int index20_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA20_16 = input.LA(1);

                         
                        int index20_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA20_17 = input.LA(1);

                         
                        int index20_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA20_18 = input.LA(1);

                         
                        int index20_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA20_19 = input.LA(1);

                         
                        int index20_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA20_20 = input.LA(1);

                         
                        int index20_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA20_21 = input.LA(1);

                         
                        int index20_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA20_22 = input.LA(1);

                         
                        int index20_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA20_23 = input.LA(1);

                         
                        int index20_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA20_24 = input.LA(1);

                         
                        int index20_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA20_25 = input.LA(1);

                         
                        int index20_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA20_26 = input.LA(1);

                         
                        int index20_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA20_27 = input.LA(1);

                         
                        int index20_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA20_28 = input.LA(1);

                         
                        int index20_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_28);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 20, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_34s = "\17\uffff";
    static final String dfa_35s = "\1\42\2\0\14\uffff";
    static final String dfa_36s = "\1\104\2\0\14\uffff";
    static final String dfa_37s = "\3\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14";
    static final String dfa_38s = "\1\uffff\1\0\1\1\14\uffff}>";
    static final String[] dfa_39s = {
            "\1\2\41\uffff\1\1",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[][] dfa_39 = unpackEncodedStringArray(dfa_39s);

    class DFA27 extends DFA {

        public DFA27(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 27;
            this.eot = dfa_34;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_38;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "3274:2: ( (otherlv_0= '[' otherlv_1= ']' ) | (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' ) | (otherlv_5= '[' otherlv_6= 'static' ( (lv_type_qualifier_list_7_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' ) | (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' ) | (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) otherlv_16= '*' otherlv_17= ']' ) | (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' ) | (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_25_0= ruleassignment_expression ) ) otherlv_26= ']' ) | (otherlv_27= '[' ( (lv_type_qualifier_list_28_0= ruletype_qualifier_list ) ) otherlv_29= ']' ) | (otherlv_30= '[' ( (lv_assignment_expression_31_0= ruleassignment_expression ) ) otherlv_32= ']' ) | (otherlv_33= '(' ( (lv_parameter_type_list_34_0= ruleparameter_type_list ) ) otherlv_35= ')' ) | (otherlv_36= '(' otherlv_37= ')' ) | (otherlv_38= '(' ( (lv_identifier_list_39_0= ruleidentifier_list ) ) otherlv_40= ')' ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA27_1 = input.LA(1);

                         
                        int index27_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred65_InternalAnsic()) ) {s = 3;}

                        else if ( (synpred66_InternalAnsic()) ) {s = 4;}

                        else if ( (synpred67_InternalAnsic()) ) {s = 5;}

                        else if ( (synpred68_InternalAnsic()) ) {s = 6;}

                        else if ( (synpred69_InternalAnsic()) ) {s = 7;}

                        else if ( (synpred70_InternalAnsic()) ) {s = 8;}

                        else if ( (synpred71_InternalAnsic()) ) {s = 9;}

                        else if ( (synpred72_InternalAnsic()) ) {s = 10;}

                        else if ( (synpred73_InternalAnsic()) ) {s = 11;}

                         
                        input.seek(index27_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA27_2 = input.LA(1);

                         
                        int index27_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalAnsic()) ) {s = 12;}

                        else if ( (synpred75_InternalAnsic()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index27_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 27, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA28 extends DFA {

        public DFA28(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 28;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_31;
            this.accept = dfa_32;
            this.special = dfa_5;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "3672:2: ( ( ( (lv_parameter_lista_0_0= ruleparameter_lista ) ) otherlv_1= ',' otherlv_2= '...' ) | ( (lv_parameter_lista_3_0= ruleparameter_lista ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA28_1 = input.LA(1);

                         
                        int index28_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA28_2 = input.LA(1);

                         
                        int index28_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA28_3 = input.LA(1);

                         
                        int index28_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA28_4 = input.LA(1);

                         
                        int index28_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA28_5 = input.LA(1);

                         
                        int index28_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA28_6 = input.LA(1);

                         
                        int index28_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA28_7 = input.LA(1);

                         
                        int index28_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA28_8 = input.LA(1);

                         
                        int index28_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA28_9 = input.LA(1);

                         
                        int index28_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA28_10 = input.LA(1);

                         
                        int index28_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA28_11 = input.LA(1);

                         
                        int index28_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA28_12 = input.LA(1);

                         
                        int index28_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA28_13 = input.LA(1);

                         
                        int index28_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA28_14 = input.LA(1);

                         
                        int index28_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA28_15 = input.LA(1);

                         
                        int index28_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA28_16 = input.LA(1);

                         
                        int index28_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA28_17 = input.LA(1);

                         
                        int index28_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA28_18 = input.LA(1);

                         
                        int index28_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA28_19 = input.LA(1);

                         
                        int index28_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA28_20 = input.LA(1);

                         
                        int index28_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA28_21 = input.LA(1);

                         
                        int index28_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA28_22 = input.LA(1);

                         
                        int index28_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA28_23 = input.LA(1);

                         
                        int index28_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA28_24 = input.LA(1);

                         
                        int index28_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA28_25 = input.LA(1);

                         
                        int index28_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA28_26 = input.LA(1);

                         
                        int index28_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA28_27 = input.LA(1);

                         
                        int index28_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA28_28 = input.LA(1);

                         
                        int index28_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_28);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 28, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_40s = "\1\102\34\0\3\uffff";
    static final String dfa_41s = "\35\uffff\1\1\1\2\1\3";
    static final String[] dfa_42s = {
            "\1\32\1\33\1\34\2\uffff\1\27\1\30\1\31\1\23\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\1\1\26\4\uffff\1\24\1\25\2\uffff\1\2\1\3\1\4\1\5\1\6",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };
    static final char[] dfa_40 = DFA.unpackEncodedStringToUnsignedChars(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final short[][] dfa_42 = unpackEncodedStringArray(dfa_42s);

    class DFA31 extends DFA {

        public DFA31(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 31;
            this.eot = dfa_25;
            this.eof = dfa_25;
            this.min = dfa_26;
            this.max = dfa_40;
            this.accept = dfa_41;
            this.special = dfa_29;
            this.transition = dfa_42;
        }
        public String getDescription() {
            return "3864:2: ( ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) ) | ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_abstract_declarator_3_0= ruleabstract_declarator ) ) ) | ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA31_1 = input.LA(1);

                         
                        int index31_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred80_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index31_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA31_2 = input.LA(1);

                         
                        int index31_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred80_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index31_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA31_3 = input.LA(1);

                         
                        int index31_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred80_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index31_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA31_4 = input.LA(1);

                         
                        int index31_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred80_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index31_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA31_5 = input.LA(1);

                         
                        int index31_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred80_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index31_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA31_6 = input.LA(1);

                         
                        int index31_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred80_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index31_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA31_7 = input.LA(1);

                         
                        int index31_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred80_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index31_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA31_8 = input.LA(1);

                         
                        int index31_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred80_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index31_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA31_9 = input.LA(1);

                         
                        int index31_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred80_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index31_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA31_10 = input.LA(1);

                         
                        int index31_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred80_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index31_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA31_11 = input.LA(1);

                         
                        int index31_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred80_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index31_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA31_12 = input.LA(1);

                         
                        int index31_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred80_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index31_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA31_13 = input.LA(1);

                         
                        int index31_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred80_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index31_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA31_14 = input.LA(1);

                         
                        int index31_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred80_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index31_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA31_15 = input.LA(1);

                         
                        int index31_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred80_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index31_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA31_16 = input.LA(1);

                         
                        int index31_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred80_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index31_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA31_17 = input.LA(1);

                         
                        int index31_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred80_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index31_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA31_18 = input.LA(1);

                         
                        int index31_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred80_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index31_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA31_19 = input.LA(1);

                         
                        int index31_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred80_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index31_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA31_20 = input.LA(1);

                         
                        int index31_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred80_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index31_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA31_21 = input.LA(1);

                         
                        int index31_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred80_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index31_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA31_22 = input.LA(1);

                         
                        int index31_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred80_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index31_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA31_23 = input.LA(1);

                         
                        int index31_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred80_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index31_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA31_24 = input.LA(1);

                         
                        int index31_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred80_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index31_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA31_25 = input.LA(1);

                         
                        int index31_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred80_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index31_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA31_26 = input.LA(1);

                         
                        int index31_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred80_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index31_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA31_27 = input.LA(1);

                         
                        int index31_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred80_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index31_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA31_28 = input.LA(1);

                         
                        int index31_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred80_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index31_28);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 31, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_43s = "\16\uffff";
    static final String dfa_44s = "\1\42\2\0\13\uffff";
    static final String dfa_45s = "\1\104\2\0\13\uffff";
    static final String dfa_46s = "\3\uffff\1\1\1\12\1\13\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11";
    static final String dfa_47s = "\1\uffff\1\0\1\1\13\uffff}>";
    static final String[] dfa_48s = {
            "\1\1\41\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final char[] dfa_44 = DFA.unpackEncodedStringToUnsignedChars(dfa_44s);
    static final char[] dfa_45 = DFA.unpackEncodedStringToUnsignedChars(dfa_45s);
    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final short[] dfa_47 = DFA.unpackEncodedString(dfa_47s);
    static final short[][] dfa_48 = unpackEncodedStringArray(dfa_48s);

    class DFA33 extends DFA {

        public DFA33(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 33;
            this.eot = dfa_43;
            this.eof = dfa_43;
            this.min = dfa_44;
            this.max = dfa_45;
            this.accept = dfa_46;
            this.special = dfa_47;
            this.transition = dfa_48;
        }
        public String getDescription() {
            return "4084:3: ( (otherlv_0= '(' ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) otherlv_2= ')' ) | (otherlv_3= '[' otherlv_4= ']' ) | (otherlv_5= '[' otherlv_6= '*' otherlv_7= ']' ) | (otherlv_8= '[' otherlv_9= 'static' ( (lv_type_qualifier_list_10_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_11_0= ruleassignment_expression ) ) otherlv_12= ']' ) | (otherlv_13= '[' otherlv_14= 'static' ( (lv_assignment_expression_15_0= ruleassignment_expression ) ) otherlv_16= ']' ) | (otherlv_17= '[' ( (lv_type_qualifier_list_18_0= ruletype_qualifier_list ) ) otherlv_19= 'static' ( (lv_assignment_expression_20_0= ruleassignment_expression ) ) otherlv_21= ']' ) | (otherlv_22= '[' ( (lv_type_qualifier_list_23_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_24_0= ruleassignment_expression ) ) otherlv_25= ']' ) | (otherlv_26= '[' ( (lv_type_qualifier_list_27_0= ruletype_qualifier_list ) ) otherlv_28= ']' ) | (otherlv_29= '[' ( (lv_assignment_expression_30_0= ruleassignment_expression ) ) otherlv_31= ']' ) | (otherlv_32= '(' otherlv_33= ')' ) | (otherlv_34= '(' ( (lv_parameter_type_list_35_0= ruleparameter_type_list ) ) otherlv_36= ')' ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA33_1 = input.LA(1);

                         
                        int index33_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred83_InternalAnsic()) ) {s = 3;}

                        else if ( (synpred92_InternalAnsic()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index33_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA33_2 = input.LA(1);

                         
                        int index33_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred84_InternalAnsic()) ) {s = 6;}

                        else if ( (synpred85_InternalAnsic()) ) {s = 7;}

                        else if ( (synpred86_InternalAnsic()) ) {s = 8;}

                        else if ( (synpred87_InternalAnsic()) ) {s = 9;}

                        else if ( (synpred88_InternalAnsic()) ) {s = 10;}

                        else if ( (synpred89_InternalAnsic()) ) {s = 11;}

                        else if ( (synpred90_InternalAnsic()) ) {s = 12;}

                        else if ( (synpred91_InternalAnsic()) ) {s = 13;}

                         
                        input.seek(index33_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 33, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_49s = "\25\uffff";
    static final String dfa_50s = "\1\4\1\0\23\uffff";
    static final String dfa_51s = "\1\164\1\0\23\uffff";
    static final String dfa_52s = "\2\uffff\1\3\20\uffff\1\1\1\2";
    static final String dfa_53s = "\1\uffff\1\0\23\uffff}>";
    static final String[] dfa_54s = {
            "\1\2\1\uffff\3\2\31\uffff\1\2\22\uffff\1\2\1\1\14\uffff\1\2\3\uffff\1\2\4\uffff\4\2\2\uffff\2\2\17\uffff\1\2\17\uffff\2\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final char[] dfa_50 = DFA.unpackEncodedStringToUnsignedChars(dfa_50s);
    static final char[] dfa_51 = DFA.unpackEncodedStringToUnsignedChars(dfa_51s);
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final short[] dfa_53 = DFA.unpackEncodedString(dfa_53s);
    static final short[][] dfa_54 = unpackEncodedStringArray(dfa_54s);

    class DFA34 extends DFA {

        public DFA34(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 34;
            this.eot = dfa_49;
            this.eof = dfa_49;
            this.min = dfa_50;
            this.max = dfa_51;
            this.accept = dfa_52;
            this.special = dfa_53;
            this.transition = dfa_54;
        }
        public String getDescription() {
            return "4468:2: ( (otherlv_0= '{' ( (lv_init_declarator_list_1_0= ruleinitializer_list ) ) otherlv_2= '}' ) | (otherlv_3= '{' ( (lv_init_declarator_list_4_0= ruleinitializer_list ) ) otherlv_5= ',' otherlv_6= '}' ) | ( (lv_assignment_expression_7_0= ruleassignment_expression ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA34_1 = input.LA(1);

                         
                        int index34_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred93_InternalAnsic()) ) {s = 19;}

                        else if ( (synpred94_InternalAnsic()) ) {s = 20;}

                         
                        input.seek(index34_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 34, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_55s = "\15\uffff";
    static final String dfa_56s = "\1\42\2\0\12\uffff";
    static final String dfa_57s = "\1\104\2\0\12\uffff";
    static final String dfa_58s = "\3\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12";
    static final String dfa_59s = "\1\uffff\1\0\1\1\12\uffff}>";
    static final String[] dfa_60s = {
            "\1\2\41\uffff\1\1",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final char[] dfa_56 = DFA.unpackEncodedStringToUnsignedChars(dfa_56s);
    static final char[] dfa_57 = DFA.unpackEncodedStringToUnsignedChars(dfa_57s);
    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final short[][] dfa_60 = unpackEncodedStringArray(dfa_60s);

    class DFA36 extends DFA {

        public DFA36(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 36;
            this.eot = dfa_55;
            this.eof = dfa_55;
            this.min = dfa_56;
            this.max = dfa_57;
            this.accept = dfa_58;
            this.special = dfa_59;
            this.transition = dfa_60;
        }
        public String getDescription() {
            return "4639:2: ( (otherlv_0= '[' otherlv_1= ']' ) | (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' ) | (otherlv_5= '[' otherlv_6= 'static' this_type_qualifier_list_7= ruletype_qualifier_list ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' ) | (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' ) | (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_16_0= ruleassignment_expression ) ) otherlv_17= ']' ) | (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' ) | (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) otherlv_25= ']' ) | (otherlv_26= '[' ( (lv_assignment_expression_27_0= ruleassignment_expression ) ) otherlv_28= ']' ) | (otherlv_29= '(' otherlv_30= ')' ) | (otherlv_31= '(' ( (lv_parameter_type_list_32_0= ruleparameter_type_list ) ) otherlv_33= ')' ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA36_1 = input.LA(1);

                         
                        int index36_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalAnsic()) ) {s = 3;}

                        else if ( (synpred97_InternalAnsic()) ) {s = 4;}

                        else if ( (synpred98_InternalAnsic()) ) {s = 5;}

                        else if ( (synpred99_InternalAnsic()) ) {s = 6;}

                        else if ( (synpred100_InternalAnsic()) ) {s = 7;}

                        else if ( (synpred101_InternalAnsic()) ) {s = 8;}

                        else if ( (synpred102_InternalAnsic()) ) {s = 9;}

                        else if ( (synpred103_InternalAnsic()) ) {s = 10;}

                         
                        input.seek(index36_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA36_2 = input.LA(1);

                         
                        int index36_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred104_InternalAnsic()) ) {s = 11;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index36_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 36, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_61s = "\12\uffff";
    static final String dfa_62s = "\1\4\5\uffff\1\0\3\uffff";
    static final String dfa_63s = "\1\107\5\uffff\1\0\3\uffff";
    static final String dfa_64s = "\1\uffff\1\1\6\uffff\1\2\1\3";
    static final String dfa_65s = "\6\uffff\1\0\3\uffff}>";
    static final String[] dfa_66s = {
            "\1\1\1\uffff\3\1\31\uffff\1\6\22\uffff\1\1\21\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final char[] dfa_62 = DFA.unpackEncodedStringToUnsignedChars(dfa_62s);
    static final char[] dfa_63 = DFA.unpackEncodedStringToUnsignedChars(dfa_63s);
    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final short[][] dfa_66 = unpackEncodedStringArray(dfa_66s);

    class DFA42 extends DFA {

        public DFA42(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 42;
            this.eot = dfa_61;
            this.eof = dfa_61;
            this.min = dfa_62;
            this.max = dfa_63;
            this.accept = dfa_64;
            this.special = dfa_65;
            this.transition = dfa_66;
        }
        public String getDescription() {
            return "5620:2: ( ( ( (lv_primary_expression_0_0= ruleprimary_expression ) ) ( (lv_postfix_expression_linha_1_0= rulepostfix_expression_linha ) ) ) | (otherlv_2= '(' this_type_name_3= ruletype_name otherlv_4= ')' otherlv_5= '{' ( (lv_initializer_list_6_0= ruleinitializer_list ) ) otherlv_7= '}' ( (lv_postfix_expression_linha_8_0= rulepostfix_expression_linha ) ) ) | (otherlv_9= '(' this_type_name_10= ruletype_name otherlv_11= ')' otherlv_12= '{' ( (lv_initializer_list_13_0= ruleinitializer_list ) ) otherlv_14= ',' otherlv_15= '}' ( (lv_postfix_expression_linha_16_0= rulepostfix_expression_linha ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA42_6 = input.LA(1);

                         
                        int index42_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_InternalAnsic()) ) {s = 1;}

                        else if ( (synpred113_InternalAnsic()) ) {s = 8;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index42_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 42, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_67s = "\24\uffff";
    static final String dfa_68s = "\1\4\17\uffff\1\0\3\uffff";
    static final String dfa_69s = "\1\164\17\uffff\1\0\3\uffff";
    static final String dfa_70s = "\1\uffff\1\1\6\uffff\1\2\1\3\1\4\6\uffff\1\7\1\5\1\6";
    static final String dfa_71s = "\20\uffff\1\0\3\uffff}>";
    static final String[] dfa_72s = {
            "\1\1\1\uffff\3\1\31\uffff\1\1\22\uffff\1\1\15\uffff\1\12\3\uffff\1\1\4\uffff\1\10\1\11\1\20\1\21\2\uffff\2\12\17\uffff\1\12\17\uffff\2\12",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_67 = DFA.unpackEncodedString(dfa_67s);
    static final char[] dfa_68 = DFA.unpackEncodedStringToUnsignedChars(dfa_68s);
    static final char[] dfa_69 = DFA.unpackEncodedStringToUnsignedChars(dfa_69s);
    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final short[] dfa_71 = DFA.unpackEncodedString(dfa_71s);
    static final short[][] dfa_72 = unpackEncodedStringArray(dfa_72s);

    class DFA51 extends DFA {

        public DFA51(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 51;
            this.eot = dfa_67;
            this.eof = dfa_67;
            this.min = dfa_68;
            this.max = dfa_69;
            this.accept = dfa_70;
            this.special = dfa_71;
            this.transition = dfa_72;
        }
        public String getDescription() {
            return "6694:2: ( ( (lv_postfix_expression_0_0= rulepostfix_expression ) ) | ( () ( (lv_plus_2_0= '++' ) ) ( (lv_unary_expression_3_0= ruleunary_expression ) ) ) | (otherlv_4= '--' ( (lv_unary_expression_5_0= ruleunary_expression ) ) ) | ( ( (lv_unary_operator_6_0= ruleunary_operator ) ) ( (lv_cast_expression_7_0= rulecast_expression ) ) ) | (otherlv_8= 'sizeof' ( (lv_unary_expression_9_0= ruleunary_expression ) ) ) | (otherlv_10= 'sizeof' otherlv_11= '(' ( (lv_type_name_12_0= ruletype_name ) ) otherlv_13= ')' ) | (otherlv_14= '_Alignof' otherlv_15= '(' ( (lv_type_name_16_0= ruletype_name ) ) otherlv_17= ')' ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA51_16 = input.LA(1);

                         
                        int index51_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalAnsic()) ) {s = 18;}

                        else if ( (synpred132_InternalAnsic()) ) {s = 19;}

                         
                        input.seek(index51_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 51, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_73s = "\23\uffff";
    static final String dfa_74s = "\1\4\5\uffff\1\0\14\uffff";
    static final String dfa_75s = "\1\164\5\uffff\1\0\14\uffff";
    static final String dfa_76s = "\1\uffff\1\1\20\uffff\1\2";
    static final String dfa_77s = "\6\uffff\1\0\14\uffff}>";
    static final String[] dfa_78s = {
            "\1\1\1\uffff\3\1\31\uffff\1\6\22\uffff\1\1\15\uffff\1\1\3\uffff\1\1\4\uffff\4\1\2\uffff\2\1\17\uffff\1\1\17\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final char[] dfa_74 = DFA.unpackEncodedStringToUnsignedChars(dfa_74s);
    static final char[] dfa_75 = DFA.unpackEncodedStringToUnsignedChars(dfa_75s);
    static final short[] dfa_76 = DFA.unpackEncodedString(dfa_76s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final short[][] dfa_78 = unpackEncodedStringArray(dfa_78s);

    class DFA52 extends DFA {

        public DFA52(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 52;
            this.eot = dfa_73;
            this.eof = dfa_73;
            this.min = dfa_74;
            this.max = dfa_75;
            this.accept = dfa_76;
            this.special = dfa_77;
            this.transition = dfa_78;
        }
        public String getDescription() {
            return "6939:2: ( ( (lv_unary_expression_0_0= ruleunary_expression ) ) | (otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')' ( (lv_cast_expression_4_0= rulecast_expression ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA52_6 = input.LA(1);

                         
                        int index52_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalAnsic()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index52_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 52, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_79s = "\1\4\21\0\2\uffff";
    static final String dfa_80s = "\1\164\21\0\2\uffff";
    static final String dfa_81s = "\22\uffff\1\1\1\2";
    static final String dfa_82s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\2\uffff}>";
    static final String[] dfa_83s = {
            "\1\1\1\uffff\1\2\1\3\1\4\31\uffff\1\6\22\uffff\1\5\15\uffff\1\13\3\uffff\1\7\4\uffff\1\10\1\11\1\20\1\21\2\uffff\1\14\1\15\17\uffff\1\12\17\uffff\1\16\1\17",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_79 = DFA.unpackEncodedStringToUnsignedChars(dfa_79s);
    static final char[] dfa_80 = DFA.unpackEncodedStringToUnsignedChars(dfa_80s);
    static final short[] dfa_81 = DFA.unpackEncodedString(dfa_81s);
    static final short[] dfa_82 = DFA.unpackEncodedString(dfa_82s);
    static final short[][] dfa_83 = unpackEncodedStringArray(dfa_83s);

    class DFA78 extends DFA {

        public DFA78(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 78;
            this.eot = dfa_67;
            this.eof = dfa_67;
            this.min = dfa_79;
            this.max = dfa_80;
            this.accept = dfa_81;
            this.special = dfa_82;
            this.transition = dfa_83;
        }
        public String getDescription() {
            return "9960:2: ( ( (lv_conditional_expression_0_0= ruleconditional_expression ) ) | ( ( (lv_unary_expression_1_0= ruleunary_expression ) ) ( (lv_assignment_operator_2_0= ruleassignment_operator ) ) ( (lv_assignment_expression_3_0= ruleassignment_expression ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA78_1 = input.LA(1);

                         
                        int index78_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred173_InternalAnsic()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index78_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA78_2 = input.LA(1);

                         
                        int index78_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred173_InternalAnsic()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index78_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA78_3 = input.LA(1);

                         
                        int index78_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred173_InternalAnsic()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index78_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA78_4 = input.LA(1);

                         
                        int index78_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred173_InternalAnsic()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index78_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA78_5 = input.LA(1);

                         
                        int index78_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred173_InternalAnsic()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index78_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA78_6 = input.LA(1);

                         
                        int index78_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred173_InternalAnsic()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index78_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA78_7 = input.LA(1);

                         
                        int index78_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred173_InternalAnsic()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index78_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA78_8 = input.LA(1);

                         
                        int index78_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred173_InternalAnsic()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index78_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA78_9 = input.LA(1);

                         
                        int index78_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred173_InternalAnsic()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index78_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA78_10 = input.LA(1);

                         
                        int index78_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred173_InternalAnsic()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index78_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA78_11 = input.LA(1);

                         
                        int index78_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred173_InternalAnsic()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index78_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA78_12 = input.LA(1);

                         
                        int index78_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred173_InternalAnsic()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index78_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA78_13 = input.LA(1);

                         
                        int index78_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred173_InternalAnsic()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index78_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA78_14 = input.LA(1);

                         
                        int index78_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred173_InternalAnsic()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index78_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA78_15 = input.LA(1);

                         
                        int index78_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred173_InternalAnsic()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index78_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA78_16 = input.LA(1);

                         
                        int index78_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred173_InternalAnsic()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index78_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA78_17 = input.LA(1);

                         
                        int index78_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred173_InternalAnsic()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index78_17);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 78, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_84s = "\27\uffff";
    static final String dfa_85s = "\1\44\24\0\2\uffff";
    static final String dfa_86s = "\1\73\24\0\2\uffff";
    static final String dfa_87s = "\25\uffff\1\1\1\2";
    static final String dfa_88s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\2\uffff}>";
    static final String[] dfa_89s = {
            "\1\22\1\23\1\24\1\15\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\21\1\20\4\uffff\1\16\1\17",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_84 = DFA.unpackEncodedString(dfa_84s);
    static final char[] dfa_85 = DFA.unpackEncodedStringToUnsignedChars(dfa_85s);
    static final char[] dfa_86 = DFA.unpackEncodedStringToUnsignedChars(dfa_86s);
    static final short[] dfa_87 = DFA.unpackEncodedString(dfa_87s);
    static final short[] dfa_88 = DFA.unpackEncodedString(dfa_88s);
    static final short[][] dfa_89 = unpackEncodedStringArray(dfa_89s);

    class DFA81 extends DFA {

        public DFA81(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 81;
            this.eot = dfa_84;
            this.eof = dfa_84;
            this.min = dfa_85;
            this.max = dfa_86;
            this.accept = dfa_87;
            this.special = dfa_88;
            this.transition = dfa_89;
        }
        public String getDescription() {
            return "10196:2: ( ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) ) | ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA81_1 = input.LA(1);

                         
                        int index81_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred189_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index81_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA81_2 = input.LA(1);

                         
                        int index81_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred189_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index81_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA81_3 = input.LA(1);

                         
                        int index81_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred189_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index81_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA81_4 = input.LA(1);

                         
                        int index81_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred189_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index81_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA81_5 = input.LA(1);

                         
                        int index81_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred189_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index81_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA81_6 = input.LA(1);

                         
                        int index81_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred189_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index81_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA81_7 = input.LA(1);

                         
                        int index81_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred189_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index81_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA81_8 = input.LA(1);

                         
                        int index81_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred189_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index81_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA81_9 = input.LA(1);

                         
                        int index81_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred189_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index81_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA81_10 = input.LA(1);

                         
                        int index81_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred189_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index81_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA81_11 = input.LA(1);

                         
                        int index81_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred189_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index81_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA81_12 = input.LA(1);

                         
                        int index81_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred189_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index81_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA81_13 = input.LA(1);

                         
                        int index81_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred189_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index81_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA81_14 = input.LA(1);

                         
                        int index81_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred189_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index81_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA81_15 = input.LA(1);

                         
                        int index81_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred189_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index81_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA81_16 = input.LA(1);

                         
                        int index81_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred189_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index81_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA81_17 = input.LA(1);

                         
                        int index81_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred189_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index81_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA81_18 = input.LA(1);

                         
                        int index81_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred189_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index81_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA81_19 = input.LA(1);

                         
                        int index81_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred189_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index81_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA81_20 = input.LA(1);

                         
                        int index81_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred189_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index81_20);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 81, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0xCC3FFFF380000000L,0x0000000000000407L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0xCC3FFFF380000000L,0x0000000000000007L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0C3FFFF000000000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x00200004000001D0L,0x00180008000CF088L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x1000000000000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x2000000400000010L,0x0000000000000008L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x2000000000000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000400000010L,0x0000000000000008L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x000000F000000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000400000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0100000000000002L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000400000000L,0x0000000000000018L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x00600004000001D0L,0x00180008000CF298L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0C3FFFF000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000400000000L,0x0000000000003A10L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000210L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000000000L,0x0000000000030008L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000000000000L,0x00000000000C0000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000000000000L,0x0000000000300000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000000000L,0x0000000000C00000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x10600004000001D0L,0x0018000EFF0CF188L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x10200004000001D0L,0x00180008000CF088L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0xDC7FFFF7800001D0L,0x0018000EFF0CF58FL});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0xDC7FFFF7800001D2L,0x0018000EFF0CF58FL});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0200000000000000L,0x0007FE0000000000L});

}