package org.xtext.example.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.services.AnsicGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalAnsicParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_STRING_LITERAL", "RULE_I_CONSTANT", "RULE_F_CONSTANT", "RULE_O", "RULE_D", "RULE_NZ", "RULE_L", "RULE_A", "RULE_H", "RULE_HP", "RULE_E", "RULE_P", "RULE_FS", "RULE_ES", "RULE_IS", "RULE_CP", "RULE_SP", "RULE_WS", "RULE_INT", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_ANY_OTHER", "'inline'", "'_Noreturn'", "'_Alignas'", "'('", "')'", "'const'", "'restrict'", "'volatile'", "'_Atomic'", "'void'", "'char'", "'short'", "'int'", "'long'", "'float'", "'double'", "'signed'", "'unsigned'", "'bool'", "'_Complex'", "'_Imaginary'", "'typedef'", "'enum'", "'{'", "'}'", "','", "'='", "'struct'", "'union'", "';'", "':'", "'extern'", "'static'", "'_Thread_local'", "'auto'", "'register'", "'*'", "'['", "']'", "'...'", "'_Generic'", "'default'", "'.'", "'_Static_assert'", "'->'", "'++'", "'--'", "'sizeof'", "'_Alignof'", "'/'", "'%'", "'+'", "'-'", "'<<'", "'>>'", "'=='", "'!='", "'goto'", "'continue'", "'break'", "'return'", "'while'", "'do'", "'for'", "'if'", "'else'", "'switch'", "'case'", "'&'", "'^'", "'|'", "'and'", "'or'", "'?'", "'*='", "'/='", "'%='", "'+='", "'-='", "'<<='", "'>>='", "'&='", "'^='", "'|='", "'~'", "'!'", "'__func__'"
    };
    public static final int RULE_A=12;
    public static final int T__50=50;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=4;
    public static final int RULE_HP=14;
    public static final int RULE_INT=23;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=25;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int RULE_I_CONSTANT=6;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int RULE_IS=19;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int RULE_O=8;
    public static final int RULE_P=16;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int RULE_L=11;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int RULE_F_CONSTANT=7;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int RULE_H=13;
    public static final int T__40=40;
    public static final int RULE_E=15;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int RULE_D=9;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int RULE_CP=20;
    public static final int T__99=99;
    public static final int RULE_SP=21;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=24;
    public static final int RULE_ES=18;
    public static final int RULE_STRING_LITERAL=5;
    public static final int RULE_SL_COMMENT=26;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__114=114;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__111=111;
    public static final int T__81=81;
    public static final int T__110=110;
    public static final int T__82=82;
    public static final int T__113=113;
    public static final int T__83=83;
    public static final int T__112=112;
    public static final int RULE_WS=22;
    public static final int RULE_FS=17;
    public static final int RULE_ANY_OTHER=27;
    public static final int RULE_NZ=10;
    public static final int T__88=88;
    public static final int T__108=108;
    public static final int T__89=89;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__106=106;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalAnsicParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalAnsicParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalAnsicParser.tokenNames; }
    public String getGrammarFileName() { return "InternalAnsic.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */

     	private AnsicGrammarAccess grammarAccess;

        public InternalAnsicParser(TokenStream input, AnsicGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "DomainModel";
       	}

       	@Override
       	protected AnsicGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleDomainModel"
    // InternalAnsic.g:70:1: entryRuleDomainModel returns [EObject current=null] : iv_ruleDomainModel= ruleDomainModel EOF ;
    public final EObject entryRuleDomainModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDomainModel = null;


        try {
            // InternalAnsic.g:70:52: (iv_ruleDomainModel= ruleDomainModel EOF )
            // InternalAnsic.g:71:2: iv_ruleDomainModel= ruleDomainModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDomainModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDomainModel=ruleDomainModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDomainModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDomainModel"


    // $ANTLR start "ruleDomainModel"
    // InternalAnsic.g:77:1: ruleDomainModel returns [EObject current=null] : ( (lv_geetings_0_0= ruletranslation_unit ) ) ;
    public final EObject ruleDomainModel() throws RecognitionException {
        EObject current = null;

        EObject lv_geetings_0_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:83:2: ( ( (lv_geetings_0_0= ruletranslation_unit ) ) )
            // InternalAnsic.g:84:2: ( (lv_geetings_0_0= ruletranslation_unit ) )
            {
            // InternalAnsic.g:84:2: ( (lv_geetings_0_0= ruletranslation_unit ) )
            // InternalAnsic.g:85:3: (lv_geetings_0_0= ruletranslation_unit )
            {
            // InternalAnsic.g:85:3: (lv_geetings_0_0= ruletranslation_unit )
            // InternalAnsic.g:86:4: lv_geetings_0_0= ruletranslation_unit
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getDomainModelAccess().getGeetingsTranslation_unitParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_geetings_0_0=ruletranslation_unit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getDomainModelRule());
              				}
              				add(
              					current,
              					"geetings",
              					lv_geetings_0_0,
              					"org.xtext.example.Ansic.translation_unit");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDomainModel"


    // $ANTLR start "entryRuletranslation_unit"
    // InternalAnsic.g:106:1: entryRuletranslation_unit returns [EObject current=null] : iv_ruletranslation_unit= ruletranslation_unit EOF ;
    public final EObject entryRuletranslation_unit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletranslation_unit = null;


        try {
            // InternalAnsic.g:106:57: (iv_ruletranslation_unit= ruletranslation_unit EOF )
            // InternalAnsic.g:107:2: iv_ruletranslation_unit= ruletranslation_unit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTranslation_unitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletranslation_unit=ruletranslation_unit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletranslation_unit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletranslation_unit"


    // $ANTLR start "ruletranslation_unit"
    // InternalAnsic.g:113:1: ruletranslation_unit returns [EObject current=null] : ( ( (lv_external_declaration_0_0= ruleexternal_declaration ) ) ( (lv_translation_unit_linha_1_0= ruletranslation_unit_linha ) ) ) ;
    public final EObject ruletranslation_unit() throws RecognitionException {
        EObject current = null;

        EObject lv_external_declaration_0_0 = null;

        EObject lv_translation_unit_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:119:2: ( ( ( (lv_external_declaration_0_0= ruleexternal_declaration ) ) ( (lv_translation_unit_linha_1_0= ruletranslation_unit_linha ) ) ) )
            // InternalAnsic.g:120:2: ( ( (lv_external_declaration_0_0= ruleexternal_declaration ) ) ( (lv_translation_unit_linha_1_0= ruletranslation_unit_linha ) ) )
            {
            // InternalAnsic.g:120:2: ( ( (lv_external_declaration_0_0= ruleexternal_declaration ) ) ( (lv_translation_unit_linha_1_0= ruletranslation_unit_linha ) ) )
            // InternalAnsic.g:121:3: ( (lv_external_declaration_0_0= ruleexternal_declaration ) ) ( (lv_translation_unit_linha_1_0= ruletranslation_unit_linha ) )
            {
            // InternalAnsic.g:121:3: ( (lv_external_declaration_0_0= ruleexternal_declaration ) )
            // InternalAnsic.g:122:4: (lv_external_declaration_0_0= ruleexternal_declaration )
            {
            // InternalAnsic.g:122:4: (lv_external_declaration_0_0= ruleexternal_declaration )
            // InternalAnsic.g:123:5: lv_external_declaration_0_0= ruleexternal_declaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTranslation_unitAccess().getExternal_declarationExternal_declarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_external_declaration_0_0=ruleexternal_declaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTranslation_unitRule());
              					}
              					set(
              						current,
              						"external_declaration",
              						lv_external_declaration_0_0,
              						"org.xtext.example.Ansic.external_declaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:140:3: ( (lv_translation_unit_linha_1_0= ruletranslation_unit_linha ) )
            // InternalAnsic.g:141:4: (lv_translation_unit_linha_1_0= ruletranslation_unit_linha )
            {
            // InternalAnsic.g:141:4: (lv_translation_unit_linha_1_0= ruletranslation_unit_linha )
            // InternalAnsic.g:142:5: lv_translation_unit_linha_1_0= ruletranslation_unit_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTranslation_unitAccess().getTranslation_unit_linhaTranslation_unit_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_translation_unit_linha_1_0=ruletranslation_unit_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTranslation_unitRule());
              					}
              					set(
              						current,
              						"translation_unit_linha",
              						lv_translation_unit_linha_1_0,
              						"org.xtext.example.Ansic.translation_unit_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletranslation_unit"


    // $ANTLR start "entryRuleexternal_declaration"
    // InternalAnsic.g:163:1: entryRuleexternal_declaration returns [EObject current=null] : iv_ruleexternal_declaration= ruleexternal_declaration EOF ;
    public final EObject entryRuleexternal_declaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleexternal_declaration = null;


        try {
            // InternalAnsic.g:163:61: (iv_ruleexternal_declaration= ruleexternal_declaration EOF )
            // InternalAnsic.g:164:2: iv_ruleexternal_declaration= ruleexternal_declaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExternal_declarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleexternal_declaration=ruleexternal_declaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexternal_declaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleexternal_declaration"


    // $ANTLR start "ruleexternal_declaration"
    // InternalAnsic.g:170:1: ruleexternal_declaration returns [EObject current=null] : ( ( (lv_function_definitio_0_0= rulefunction_definition ) ) | ( (lv_declaration_1_0= ruledeclaration ) ) ) ;
    public final EObject ruleexternal_declaration() throws RecognitionException {
        EObject current = null;

        EObject lv_function_definitio_0_0 = null;

        EObject lv_declaration_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:176:2: ( ( ( (lv_function_definitio_0_0= rulefunction_definition ) ) | ( (lv_declaration_1_0= ruledeclaration ) ) ) )
            // InternalAnsic.g:177:2: ( ( (lv_function_definitio_0_0= rulefunction_definition ) ) | ( (lv_declaration_1_0= ruledeclaration ) ) )
            {
            // InternalAnsic.g:177:2: ( ( (lv_function_definitio_0_0= rulefunction_definition ) ) | ( (lv_declaration_1_0= ruledeclaration ) ) )
            int alt1=2;
            alt1 = dfa1.predict(input);
            switch (alt1) {
                case 1 :
                    // InternalAnsic.g:178:3: ( (lv_function_definitio_0_0= rulefunction_definition ) )
                    {
                    // InternalAnsic.g:178:3: ( (lv_function_definitio_0_0= rulefunction_definition ) )
                    // InternalAnsic.g:179:4: (lv_function_definitio_0_0= rulefunction_definition )
                    {
                    // InternalAnsic.g:179:4: (lv_function_definitio_0_0= rulefunction_definition )
                    // InternalAnsic.g:180:5: lv_function_definitio_0_0= rulefunction_definition
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getExternal_declarationAccess().getFunction_definitioFunction_definitionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_definitio_0_0=rulefunction_definition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getExternal_declarationRule());
                      					}
                      					set(
                      						current,
                      						"function_definitio",
                      						lv_function_definitio_0_0,
                      						"org.xtext.example.Ansic.function_definition");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:198:3: ( (lv_declaration_1_0= ruledeclaration ) )
                    {
                    // InternalAnsic.g:198:3: ( (lv_declaration_1_0= ruledeclaration ) )
                    // InternalAnsic.g:199:4: (lv_declaration_1_0= ruledeclaration )
                    {
                    // InternalAnsic.g:199:4: (lv_declaration_1_0= ruledeclaration )
                    // InternalAnsic.g:200:5: lv_declaration_1_0= ruledeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getExternal_declarationAccess().getDeclarationDeclarationParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaration_1_0=ruledeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getExternal_declarationRule());
                      					}
                      					set(
                      						current,
                      						"declaration",
                      						lv_declaration_1_0,
                      						"org.xtext.example.Ansic.declaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleexternal_declaration"


    // $ANTLR start "entryRuledeclaration_specifiers"
    // InternalAnsic.g:221:1: entryRuledeclaration_specifiers returns [EObject current=null] : iv_ruledeclaration_specifiers= ruledeclaration_specifiers EOF ;
    public final EObject entryRuledeclaration_specifiers() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledeclaration_specifiers = null;


        try {
            // InternalAnsic.g:221:63: (iv_ruledeclaration_specifiers= ruledeclaration_specifiers EOF )
            // InternalAnsic.g:222:2: iv_ruledeclaration_specifiers= ruledeclaration_specifiers EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclaration_specifiersRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledeclaration_specifiers=ruledeclaration_specifiers();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledeclaration_specifiers; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledeclaration_specifiers"


    // $ANTLR start "ruledeclaration_specifiers"
    // InternalAnsic.g:228:1: ruledeclaration_specifiers returns [EObject current=null] : ( ( ( (lv_storage_class_specifier_0_0= rulestorage_class_specifier ) ) ( (lv_declaration_specifiers_1_0= ruledeclaration_specifiers ) ) ) | ( (lv_storage_class_specifier_2_0= rulestorage_class_specifier ) ) | ( ( (lv_type_specifier_3_0= ruletype_specifier ) ) ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) ) | ( (lv_type_specifier_5_0= ruletype_specifier ) ) | ( ( (lv_type_qualifier_6_0= ruletype_qualifier ) ) ( (lv_declaration_specifiers_7_0= ruledeclaration_specifiers ) ) ) | ( (lv_type_qualifier_8_0= ruletype_qualifier ) ) | ( ( (lv_function_specifier_9_0= rulefunction_specifier ) ) ( (lv_declaration_specifiers_10_0= ruledeclaration_specifiers ) ) ) | ( (lv_function_specifier_11_0= rulefunction_specifier ) ) | ( ( (lv_alignment_specifier_12_0= rulealignment_specifier ) ) ( (lv_declaration_specifiers_13_0= ruledeclaration_specifiers ) ) ) | ( (lv_alignment_specifier_14_0= rulealignment_specifier ) ) ) ;
    public final EObject ruledeclaration_specifiers() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_storage_class_specifier_0_0 = null;

        EObject lv_declaration_specifiers_1_0 = null;

        AntlrDatatypeRuleToken lv_storage_class_specifier_2_0 = null;

        EObject lv_type_specifier_3_0 = null;

        EObject lv_declaration_specifiers_4_0 = null;

        EObject lv_type_specifier_5_0 = null;

        AntlrDatatypeRuleToken lv_type_qualifier_6_0 = null;

        EObject lv_declaration_specifiers_7_0 = null;

        AntlrDatatypeRuleToken lv_type_qualifier_8_0 = null;

        AntlrDatatypeRuleToken lv_function_specifier_9_0 = null;

        EObject lv_declaration_specifiers_10_0 = null;

        AntlrDatatypeRuleToken lv_function_specifier_11_0 = null;

        EObject lv_alignment_specifier_12_0 = null;

        EObject lv_declaration_specifiers_13_0 = null;

        EObject lv_alignment_specifier_14_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:234:2: ( ( ( ( (lv_storage_class_specifier_0_0= rulestorage_class_specifier ) ) ( (lv_declaration_specifiers_1_0= ruledeclaration_specifiers ) ) ) | ( (lv_storage_class_specifier_2_0= rulestorage_class_specifier ) ) | ( ( (lv_type_specifier_3_0= ruletype_specifier ) ) ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) ) | ( (lv_type_specifier_5_0= ruletype_specifier ) ) | ( ( (lv_type_qualifier_6_0= ruletype_qualifier ) ) ( (lv_declaration_specifiers_7_0= ruledeclaration_specifiers ) ) ) | ( (lv_type_qualifier_8_0= ruletype_qualifier ) ) | ( ( (lv_function_specifier_9_0= rulefunction_specifier ) ) ( (lv_declaration_specifiers_10_0= ruledeclaration_specifiers ) ) ) | ( (lv_function_specifier_11_0= rulefunction_specifier ) ) | ( ( (lv_alignment_specifier_12_0= rulealignment_specifier ) ) ( (lv_declaration_specifiers_13_0= ruledeclaration_specifiers ) ) ) | ( (lv_alignment_specifier_14_0= rulealignment_specifier ) ) ) )
            // InternalAnsic.g:235:2: ( ( ( (lv_storage_class_specifier_0_0= rulestorage_class_specifier ) ) ( (lv_declaration_specifiers_1_0= ruledeclaration_specifiers ) ) ) | ( (lv_storage_class_specifier_2_0= rulestorage_class_specifier ) ) | ( ( (lv_type_specifier_3_0= ruletype_specifier ) ) ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) ) | ( (lv_type_specifier_5_0= ruletype_specifier ) ) | ( ( (lv_type_qualifier_6_0= ruletype_qualifier ) ) ( (lv_declaration_specifiers_7_0= ruledeclaration_specifiers ) ) ) | ( (lv_type_qualifier_8_0= ruletype_qualifier ) ) | ( ( (lv_function_specifier_9_0= rulefunction_specifier ) ) ( (lv_declaration_specifiers_10_0= ruledeclaration_specifiers ) ) ) | ( (lv_function_specifier_11_0= rulefunction_specifier ) ) | ( ( (lv_alignment_specifier_12_0= rulealignment_specifier ) ) ( (lv_declaration_specifiers_13_0= ruledeclaration_specifiers ) ) ) | ( (lv_alignment_specifier_14_0= rulealignment_specifier ) ) )
            {
            // InternalAnsic.g:235:2: ( ( ( (lv_storage_class_specifier_0_0= rulestorage_class_specifier ) ) ( (lv_declaration_specifiers_1_0= ruledeclaration_specifiers ) ) ) | ( (lv_storage_class_specifier_2_0= rulestorage_class_specifier ) ) | ( ( (lv_type_specifier_3_0= ruletype_specifier ) ) ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) ) | ( (lv_type_specifier_5_0= ruletype_specifier ) ) | ( ( (lv_type_qualifier_6_0= ruletype_qualifier ) ) ( (lv_declaration_specifiers_7_0= ruledeclaration_specifiers ) ) ) | ( (lv_type_qualifier_8_0= ruletype_qualifier ) ) | ( ( (lv_function_specifier_9_0= rulefunction_specifier ) ) ( (lv_declaration_specifiers_10_0= ruledeclaration_specifiers ) ) ) | ( (lv_function_specifier_11_0= rulefunction_specifier ) ) | ( ( (lv_alignment_specifier_12_0= rulealignment_specifier ) ) ( (lv_declaration_specifiers_13_0= ruledeclaration_specifiers ) ) ) | ( (lv_alignment_specifier_14_0= rulealignment_specifier ) ) )
            int alt2=10;
            alt2 = dfa2.predict(input);
            switch (alt2) {
                case 1 :
                    // InternalAnsic.g:236:3: ( ( (lv_storage_class_specifier_0_0= rulestorage_class_specifier ) ) ( (lv_declaration_specifiers_1_0= ruledeclaration_specifiers ) ) )
                    {
                    // InternalAnsic.g:236:3: ( ( (lv_storage_class_specifier_0_0= rulestorage_class_specifier ) ) ( (lv_declaration_specifiers_1_0= ruledeclaration_specifiers ) ) )
                    // InternalAnsic.g:237:4: ( (lv_storage_class_specifier_0_0= rulestorage_class_specifier ) ) ( (lv_declaration_specifiers_1_0= ruledeclaration_specifiers ) )
                    {
                    // InternalAnsic.g:237:4: ( (lv_storage_class_specifier_0_0= rulestorage_class_specifier ) )
                    // InternalAnsic.g:238:5: (lv_storage_class_specifier_0_0= rulestorage_class_specifier )
                    {
                    // InternalAnsic.g:238:5: (lv_storage_class_specifier_0_0= rulestorage_class_specifier )
                    // InternalAnsic.g:239:6: lv_storage_class_specifier_0_0= rulestorage_class_specifier
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getStorage_class_specifierStorage_class_specifierParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_storage_class_specifier_0_0=rulestorage_class_specifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDeclaration_specifiersRule());
                      						}
                      						set(
                      							current,
                      							"storage_class_specifier",
                      							lv_storage_class_specifier_0_0,
                      							"org.xtext.example.Ansic.storage_class_specifier");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:256:4: ( (lv_declaration_specifiers_1_0= ruledeclaration_specifiers ) )
                    // InternalAnsic.g:257:5: (lv_declaration_specifiers_1_0= ruledeclaration_specifiers )
                    {
                    // InternalAnsic.g:257:5: (lv_declaration_specifiers_1_0= ruledeclaration_specifiers )
                    // InternalAnsic.g:258:6: lv_declaration_specifiers_1_0= ruledeclaration_specifiers
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaration_specifiers_1_0=ruledeclaration_specifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDeclaration_specifiersRule());
                      						}
                      						add(
                      							current,
                      							"declaration_specifiers",
                      							lv_declaration_specifiers_1_0,
                      							"org.xtext.example.Ansic.declaration_specifiers");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:277:3: ( (lv_storage_class_specifier_2_0= rulestorage_class_specifier ) )
                    {
                    // InternalAnsic.g:277:3: ( (lv_storage_class_specifier_2_0= rulestorage_class_specifier ) )
                    // InternalAnsic.g:278:4: (lv_storage_class_specifier_2_0= rulestorage_class_specifier )
                    {
                    // InternalAnsic.g:278:4: (lv_storage_class_specifier_2_0= rulestorage_class_specifier )
                    // InternalAnsic.g:279:5: lv_storage_class_specifier_2_0= rulestorage_class_specifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getStorage_class_specifierStorage_class_specifierParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_storage_class_specifier_2_0=rulestorage_class_specifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDeclaration_specifiersRule());
                      					}
                      					set(
                      						current,
                      						"storage_class_specifier",
                      						lv_storage_class_specifier_2_0,
                      						"org.xtext.example.Ansic.storage_class_specifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:297:3: ( ( (lv_type_specifier_3_0= ruletype_specifier ) ) ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) )
                    {
                    // InternalAnsic.g:297:3: ( ( (lv_type_specifier_3_0= ruletype_specifier ) ) ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) )
                    // InternalAnsic.g:298:4: ( (lv_type_specifier_3_0= ruletype_specifier ) ) ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) )
                    {
                    // InternalAnsic.g:298:4: ( (lv_type_specifier_3_0= ruletype_specifier ) )
                    // InternalAnsic.g:299:5: (lv_type_specifier_3_0= ruletype_specifier )
                    {
                    // InternalAnsic.g:299:5: (lv_type_specifier_3_0= ruletype_specifier )
                    // InternalAnsic.g:300:6: lv_type_specifier_3_0= ruletype_specifier
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getType_specifierType_specifierParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_type_specifier_3_0=ruletype_specifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDeclaration_specifiersRule());
                      						}
                      						set(
                      							current,
                      							"type_specifier",
                      							lv_type_specifier_3_0,
                      							"org.xtext.example.Ansic.type_specifier");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:317:4: ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) )
                    // InternalAnsic.g:318:5: (lv_declaration_specifiers_4_0= ruledeclaration_specifiers )
                    {
                    // InternalAnsic.g:318:5: (lv_declaration_specifiers_4_0= ruledeclaration_specifiers )
                    // InternalAnsic.g:319:6: lv_declaration_specifiers_4_0= ruledeclaration_specifiers
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaration_specifiers_4_0=ruledeclaration_specifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDeclaration_specifiersRule());
                      						}
                      						add(
                      							current,
                      							"declaration_specifiers",
                      							lv_declaration_specifiers_4_0,
                      							"org.xtext.example.Ansic.declaration_specifiers");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalAnsic.g:338:3: ( (lv_type_specifier_5_0= ruletype_specifier ) )
                    {
                    // InternalAnsic.g:338:3: ( (lv_type_specifier_5_0= ruletype_specifier ) )
                    // InternalAnsic.g:339:4: (lv_type_specifier_5_0= ruletype_specifier )
                    {
                    // InternalAnsic.g:339:4: (lv_type_specifier_5_0= ruletype_specifier )
                    // InternalAnsic.g:340:5: lv_type_specifier_5_0= ruletype_specifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getType_specifierType_specifierParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_specifier_5_0=ruletype_specifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDeclaration_specifiersRule());
                      					}
                      					set(
                      						current,
                      						"type_specifier",
                      						lv_type_specifier_5_0,
                      						"org.xtext.example.Ansic.type_specifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalAnsic.g:358:3: ( ( (lv_type_qualifier_6_0= ruletype_qualifier ) ) ( (lv_declaration_specifiers_7_0= ruledeclaration_specifiers ) ) )
                    {
                    // InternalAnsic.g:358:3: ( ( (lv_type_qualifier_6_0= ruletype_qualifier ) ) ( (lv_declaration_specifiers_7_0= ruledeclaration_specifiers ) ) )
                    // InternalAnsic.g:359:4: ( (lv_type_qualifier_6_0= ruletype_qualifier ) ) ( (lv_declaration_specifiers_7_0= ruledeclaration_specifiers ) )
                    {
                    // InternalAnsic.g:359:4: ( (lv_type_qualifier_6_0= ruletype_qualifier ) )
                    // InternalAnsic.g:360:5: (lv_type_qualifier_6_0= ruletype_qualifier )
                    {
                    // InternalAnsic.g:360:5: (lv_type_qualifier_6_0= ruletype_qualifier )
                    // InternalAnsic.g:361:6: lv_type_qualifier_6_0= ruletype_qualifier
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getType_qualifierType_qualifierParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_type_qualifier_6_0=ruletype_qualifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDeclaration_specifiersRule());
                      						}
                      						set(
                      							current,
                      							"type_qualifier",
                      							lv_type_qualifier_6_0,
                      							"org.xtext.example.Ansic.type_qualifier");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:378:4: ( (lv_declaration_specifiers_7_0= ruledeclaration_specifiers ) )
                    // InternalAnsic.g:379:5: (lv_declaration_specifiers_7_0= ruledeclaration_specifiers )
                    {
                    // InternalAnsic.g:379:5: (lv_declaration_specifiers_7_0= ruledeclaration_specifiers )
                    // InternalAnsic.g:380:6: lv_declaration_specifiers_7_0= ruledeclaration_specifiers
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaration_specifiers_7_0=ruledeclaration_specifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDeclaration_specifiersRule());
                      						}
                      						add(
                      							current,
                      							"declaration_specifiers",
                      							lv_declaration_specifiers_7_0,
                      							"org.xtext.example.Ansic.declaration_specifiers");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalAnsic.g:399:3: ( (lv_type_qualifier_8_0= ruletype_qualifier ) )
                    {
                    // InternalAnsic.g:399:3: ( (lv_type_qualifier_8_0= ruletype_qualifier ) )
                    // InternalAnsic.g:400:4: (lv_type_qualifier_8_0= ruletype_qualifier )
                    {
                    // InternalAnsic.g:400:4: (lv_type_qualifier_8_0= ruletype_qualifier )
                    // InternalAnsic.g:401:5: lv_type_qualifier_8_0= ruletype_qualifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getType_qualifierType_qualifierParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_qualifier_8_0=ruletype_qualifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDeclaration_specifiersRule());
                      					}
                      					set(
                      						current,
                      						"type_qualifier",
                      						lv_type_qualifier_8_0,
                      						"org.xtext.example.Ansic.type_qualifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalAnsic.g:419:3: ( ( (lv_function_specifier_9_0= rulefunction_specifier ) ) ( (lv_declaration_specifiers_10_0= ruledeclaration_specifiers ) ) )
                    {
                    // InternalAnsic.g:419:3: ( ( (lv_function_specifier_9_0= rulefunction_specifier ) ) ( (lv_declaration_specifiers_10_0= ruledeclaration_specifiers ) ) )
                    // InternalAnsic.g:420:4: ( (lv_function_specifier_9_0= rulefunction_specifier ) ) ( (lv_declaration_specifiers_10_0= ruledeclaration_specifiers ) )
                    {
                    // InternalAnsic.g:420:4: ( (lv_function_specifier_9_0= rulefunction_specifier ) )
                    // InternalAnsic.g:421:5: (lv_function_specifier_9_0= rulefunction_specifier )
                    {
                    // InternalAnsic.g:421:5: (lv_function_specifier_9_0= rulefunction_specifier )
                    // InternalAnsic.g:422:6: lv_function_specifier_9_0= rulefunction_specifier
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getFunction_specifierFunction_specifierParserRuleCall_6_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_function_specifier_9_0=rulefunction_specifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDeclaration_specifiersRule());
                      						}
                      						set(
                      							current,
                      							"function_specifier",
                      							lv_function_specifier_9_0,
                      							"org.xtext.example.Ansic.function_specifier");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:439:4: ( (lv_declaration_specifiers_10_0= ruledeclaration_specifiers ) )
                    // InternalAnsic.g:440:5: (lv_declaration_specifiers_10_0= ruledeclaration_specifiers )
                    {
                    // InternalAnsic.g:440:5: (lv_declaration_specifiers_10_0= ruledeclaration_specifiers )
                    // InternalAnsic.g:441:6: lv_declaration_specifiers_10_0= ruledeclaration_specifiers
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaration_specifiers_10_0=ruledeclaration_specifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDeclaration_specifiersRule());
                      						}
                      						add(
                      							current,
                      							"declaration_specifiers",
                      							lv_declaration_specifiers_10_0,
                      							"org.xtext.example.Ansic.declaration_specifiers");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalAnsic.g:460:3: ( (lv_function_specifier_11_0= rulefunction_specifier ) )
                    {
                    // InternalAnsic.g:460:3: ( (lv_function_specifier_11_0= rulefunction_specifier ) )
                    // InternalAnsic.g:461:4: (lv_function_specifier_11_0= rulefunction_specifier )
                    {
                    // InternalAnsic.g:461:4: (lv_function_specifier_11_0= rulefunction_specifier )
                    // InternalAnsic.g:462:5: lv_function_specifier_11_0= rulefunction_specifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getFunction_specifierFunction_specifierParserRuleCall_7_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_specifier_11_0=rulefunction_specifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDeclaration_specifiersRule());
                      					}
                      					set(
                      						current,
                      						"function_specifier",
                      						lv_function_specifier_11_0,
                      						"org.xtext.example.Ansic.function_specifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalAnsic.g:480:3: ( ( (lv_alignment_specifier_12_0= rulealignment_specifier ) ) ( (lv_declaration_specifiers_13_0= ruledeclaration_specifiers ) ) )
                    {
                    // InternalAnsic.g:480:3: ( ( (lv_alignment_specifier_12_0= rulealignment_specifier ) ) ( (lv_declaration_specifiers_13_0= ruledeclaration_specifiers ) ) )
                    // InternalAnsic.g:481:4: ( (lv_alignment_specifier_12_0= rulealignment_specifier ) ) ( (lv_declaration_specifiers_13_0= ruledeclaration_specifiers ) )
                    {
                    // InternalAnsic.g:481:4: ( (lv_alignment_specifier_12_0= rulealignment_specifier ) )
                    // InternalAnsic.g:482:5: (lv_alignment_specifier_12_0= rulealignment_specifier )
                    {
                    // InternalAnsic.g:482:5: (lv_alignment_specifier_12_0= rulealignment_specifier )
                    // InternalAnsic.g:483:6: lv_alignment_specifier_12_0= rulealignment_specifier
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getAlignment_specifierAlignment_specifierParserRuleCall_8_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_alignment_specifier_12_0=rulealignment_specifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDeclaration_specifiersRule());
                      						}
                      						set(
                      							current,
                      							"alignment_specifier",
                      							lv_alignment_specifier_12_0,
                      							"org.xtext.example.Ansic.alignment_specifier");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:500:4: ( (lv_declaration_specifiers_13_0= ruledeclaration_specifiers ) )
                    // InternalAnsic.g:501:5: (lv_declaration_specifiers_13_0= ruledeclaration_specifiers )
                    {
                    // InternalAnsic.g:501:5: (lv_declaration_specifiers_13_0= ruledeclaration_specifiers )
                    // InternalAnsic.g:502:6: lv_declaration_specifiers_13_0= ruledeclaration_specifiers
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_8_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaration_specifiers_13_0=ruledeclaration_specifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDeclaration_specifiersRule());
                      						}
                      						add(
                      							current,
                      							"declaration_specifiers",
                      							lv_declaration_specifiers_13_0,
                      							"org.xtext.example.Ansic.declaration_specifiers");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalAnsic.g:521:3: ( (lv_alignment_specifier_14_0= rulealignment_specifier ) )
                    {
                    // InternalAnsic.g:521:3: ( (lv_alignment_specifier_14_0= rulealignment_specifier ) )
                    // InternalAnsic.g:522:4: (lv_alignment_specifier_14_0= rulealignment_specifier )
                    {
                    // InternalAnsic.g:522:4: (lv_alignment_specifier_14_0= rulealignment_specifier )
                    // InternalAnsic.g:523:5: lv_alignment_specifier_14_0= rulealignment_specifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getAlignment_specifierAlignment_specifierParserRuleCall_9_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_alignment_specifier_14_0=rulealignment_specifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDeclaration_specifiersRule());
                      					}
                      					set(
                      						current,
                      						"alignment_specifier",
                      						lv_alignment_specifier_14_0,
                      						"org.xtext.example.Ansic.alignment_specifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledeclaration_specifiers"


    // $ANTLR start "entryRulefunction_specifier"
    // InternalAnsic.g:544:1: entryRulefunction_specifier returns [String current=null] : iv_rulefunction_specifier= rulefunction_specifier EOF ;
    public final String entryRulefunction_specifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulefunction_specifier = null;


        try {
            // InternalAnsic.g:544:58: (iv_rulefunction_specifier= rulefunction_specifier EOF )
            // InternalAnsic.g:545:2: iv_rulefunction_specifier= rulefunction_specifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunction_specifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulefunction_specifier=rulefunction_specifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulefunction_specifier.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulefunction_specifier"


    // $ANTLR start "rulefunction_specifier"
    // InternalAnsic.g:551:1: rulefunction_specifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'inline' | kw= '_Noreturn' ) ;
    public final AntlrDatatypeRuleToken rulefunction_specifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalAnsic.g:557:2: ( (kw= 'inline' | kw= '_Noreturn' ) )
            // InternalAnsic.g:558:2: (kw= 'inline' | kw= '_Noreturn' )
            {
            // InternalAnsic.g:558:2: (kw= 'inline' | kw= '_Noreturn' )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==28) ) {
                alt3=1;
            }
            else if ( (LA3_0==29) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalAnsic.g:559:3: kw= 'inline'
                    {
                    kw=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFunction_specifierAccess().getInlineKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsic.g:565:3: kw= '_Noreturn'
                    {
                    kw=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFunction_specifierAccess().get_NoreturnKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulefunction_specifier"


    // $ANTLR start "entryRulealignment_specifier"
    // InternalAnsic.g:574:1: entryRulealignment_specifier returns [EObject current=null] : iv_rulealignment_specifier= rulealignment_specifier EOF ;
    public final EObject entryRulealignment_specifier() throws RecognitionException {
        EObject current = null;

        EObject iv_rulealignment_specifier = null;


        try {
            // InternalAnsic.g:574:60: (iv_rulealignment_specifier= rulealignment_specifier EOF )
            // InternalAnsic.g:575:2: iv_rulealignment_specifier= rulealignment_specifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAlignment_specifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulealignment_specifier=rulealignment_specifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulealignment_specifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulealignment_specifier"


    // $ANTLR start "rulealignment_specifier"
    // InternalAnsic.g:581:1: rulealignment_specifier returns [EObject current=null] : ( (otherlv_0= '_Alignas' otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')' ) | (otherlv_4= '_Alignas' otherlv_5= '(' ( (lv_constant_expression_6_0= ruleconstant_expression ) ) otherlv_7= ')' ) ) ;
    public final EObject rulealignment_specifier() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_type_name_2_0 = null;

        EObject lv_constant_expression_6_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:587:2: ( ( (otherlv_0= '_Alignas' otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')' ) | (otherlv_4= '_Alignas' otherlv_5= '(' ( (lv_constant_expression_6_0= ruleconstant_expression ) ) otherlv_7= ')' ) ) )
            // InternalAnsic.g:588:2: ( (otherlv_0= '_Alignas' otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')' ) | (otherlv_4= '_Alignas' otherlv_5= '(' ( (lv_constant_expression_6_0= ruleconstant_expression ) ) otherlv_7= ')' ) )
            {
            // InternalAnsic.g:588:2: ( (otherlv_0= '_Alignas' otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')' ) | (otherlv_4= '_Alignas' otherlv_5= '(' ( (lv_constant_expression_6_0= ruleconstant_expression ) ) otherlv_7= ')' ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==30) ) {
                int LA4_1 = input.LA(2);

                if ( (LA4_1==31) ) {
                    switch ( input.LA(3) ) {
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 55:
                    case 56:
                        {
                        alt4=1;
                        }
                        break;
                    case 50:
                        {
                        int LA4_4 = input.LA(4);

                        if ( (LA4_4==RULE_ID||LA4_4==51) ) {
                            alt4=1;
                        }
                        else if ( ((LA4_4>=31 && LA4_4<=32)||(LA4_4>=64 && LA4_4<=65)||LA4_4==70||(LA4_4>=72 && LA4_4<=74)||(LA4_4>=77 && LA4_4<=84)||(LA4_4>=96 && LA4_4<=101)) ) {
                            alt4=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 4, 4, input);

                            throw nvae;
                        }
                        }
                        break;
                    case RULE_ID:
                    case RULE_STRING_LITERAL:
                    case RULE_I_CONSTANT:
                    case RULE_F_CONSTANT:
                    case 31:
                    case 64:
                    case 68:
                    case 73:
                    case 74:
                    case 75:
                    case 76:
                    case 79:
                    case 80:
                    case 96:
                    case 112:
                    case 113:
                    case 114:
                        {
                        alt4=2;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 4, 2, input);

                        throw nvae;
                    }

                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 4, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalAnsic.g:589:3: (otherlv_0= '_Alignas' otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')' )
                    {
                    // InternalAnsic.g:589:3: (otherlv_0= '_Alignas' otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')' )
                    // InternalAnsic.g:590:4: otherlv_0= '_Alignas' otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')'
                    {
                    otherlv_0=(Token)match(input,30,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getAlignment_specifierAccess().get_AlignasKeyword_0_0());
                      			
                    }
                    otherlv_1=(Token)match(input,31,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getAlignment_specifierAccess().getLeftParenthesisKeyword_0_1());
                      			
                    }
                    // InternalAnsic.g:598:4: ( (lv_type_name_2_0= ruletype_name ) )
                    // InternalAnsic.g:599:5: (lv_type_name_2_0= ruletype_name )
                    {
                    // InternalAnsic.g:599:5: (lv_type_name_2_0= ruletype_name )
                    // InternalAnsic.g:600:6: lv_type_name_2_0= ruletype_name
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAlignment_specifierAccess().getType_nameType_nameParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_type_name_2_0=ruletype_name();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAlignment_specifierRule());
                      						}
                      						set(
                      							current,
                      							"type_name",
                      							lv_type_name_2_0,
                      							"org.xtext.example.Ansic.type_name");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,32,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getAlignment_specifierAccess().getRightParenthesisKeyword_0_3());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:623:3: (otherlv_4= '_Alignas' otherlv_5= '(' ( (lv_constant_expression_6_0= ruleconstant_expression ) ) otherlv_7= ')' )
                    {
                    // InternalAnsic.g:623:3: (otherlv_4= '_Alignas' otherlv_5= '(' ( (lv_constant_expression_6_0= ruleconstant_expression ) ) otherlv_7= ')' )
                    // InternalAnsic.g:624:4: otherlv_4= '_Alignas' otherlv_5= '(' ( (lv_constant_expression_6_0= ruleconstant_expression ) ) otherlv_7= ')'
                    {
                    otherlv_4=(Token)match(input,30,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getAlignment_specifierAccess().get_AlignasKeyword_1_0());
                      			
                    }
                    otherlv_5=(Token)match(input,31,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getAlignment_specifierAccess().getLeftParenthesisKeyword_1_1());
                      			
                    }
                    // InternalAnsic.g:632:4: ( (lv_constant_expression_6_0= ruleconstant_expression ) )
                    // InternalAnsic.g:633:5: (lv_constant_expression_6_0= ruleconstant_expression )
                    {
                    // InternalAnsic.g:633:5: (lv_constant_expression_6_0= ruleconstant_expression )
                    // InternalAnsic.g:634:6: lv_constant_expression_6_0= ruleconstant_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAlignment_specifierAccess().getConstant_expressionConstant_expressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_constant_expression_6_0=ruleconstant_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAlignment_specifierRule());
                      						}
                      						set(
                      							current,
                      							"constant_expression",
                      							lv_constant_expression_6_0,
                      							"org.xtext.example.Ansic.constant_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_7=(Token)match(input,32,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getAlignment_specifierAccess().getRightParenthesisKeyword_1_3());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulealignment_specifier"


    // $ANTLR start "entryRuletype_qualifier"
    // InternalAnsic.g:660:1: entryRuletype_qualifier returns [String current=null] : iv_ruletype_qualifier= ruletype_qualifier EOF ;
    public final String entryRuletype_qualifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruletype_qualifier = null;


        try {
            // InternalAnsic.g:660:54: (iv_ruletype_qualifier= ruletype_qualifier EOF )
            // InternalAnsic.g:661:2: iv_ruletype_qualifier= ruletype_qualifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getType_qualifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletype_qualifier=ruletype_qualifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletype_qualifier.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletype_qualifier"


    // $ANTLR start "ruletype_qualifier"
    // InternalAnsic.g:667:1: ruletype_qualifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'const' | kw= 'restrict' | kw= 'volatile' | kw= '_Atomic' ) ;
    public final AntlrDatatypeRuleToken ruletype_qualifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalAnsic.g:673:2: ( (kw= 'const' | kw= 'restrict' | kw= 'volatile' | kw= '_Atomic' ) )
            // InternalAnsic.g:674:2: (kw= 'const' | kw= 'restrict' | kw= 'volatile' | kw= '_Atomic' )
            {
            // InternalAnsic.g:674:2: (kw= 'const' | kw= 'restrict' | kw= 'volatile' | kw= '_Atomic' )
            int alt5=4;
            switch ( input.LA(1) ) {
            case 33:
                {
                alt5=1;
                }
                break;
            case 34:
                {
                alt5=2;
                }
                break;
            case 35:
                {
                alt5=3;
                }
                break;
            case 36:
                {
                alt5=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }

            switch (alt5) {
                case 1 :
                    // InternalAnsic.g:675:3: kw= 'const'
                    {
                    kw=(Token)match(input,33,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getType_qualifierAccess().getConstKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsic.g:681:3: kw= 'restrict'
                    {
                    kw=(Token)match(input,34,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getType_qualifierAccess().getRestrictKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAnsic.g:687:3: kw= 'volatile'
                    {
                    kw=(Token)match(input,35,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getType_qualifierAccess().getVolatileKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAnsic.g:693:3: kw= '_Atomic'
                    {
                    kw=(Token)match(input,36,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getType_qualifierAccess().get_AtomicKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletype_qualifier"


    // $ANTLR start "entryRuletype_specifier"
    // InternalAnsic.g:702:1: entryRuletype_specifier returns [EObject current=null] : iv_ruletype_specifier= ruletype_specifier EOF ;
    public final EObject entryRuletype_specifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletype_specifier = null;


        try {
            // InternalAnsic.g:702:55: (iv_ruletype_specifier= ruletype_specifier EOF )
            // InternalAnsic.g:703:2: iv_ruletype_specifier= ruletype_specifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getType_specifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletype_specifier=ruletype_specifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletype_specifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletype_specifier"


    // $ANTLR start "ruletype_specifier"
    // InternalAnsic.g:709:1: ruletype_specifier returns [EObject current=null] : (otherlv_0= 'void' | otherlv_1= 'char' | otherlv_2= 'short' | otherlv_3= 'int' | otherlv_4= 'long' | otherlv_5= 'float' | otherlv_6= 'double' | otherlv_7= 'signed' | otherlv_8= 'unsigned' | otherlv_9= 'bool' | otherlv_10= '_Complex' | otherlv_11= '_Imaginary' | ( (lv_atomic_type_specifier_12_0= ruleatomic_type_specifier ) ) | ( (lv_struct_or_union_specifier_13_0= rulestruct_or_union_specifier ) ) | ( (lv_enum_specifier_14_0= ruleenum_specifier ) ) | otherlv_15= 'typedef' ) ;
    public final EObject ruletype_specifier() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_15=null;
        EObject lv_atomic_type_specifier_12_0 = null;

        EObject lv_struct_or_union_specifier_13_0 = null;

        EObject lv_enum_specifier_14_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:715:2: ( (otherlv_0= 'void' | otherlv_1= 'char' | otherlv_2= 'short' | otherlv_3= 'int' | otherlv_4= 'long' | otherlv_5= 'float' | otherlv_6= 'double' | otherlv_7= 'signed' | otherlv_8= 'unsigned' | otherlv_9= 'bool' | otherlv_10= '_Complex' | otherlv_11= '_Imaginary' | ( (lv_atomic_type_specifier_12_0= ruleatomic_type_specifier ) ) | ( (lv_struct_or_union_specifier_13_0= rulestruct_or_union_specifier ) ) | ( (lv_enum_specifier_14_0= ruleenum_specifier ) ) | otherlv_15= 'typedef' ) )
            // InternalAnsic.g:716:2: (otherlv_0= 'void' | otherlv_1= 'char' | otherlv_2= 'short' | otherlv_3= 'int' | otherlv_4= 'long' | otherlv_5= 'float' | otherlv_6= 'double' | otherlv_7= 'signed' | otherlv_8= 'unsigned' | otherlv_9= 'bool' | otherlv_10= '_Complex' | otherlv_11= '_Imaginary' | ( (lv_atomic_type_specifier_12_0= ruleatomic_type_specifier ) ) | ( (lv_struct_or_union_specifier_13_0= rulestruct_or_union_specifier ) ) | ( (lv_enum_specifier_14_0= ruleenum_specifier ) ) | otherlv_15= 'typedef' )
            {
            // InternalAnsic.g:716:2: (otherlv_0= 'void' | otherlv_1= 'char' | otherlv_2= 'short' | otherlv_3= 'int' | otherlv_4= 'long' | otherlv_5= 'float' | otherlv_6= 'double' | otherlv_7= 'signed' | otherlv_8= 'unsigned' | otherlv_9= 'bool' | otherlv_10= '_Complex' | otherlv_11= '_Imaginary' | ( (lv_atomic_type_specifier_12_0= ruleatomic_type_specifier ) ) | ( (lv_struct_or_union_specifier_13_0= rulestruct_or_union_specifier ) ) | ( (lv_enum_specifier_14_0= ruleenum_specifier ) ) | otherlv_15= 'typedef' )
            int alt6=16;
            switch ( input.LA(1) ) {
            case 37:
                {
                alt6=1;
                }
                break;
            case 38:
                {
                alt6=2;
                }
                break;
            case 39:
                {
                alt6=3;
                }
                break;
            case 40:
                {
                alt6=4;
                }
                break;
            case 41:
                {
                alt6=5;
                }
                break;
            case 42:
                {
                alt6=6;
                }
                break;
            case 43:
                {
                alt6=7;
                }
                break;
            case 44:
                {
                alt6=8;
                }
                break;
            case 45:
                {
                alt6=9;
                }
                break;
            case 46:
                {
                alt6=10;
                }
                break;
            case 47:
                {
                alt6=11;
                }
                break;
            case 48:
                {
                alt6=12;
                }
                break;
            case 36:
                {
                alt6=13;
                }
                break;
            case 55:
            case 56:
                {
                alt6=14;
                }
                break;
            case 50:
                {
                alt6=15;
                }
                break;
            case 49:
                {
                alt6=16;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }

            switch (alt6) {
                case 1 :
                    // InternalAnsic.g:717:3: otherlv_0= 'void'
                    {
                    otherlv_0=(Token)match(input,37,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_0, grammarAccess.getType_specifierAccess().getVoidKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsic.g:722:3: otherlv_1= 'char'
                    {
                    otherlv_1=(Token)match(input,38,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_1, grammarAccess.getType_specifierAccess().getCharKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAnsic.g:727:3: otherlv_2= 'short'
                    {
                    otherlv_2=(Token)match(input,39,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_2, grammarAccess.getType_specifierAccess().getShortKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAnsic.g:732:3: otherlv_3= 'int'
                    {
                    otherlv_3=(Token)match(input,40,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_3, grammarAccess.getType_specifierAccess().getIntKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalAnsic.g:737:3: otherlv_4= 'long'
                    {
                    otherlv_4=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_4, grammarAccess.getType_specifierAccess().getLongKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalAnsic.g:742:3: otherlv_5= 'float'
                    {
                    otherlv_5=(Token)match(input,42,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_5, grammarAccess.getType_specifierAccess().getFloatKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalAnsic.g:747:3: otherlv_6= 'double'
                    {
                    otherlv_6=(Token)match(input,43,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_6, grammarAccess.getType_specifierAccess().getDoubleKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalAnsic.g:752:3: otherlv_7= 'signed'
                    {
                    otherlv_7=(Token)match(input,44,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_7, grammarAccess.getType_specifierAccess().getSignedKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalAnsic.g:757:3: otherlv_8= 'unsigned'
                    {
                    otherlv_8=(Token)match(input,45,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_8, grammarAccess.getType_specifierAccess().getUnsignedKeyword_8());
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalAnsic.g:762:3: otherlv_9= 'bool'
                    {
                    otherlv_9=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_9, grammarAccess.getType_specifierAccess().getBoolKeyword_9());
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalAnsic.g:767:3: otherlv_10= '_Complex'
                    {
                    otherlv_10=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_10, grammarAccess.getType_specifierAccess().get_ComplexKeyword_10());
                      		
                    }

                    }
                    break;
                case 12 :
                    // InternalAnsic.g:772:3: otherlv_11= '_Imaginary'
                    {
                    otherlv_11=(Token)match(input,48,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_11, grammarAccess.getType_specifierAccess().get_ImaginaryKeyword_11());
                      		
                    }

                    }
                    break;
                case 13 :
                    // InternalAnsic.g:777:3: ( (lv_atomic_type_specifier_12_0= ruleatomic_type_specifier ) )
                    {
                    // InternalAnsic.g:777:3: ( (lv_atomic_type_specifier_12_0= ruleatomic_type_specifier ) )
                    // InternalAnsic.g:778:4: (lv_atomic_type_specifier_12_0= ruleatomic_type_specifier )
                    {
                    // InternalAnsic.g:778:4: (lv_atomic_type_specifier_12_0= ruleatomic_type_specifier )
                    // InternalAnsic.g:779:5: lv_atomic_type_specifier_12_0= ruleatomic_type_specifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getType_specifierAccess().getAtomic_type_specifierAtomic_type_specifierParserRuleCall_12_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_atomic_type_specifier_12_0=ruleatomic_type_specifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getType_specifierRule());
                      					}
                      					set(
                      						current,
                      						"atomic_type_specifier",
                      						lv_atomic_type_specifier_12_0,
                      						"org.xtext.example.Ansic.atomic_type_specifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 14 :
                    // InternalAnsic.g:797:3: ( (lv_struct_or_union_specifier_13_0= rulestruct_or_union_specifier ) )
                    {
                    // InternalAnsic.g:797:3: ( (lv_struct_or_union_specifier_13_0= rulestruct_or_union_specifier ) )
                    // InternalAnsic.g:798:4: (lv_struct_or_union_specifier_13_0= rulestruct_or_union_specifier )
                    {
                    // InternalAnsic.g:798:4: (lv_struct_or_union_specifier_13_0= rulestruct_or_union_specifier )
                    // InternalAnsic.g:799:5: lv_struct_or_union_specifier_13_0= rulestruct_or_union_specifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getType_specifierAccess().getStruct_or_union_specifierStruct_or_union_specifierParserRuleCall_13_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_struct_or_union_specifier_13_0=rulestruct_or_union_specifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getType_specifierRule());
                      					}
                      					set(
                      						current,
                      						"struct_or_union_specifier",
                      						lv_struct_or_union_specifier_13_0,
                      						"org.xtext.example.Ansic.struct_or_union_specifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 15 :
                    // InternalAnsic.g:817:3: ( (lv_enum_specifier_14_0= ruleenum_specifier ) )
                    {
                    // InternalAnsic.g:817:3: ( (lv_enum_specifier_14_0= ruleenum_specifier ) )
                    // InternalAnsic.g:818:4: (lv_enum_specifier_14_0= ruleenum_specifier )
                    {
                    // InternalAnsic.g:818:4: (lv_enum_specifier_14_0= ruleenum_specifier )
                    // InternalAnsic.g:819:5: lv_enum_specifier_14_0= ruleenum_specifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getType_specifierAccess().getEnum_specifierEnum_specifierParserRuleCall_14_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_enum_specifier_14_0=ruleenum_specifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getType_specifierRule());
                      					}
                      					set(
                      						current,
                      						"enum_specifier",
                      						lv_enum_specifier_14_0,
                      						"org.xtext.example.Ansic.enum_specifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 16 :
                    // InternalAnsic.g:837:3: otherlv_15= 'typedef'
                    {
                    otherlv_15=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_15, grammarAccess.getType_specifierAccess().getTypedefKeyword_15());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletype_specifier"


    // $ANTLR start "entryRuleenum_specifier"
    // InternalAnsic.g:845:1: entryRuleenum_specifier returns [EObject current=null] : iv_ruleenum_specifier= ruleenum_specifier EOF ;
    public final EObject entryRuleenum_specifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleenum_specifier = null;


        try {
            // InternalAnsic.g:845:55: (iv_ruleenum_specifier= ruleenum_specifier EOF )
            // InternalAnsic.g:846:2: iv_ruleenum_specifier= ruleenum_specifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnum_specifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleenum_specifier=ruleenum_specifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleenum_specifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleenum_specifier"


    // $ANTLR start "ruleenum_specifier"
    // InternalAnsic.g:852:1: ruleenum_specifier returns [EObject current=null] : ( (otherlv_0= 'enum' otherlv_1= '{' ( (lv_enumerator_list_2_0= ruleenumerator_list ) ) otherlv_3= '}' ) | (otherlv_4= 'enum' otherlv_5= '{' ( (lv_enumerator_list_6_0= ruleenumerator_list ) ) otherlv_7= ',' otherlv_8= '}' ) | (otherlv_9= 'enum' ( (lv_identifier_10_0= RULE_ID ) ) otherlv_11= '{' ( (lv_enumerator_list_12_0= ruleenumerator_list ) ) otherlv_13= '}' ) | (otherlv_14= 'enum' ( (lv_identifier_15_0= RULE_ID ) ) otherlv_16= '{' ( (lv_enumerator_list_17_0= ruleenumerator_list ) ) otherlv_18= ',' otherlv_19= '}' ) | (otherlv_20= 'enum' ( (lv_identifier_21_0= RULE_ID ) ) ) ) ;
    public final EObject ruleenum_specifier() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token lv_identifier_10_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token lv_identifier_15_0=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token lv_identifier_21_0=null;
        EObject lv_enumerator_list_2_0 = null;

        EObject lv_enumerator_list_6_0 = null;

        EObject lv_enumerator_list_12_0 = null;

        EObject lv_enumerator_list_17_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:858:2: ( ( (otherlv_0= 'enum' otherlv_1= '{' ( (lv_enumerator_list_2_0= ruleenumerator_list ) ) otherlv_3= '}' ) | (otherlv_4= 'enum' otherlv_5= '{' ( (lv_enumerator_list_6_0= ruleenumerator_list ) ) otherlv_7= ',' otherlv_8= '}' ) | (otherlv_9= 'enum' ( (lv_identifier_10_0= RULE_ID ) ) otherlv_11= '{' ( (lv_enumerator_list_12_0= ruleenumerator_list ) ) otherlv_13= '}' ) | (otherlv_14= 'enum' ( (lv_identifier_15_0= RULE_ID ) ) otherlv_16= '{' ( (lv_enumerator_list_17_0= ruleenumerator_list ) ) otherlv_18= ',' otherlv_19= '}' ) | (otherlv_20= 'enum' ( (lv_identifier_21_0= RULE_ID ) ) ) ) )
            // InternalAnsic.g:859:2: ( (otherlv_0= 'enum' otherlv_1= '{' ( (lv_enumerator_list_2_0= ruleenumerator_list ) ) otherlv_3= '}' ) | (otherlv_4= 'enum' otherlv_5= '{' ( (lv_enumerator_list_6_0= ruleenumerator_list ) ) otherlv_7= ',' otherlv_8= '}' ) | (otherlv_9= 'enum' ( (lv_identifier_10_0= RULE_ID ) ) otherlv_11= '{' ( (lv_enumerator_list_12_0= ruleenumerator_list ) ) otherlv_13= '}' ) | (otherlv_14= 'enum' ( (lv_identifier_15_0= RULE_ID ) ) otherlv_16= '{' ( (lv_enumerator_list_17_0= ruleenumerator_list ) ) otherlv_18= ',' otherlv_19= '}' ) | (otherlv_20= 'enum' ( (lv_identifier_21_0= RULE_ID ) ) ) )
            {
            // InternalAnsic.g:859:2: ( (otherlv_0= 'enum' otherlv_1= '{' ( (lv_enumerator_list_2_0= ruleenumerator_list ) ) otherlv_3= '}' ) | (otherlv_4= 'enum' otherlv_5= '{' ( (lv_enumerator_list_6_0= ruleenumerator_list ) ) otherlv_7= ',' otherlv_8= '}' ) | (otherlv_9= 'enum' ( (lv_identifier_10_0= RULE_ID ) ) otherlv_11= '{' ( (lv_enumerator_list_12_0= ruleenumerator_list ) ) otherlv_13= '}' ) | (otherlv_14= 'enum' ( (lv_identifier_15_0= RULE_ID ) ) otherlv_16= '{' ( (lv_enumerator_list_17_0= ruleenumerator_list ) ) otherlv_18= ',' otherlv_19= '}' ) | (otherlv_20= 'enum' ( (lv_identifier_21_0= RULE_ID ) ) ) )
            int alt7=5;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==50) ) {
                int LA7_1 = input.LA(2);

                if ( (synpred31_InternalAnsic()) ) {
                    alt7=1;
                }
                else if ( (synpred32_InternalAnsic()) ) {
                    alt7=2;
                }
                else if ( (synpred33_InternalAnsic()) ) {
                    alt7=3;
                }
                else if ( (synpred34_InternalAnsic()) ) {
                    alt7=4;
                }
                else if ( (true) ) {
                    alt7=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 7, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalAnsic.g:860:3: (otherlv_0= 'enum' otherlv_1= '{' ( (lv_enumerator_list_2_0= ruleenumerator_list ) ) otherlv_3= '}' )
                    {
                    // InternalAnsic.g:860:3: (otherlv_0= 'enum' otherlv_1= '{' ( (lv_enumerator_list_2_0= ruleenumerator_list ) ) otherlv_3= '}' )
                    // InternalAnsic.g:861:4: otherlv_0= 'enum' otherlv_1= '{' ( (lv_enumerator_list_2_0= ruleenumerator_list ) ) otherlv_3= '}'
                    {
                    otherlv_0=(Token)match(input,50,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getEnum_specifierAccess().getEnumKeyword_0_0());
                      			
                    }
                    otherlv_1=(Token)match(input,51,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getEnum_specifierAccess().getLeftCurlyBracketKeyword_0_1());
                      			
                    }
                    // InternalAnsic.g:869:4: ( (lv_enumerator_list_2_0= ruleenumerator_list ) )
                    // InternalAnsic.g:870:5: (lv_enumerator_list_2_0= ruleenumerator_list )
                    {
                    // InternalAnsic.g:870:5: (lv_enumerator_list_2_0= ruleenumerator_list )
                    // InternalAnsic.g:871:6: lv_enumerator_list_2_0= ruleenumerator_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEnum_specifierAccess().getEnumerator_listEnumerator_listParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_enumerator_list_2_0=ruleenumerator_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEnum_specifierRule());
                      						}
                      						set(
                      							current,
                      							"enumerator_list",
                      							lv_enumerator_list_2_0,
                      							"org.xtext.example.Ansic.enumerator_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,52,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getEnum_specifierAccess().getRightCurlyBracketKeyword_0_3());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:894:3: (otherlv_4= 'enum' otherlv_5= '{' ( (lv_enumerator_list_6_0= ruleenumerator_list ) ) otherlv_7= ',' otherlv_8= '}' )
                    {
                    // InternalAnsic.g:894:3: (otherlv_4= 'enum' otherlv_5= '{' ( (lv_enumerator_list_6_0= ruleenumerator_list ) ) otherlv_7= ',' otherlv_8= '}' )
                    // InternalAnsic.g:895:4: otherlv_4= 'enum' otherlv_5= '{' ( (lv_enumerator_list_6_0= ruleenumerator_list ) ) otherlv_7= ',' otherlv_8= '}'
                    {
                    otherlv_4=(Token)match(input,50,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getEnum_specifierAccess().getEnumKeyword_1_0());
                      			
                    }
                    otherlv_5=(Token)match(input,51,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getEnum_specifierAccess().getLeftCurlyBracketKeyword_1_1());
                      			
                    }
                    // InternalAnsic.g:903:4: ( (lv_enumerator_list_6_0= ruleenumerator_list ) )
                    // InternalAnsic.g:904:5: (lv_enumerator_list_6_0= ruleenumerator_list )
                    {
                    // InternalAnsic.g:904:5: (lv_enumerator_list_6_0= ruleenumerator_list )
                    // InternalAnsic.g:905:6: lv_enumerator_list_6_0= ruleenumerator_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEnum_specifierAccess().getEnumerator_listEnumerator_listParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_enumerator_list_6_0=ruleenumerator_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEnum_specifierRule());
                      						}
                      						set(
                      							current,
                      							"enumerator_list",
                      							lv_enumerator_list_6_0,
                      							"org.xtext.example.Ansic.enumerator_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_7=(Token)match(input,53,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getEnum_specifierAccess().getCommaKeyword_1_3());
                      			
                    }
                    otherlv_8=(Token)match(input,52,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getEnum_specifierAccess().getRightCurlyBracketKeyword_1_4());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:932:3: (otherlv_9= 'enum' ( (lv_identifier_10_0= RULE_ID ) ) otherlv_11= '{' ( (lv_enumerator_list_12_0= ruleenumerator_list ) ) otherlv_13= '}' )
                    {
                    // InternalAnsic.g:932:3: (otherlv_9= 'enum' ( (lv_identifier_10_0= RULE_ID ) ) otherlv_11= '{' ( (lv_enumerator_list_12_0= ruleenumerator_list ) ) otherlv_13= '}' )
                    // InternalAnsic.g:933:4: otherlv_9= 'enum' ( (lv_identifier_10_0= RULE_ID ) ) otherlv_11= '{' ( (lv_enumerator_list_12_0= ruleenumerator_list ) ) otherlv_13= '}'
                    {
                    otherlv_9=(Token)match(input,50,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getEnum_specifierAccess().getEnumKeyword_2_0());
                      			
                    }
                    // InternalAnsic.g:937:4: ( (lv_identifier_10_0= RULE_ID ) )
                    // InternalAnsic.g:938:5: (lv_identifier_10_0= RULE_ID )
                    {
                    // InternalAnsic.g:938:5: (lv_identifier_10_0= RULE_ID )
                    // InternalAnsic.g:939:6: lv_identifier_10_0= RULE_ID
                    {
                    lv_identifier_10_0=(Token)match(input,RULE_ID,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_identifier_10_0, grammarAccess.getEnum_specifierAccess().getIdentifierIDTerminalRuleCall_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getEnum_specifierRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"identifier",
                      							lv_identifier_10_0,
                      							"org.eclipse.xtext.common.Terminals.ID");
                      					
                    }

                    }


                    }

                    otherlv_11=(Token)match(input,51,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getEnum_specifierAccess().getLeftCurlyBracketKeyword_2_2());
                      			
                    }
                    // InternalAnsic.g:959:4: ( (lv_enumerator_list_12_0= ruleenumerator_list ) )
                    // InternalAnsic.g:960:5: (lv_enumerator_list_12_0= ruleenumerator_list )
                    {
                    // InternalAnsic.g:960:5: (lv_enumerator_list_12_0= ruleenumerator_list )
                    // InternalAnsic.g:961:6: lv_enumerator_list_12_0= ruleenumerator_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEnum_specifierAccess().getEnumerator_listEnumerator_listParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_enumerator_list_12_0=ruleenumerator_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEnum_specifierRule());
                      						}
                      						set(
                      							current,
                      							"enumerator_list",
                      							lv_enumerator_list_12_0,
                      							"org.xtext.example.Ansic.enumerator_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_13=(Token)match(input,52,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getEnum_specifierAccess().getRightCurlyBracketKeyword_2_4());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalAnsic.g:984:3: (otherlv_14= 'enum' ( (lv_identifier_15_0= RULE_ID ) ) otherlv_16= '{' ( (lv_enumerator_list_17_0= ruleenumerator_list ) ) otherlv_18= ',' otherlv_19= '}' )
                    {
                    // InternalAnsic.g:984:3: (otherlv_14= 'enum' ( (lv_identifier_15_0= RULE_ID ) ) otherlv_16= '{' ( (lv_enumerator_list_17_0= ruleenumerator_list ) ) otherlv_18= ',' otherlv_19= '}' )
                    // InternalAnsic.g:985:4: otherlv_14= 'enum' ( (lv_identifier_15_0= RULE_ID ) ) otherlv_16= '{' ( (lv_enumerator_list_17_0= ruleenumerator_list ) ) otherlv_18= ',' otherlv_19= '}'
                    {
                    otherlv_14=(Token)match(input,50,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getEnum_specifierAccess().getEnumKeyword_3_0());
                      			
                    }
                    // InternalAnsic.g:989:4: ( (lv_identifier_15_0= RULE_ID ) )
                    // InternalAnsic.g:990:5: (lv_identifier_15_0= RULE_ID )
                    {
                    // InternalAnsic.g:990:5: (lv_identifier_15_0= RULE_ID )
                    // InternalAnsic.g:991:6: lv_identifier_15_0= RULE_ID
                    {
                    lv_identifier_15_0=(Token)match(input,RULE_ID,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_identifier_15_0, grammarAccess.getEnum_specifierAccess().getIdentifierIDTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getEnum_specifierRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"identifier",
                      							lv_identifier_15_0,
                      							"org.eclipse.xtext.common.Terminals.ID");
                      					
                    }

                    }


                    }

                    otherlv_16=(Token)match(input,51,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_16, grammarAccess.getEnum_specifierAccess().getLeftCurlyBracketKeyword_3_2());
                      			
                    }
                    // InternalAnsic.g:1011:4: ( (lv_enumerator_list_17_0= ruleenumerator_list ) )
                    // InternalAnsic.g:1012:5: (lv_enumerator_list_17_0= ruleenumerator_list )
                    {
                    // InternalAnsic.g:1012:5: (lv_enumerator_list_17_0= ruleenumerator_list )
                    // InternalAnsic.g:1013:6: lv_enumerator_list_17_0= ruleenumerator_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEnum_specifierAccess().getEnumerator_listEnumerator_listParserRuleCall_3_3_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_enumerator_list_17_0=ruleenumerator_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEnum_specifierRule());
                      						}
                      						set(
                      							current,
                      							"enumerator_list",
                      							lv_enumerator_list_17_0,
                      							"org.xtext.example.Ansic.enumerator_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_18=(Token)match(input,53,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getEnum_specifierAccess().getCommaKeyword_3_4());
                      			
                    }
                    otherlv_19=(Token)match(input,52,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_19, grammarAccess.getEnum_specifierAccess().getRightCurlyBracketKeyword_3_5());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalAnsic.g:1040:3: (otherlv_20= 'enum' ( (lv_identifier_21_0= RULE_ID ) ) )
                    {
                    // InternalAnsic.g:1040:3: (otherlv_20= 'enum' ( (lv_identifier_21_0= RULE_ID ) ) )
                    // InternalAnsic.g:1041:4: otherlv_20= 'enum' ( (lv_identifier_21_0= RULE_ID ) )
                    {
                    otherlv_20=(Token)match(input,50,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_20, grammarAccess.getEnum_specifierAccess().getEnumKeyword_4_0());
                      			
                    }
                    // InternalAnsic.g:1045:4: ( (lv_identifier_21_0= RULE_ID ) )
                    // InternalAnsic.g:1046:5: (lv_identifier_21_0= RULE_ID )
                    {
                    // InternalAnsic.g:1046:5: (lv_identifier_21_0= RULE_ID )
                    // InternalAnsic.g:1047:6: lv_identifier_21_0= RULE_ID
                    {
                    lv_identifier_21_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_identifier_21_0, grammarAccess.getEnum_specifierAccess().getIdentifierIDTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getEnum_specifierRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"identifier",
                      							lv_identifier_21_0,
                      							"org.eclipse.xtext.common.Terminals.ID");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleenum_specifier"


    // $ANTLR start "entryRuleenumerator_list"
    // InternalAnsic.g:1068:1: entryRuleenumerator_list returns [EObject current=null] : iv_ruleenumerator_list= ruleenumerator_list EOF ;
    public final EObject entryRuleenumerator_list() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleenumerator_list = null;


        try {
            // InternalAnsic.g:1068:56: (iv_ruleenumerator_list= ruleenumerator_list EOF )
            // InternalAnsic.g:1069:2: iv_ruleenumerator_list= ruleenumerator_list EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumerator_listRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleenumerator_list=ruleenumerator_list();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleenumerator_list; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleenumerator_list"


    // $ANTLR start "ruleenumerator_list"
    // InternalAnsic.g:1075:1: ruleenumerator_list returns [EObject current=null] : ( ( (lv_enumarator_0_0= ruleenumerator ) ) ( (lv_enumerator_list_linha_1_0= ruleenumerator_list_linha ) ) ) ;
    public final EObject ruleenumerator_list() throws RecognitionException {
        EObject current = null;

        EObject lv_enumarator_0_0 = null;

        EObject lv_enumerator_list_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:1081:2: ( ( ( (lv_enumarator_0_0= ruleenumerator ) ) ( (lv_enumerator_list_linha_1_0= ruleenumerator_list_linha ) ) ) )
            // InternalAnsic.g:1082:2: ( ( (lv_enumarator_0_0= ruleenumerator ) ) ( (lv_enumerator_list_linha_1_0= ruleenumerator_list_linha ) ) )
            {
            // InternalAnsic.g:1082:2: ( ( (lv_enumarator_0_0= ruleenumerator ) ) ( (lv_enumerator_list_linha_1_0= ruleenumerator_list_linha ) ) )
            // InternalAnsic.g:1083:3: ( (lv_enumarator_0_0= ruleenumerator ) ) ( (lv_enumerator_list_linha_1_0= ruleenumerator_list_linha ) )
            {
            // InternalAnsic.g:1083:3: ( (lv_enumarator_0_0= ruleenumerator ) )
            // InternalAnsic.g:1084:4: (lv_enumarator_0_0= ruleenumerator )
            {
            // InternalAnsic.g:1084:4: (lv_enumarator_0_0= ruleenumerator )
            // InternalAnsic.g:1085:5: lv_enumarator_0_0= ruleenumerator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEnumerator_listAccess().getEnumaratorEnumeratorParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_12);
            lv_enumarator_0_0=ruleenumerator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEnumerator_listRule());
              					}
              					set(
              						current,
              						"enumarator",
              						lv_enumarator_0_0,
              						"org.xtext.example.Ansic.enumerator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:1102:3: ( (lv_enumerator_list_linha_1_0= ruleenumerator_list_linha ) )
            // InternalAnsic.g:1103:4: (lv_enumerator_list_linha_1_0= ruleenumerator_list_linha )
            {
            // InternalAnsic.g:1103:4: (lv_enumerator_list_linha_1_0= ruleenumerator_list_linha )
            // InternalAnsic.g:1104:5: lv_enumerator_list_linha_1_0= ruleenumerator_list_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEnumerator_listAccess().getEnumerator_list_linhaEnumerator_list_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_enumerator_list_linha_1_0=ruleenumerator_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEnumerator_listRule());
              					}
              					set(
              						current,
              						"enumerator_list_linha",
              						lv_enumerator_list_linha_1_0,
              						"org.xtext.example.Ansic.enumerator_list_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleenumerator_list"


    // $ANTLR start "entryRuleenumerator_list_linha"
    // InternalAnsic.g:1125:1: entryRuleenumerator_list_linha returns [EObject current=null] : iv_ruleenumerator_list_linha= ruleenumerator_list_linha EOF ;
    public final EObject entryRuleenumerator_list_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleenumerator_list_linha = null;


        try {
            // InternalAnsic.g:1125:62: (iv_ruleenumerator_list_linha= ruleenumerator_list_linha EOF )
            // InternalAnsic.g:1126:2: iv_ruleenumerator_list_linha= ruleenumerator_list_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumerator_list_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleenumerator_list_linha=ruleenumerator_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleenumerator_list_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleenumerator_list_linha"


    // $ANTLR start "ruleenumerator_list_linha"
    // InternalAnsic.g:1132:1: ruleenumerator_list_linha returns [EObject current=null] : ( () (otherlv_1= ',' ( (lv_enumerator_2_0= ruleenumerator ) ) ( (lv_enumerator_list_linha_3_0= ruleenumerator_list_linha ) ) )? ) ;
    public final EObject ruleenumerator_list_linha() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_enumerator_2_0 = null;

        EObject lv_enumerator_list_linha_3_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:1138:2: ( ( () (otherlv_1= ',' ( (lv_enumerator_2_0= ruleenumerator ) ) ( (lv_enumerator_list_linha_3_0= ruleenumerator_list_linha ) ) )? ) )
            // InternalAnsic.g:1139:2: ( () (otherlv_1= ',' ( (lv_enumerator_2_0= ruleenumerator ) ) ( (lv_enumerator_list_linha_3_0= ruleenumerator_list_linha ) ) )? )
            {
            // InternalAnsic.g:1139:2: ( () (otherlv_1= ',' ( (lv_enumerator_2_0= ruleenumerator ) ) ( (lv_enumerator_list_linha_3_0= ruleenumerator_list_linha ) ) )? )
            // InternalAnsic.g:1140:3: () (otherlv_1= ',' ( (lv_enumerator_2_0= ruleenumerator ) ) ( (lv_enumerator_list_linha_3_0= ruleenumerator_list_linha ) ) )?
            {
            // InternalAnsic.g:1140:3: ()
            // InternalAnsic.g:1141:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getEnumerator_list_linhaAccess().getEnumeratorListLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:1150:3: (otherlv_1= ',' ( (lv_enumerator_2_0= ruleenumerator ) ) ( (lv_enumerator_list_linha_3_0= ruleenumerator_list_linha ) ) )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==53) ) {
                int LA8_1 = input.LA(2);

                if ( (LA8_1==RULE_ID) ) {
                    alt8=1;
                }
            }
            switch (alt8) {
                case 1 :
                    // InternalAnsic.g:1151:4: otherlv_1= ',' ( (lv_enumerator_2_0= ruleenumerator ) ) ( (lv_enumerator_list_linha_3_0= ruleenumerator_list_linha ) )
                    {
                    otherlv_1=(Token)match(input,53,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getEnumerator_list_linhaAccess().getCommaKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:1155:4: ( (lv_enumerator_2_0= ruleenumerator ) )
                    // InternalAnsic.g:1156:5: (lv_enumerator_2_0= ruleenumerator )
                    {
                    // InternalAnsic.g:1156:5: (lv_enumerator_2_0= ruleenumerator )
                    // InternalAnsic.g:1157:6: lv_enumerator_2_0= ruleenumerator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEnumerator_list_linhaAccess().getEnumeratorEnumeratorParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_enumerator_2_0=ruleenumerator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEnumerator_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"enumerator",
                      							lv_enumerator_2_0,
                      							"org.xtext.example.Ansic.enumerator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:1174:4: ( (lv_enumerator_list_linha_3_0= ruleenumerator_list_linha ) )
                    // InternalAnsic.g:1175:5: (lv_enumerator_list_linha_3_0= ruleenumerator_list_linha )
                    {
                    // InternalAnsic.g:1175:5: (lv_enumerator_list_linha_3_0= ruleenumerator_list_linha )
                    // InternalAnsic.g:1176:6: lv_enumerator_list_linha_3_0= ruleenumerator_list_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEnumerator_list_linhaAccess().getEnumerator_list_linhaEnumerator_list_linhaParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_enumerator_list_linha_3_0=ruleenumerator_list_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEnumerator_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"enumerator_list_linha",
                      							lv_enumerator_list_linha_3_0,
                      							"org.xtext.example.Ansic.enumerator_list_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleenumerator_list_linha"


    // $ANTLR start "entryRuleenumerator"
    // InternalAnsic.g:1198:1: entryRuleenumerator returns [EObject current=null] : iv_ruleenumerator= ruleenumerator EOF ;
    public final EObject entryRuleenumerator() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleenumerator = null;


        try {
            // InternalAnsic.g:1198:51: (iv_ruleenumerator= ruleenumerator EOF )
            // InternalAnsic.g:1199:2: iv_ruleenumerator= ruleenumerator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumeratorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleenumerator=ruleenumerator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleenumerator; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleenumerator"


    // $ANTLR start "ruleenumerator"
    // InternalAnsic.g:1205:1: ruleenumerator returns [EObject current=null] : ( ( ( (lv_enumeration_constant_0_0= ruleenumeration_constant ) ) otherlv_1= '=' ( (lv_conditional_expression_2_0= ruleconstant_expression ) ) ) | ( (lv_enumeration_constant_3_0= ruleenumeration_constant ) ) ) ;
    public final EObject ruleenumerator() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_enumeration_constant_0_0 = null;

        EObject lv_conditional_expression_2_0 = null;

        EObject lv_enumeration_constant_3_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:1211:2: ( ( ( ( (lv_enumeration_constant_0_0= ruleenumeration_constant ) ) otherlv_1= '=' ( (lv_conditional_expression_2_0= ruleconstant_expression ) ) ) | ( (lv_enumeration_constant_3_0= ruleenumeration_constant ) ) ) )
            // InternalAnsic.g:1212:2: ( ( ( (lv_enumeration_constant_0_0= ruleenumeration_constant ) ) otherlv_1= '=' ( (lv_conditional_expression_2_0= ruleconstant_expression ) ) ) | ( (lv_enumeration_constant_3_0= ruleenumeration_constant ) ) )
            {
            // InternalAnsic.g:1212:2: ( ( ( (lv_enumeration_constant_0_0= ruleenumeration_constant ) ) otherlv_1= '=' ( (lv_conditional_expression_2_0= ruleconstant_expression ) ) ) | ( (lv_enumeration_constant_3_0= ruleenumeration_constant ) ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==RULE_ID) ) {
                int LA9_1 = input.LA(2);

                if ( (LA9_1==EOF||(LA9_1>=52 && LA9_1<=53)) ) {
                    alt9=2;
                }
                else if ( (LA9_1==54) ) {
                    alt9=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 9, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalAnsic.g:1213:3: ( ( (lv_enumeration_constant_0_0= ruleenumeration_constant ) ) otherlv_1= '=' ( (lv_conditional_expression_2_0= ruleconstant_expression ) ) )
                    {
                    // InternalAnsic.g:1213:3: ( ( (lv_enumeration_constant_0_0= ruleenumeration_constant ) ) otherlv_1= '=' ( (lv_conditional_expression_2_0= ruleconstant_expression ) ) )
                    // InternalAnsic.g:1214:4: ( (lv_enumeration_constant_0_0= ruleenumeration_constant ) ) otherlv_1= '=' ( (lv_conditional_expression_2_0= ruleconstant_expression ) )
                    {
                    // InternalAnsic.g:1214:4: ( (lv_enumeration_constant_0_0= ruleenumeration_constant ) )
                    // InternalAnsic.g:1215:5: (lv_enumeration_constant_0_0= ruleenumeration_constant )
                    {
                    // InternalAnsic.g:1215:5: (lv_enumeration_constant_0_0= ruleenumeration_constant )
                    // InternalAnsic.g:1216:6: lv_enumeration_constant_0_0= ruleenumeration_constant
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEnumeratorAccess().getEnumeration_constantEnumeration_constantParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_13);
                    lv_enumeration_constant_0_0=ruleenumeration_constant();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEnumeratorRule());
                      						}
                      						set(
                      							current,
                      							"enumeration_constant",
                      							lv_enumeration_constant_0_0,
                      							"org.xtext.example.Ansic.enumeration_constant");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,54,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getEnumeratorAccess().getEqualsSignKeyword_0_1());
                      			
                    }
                    // InternalAnsic.g:1237:4: ( (lv_conditional_expression_2_0= ruleconstant_expression ) )
                    // InternalAnsic.g:1238:5: (lv_conditional_expression_2_0= ruleconstant_expression )
                    {
                    // InternalAnsic.g:1238:5: (lv_conditional_expression_2_0= ruleconstant_expression )
                    // InternalAnsic.g:1239:6: lv_conditional_expression_2_0= ruleconstant_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEnumeratorAccess().getConditional_expressionConstant_expressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_conditional_expression_2_0=ruleconstant_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEnumeratorRule());
                      						}
                      						set(
                      							current,
                      							"conditional_expression",
                      							lv_conditional_expression_2_0,
                      							"org.xtext.example.Ansic.constant_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:1258:3: ( (lv_enumeration_constant_3_0= ruleenumeration_constant ) )
                    {
                    // InternalAnsic.g:1258:3: ( (lv_enumeration_constant_3_0= ruleenumeration_constant ) )
                    // InternalAnsic.g:1259:4: (lv_enumeration_constant_3_0= ruleenumeration_constant )
                    {
                    // InternalAnsic.g:1259:4: (lv_enumeration_constant_3_0= ruleenumeration_constant )
                    // InternalAnsic.g:1260:5: lv_enumeration_constant_3_0= ruleenumeration_constant
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getEnumeratorAccess().getEnumeration_constantEnumeration_constantParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_enumeration_constant_3_0=ruleenumeration_constant();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getEnumeratorRule());
                      					}
                      					set(
                      						current,
                      						"enumeration_constant",
                      						lv_enumeration_constant_3_0,
                      						"org.xtext.example.Ansic.enumeration_constant");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleenumerator"


    // $ANTLR start "entryRuleatomic_type_specifier"
    // InternalAnsic.g:1281:1: entryRuleatomic_type_specifier returns [EObject current=null] : iv_ruleatomic_type_specifier= ruleatomic_type_specifier EOF ;
    public final EObject entryRuleatomic_type_specifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleatomic_type_specifier = null;


        try {
            // InternalAnsic.g:1281:62: (iv_ruleatomic_type_specifier= ruleatomic_type_specifier EOF )
            // InternalAnsic.g:1282:2: iv_ruleatomic_type_specifier= ruleatomic_type_specifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAtomic_type_specifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleatomic_type_specifier=ruleatomic_type_specifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleatomic_type_specifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleatomic_type_specifier"


    // $ANTLR start "ruleatomic_type_specifier"
    // InternalAnsic.g:1288:1: ruleatomic_type_specifier returns [EObject current=null] : (otherlv_0= '_Atomic' otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')' ) ;
    public final EObject ruleatomic_type_specifier() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_type_name_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:1294:2: ( (otherlv_0= '_Atomic' otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')' ) )
            // InternalAnsic.g:1295:2: (otherlv_0= '_Atomic' otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')' )
            {
            // InternalAnsic.g:1295:2: (otherlv_0= '_Atomic' otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')' )
            // InternalAnsic.g:1296:3: otherlv_0= '_Atomic' otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')'
            {
            otherlv_0=(Token)match(input,36,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAtomic_type_specifierAccess().get_AtomicKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,31,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAtomic_type_specifierAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalAnsic.g:1304:3: ( (lv_type_name_2_0= ruletype_name ) )
            // InternalAnsic.g:1305:4: (lv_type_name_2_0= ruletype_name )
            {
            // InternalAnsic.g:1305:4: (lv_type_name_2_0= ruletype_name )
            // InternalAnsic.g:1306:5: lv_type_name_2_0= ruletype_name
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAtomic_type_specifierAccess().getType_nameType_nameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_7);
            lv_type_name_2_0=ruletype_name();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAtomic_type_specifierRule());
              					}
              					set(
              						current,
              						"type_name",
              						lv_type_name_2_0,
              						"org.xtext.example.Ansic.type_name");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,32,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getAtomic_type_specifierAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleatomic_type_specifier"


    // $ANTLR start "entryRulestruct_or_union_specifier"
    // InternalAnsic.g:1331:1: entryRulestruct_or_union_specifier returns [EObject current=null] : iv_rulestruct_or_union_specifier= rulestruct_or_union_specifier EOF ;
    public final EObject entryRulestruct_or_union_specifier() throws RecognitionException {
        EObject current = null;

        EObject iv_rulestruct_or_union_specifier = null;


        try {
            // InternalAnsic.g:1331:66: (iv_rulestruct_or_union_specifier= rulestruct_or_union_specifier EOF )
            // InternalAnsic.g:1332:2: iv_rulestruct_or_union_specifier= rulestruct_or_union_specifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStruct_or_union_specifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulestruct_or_union_specifier=rulestruct_or_union_specifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulestruct_or_union_specifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulestruct_or_union_specifier"


    // $ANTLR start "rulestruct_or_union_specifier"
    // InternalAnsic.g:1338:1: rulestruct_or_union_specifier returns [EObject current=null] : ( ( ( (lv_struct_or_union_0_0= rulestruct_or_union ) ) otherlv_1= '{' ( (lv_struct_declaration_list_2_0= rulestruct_declaration_list ) ) otherlv_3= '}' ) | ( ( (lv_struct_or_union_4_0= rulestruct_or_union ) ) ( (lv_identifier_5_0= RULE_ID ) ) ( (lv_struct_or_union_specifier_complement_6_0= rulestruct_or_union_specifier_complement ) ) ) ) ;
    public final EObject rulestruct_or_union_specifier() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_identifier_5_0=null;
        AntlrDatatypeRuleToken lv_struct_or_union_0_0 = null;

        EObject lv_struct_declaration_list_2_0 = null;

        AntlrDatatypeRuleToken lv_struct_or_union_4_0 = null;

        EObject lv_struct_or_union_specifier_complement_6_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:1344:2: ( ( ( ( (lv_struct_or_union_0_0= rulestruct_or_union ) ) otherlv_1= '{' ( (lv_struct_declaration_list_2_0= rulestruct_declaration_list ) ) otherlv_3= '}' ) | ( ( (lv_struct_or_union_4_0= rulestruct_or_union ) ) ( (lv_identifier_5_0= RULE_ID ) ) ( (lv_struct_or_union_specifier_complement_6_0= rulestruct_or_union_specifier_complement ) ) ) ) )
            // InternalAnsic.g:1345:2: ( ( ( (lv_struct_or_union_0_0= rulestruct_or_union ) ) otherlv_1= '{' ( (lv_struct_declaration_list_2_0= rulestruct_declaration_list ) ) otherlv_3= '}' ) | ( ( (lv_struct_or_union_4_0= rulestruct_or_union ) ) ( (lv_identifier_5_0= RULE_ID ) ) ( (lv_struct_or_union_specifier_complement_6_0= rulestruct_or_union_specifier_complement ) ) ) )
            {
            // InternalAnsic.g:1345:2: ( ( ( (lv_struct_or_union_0_0= rulestruct_or_union ) ) otherlv_1= '{' ( (lv_struct_declaration_list_2_0= rulestruct_declaration_list ) ) otherlv_3= '}' ) | ( ( (lv_struct_or_union_4_0= rulestruct_or_union ) ) ( (lv_identifier_5_0= RULE_ID ) ) ( (lv_struct_or_union_specifier_complement_6_0= rulestruct_or_union_specifier_complement ) ) ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==55) ) {
                int LA10_1 = input.LA(2);

                if ( (LA10_1==RULE_ID) ) {
                    alt10=2;
                }
                else if ( (LA10_1==51) ) {
                    alt10=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA10_0==56) ) {
                int LA10_2 = input.LA(2);

                if ( (LA10_2==RULE_ID) ) {
                    alt10=2;
                }
                else if ( (LA10_2==51) ) {
                    alt10=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalAnsic.g:1346:3: ( ( (lv_struct_or_union_0_0= rulestruct_or_union ) ) otherlv_1= '{' ( (lv_struct_declaration_list_2_0= rulestruct_declaration_list ) ) otherlv_3= '}' )
                    {
                    // InternalAnsic.g:1346:3: ( ( (lv_struct_or_union_0_0= rulestruct_or_union ) ) otherlv_1= '{' ( (lv_struct_declaration_list_2_0= rulestruct_declaration_list ) ) otherlv_3= '}' )
                    // InternalAnsic.g:1347:4: ( (lv_struct_or_union_0_0= rulestruct_or_union ) ) otherlv_1= '{' ( (lv_struct_declaration_list_2_0= rulestruct_declaration_list ) ) otherlv_3= '}'
                    {
                    // InternalAnsic.g:1347:4: ( (lv_struct_or_union_0_0= rulestruct_or_union ) )
                    // InternalAnsic.g:1348:5: (lv_struct_or_union_0_0= rulestruct_or_union )
                    {
                    // InternalAnsic.g:1348:5: (lv_struct_or_union_0_0= rulestruct_or_union )
                    // InternalAnsic.g:1349:6: lv_struct_or_union_0_0= rulestruct_or_union
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStruct_or_union_specifierAccess().getStruct_or_unionStruct_or_unionParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    lv_struct_or_union_0_0=rulestruct_or_union();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStruct_or_union_specifierRule());
                      						}
                      						set(
                      							current,
                      							"struct_or_union",
                      							lv_struct_or_union_0_0,
                      							"org.xtext.example.Ansic.struct_or_union");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,51,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getStruct_or_union_specifierAccess().getLeftCurlyBracketKeyword_0_1());
                      			
                    }
                    // InternalAnsic.g:1370:4: ( (lv_struct_declaration_list_2_0= rulestruct_declaration_list ) )
                    // InternalAnsic.g:1371:5: (lv_struct_declaration_list_2_0= rulestruct_declaration_list )
                    {
                    // InternalAnsic.g:1371:5: (lv_struct_declaration_list_2_0= rulestruct_declaration_list )
                    // InternalAnsic.g:1372:6: lv_struct_declaration_list_2_0= rulestruct_declaration_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStruct_or_union_specifierAccess().getStruct_declaration_listStruct_declaration_listParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_struct_declaration_list_2_0=rulestruct_declaration_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStruct_or_union_specifierRule());
                      						}
                      						set(
                      							current,
                      							"struct_declaration_list",
                      							lv_struct_declaration_list_2_0,
                      							"org.xtext.example.Ansic.struct_declaration_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,52,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getStruct_or_union_specifierAccess().getRightCurlyBracketKeyword_0_3());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:1395:3: ( ( (lv_struct_or_union_4_0= rulestruct_or_union ) ) ( (lv_identifier_5_0= RULE_ID ) ) ( (lv_struct_or_union_specifier_complement_6_0= rulestruct_or_union_specifier_complement ) ) )
                    {
                    // InternalAnsic.g:1395:3: ( ( (lv_struct_or_union_4_0= rulestruct_or_union ) ) ( (lv_identifier_5_0= RULE_ID ) ) ( (lv_struct_or_union_specifier_complement_6_0= rulestruct_or_union_specifier_complement ) ) )
                    // InternalAnsic.g:1396:4: ( (lv_struct_or_union_4_0= rulestruct_or_union ) ) ( (lv_identifier_5_0= RULE_ID ) ) ( (lv_struct_or_union_specifier_complement_6_0= rulestruct_or_union_specifier_complement ) )
                    {
                    // InternalAnsic.g:1396:4: ( (lv_struct_or_union_4_0= rulestruct_or_union ) )
                    // InternalAnsic.g:1397:5: (lv_struct_or_union_4_0= rulestruct_or_union )
                    {
                    // InternalAnsic.g:1397:5: (lv_struct_or_union_4_0= rulestruct_or_union )
                    // InternalAnsic.g:1398:6: lv_struct_or_union_4_0= rulestruct_or_union
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStruct_or_union_specifierAccess().getStruct_or_unionStruct_or_unionParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_10);
                    lv_struct_or_union_4_0=rulestruct_or_union();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStruct_or_union_specifierRule());
                      						}
                      						set(
                      							current,
                      							"struct_or_union",
                      							lv_struct_or_union_4_0,
                      							"org.xtext.example.Ansic.struct_or_union");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:1415:4: ( (lv_identifier_5_0= RULE_ID ) )
                    // InternalAnsic.g:1416:5: (lv_identifier_5_0= RULE_ID )
                    {
                    // InternalAnsic.g:1416:5: (lv_identifier_5_0= RULE_ID )
                    // InternalAnsic.g:1417:6: lv_identifier_5_0= RULE_ID
                    {
                    lv_identifier_5_0=(Token)match(input,RULE_ID,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_identifier_5_0, grammarAccess.getStruct_or_union_specifierAccess().getIdentifierIDTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getStruct_or_union_specifierRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"identifier",
                      							lv_identifier_5_0,
                      							"org.eclipse.xtext.common.Terminals.ID");
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:1433:4: ( (lv_struct_or_union_specifier_complement_6_0= rulestruct_or_union_specifier_complement ) )
                    // InternalAnsic.g:1434:5: (lv_struct_or_union_specifier_complement_6_0= rulestruct_or_union_specifier_complement )
                    {
                    // InternalAnsic.g:1434:5: (lv_struct_or_union_specifier_complement_6_0= rulestruct_or_union_specifier_complement )
                    // InternalAnsic.g:1435:6: lv_struct_or_union_specifier_complement_6_0= rulestruct_or_union_specifier_complement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStruct_or_union_specifierAccess().getStruct_or_union_specifier_complementStruct_or_union_specifier_complementParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_struct_or_union_specifier_complement_6_0=rulestruct_or_union_specifier_complement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStruct_or_union_specifierRule());
                      						}
                      						set(
                      							current,
                      							"struct_or_union_specifier_complement",
                      							lv_struct_or_union_specifier_complement_6_0,
                      							"org.xtext.example.Ansic.struct_or_union_specifier_complement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulestruct_or_union_specifier"


    // $ANTLR start "entryRulestruct_or_union"
    // InternalAnsic.g:1457:1: entryRulestruct_or_union returns [String current=null] : iv_rulestruct_or_union= rulestruct_or_union EOF ;
    public final String entryRulestruct_or_union() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulestruct_or_union = null;


        try {
            // InternalAnsic.g:1457:55: (iv_rulestruct_or_union= rulestruct_or_union EOF )
            // InternalAnsic.g:1458:2: iv_rulestruct_or_union= rulestruct_or_union EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStruct_or_unionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulestruct_or_union=rulestruct_or_union();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulestruct_or_union.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulestruct_or_union"


    // $ANTLR start "rulestruct_or_union"
    // InternalAnsic.g:1464:1: rulestruct_or_union returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'struct' | kw= 'union' ) ;
    public final AntlrDatatypeRuleToken rulestruct_or_union() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalAnsic.g:1470:2: ( (kw= 'struct' | kw= 'union' ) )
            // InternalAnsic.g:1471:2: (kw= 'struct' | kw= 'union' )
            {
            // InternalAnsic.g:1471:2: (kw= 'struct' | kw= 'union' )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==55) ) {
                alt11=1;
            }
            else if ( (LA11_0==56) ) {
                alt11=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalAnsic.g:1472:3: kw= 'struct'
                    {
                    kw=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getStruct_or_unionAccess().getStructKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsic.g:1478:3: kw= 'union'
                    {
                    kw=(Token)match(input,56,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getStruct_or_unionAccess().getUnionKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulestruct_or_union"


    // $ANTLR start "entryRulestruct_or_union_specifier_complement"
    // InternalAnsic.g:1487:1: entryRulestruct_or_union_specifier_complement returns [EObject current=null] : iv_rulestruct_or_union_specifier_complement= rulestruct_or_union_specifier_complement EOF ;
    public final EObject entryRulestruct_or_union_specifier_complement() throws RecognitionException {
        EObject current = null;

        EObject iv_rulestruct_or_union_specifier_complement = null;


        try {
            // InternalAnsic.g:1487:77: (iv_rulestruct_or_union_specifier_complement= rulestruct_or_union_specifier_complement EOF )
            // InternalAnsic.g:1488:2: iv_rulestruct_or_union_specifier_complement= rulestruct_or_union_specifier_complement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStruct_or_union_specifier_complementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulestruct_or_union_specifier_complement=rulestruct_or_union_specifier_complement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulestruct_or_union_specifier_complement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulestruct_or_union_specifier_complement"


    // $ANTLR start "rulestruct_or_union_specifier_complement"
    // InternalAnsic.g:1494:1: rulestruct_or_union_specifier_complement returns [EObject current=null] : ( () (otherlv_1= '{' ( (lv_struct_declaration_list_2_0= rulestruct_declaration_list ) ) otherlv_3= '}' )? ) ;
    public final EObject rulestruct_or_union_specifier_complement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_struct_declaration_list_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:1500:2: ( ( () (otherlv_1= '{' ( (lv_struct_declaration_list_2_0= rulestruct_declaration_list ) ) otherlv_3= '}' )? ) )
            // InternalAnsic.g:1501:2: ( () (otherlv_1= '{' ( (lv_struct_declaration_list_2_0= rulestruct_declaration_list ) ) otherlv_3= '}' )? )
            {
            // InternalAnsic.g:1501:2: ( () (otherlv_1= '{' ( (lv_struct_declaration_list_2_0= rulestruct_declaration_list ) ) otherlv_3= '}' )? )
            // InternalAnsic.g:1502:3: () (otherlv_1= '{' ( (lv_struct_declaration_list_2_0= rulestruct_declaration_list ) ) otherlv_3= '}' )?
            {
            // InternalAnsic.g:1502:3: ()
            // InternalAnsic.g:1503:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getStruct_or_union_specifier_complementAccess().getStructOrUnionSpecifierComplementActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:1512:3: (otherlv_1= '{' ( (lv_struct_declaration_list_2_0= rulestruct_declaration_list ) ) otherlv_3= '}' )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==51) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // InternalAnsic.g:1513:4: otherlv_1= '{' ( (lv_struct_declaration_list_2_0= rulestruct_declaration_list ) ) otherlv_3= '}'
                    {
                    otherlv_1=(Token)match(input,51,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getStruct_or_union_specifier_complementAccess().getLeftCurlyBracketKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:1517:4: ( (lv_struct_declaration_list_2_0= rulestruct_declaration_list ) )
                    // InternalAnsic.g:1518:5: (lv_struct_declaration_list_2_0= rulestruct_declaration_list )
                    {
                    // InternalAnsic.g:1518:5: (lv_struct_declaration_list_2_0= rulestruct_declaration_list )
                    // InternalAnsic.g:1519:6: lv_struct_declaration_list_2_0= rulestruct_declaration_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStruct_or_union_specifier_complementAccess().getStruct_declaration_listStruct_declaration_listParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_struct_declaration_list_2_0=rulestruct_declaration_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStruct_or_union_specifier_complementRule());
                      						}
                      						set(
                      							current,
                      							"struct_declaration_list",
                      							lv_struct_declaration_list_2_0,
                      							"org.xtext.example.Ansic.struct_declaration_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,52,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getStruct_or_union_specifier_complementAccess().getRightCurlyBracketKeyword_1_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulestruct_or_union_specifier_complement"


    // $ANTLR start "entryRulestruct_declaration_list"
    // InternalAnsic.g:1545:1: entryRulestruct_declaration_list returns [EObject current=null] : iv_rulestruct_declaration_list= rulestruct_declaration_list EOF ;
    public final EObject entryRulestruct_declaration_list() throws RecognitionException {
        EObject current = null;

        EObject iv_rulestruct_declaration_list = null;


        try {
            // InternalAnsic.g:1545:64: (iv_rulestruct_declaration_list= rulestruct_declaration_list EOF )
            // InternalAnsic.g:1546:2: iv_rulestruct_declaration_list= rulestruct_declaration_list EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStruct_declaration_listRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulestruct_declaration_list=rulestruct_declaration_list();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulestruct_declaration_list; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulestruct_declaration_list"


    // $ANTLR start "rulestruct_declaration_list"
    // InternalAnsic.g:1552:1: rulestruct_declaration_list returns [EObject current=null] : ( ( (lv_struct_declaration_0_0= rulestruct_declaration ) ) ( (lv_struct_declaration_list_linha_1_0= rulestruct_declaration_list_linha ) ) ) ;
    public final EObject rulestruct_declaration_list() throws RecognitionException {
        EObject current = null;

        EObject lv_struct_declaration_0_0 = null;

        EObject lv_struct_declaration_list_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:1558:2: ( ( ( (lv_struct_declaration_0_0= rulestruct_declaration ) ) ( (lv_struct_declaration_list_linha_1_0= rulestruct_declaration_list_linha ) ) ) )
            // InternalAnsic.g:1559:2: ( ( (lv_struct_declaration_0_0= rulestruct_declaration ) ) ( (lv_struct_declaration_list_linha_1_0= rulestruct_declaration_list_linha ) ) )
            {
            // InternalAnsic.g:1559:2: ( ( (lv_struct_declaration_0_0= rulestruct_declaration ) ) ( (lv_struct_declaration_list_linha_1_0= rulestruct_declaration_list_linha ) ) )
            // InternalAnsic.g:1560:3: ( (lv_struct_declaration_0_0= rulestruct_declaration ) ) ( (lv_struct_declaration_list_linha_1_0= rulestruct_declaration_list_linha ) )
            {
            // InternalAnsic.g:1560:3: ( (lv_struct_declaration_0_0= rulestruct_declaration ) )
            // InternalAnsic.g:1561:4: (lv_struct_declaration_0_0= rulestruct_declaration )
            {
            // InternalAnsic.g:1561:4: (lv_struct_declaration_0_0= rulestruct_declaration )
            // InternalAnsic.g:1562:5: lv_struct_declaration_0_0= rulestruct_declaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStruct_declaration_listAccess().getStruct_declarationStruct_declarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_struct_declaration_0_0=rulestruct_declaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStruct_declaration_listRule());
              					}
              					set(
              						current,
              						"struct_declaration",
              						lv_struct_declaration_0_0,
              						"org.xtext.example.Ansic.struct_declaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:1579:3: ( (lv_struct_declaration_list_linha_1_0= rulestruct_declaration_list_linha ) )
            // InternalAnsic.g:1580:4: (lv_struct_declaration_list_linha_1_0= rulestruct_declaration_list_linha )
            {
            // InternalAnsic.g:1580:4: (lv_struct_declaration_list_linha_1_0= rulestruct_declaration_list_linha )
            // InternalAnsic.g:1581:5: lv_struct_declaration_list_linha_1_0= rulestruct_declaration_list_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStruct_declaration_listAccess().getStruct_declaration_list_linhaStruct_declaration_list_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_struct_declaration_list_linha_1_0=rulestruct_declaration_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStruct_declaration_listRule());
              					}
              					set(
              						current,
              						"struct_declaration_list_linha",
              						lv_struct_declaration_list_linha_1_0,
              						"org.xtext.example.Ansic.struct_declaration_list_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulestruct_declaration_list"


    // $ANTLR start "entryRulestruct_declaration_list_linha"
    // InternalAnsic.g:1602:1: entryRulestruct_declaration_list_linha returns [EObject current=null] : iv_rulestruct_declaration_list_linha= rulestruct_declaration_list_linha EOF ;
    public final EObject entryRulestruct_declaration_list_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_rulestruct_declaration_list_linha = null;


        try {
            // InternalAnsic.g:1602:70: (iv_rulestruct_declaration_list_linha= rulestruct_declaration_list_linha EOF )
            // InternalAnsic.g:1603:2: iv_rulestruct_declaration_list_linha= rulestruct_declaration_list_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStruct_declaration_list_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulestruct_declaration_list_linha=rulestruct_declaration_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulestruct_declaration_list_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulestruct_declaration_list_linha"


    // $ANTLR start "rulestruct_declaration_list_linha"
    // InternalAnsic.g:1609:1: rulestruct_declaration_list_linha returns [EObject current=null] : ( () ( ( (lv_struct_declaration_1_0= rulestruct_declaration ) ) ( (lv_struct_declaration_list_linha_2_0= rulestruct_declaration_list_linha ) ) )? ) ;
    public final EObject rulestruct_declaration_list_linha() throws RecognitionException {
        EObject current = null;

        EObject lv_struct_declaration_1_0 = null;

        EObject lv_struct_declaration_list_linha_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:1615:2: ( ( () ( ( (lv_struct_declaration_1_0= rulestruct_declaration ) ) ( (lv_struct_declaration_list_linha_2_0= rulestruct_declaration_list_linha ) ) )? ) )
            // InternalAnsic.g:1616:2: ( () ( ( (lv_struct_declaration_1_0= rulestruct_declaration ) ) ( (lv_struct_declaration_list_linha_2_0= rulestruct_declaration_list_linha ) ) )? )
            {
            // InternalAnsic.g:1616:2: ( () ( ( (lv_struct_declaration_1_0= rulestruct_declaration ) ) ( (lv_struct_declaration_list_linha_2_0= rulestruct_declaration_list_linha ) ) )? )
            // InternalAnsic.g:1617:3: () ( ( (lv_struct_declaration_1_0= rulestruct_declaration ) ) ( (lv_struct_declaration_list_linha_2_0= rulestruct_declaration_list_linha ) ) )?
            {
            // InternalAnsic.g:1617:3: ()
            // InternalAnsic.g:1618:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getStruct_declaration_list_linhaAccess().getStructDeclarationListLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:1627:3: ( ( (lv_struct_declaration_1_0= rulestruct_declaration ) ) ( (lv_struct_declaration_list_linha_2_0= rulestruct_declaration_list_linha ) ) )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( ((LA13_0>=33 && LA13_0<=50)||(LA13_0>=55 && LA13_0<=56)||LA13_0==71) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // InternalAnsic.g:1628:4: ( (lv_struct_declaration_1_0= rulestruct_declaration ) ) ( (lv_struct_declaration_list_linha_2_0= rulestruct_declaration_list_linha ) )
                    {
                    // InternalAnsic.g:1628:4: ( (lv_struct_declaration_1_0= rulestruct_declaration ) )
                    // InternalAnsic.g:1629:5: (lv_struct_declaration_1_0= rulestruct_declaration )
                    {
                    // InternalAnsic.g:1629:5: (lv_struct_declaration_1_0= rulestruct_declaration )
                    // InternalAnsic.g:1630:6: lv_struct_declaration_1_0= rulestruct_declaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStruct_declaration_list_linhaAccess().getStruct_declarationStruct_declarationParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_3);
                    lv_struct_declaration_1_0=rulestruct_declaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStruct_declaration_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"struct_declaration",
                      							lv_struct_declaration_1_0,
                      							"org.xtext.example.Ansic.struct_declaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:1647:4: ( (lv_struct_declaration_list_linha_2_0= rulestruct_declaration_list_linha ) )
                    // InternalAnsic.g:1648:5: (lv_struct_declaration_list_linha_2_0= rulestruct_declaration_list_linha )
                    {
                    // InternalAnsic.g:1648:5: (lv_struct_declaration_list_linha_2_0= rulestruct_declaration_list_linha )
                    // InternalAnsic.g:1649:6: lv_struct_declaration_list_linha_2_0= rulestruct_declaration_list_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStruct_declaration_list_linhaAccess().getStruct_declaration_list_linhaStruct_declaration_list_linhaParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_struct_declaration_list_linha_2_0=rulestruct_declaration_list_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStruct_declaration_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"struct_declaration_list_linha",
                      							lv_struct_declaration_list_linha_2_0,
                      							"org.xtext.example.Ansic.struct_declaration_list_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulestruct_declaration_list_linha"


    // $ANTLR start "entryRulestruct_declaration"
    // InternalAnsic.g:1671:1: entryRulestruct_declaration returns [EObject current=null] : iv_rulestruct_declaration= rulestruct_declaration EOF ;
    public final EObject entryRulestruct_declaration() throws RecognitionException {
        EObject current = null;

        EObject iv_rulestruct_declaration = null;


        try {
            // InternalAnsic.g:1671:59: (iv_rulestruct_declaration= rulestruct_declaration EOF )
            // InternalAnsic.g:1672:2: iv_rulestruct_declaration= rulestruct_declaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStruct_declarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulestruct_declaration=rulestruct_declaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulestruct_declaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulestruct_declaration"


    // $ANTLR start "rulestruct_declaration"
    // InternalAnsic.g:1678:1: rulestruct_declaration returns [EObject current=null] : ( ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) otherlv_1= ';' ) | ( ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) ) ( (lv_struct_declarator_list_3_0= rulestruct_declarator_list ) ) otherlv_4= ';' ) | ( (lv_static_assert_declaration_5_0= rulestatic_assert_declaration ) ) ) ;
    public final EObject rulestruct_declaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        EObject lv_specifier_qualifier_list_0_0 = null;

        EObject lv_specifier_qualifier_list_2_0 = null;

        EObject lv_struct_declarator_list_3_0 = null;

        EObject lv_static_assert_declaration_5_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:1684:2: ( ( ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) otherlv_1= ';' ) | ( ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) ) ( (lv_struct_declarator_list_3_0= rulestruct_declarator_list ) ) otherlv_4= ';' ) | ( (lv_static_assert_declaration_5_0= rulestatic_assert_declaration ) ) ) )
            // InternalAnsic.g:1685:2: ( ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) otherlv_1= ';' ) | ( ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) ) ( (lv_struct_declarator_list_3_0= rulestruct_declarator_list ) ) otherlv_4= ';' ) | ( (lv_static_assert_declaration_5_0= rulestatic_assert_declaration ) ) )
            {
            // InternalAnsic.g:1685:2: ( ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) otherlv_1= ';' ) | ( ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) ) ( (lv_struct_declarator_list_3_0= rulestruct_declarator_list ) ) otherlv_4= ';' ) | ( (lv_static_assert_declaration_5_0= rulestatic_assert_declaration ) ) )
            int alt14=3;
            alt14 = dfa14.predict(input);
            switch (alt14) {
                case 1 :
                    // InternalAnsic.g:1686:3: ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) otherlv_1= ';' )
                    {
                    // InternalAnsic.g:1686:3: ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) otherlv_1= ';' )
                    // InternalAnsic.g:1687:4: ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) otherlv_1= ';'
                    {
                    // InternalAnsic.g:1687:4: ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) )
                    // InternalAnsic.g:1688:5: (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list )
                    {
                    // InternalAnsic.g:1688:5: (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list )
                    // InternalAnsic.g:1689:6: lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStruct_declarationAccess().getSpecifier_qualifier_listSpecifier_qualifier_listParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_14);
                    lv_specifier_qualifier_list_0_0=rulespecifier_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStruct_declarationRule());
                      						}
                      						set(
                      							current,
                      							"specifier_qualifier_list",
                      							lv_specifier_qualifier_list_0_0,
                      							"org.xtext.example.Ansic.specifier_qualifier_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getStruct_declarationAccess().getSemicolonKeyword_0_1());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:1712:3: ( ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) ) ( (lv_struct_declarator_list_3_0= rulestruct_declarator_list ) ) otherlv_4= ';' )
                    {
                    // InternalAnsic.g:1712:3: ( ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) ) ( (lv_struct_declarator_list_3_0= rulestruct_declarator_list ) ) otherlv_4= ';' )
                    // InternalAnsic.g:1713:4: ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) ) ( (lv_struct_declarator_list_3_0= rulestruct_declarator_list ) ) otherlv_4= ';'
                    {
                    // InternalAnsic.g:1713:4: ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) )
                    // InternalAnsic.g:1714:5: (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list )
                    {
                    // InternalAnsic.g:1714:5: (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list )
                    // InternalAnsic.g:1715:6: lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStruct_declarationAccess().getSpecifier_qualifier_listSpecifier_qualifier_listParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_15);
                    lv_specifier_qualifier_list_2_0=rulespecifier_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStruct_declarationRule());
                      						}
                      						set(
                      							current,
                      							"specifier_qualifier_list",
                      							lv_specifier_qualifier_list_2_0,
                      							"org.xtext.example.Ansic.specifier_qualifier_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:1732:4: ( (lv_struct_declarator_list_3_0= rulestruct_declarator_list ) )
                    // InternalAnsic.g:1733:5: (lv_struct_declarator_list_3_0= rulestruct_declarator_list )
                    {
                    // InternalAnsic.g:1733:5: (lv_struct_declarator_list_3_0= rulestruct_declarator_list )
                    // InternalAnsic.g:1734:6: lv_struct_declarator_list_3_0= rulestruct_declarator_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStruct_declarationAccess().getStruct_declarator_listStruct_declarator_listParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_14);
                    lv_struct_declarator_list_3_0=rulestruct_declarator_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStruct_declarationRule());
                      						}
                      						set(
                      							current,
                      							"struct_declarator_list",
                      							lv_struct_declarator_list_3_0,
                      							"org.xtext.example.Ansic.struct_declarator_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getStruct_declarationAccess().getSemicolonKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:1757:3: ( (lv_static_assert_declaration_5_0= rulestatic_assert_declaration ) )
                    {
                    // InternalAnsic.g:1757:3: ( (lv_static_assert_declaration_5_0= rulestatic_assert_declaration ) )
                    // InternalAnsic.g:1758:4: (lv_static_assert_declaration_5_0= rulestatic_assert_declaration )
                    {
                    // InternalAnsic.g:1758:4: (lv_static_assert_declaration_5_0= rulestatic_assert_declaration )
                    // InternalAnsic.g:1759:5: lv_static_assert_declaration_5_0= rulestatic_assert_declaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStruct_declarationAccess().getStatic_assert_declarationStatic_assert_declarationParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_static_assert_declaration_5_0=rulestatic_assert_declaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStruct_declarationRule());
                      					}
                      					set(
                      						current,
                      						"static_assert_declaration",
                      						lv_static_assert_declaration_5_0,
                      						"org.xtext.example.Ansic.static_assert_declaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulestruct_declaration"


    // $ANTLR start "entryRulestruct_declarator_list"
    // InternalAnsic.g:1780:1: entryRulestruct_declarator_list returns [EObject current=null] : iv_rulestruct_declarator_list= rulestruct_declarator_list EOF ;
    public final EObject entryRulestruct_declarator_list() throws RecognitionException {
        EObject current = null;

        EObject iv_rulestruct_declarator_list = null;


        try {
            // InternalAnsic.g:1780:63: (iv_rulestruct_declarator_list= rulestruct_declarator_list EOF )
            // InternalAnsic.g:1781:2: iv_rulestruct_declarator_list= rulestruct_declarator_list EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStruct_declarator_listRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulestruct_declarator_list=rulestruct_declarator_list();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulestruct_declarator_list; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulestruct_declarator_list"


    // $ANTLR start "rulestruct_declarator_list"
    // InternalAnsic.g:1787:1: rulestruct_declarator_list returns [EObject current=null] : ( ( (lv_struct_declarator_0_0= rulestruct_declarator ) ) ( (lv_struct_declarator_list_linha_1_0= rulestruct_declarator_list_linha ) ) ) ;
    public final EObject rulestruct_declarator_list() throws RecognitionException {
        EObject current = null;

        EObject lv_struct_declarator_0_0 = null;

        EObject lv_struct_declarator_list_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:1793:2: ( ( ( (lv_struct_declarator_0_0= rulestruct_declarator ) ) ( (lv_struct_declarator_list_linha_1_0= rulestruct_declarator_list_linha ) ) ) )
            // InternalAnsic.g:1794:2: ( ( (lv_struct_declarator_0_0= rulestruct_declarator ) ) ( (lv_struct_declarator_list_linha_1_0= rulestruct_declarator_list_linha ) ) )
            {
            // InternalAnsic.g:1794:2: ( ( (lv_struct_declarator_0_0= rulestruct_declarator ) ) ( (lv_struct_declarator_list_linha_1_0= rulestruct_declarator_list_linha ) ) )
            // InternalAnsic.g:1795:3: ( (lv_struct_declarator_0_0= rulestruct_declarator ) ) ( (lv_struct_declarator_list_linha_1_0= rulestruct_declarator_list_linha ) )
            {
            // InternalAnsic.g:1795:3: ( (lv_struct_declarator_0_0= rulestruct_declarator ) )
            // InternalAnsic.g:1796:4: (lv_struct_declarator_0_0= rulestruct_declarator )
            {
            // InternalAnsic.g:1796:4: (lv_struct_declarator_0_0= rulestruct_declarator )
            // InternalAnsic.g:1797:5: lv_struct_declarator_0_0= rulestruct_declarator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStruct_declarator_listAccess().getStruct_declaratorStruct_declaratorParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_12);
            lv_struct_declarator_0_0=rulestruct_declarator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStruct_declarator_listRule());
              					}
              					set(
              						current,
              						"struct_declarator",
              						lv_struct_declarator_0_0,
              						"org.xtext.example.Ansic.struct_declarator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:1814:3: ( (lv_struct_declarator_list_linha_1_0= rulestruct_declarator_list_linha ) )
            // InternalAnsic.g:1815:4: (lv_struct_declarator_list_linha_1_0= rulestruct_declarator_list_linha )
            {
            // InternalAnsic.g:1815:4: (lv_struct_declarator_list_linha_1_0= rulestruct_declarator_list_linha )
            // InternalAnsic.g:1816:5: lv_struct_declarator_list_linha_1_0= rulestruct_declarator_list_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStruct_declarator_listAccess().getStruct_declarator_list_linhaStruct_declarator_list_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_struct_declarator_list_linha_1_0=rulestruct_declarator_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStruct_declarator_listRule());
              					}
              					set(
              						current,
              						"struct_declarator_list_linha",
              						lv_struct_declarator_list_linha_1_0,
              						"org.xtext.example.Ansic.struct_declarator_list_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulestruct_declarator_list"


    // $ANTLR start "entryRulestruct_declarator_list_linha"
    // InternalAnsic.g:1837:1: entryRulestruct_declarator_list_linha returns [EObject current=null] : iv_rulestruct_declarator_list_linha= rulestruct_declarator_list_linha EOF ;
    public final EObject entryRulestruct_declarator_list_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_rulestruct_declarator_list_linha = null;


        try {
            // InternalAnsic.g:1837:69: (iv_rulestruct_declarator_list_linha= rulestruct_declarator_list_linha EOF )
            // InternalAnsic.g:1838:2: iv_rulestruct_declarator_list_linha= rulestruct_declarator_list_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStruct_declarator_list_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulestruct_declarator_list_linha=rulestruct_declarator_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulestruct_declarator_list_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulestruct_declarator_list_linha"


    // $ANTLR start "rulestruct_declarator_list_linha"
    // InternalAnsic.g:1844:1: rulestruct_declarator_list_linha returns [EObject current=null] : ( () (otherlv_1= ',' ( (lv_struct_declarator_2_0= rulestruct_declarator ) ) ( (lv_struct_declarator_list_linha_3_0= rulestruct_declarator_list_linha ) ) )? ) ;
    public final EObject rulestruct_declarator_list_linha() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_struct_declarator_2_0 = null;

        EObject lv_struct_declarator_list_linha_3_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:1850:2: ( ( () (otherlv_1= ',' ( (lv_struct_declarator_2_0= rulestruct_declarator ) ) ( (lv_struct_declarator_list_linha_3_0= rulestruct_declarator_list_linha ) ) )? ) )
            // InternalAnsic.g:1851:2: ( () (otherlv_1= ',' ( (lv_struct_declarator_2_0= rulestruct_declarator ) ) ( (lv_struct_declarator_list_linha_3_0= rulestruct_declarator_list_linha ) ) )? )
            {
            // InternalAnsic.g:1851:2: ( () (otherlv_1= ',' ( (lv_struct_declarator_2_0= rulestruct_declarator ) ) ( (lv_struct_declarator_list_linha_3_0= rulestruct_declarator_list_linha ) ) )? )
            // InternalAnsic.g:1852:3: () (otherlv_1= ',' ( (lv_struct_declarator_2_0= rulestruct_declarator ) ) ( (lv_struct_declarator_list_linha_3_0= rulestruct_declarator_list_linha ) ) )?
            {
            // InternalAnsic.g:1852:3: ()
            // InternalAnsic.g:1853:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getStruct_declarator_list_linhaAccess().getStructDeclaratorListLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:1862:3: (otherlv_1= ',' ( (lv_struct_declarator_2_0= rulestruct_declarator ) ) ( (lv_struct_declarator_list_linha_3_0= rulestruct_declarator_list_linha ) ) )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==53) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // InternalAnsic.g:1863:4: otherlv_1= ',' ( (lv_struct_declarator_2_0= rulestruct_declarator ) ) ( (lv_struct_declarator_list_linha_3_0= rulestruct_declarator_list_linha ) )
                    {
                    otherlv_1=(Token)match(input,53,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getStruct_declarator_list_linhaAccess().getCommaKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:1867:4: ( (lv_struct_declarator_2_0= rulestruct_declarator ) )
                    // InternalAnsic.g:1868:5: (lv_struct_declarator_2_0= rulestruct_declarator )
                    {
                    // InternalAnsic.g:1868:5: (lv_struct_declarator_2_0= rulestruct_declarator )
                    // InternalAnsic.g:1869:6: lv_struct_declarator_2_0= rulestruct_declarator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStruct_declarator_list_linhaAccess().getStruct_declaratorStruct_declaratorParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_struct_declarator_2_0=rulestruct_declarator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStruct_declarator_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"struct_declarator",
                      							lv_struct_declarator_2_0,
                      							"org.xtext.example.Ansic.struct_declarator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:1886:4: ( (lv_struct_declarator_list_linha_3_0= rulestruct_declarator_list_linha ) )
                    // InternalAnsic.g:1887:5: (lv_struct_declarator_list_linha_3_0= rulestruct_declarator_list_linha )
                    {
                    // InternalAnsic.g:1887:5: (lv_struct_declarator_list_linha_3_0= rulestruct_declarator_list_linha )
                    // InternalAnsic.g:1888:6: lv_struct_declarator_list_linha_3_0= rulestruct_declarator_list_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStruct_declarator_list_linhaAccess().getStruct_declarator_list_linhaStruct_declarator_list_linhaParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_struct_declarator_list_linha_3_0=rulestruct_declarator_list_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStruct_declarator_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"struct_declarator_list_linha",
                      							lv_struct_declarator_list_linha_3_0,
                      							"org.xtext.example.Ansic.struct_declarator_list_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulestruct_declarator_list_linha"


    // $ANTLR start "entryRulestruct_declarator"
    // InternalAnsic.g:1910:1: entryRulestruct_declarator returns [EObject current=null] : iv_rulestruct_declarator= rulestruct_declarator EOF ;
    public final EObject entryRulestruct_declarator() throws RecognitionException {
        EObject current = null;

        EObject iv_rulestruct_declarator = null;


        try {
            // InternalAnsic.g:1910:58: (iv_rulestruct_declarator= rulestruct_declarator EOF )
            // InternalAnsic.g:1911:2: iv_rulestruct_declarator= rulestruct_declarator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStruct_declaratorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulestruct_declarator=rulestruct_declarator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulestruct_declarator; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulestruct_declarator"


    // $ANTLR start "rulestruct_declarator"
    // InternalAnsic.g:1917:1: rulestruct_declarator returns [EObject current=null] : ( (otherlv_0= ':' ( (lv_constant_expression_1_0= ruleconstant_expression ) ) ) | ( ( (lv_declarator_2_0= ruledeclarator ) ) otherlv_3= ':' ( (lv_constant_expression_4_0= ruleconstant_expression ) ) ) | ( (lv_declarator_5_0= ruledeclarator ) ) ) ;
    public final EObject rulestruct_declarator() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        EObject lv_constant_expression_1_0 = null;

        EObject lv_declarator_2_0 = null;

        EObject lv_constant_expression_4_0 = null;

        EObject lv_declarator_5_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:1923:2: ( ( (otherlv_0= ':' ( (lv_constant_expression_1_0= ruleconstant_expression ) ) ) | ( ( (lv_declarator_2_0= ruledeclarator ) ) otherlv_3= ':' ( (lv_constant_expression_4_0= ruleconstant_expression ) ) ) | ( (lv_declarator_5_0= ruledeclarator ) ) ) )
            // InternalAnsic.g:1924:2: ( (otherlv_0= ':' ( (lv_constant_expression_1_0= ruleconstant_expression ) ) ) | ( ( (lv_declarator_2_0= ruledeclarator ) ) otherlv_3= ':' ( (lv_constant_expression_4_0= ruleconstant_expression ) ) ) | ( (lv_declarator_5_0= ruledeclarator ) ) )
            {
            // InternalAnsic.g:1924:2: ( (otherlv_0= ':' ( (lv_constant_expression_1_0= ruleconstant_expression ) ) ) | ( ( (lv_declarator_2_0= ruledeclarator ) ) otherlv_3= ':' ( (lv_constant_expression_4_0= ruleconstant_expression ) ) ) | ( (lv_declarator_5_0= ruledeclarator ) ) )
            int alt16=3;
            switch ( input.LA(1) ) {
            case 58:
                {
                alt16=1;
                }
                break;
            case 64:
                {
                int LA16_2 = input.LA(2);

                if ( (synpred45_InternalAnsic()) ) {
                    alt16=2;
                }
                else if ( (true) ) {
                    alt16=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 16, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
                {
                int LA16_3 = input.LA(2);

                if ( (synpred45_InternalAnsic()) ) {
                    alt16=2;
                }
                else if ( (true) ) {
                    alt16=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 16, 3, input);

                    throw nvae;
                }
                }
                break;
            case 31:
                {
                int LA16_4 = input.LA(2);

                if ( (synpred45_InternalAnsic()) ) {
                    alt16=2;
                }
                else if ( (true) ) {
                    alt16=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 16, 4, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }

            switch (alt16) {
                case 1 :
                    // InternalAnsic.g:1925:3: (otherlv_0= ':' ( (lv_constant_expression_1_0= ruleconstant_expression ) ) )
                    {
                    // InternalAnsic.g:1925:3: (otherlv_0= ':' ( (lv_constant_expression_1_0= ruleconstant_expression ) ) )
                    // InternalAnsic.g:1926:4: otherlv_0= ':' ( (lv_constant_expression_1_0= ruleconstant_expression ) )
                    {
                    otherlv_0=(Token)match(input,58,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getStruct_declaratorAccess().getColonKeyword_0_0());
                      			
                    }
                    // InternalAnsic.g:1930:4: ( (lv_constant_expression_1_0= ruleconstant_expression ) )
                    // InternalAnsic.g:1931:5: (lv_constant_expression_1_0= ruleconstant_expression )
                    {
                    // InternalAnsic.g:1931:5: (lv_constant_expression_1_0= ruleconstant_expression )
                    // InternalAnsic.g:1932:6: lv_constant_expression_1_0= ruleconstant_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStruct_declaratorAccess().getConstant_expressionConstant_expressionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_constant_expression_1_0=ruleconstant_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStruct_declaratorRule());
                      						}
                      						set(
                      							current,
                      							"constant_expression",
                      							lv_constant_expression_1_0,
                      							"org.xtext.example.Ansic.constant_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:1951:3: ( ( (lv_declarator_2_0= ruledeclarator ) ) otherlv_3= ':' ( (lv_constant_expression_4_0= ruleconstant_expression ) ) )
                    {
                    // InternalAnsic.g:1951:3: ( ( (lv_declarator_2_0= ruledeclarator ) ) otherlv_3= ':' ( (lv_constant_expression_4_0= ruleconstant_expression ) ) )
                    // InternalAnsic.g:1952:4: ( (lv_declarator_2_0= ruledeclarator ) ) otherlv_3= ':' ( (lv_constant_expression_4_0= ruleconstant_expression ) )
                    {
                    // InternalAnsic.g:1952:4: ( (lv_declarator_2_0= ruledeclarator ) )
                    // InternalAnsic.g:1953:5: (lv_declarator_2_0= ruledeclarator )
                    {
                    // InternalAnsic.g:1953:5: (lv_declarator_2_0= ruledeclarator )
                    // InternalAnsic.g:1954:6: lv_declarator_2_0= ruledeclarator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStruct_declaratorAccess().getDeclaratorDeclaratorParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_16);
                    lv_declarator_2_0=ruledeclarator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStruct_declaratorRule());
                      						}
                      						set(
                      							current,
                      							"declarator",
                      							lv_declarator_2_0,
                      							"org.xtext.example.Ansic.declarator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,58,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getStruct_declaratorAccess().getColonKeyword_1_1());
                      			
                    }
                    // InternalAnsic.g:1975:4: ( (lv_constant_expression_4_0= ruleconstant_expression ) )
                    // InternalAnsic.g:1976:5: (lv_constant_expression_4_0= ruleconstant_expression )
                    {
                    // InternalAnsic.g:1976:5: (lv_constant_expression_4_0= ruleconstant_expression )
                    // InternalAnsic.g:1977:6: lv_constant_expression_4_0= ruleconstant_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStruct_declaratorAccess().getConstant_expressionConstant_expressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_constant_expression_4_0=ruleconstant_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStruct_declaratorRule());
                      						}
                      						set(
                      							current,
                      							"constant_expression",
                      							lv_constant_expression_4_0,
                      							"org.xtext.example.Ansic.constant_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:1996:3: ( (lv_declarator_5_0= ruledeclarator ) )
                    {
                    // InternalAnsic.g:1996:3: ( (lv_declarator_5_0= ruledeclarator ) )
                    // InternalAnsic.g:1997:4: (lv_declarator_5_0= ruledeclarator )
                    {
                    // InternalAnsic.g:1997:4: (lv_declarator_5_0= ruledeclarator )
                    // InternalAnsic.g:1998:5: lv_declarator_5_0= ruledeclarator
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStruct_declaratorAccess().getDeclaratorDeclaratorParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_declarator_5_0=ruledeclarator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStruct_declaratorRule());
                      					}
                      					set(
                      						current,
                      						"declarator",
                      						lv_declarator_5_0,
                      						"org.xtext.example.Ansic.declarator");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulestruct_declarator"


    // $ANTLR start "entryRulespecifier_qualifier_list"
    // InternalAnsic.g:2019:1: entryRulespecifier_qualifier_list returns [EObject current=null] : iv_rulespecifier_qualifier_list= rulespecifier_qualifier_list EOF ;
    public final EObject entryRulespecifier_qualifier_list() throws RecognitionException {
        EObject current = null;

        EObject iv_rulespecifier_qualifier_list = null;


        try {
            // InternalAnsic.g:2019:65: (iv_rulespecifier_qualifier_list= rulespecifier_qualifier_list EOF )
            // InternalAnsic.g:2020:2: iv_rulespecifier_qualifier_list= rulespecifier_qualifier_list EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSpecifier_qualifier_listRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulespecifier_qualifier_list=rulespecifier_qualifier_list();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulespecifier_qualifier_list; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulespecifier_qualifier_list"


    // $ANTLR start "rulespecifier_qualifier_list"
    // InternalAnsic.g:2026:1: rulespecifier_qualifier_list returns [EObject current=null] : ( ( ( (lv_type_specifier_0_0= ruletype_specifier ) ) ( (lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list ) ) ) | ( (lv_type_specifier_2_0= ruletype_specifier ) ) | ( ( (lv_type_qualifier_3_0= ruletype_qualifier ) ) ( (lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list ) ) ) | ( (lv_type_qualifier_5_0= ruletype_qualifier ) ) ) ;
    public final EObject rulespecifier_qualifier_list() throws RecognitionException {
        EObject current = null;

        EObject lv_type_specifier_0_0 = null;

        EObject lv_specifier_qualifier_list_1_0 = null;

        EObject lv_type_specifier_2_0 = null;

        AntlrDatatypeRuleToken lv_type_qualifier_3_0 = null;

        EObject lv_specifier_qualifier_list_4_0 = null;

        AntlrDatatypeRuleToken lv_type_qualifier_5_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:2032:2: ( ( ( ( (lv_type_specifier_0_0= ruletype_specifier ) ) ( (lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list ) ) ) | ( (lv_type_specifier_2_0= ruletype_specifier ) ) | ( ( (lv_type_qualifier_3_0= ruletype_qualifier ) ) ( (lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list ) ) ) | ( (lv_type_qualifier_5_0= ruletype_qualifier ) ) ) )
            // InternalAnsic.g:2033:2: ( ( ( (lv_type_specifier_0_0= ruletype_specifier ) ) ( (lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list ) ) ) | ( (lv_type_specifier_2_0= ruletype_specifier ) ) | ( ( (lv_type_qualifier_3_0= ruletype_qualifier ) ) ( (lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list ) ) ) | ( (lv_type_qualifier_5_0= ruletype_qualifier ) ) )
            {
            // InternalAnsic.g:2033:2: ( ( ( (lv_type_specifier_0_0= ruletype_specifier ) ) ( (lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list ) ) ) | ( (lv_type_specifier_2_0= ruletype_specifier ) ) | ( ( (lv_type_qualifier_3_0= ruletype_qualifier ) ) ( (lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list ) ) ) | ( (lv_type_qualifier_5_0= ruletype_qualifier ) ) )
            int alt17=4;
            alt17 = dfa17.predict(input);
            switch (alt17) {
                case 1 :
                    // InternalAnsic.g:2034:3: ( ( (lv_type_specifier_0_0= ruletype_specifier ) ) ( (lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list ) ) )
                    {
                    // InternalAnsic.g:2034:3: ( ( (lv_type_specifier_0_0= ruletype_specifier ) ) ( (lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list ) ) )
                    // InternalAnsic.g:2035:4: ( (lv_type_specifier_0_0= ruletype_specifier ) ) ( (lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list ) )
                    {
                    // InternalAnsic.g:2035:4: ( (lv_type_specifier_0_0= ruletype_specifier ) )
                    // InternalAnsic.g:2036:5: (lv_type_specifier_0_0= ruletype_specifier )
                    {
                    // InternalAnsic.g:2036:5: (lv_type_specifier_0_0= ruletype_specifier )
                    // InternalAnsic.g:2037:6: lv_type_specifier_0_0= ruletype_specifier
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSpecifier_qualifier_listAccess().getType_specifierType_specifierParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_6);
                    lv_type_specifier_0_0=ruletype_specifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSpecifier_qualifier_listRule());
                      						}
                      						set(
                      							current,
                      							"type_specifier",
                      							lv_type_specifier_0_0,
                      							"org.xtext.example.Ansic.type_specifier");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:2054:4: ( (lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list ) )
                    // InternalAnsic.g:2055:5: (lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list )
                    {
                    // InternalAnsic.g:2055:5: (lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list )
                    // InternalAnsic.g:2056:6: lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSpecifier_qualifier_listAccess().getSpecifier_qualifier_listSpecifier_qualifier_listParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_specifier_qualifier_list_1_0=rulespecifier_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSpecifier_qualifier_listRule());
                      						}
                      						set(
                      							current,
                      							"specifier_qualifier_list",
                      							lv_specifier_qualifier_list_1_0,
                      							"org.xtext.example.Ansic.specifier_qualifier_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:2075:3: ( (lv_type_specifier_2_0= ruletype_specifier ) )
                    {
                    // InternalAnsic.g:2075:3: ( (lv_type_specifier_2_0= ruletype_specifier ) )
                    // InternalAnsic.g:2076:4: (lv_type_specifier_2_0= ruletype_specifier )
                    {
                    // InternalAnsic.g:2076:4: (lv_type_specifier_2_0= ruletype_specifier )
                    // InternalAnsic.g:2077:5: lv_type_specifier_2_0= ruletype_specifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSpecifier_qualifier_listAccess().getType_specifierType_specifierParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_specifier_2_0=ruletype_specifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSpecifier_qualifier_listRule());
                      					}
                      					set(
                      						current,
                      						"type_specifier",
                      						lv_type_specifier_2_0,
                      						"org.xtext.example.Ansic.type_specifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:2095:3: ( ( (lv_type_qualifier_3_0= ruletype_qualifier ) ) ( (lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list ) ) )
                    {
                    // InternalAnsic.g:2095:3: ( ( (lv_type_qualifier_3_0= ruletype_qualifier ) ) ( (lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list ) ) )
                    // InternalAnsic.g:2096:4: ( (lv_type_qualifier_3_0= ruletype_qualifier ) ) ( (lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list ) )
                    {
                    // InternalAnsic.g:2096:4: ( (lv_type_qualifier_3_0= ruletype_qualifier ) )
                    // InternalAnsic.g:2097:5: (lv_type_qualifier_3_0= ruletype_qualifier )
                    {
                    // InternalAnsic.g:2097:5: (lv_type_qualifier_3_0= ruletype_qualifier )
                    // InternalAnsic.g:2098:6: lv_type_qualifier_3_0= ruletype_qualifier
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSpecifier_qualifier_listAccess().getType_qualifierType_qualifierParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_6);
                    lv_type_qualifier_3_0=ruletype_qualifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSpecifier_qualifier_listRule());
                      						}
                      						set(
                      							current,
                      							"type_qualifier",
                      							lv_type_qualifier_3_0,
                      							"org.xtext.example.Ansic.type_qualifier");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:2115:4: ( (lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list ) )
                    // InternalAnsic.g:2116:5: (lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list )
                    {
                    // InternalAnsic.g:2116:5: (lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list )
                    // InternalAnsic.g:2117:6: lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSpecifier_qualifier_listAccess().getSpecifier_qualifier_listSpecifier_qualifier_listParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_specifier_qualifier_list_4_0=rulespecifier_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSpecifier_qualifier_listRule());
                      						}
                      						set(
                      							current,
                      							"specifier_qualifier_list",
                      							lv_specifier_qualifier_list_4_0,
                      							"org.xtext.example.Ansic.specifier_qualifier_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalAnsic.g:2136:3: ( (lv_type_qualifier_5_0= ruletype_qualifier ) )
                    {
                    // InternalAnsic.g:2136:3: ( (lv_type_qualifier_5_0= ruletype_qualifier ) )
                    // InternalAnsic.g:2137:4: (lv_type_qualifier_5_0= ruletype_qualifier )
                    {
                    // InternalAnsic.g:2137:4: (lv_type_qualifier_5_0= ruletype_qualifier )
                    // InternalAnsic.g:2138:5: lv_type_qualifier_5_0= ruletype_qualifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSpecifier_qualifier_listAccess().getType_qualifierType_qualifierParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_qualifier_5_0=ruletype_qualifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSpecifier_qualifier_listRule());
                      					}
                      					set(
                      						current,
                      						"type_qualifier",
                      						lv_type_qualifier_5_0,
                      						"org.xtext.example.Ansic.type_qualifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulespecifier_qualifier_list"


    // $ANTLR start "entryRulestorage_class_specifier"
    // InternalAnsic.g:2159:1: entryRulestorage_class_specifier returns [String current=null] : iv_rulestorage_class_specifier= rulestorage_class_specifier EOF ;
    public final String entryRulestorage_class_specifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulestorage_class_specifier = null;


        try {
            // InternalAnsic.g:2159:63: (iv_rulestorage_class_specifier= rulestorage_class_specifier EOF )
            // InternalAnsic.g:2160:2: iv_rulestorage_class_specifier= rulestorage_class_specifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStorage_class_specifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulestorage_class_specifier=rulestorage_class_specifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulestorage_class_specifier.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulestorage_class_specifier"


    // $ANTLR start "rulestorage_class_specifier"
    // InternalAnsic.g:2166:1: rulestorage_class_specifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'typedef' | kw= 'extern' | kw= 'static' | kw= '_Thread_local' | kw= 'auto' | kw= 'register' ) ;
    public final AntlrDatatypeRuleToken rulestorage_class_specifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalAnsic.g:2172:2: ( (kw= 'typedef' | kw= 'extern' | kw= 'static' | kw= '_Thread_local' | kw= 'auto' | kw= 'register' ) )
            // InternalAnsic.g:2173:2: (kw= 'typedef' | kw= 'extern' | kw= 'static' | kw= '_Thread_local' | kw= 'auto' | kw= 'register' )
            {
            // InternalAnsic.g:2173:2: (kw= 'typedef' | kw= 'extern' | kw= 'static' | kw= '_Thread_local' | kw= 'auto' | kw= 'register' )
            int alt18=6;
            switch ( input.LA(1) ) {
            case 49:
                {
                alt18=1;
                }
                break;
            case 59:
                {
                alt18=2;
                }
                break;
            case 60:
                {
                alt18=3;
                }
                break;
            case 61:
                {
                alt18=4;
                }
                break;
            case 62:
                {
                alt18=5;
                }
                break;
            case 63:
                {
                alt18=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }

            switch (alt18) {
                case 1 :
                    // InternalAnsic.g:2174:3: kw= 'typedef'
                    {
                    kw=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getStorage_class_specifierAccess().getTypedefKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsic.g:2180:3: kw= 'extern'
                    {
                    kw=(Token)match(input,59,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getStorage_class_specifierAccess().getExternKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAnsic.g:2186:3: kw= 'static'
                    {
                    kw=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getStorage_class_specifierAccess().getStaticKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAnsic.g:2192:3: kw= '_Thread_local'
                    {
                    kw=(Token)match(input,61,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getStorage_class_specifierAccess().get_Thread_localKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalAnsic.g:2198:3: kw= 'auto'
                    {
                    kw=(Token)match(input,62,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getStorage_class_specifierAccess().getAutoKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalAnsic.g:2204:3: kw= 'register'
                    {
                    kw=(Token)match(input,63,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getStorage_class_specifierAccess().getRegisterKeyword_5());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulestorage_class_specifier"


    // $ANTLR start "entryRuledeclaration"
    // InternalAnsic.g:2213:1: entryRuledeclaration returns [EObject current=null] : iv_ruledeclaration= ruledeclaration EOF ;
    public final EObject entryRuledeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledeclaration = null;


        try {
            // InternalAnsic.g:2213:52: (iv_ruledeclaration= ruledeclaration EOF )
            // InternalAnsic.g:2214:2: iv_ruledeclaration= ruledeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledeclaration=ruledeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledeclaration"


    // $ANTLR start "ruledeclaration"
    // InternalAnsic.g:2220:1: ruledeclaration returns [EObject current=null] : ( ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) otherlv_1= ';' ) | ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_init_declarator_list_3_0= ruleinit_declarator_list ) ) otherlv_4= ';' ) | ( (lv_static_assert_declaration_5_0= rulestatic_assert_declaration ) ) ) ;
    public final EObject ruledeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        EObject lv_declaration_specifiers_0_0 = null;

        EObject lv_declaration_specifiers_2_0 = null;

        EObject lv_init_declarator_list_3_0 = null;

        EObject lv_static_assert_declaration_5_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:2226:2: ( ( ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) otherlv_1= ';' ) | ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_init_declarator_list_3_0= ruleinit_declarator_list ) ) otherlv_4= ';' ) | ( (lv_static_assert_declaration_5_0= rulestatic_assert_declaration ) ) ) )
            // InternalAnsic.g:2227:2: ( ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) otherlv_1= ';' ) | ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_init_declarator_list_3_0= ruleinit_declarator_list ) ) otherlv_4= ';' ) | ( (lv_static_assert_declaration_5_0= rulestatic_assert_declaration ) ) )
            {
            // InternalAnsic.g:2227:2: ( ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) otherlv_1= ';' ) | ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_init_declarator_list_3_0= ruleinit_declarator_list ) ) otherlv_4= ';' ) | ( (lv_static_assert_declaration_5_0= rulestatic_assert_declaration ) ) )
            int alt19=3;
            alt19 = dfa19.predict(input);
            switch (alt19) {
                case 1 :
                    // InternalAnsic.g:2228:3: ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) otherlv_1= ';' )
                    {
                    // InternalAnsic.g:2228:3: ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) otherlv_1= ';' )
                    // InternalAnsic.g:2229:4: ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) otherlv_1= ';'
                    {
                    // InternalAnsic.g:2229:4: ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) )
                    // InternalAnsic.g:2230:5: (lv_declaration_specifiers_0_0= ruledeclaration_specifiers )
                    {
                    // InternalAnsic.g:2230:5: (lv_declaration_specifiers_0_0= ruledeclaration_specifiers )
                    // InternalAnsic.g:2231:6: lv_declaration_specifiers_0_0= ruledeclaration_specifiers
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDeclarationAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_14);
                    lv_declaration_specifiers_0_0=ruledeclaration_specifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"declaration_specifiers",
                      							lv_declaration_specifiers_0_0,
                      							"org.xtext.example.Ansic.declaration_specifiers");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getDeclarationAccess().getSemicolonKeyword_0_1());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:2254:3: ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_init_declarator_list_3_0= ruleinit_declarator_list ) ) otherlv_4= ';' )
                    {
                    // InternalAnsic.g:2254:3: ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_init_declarator_list_3_0= ruleinit_declarator_list ) ) otherlv_4= ';' )
                    // InternalAnsic.g:2255:4: ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_init_declarator_list_3_0= ruleinit_declarator_list ) ) otherlv_4= ';'
                    {
                    // InternalAnsic.g:2255:4: ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) )
                    // InternalAnsic.g:2256:5: (lv_declaration_specifiers_2_0= ruledeclaration_specifiers )
                    {
                    // InternalAnsic.g:2256:5: (lv_declaration_specifiers_2_0= ruledeclaration_specifiers )
                    // InternalAnsic.g:2257:6: lv_declaration_specifiers_2_0= ruledeclaration_specifiers
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDeclarationAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    lv_declaration_specifiers_2_0=ruledeclaration_specifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"declaration_specifiers",
                      							lv_declaration_specifiers_2_0,
                      							"org.xtext.example.Ansic.declaration_specifiers");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:2274:4: ( (lv_init_declarator_list_3_0= ruleinit_declarator_list ) )
                    // InternalAnsic.g:2275:5: (lv_init_declarator_list_3_0= ruleinit_declarator_list )
                    {
                    // InternalAnsic.g:2275:5: (lv_init_declarator_list_3_0= ruleinit_declarator_list )
                    // InternalAnsic.g:2276:6: lv_init_declarator_list_3_0= ruleinit_declarator_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDeclarationAccess().getInit_declarator_listInit_declarator_listParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_14);
                    lv_init_declarator_list_3_0=ruleinit_declarator_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"init_declarator_list",
                      							lv_init_declarator_list_3_0,
                      							"org.xtext.example.Ansic.init_declarator_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getDeclarationAccess().getSemicolonKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:2299:3: ( (lv_static_assert_declaration_5_0= rulestatic_assert_declaration ) )
                    {
                    // InternalAnsic.g:2299:3: ( (lv_static_assert_declaration_5_0= rulestatic_assert_declaration ) )
                    // InternalAnsic.g:2300:4: (lv_static_assert_declaration_5_0= rulestatic_assert_declaration )
                    {
                    // InternalAnsic.g:2300:4: (lv_static_assert_declaration_5_0= rulestatic_assert_declaration )
                    // InternalAnsic.g:2301:5: lv_static_assert_declaration_5_0= rulestatic_assert_declaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDeclarationAccess().getStatic_assert_declarationStatic_assert_declarationParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_static_assert_declaration_5_0=rulestatic_assert_declaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"static_assert_declaration",
                      						lv_static_assert_declaration_5_0,
                      						"org.xtext.example.Ansic.static_assert_declaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledeclaration"


    // $ANTLR start "entryRulefunction_definition"
    // InternalAnsic.g:2322:1: entryRulefunction_definition returns [EObject current=null] : iv_rulefunction_definition= rulefunction_definition EOF ;
    public final EObject entryRulefunction_definition() throws RecognitionException {
        EObject current = null;

        EObject iv_rulefunction_definition = null;


        try {
            // InternalAnsic.g:2322:60: (iv_rulefunction_definition= rulefunction_definition EOF )
            // InternalAnsic.g:2323:2: iv_rulefunction_definition= rulefunction_definition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunction_definitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulefunction_definition=rulefunction_definition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulefunction_definition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulefunction_definition"


    // $ANTLR start "rulefunction_definition"
    // InternalAnsic.g:2329:1: rulefunction_definition returns [EObject current=null] : ( ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) ( (lv_declaration_list_2_0= ruledeclaration_list ) ) ( (lv_compound_statement_3_0= rulecompound_statement ) ) ) | ( ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) ( (lv_declarator_5_0= ruledeclarator ) ) ( (lv_compound_statement_6_0= rulecompound_statement ) ) ) ) ;
    public final EObject rulefunction_definition() throws RecognitionException {
        EObject current = null;

        EObject lv_declaration_specifiers_0_0 = null;

        EObject lv_declarator_1_0 = null;

        EObject lv_declaration_list_2_0 = null;

        EObject lv_compound_statement_3_0 = null;

        EObject lv_declaration_specifiers_4_0 = null;

        EObject lv_declarator_5_0 = null;

        EObject lv_compound_statement_6_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:2335:2: ( ( ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) ( (lv_declaration_list_2_0= ruledeclaration_list ) ) ( (lv_compound_statement_3_0= rulecompound_statement ) ) ) | ( ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) ( (lv_declarator_5_0= ruledeclarator ) ) ( (lv_compound_statement_6_0= rulecompound_statement ) ) ) ) )
            // InternalAnsic.g:2336:2: ( ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) ( (lv_declaration_list_2_0= ruledeclaration_list ) ) ( (lv_compound_statement_3_0= rulecompound_statement ) ) ) | ( ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) ( (lv_declarator_5_0= ruledeclarator ) ) ( (lv_compound_statement_6_0= rulecompound_statement ) ) ) )
            {
            // InternalAnsic.g:2336:2: ( ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) ( (lv_declaration_list_2_0= ruledeclaration_list ) ) ( (lv_compound_statement_3_0= rulecompound_statement ) ) ) | ( ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) ( (lv_declarator_5_0= ruledeclarator ) ) ( (lv_compound_statement_6_0= rulecompound_statement ) ) ) )
            int alt20=2;
            alt20 = dfa20.predict(input);
            switch (alt20) {
                case 1 :
                    // InternalAnsic.g:2337:3: ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) ( (lv_declaration_list_2_0= ruledeclaration_list ) ) ( (lv_compound_statement_3_0= rulecompound_statement ) ) )
                    {
                    // InternalAnsic.g:2337:3: ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) ( (lv_declaration_list_2_0= ruledeclaration_list ) ) ( (lv_compound_statement_3_0= rulecompound_statement ) ) )
                    // InternalAnsic.g:2338:4: ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) ( (lv_declaration_list_2_0= ruledeclaration_list ) ) ( (lv_compound_statement_3_0= rulecompound_statement ) )
                    {
                    // InternalAnsic.g:2338:4: ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) )
                    // InternalAnsic.g:2339:5: (lv_declaration_specifiers_0_0= ruledeclaration_specifiers )
                    {
                    // InternalAnsic.g:2339:5: (lv_declaration_specifiers_0_0= ruledeclaration_specifiers )
                    // InternalAnsic.g:2340:6: lv_declaration_specifiers_0_0= ruledeclaration_specifiers
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunction_definitionAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    lv_declaration_specifiers_0_0=ruledeclaration_specifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunction_definitionRule());
                      						}
                      						add(
                      							current,
                      							"declaration_specifiers",
                      							lv_declaration_specifiers_0_0,
                      							"org.xtext.example.Ansic.declaration_specifiers");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:2357:4: ( (lv_declarator_1_0= ruledeclarator ) )
                    // InternalAnsic.g:2358:5: (lv_declarator_1_0= ruledeclarator )
                    {
                    // InternalAnsic.g:2358:5: (lv_declarator_1_0= ruledeclarator )
                    // InternalAnsic.g:2359:6: lv_declarator_1_0= ruledeclarator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunction_definitionAccess().getDeclaratorDeclaratorParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_3);
                    lv_declarator_1_0=ruledeclarator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunction_definitionRule());
                      						}
                      						set(
                      							current,
                      							"declarator",
                      							lv_declarator_1_0,
                      							"org.xtext.example.Ansic.declarator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:2376:4: ( (lv_declaration_list_2_0= ruledeclaration_list ) )
                    // InternalAnsic.g:2377:5: (lv_declaration_list_2_0= ruledeclaration_list )
                    {
                    // InternalAnsic.g:2377:5: (lv_declaration_list_2_0= ruledeclaration_list )
                    // InternalAnsic.g:2378:6: lv_declaration_list_2_0= ruledeclaration_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunction_definitionAccess().getDeclaration_listDeclaration_listParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    lv_declaration_list_2_0=ruledeclaration_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunction_definitionRule());
                      						}
                      						add(
                      							current,
                      							"declaration_list",
                      							lv_declaration_list_2_0,
                      							"org.xtext.example.Ansic.declaration_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:2395:4: ( (lv_compound_statement_3_0= rulecompound_statement ) )
                    // InternalAnsic.g:2396:5: (lv_compound_statement_3_0= rulecompound_statement )
                    {
                    // InternalAnsic.g:2396:5: (lv_compound_statement_3_0= rulecompound_statement )
                    // InternalAnsic.g:2397:6: lv_compound_statement_3_0= rulecompound_statement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunction_definitionAccess().getCompound_statementCompound_statementParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_compound_statement_3_0=rulecompound_statement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunction_definitionRule());
                      						}
                      						set(
                      							current,
                      							"compound_statement",
                      							lv_compound_statement_3_0,
                      							"org.xtext.example.Ansic.compound_statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:2416:3: ( ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) ( (lv_declarator_5_0= ruledeclarator ) ) ( (lv_compound_statement_6_0= rulecompound_statement ) ) )
                    {
                    // InternalAnsic.g:2416:3: ( ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) ( (lv_declarator_5_0= ruledeclarator ) ) ( (lv_compound_statement_6_0= rulecompound_statement ) ) )
                    // InternalAnsic.g:2417:4: ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) ( (lv_declarator_5_0= ruledeclarator ) ) ( (lv_compound_statement_6_0= rulecompound_statement ) )
                    {
                    // InternalAnsic.g:2417:4: ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) )
                    // InternalAnsic.g:2418:5: (lv_declaration_specifiers_4_0= ruledeclaration_specifiers )
                    {
                    // InternalAnsic.g:2418:5: (lv_declaration_specifiers_4_0= ruledeclaration_specifiers )
                    // InternalAnsic.g:2419:6: lv_declaration_specifiers_4_0= ruledeclaration_specifiers
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunction_definitionAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    lv_declaration_specifiers_4_0=ruledeclaration_specifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunction_definitionRule());
                      						}
                      						add(
                      							current,
                      							"declaration_specifiers",
                      							lv_declaration_specifiers_4_0,
                      							"org.xtext.example.Ansic.declaration_specifiers");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:2436:4: ( (lv_declarator_5_0= ruledeclarator ) )
                    // InternalAnsic.g:2437:5: (lv_declarator_5_0= ruledeclarator )
                    {
                    // InternalAnsic.g:2437:5: (lv_declarator_5_0= ruledeclarator )
                    // InternalAnsic.g:2438:6: lv_declarator_5_0= ruledeclarator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunction_definitionAccess().getDeclaratorDeclaratorParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    lv_declarator_5_0=ruledeclarator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunction_definitionRule());
                      						}
                      						set(
                      							current,
                      							"declarator",
                      							lv_declarator_5_0,
                      							"org.xtext.example.Ansic.declarator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:2455:4: ( (lv_compound_statement_6_0= rulecompound_statement ) )
                    // InternalAnsic.g:2456:5: (lv_compound_statement_6_0= rulecompound_statement )
                    {
                    // InternalAnsic.g:2456:5: (lv_compound_statement_6_0= rulecompound_statement )
                    // InternalAnsic.g:2457:6: lv_compound_statement_6_0= rulecompound_statement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunction_definitionAccess().getCompound_statementCompound_statementParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_compound_statement_6_0=rulecompound_statement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunction_definitionRule());
                      						}
                      						set(
                      							current,
                      							"compound_statement",
                      							lv_compound_statement_6_0,
                      							"org.xtext.example.Ansic.compound_statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulefunction_definition"


    // $ANTLR start "entryRuledeclaration_list"
    // InternalAnsic.g:2479:1: entryRuledeclaration_list returns [EObject current=null] : iv_ruledeclaration_list= ruledeclaration_list EOF ;
    public final EObject entryRuledeclaration_list() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledeclaration_list = null;


        try {
            // InternalAnsic.g:2479:57: (iv_ruledeclaration_list= ruledeclaration_list EOF )
            // InternalAnsic.g:2480:2: iv_ruledeclaration_list= ruledeclaration_list EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclaration_listRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledeclaration_list=ruledeclaration_list();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledeclaration_list; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledeclaration_list"


    // $ANTLR start "ruledeclaration_list"
    // InternalAnsic.g:2486:1: ruledeclaration_list returns [EObject current=null] : ( ( (lv_declaration_0_0= ruledeclaration ) ) ( (lv_declaration_list_linha_1_0= ruledeclaration_list_linha ) ) ) ;
    public final EObject ruledeclaration_list() throws RecognitionException {
        EObject current = null;

        EObject lv_declaration_0_0 = null;

        EObject lv_declaration_list_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:2492:2: ( ( ( (lv_declaration_0_0= ruledeclaration ) ) ( (lv_declaration_list_linha_1_0= ruledeclaration_list_linha ) ) ) )
            // InternalAnsic.g:2493:2: ( ( (lv_declaration_0_0= ruledeclaration ) ) ( (lv_declaration_list_linha_1_0= ruledeclaration_list_linha ) ) )
            {
            // InternalAnsic.g:2493:2: ( ( (lv_declaration_0_0= ruledeclaration ) ) ( (lv_declaration_list_linha_1_0= ruledeclaration_list_linha ) ) )
            // InternalAnsic.g:2494:3: ( (lv_declaration_0_0= ruledeclaration ) ) ( (lv_declaration_list_linha_1_0= ruledeclaration_list_linha ) )
            {
            // InternalAnsic.g:2494:3: ( (lv_declaration_0_0= ruledeclaration ) )
            // InternalAnsic.g:2495:4: (lv_declaration_0_0= ruledeclaration )
            {
            // InternalAnsic.g:2495:4: (lv_declaration_0_0= ruledeclaration )
            // InternalAnsic.g:2496:5: lv_declaration_0_0= ruledeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDeclaration_listAccess().getDeclarationDeclarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_declaration_0_0=ruledeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDeclaration_listRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_0_0,
              						"org.xtext.example.Ansic.declaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:2513:3: ( (lv_declaration_list_linha_1_0= ruledeclaration_list_linha ) )
            // InternalAnsic.g:2514:4: (lv_declaration_list_linha_1_0= ruledeclaration_list_linha )
            {
            // InternalAnsic.g:2514:4: (lv_declaration_list_linha_1_0= ruledeclaration_list_linha )
            // InternalAnsic.g:2515:5: lv_declaration_list_linha_1_0= ruledeclaration_list_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDeclaration_listAccess().getDeclaration_list_linhaDeclaration_list_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_declaration_list_linha_1_0=ruledeclaration_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDeclaration_listRule());
              					}
              					set(
              						current,
              						"declaration_list_linha",
              						lv_declaration_list_linha_1_0,
              						"org.xtext.example.Ansic.declaration_list_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledeclaration_list"


    // $ANTLR start "entryRuledeclaration_list_linha"
    // InternalAnsic.g:2536:1: entryRuledeclaration_list_linha returns [EObject current=null] : iv_ruledeclaration_list_linha= ruledeclaration_list_linha EOF ;
    public final EObject entryRuledeclaration_list_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledeclaration_list_linha = null;


        try {
            // InternalAnsic.g:2536:63: (iv_ruledeclaration_list_linha= ruledeclaration_list_linha EOF )
            // InternalAnsic.g:2537:2: iv_ruledeclaration_list_linha= ruledeclaration_list_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclaration_list_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledeclaration_list_linha=ruledeclaration_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledeclaration_list_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledeclaration_list_linha"


    // $ANTLR start "ruledeclaration_list_linha"
    // InternalAnsic.g:2543:1: ruledeclaration_list_linha returns [EObject current=null] : ( () ( ( (lv_declaration_1_0= ruledeclaration ) ) ( (lv_declaration_list_linha_2_0= ruledeclaration_list_linha ) ) )? ) ;
    public final EObject ruledeclaration_list_linha() throws RecognitionException {
        EObject current = null;

        EObject lv_declaration_1_0 = null;

        EObject lv_declaration_list_linha_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:2549:2: ( ( () ( ( (lv_declaration_1_0= ruledeclaration ) ) ( (lv_declaration_list_linha_2_0= ruledeclaration_list_linha ) ) )? ) )
            // InternalAnsic.g:2550:2: ( () ( ( (lv_declaration_1_0= ruledeclaration ) ) ( (lv_declaration_list_linha_2_0= ruledeclaration_list_linha ) ) )? )
            {
            // InternalAnsic.g:2550:2: ( () ( ( (lv_declaration_1_0= ruledeclaration ) ) ( (lv_declaration_list_linha_2_0= ruledeclaration_list_linha ) ) )? )
            // InternalAnsic.g:2551:3: () ( ( (lv_declaration_1_0= ruledeclaration ) ) ( (lv_declaration_list_linha_2_0= ruledeclaration_list_linha ) ) )?
            {
            // InternalAnsic.g:2551:3: ()
            // InternalAnsic.g:2552:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDeclaration_list_linhaAccess().getDeclarationListLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:2561:3: ( ( (lv_declaration_1_0= ruledeclaration ) ) ( (lv_declaration_list_linha_2_0= ruledeclaration_list_linha ) ) )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( ((LA21_0>=28 && LA21_0<=30)||(LA21_0>=33 && LA21_0<=50)||(LA21_0>=55 && LA21_0<=56)||(LA21_0>=59 && LA21_0<=63)||LA21_0==71) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // InternalAnsic.g:2562:4: ( (lv_declaration_1_0= ruledeclaration ) ) ( (lv_declaration_list_linha_2_0= ruledeclaration_list_linha ) )
                    {
                    // InternalAnsic.g:2562:4: ( (lv_declaration_1_0= ruledeclaration ) )
                    // InternalAnsic.g:2563:5: (lv_declaration_1_0= ruledeclaration )
                    {
                    // InternalAnsic.g:2563:5: (lv_declaration_1_0= ruledeclaration )
                    // InternalAnsic.g:2564:6: lv_declaration_1_0= ruledeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDeclaration_list_linhaAccess().getDeclarationDeclarationParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_3);
                    lv_declaration_1_0=ruledeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDeclaration_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"declaration",
                      							lv_declaration_1_0,
                      							"org.xtext.example.Ansic.declaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:2581:4: ( (lv_declaration_list_linha_2_0= ruledeclaration_list_linha ) )
                    // InternalAnsic.g:2582:5: (lv_declaration_list_linha_2_0= ruledeclaration_list_linha )
                    {
                    // InternalAnsic.g:2582:5: (lv_declaration_list_linha_2_0= ruledeclaration_list_linha )
                    // InternalAnsic.g:2583:6: lv_declaration_list_linha_2_0= ruledeclaration_list_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDeclaration_list_linhaAccess().getDeclaration_list_linhaDeclaration_list_linhaParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaration_list_linha_2_0=ruledeclaration_list_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDeclaration_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"declaration_list_linha",
                      							lv_declaration_list_linha_2_0,
                      							"org.xtext.example.Ansic.declaration_list_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledeclaration_list_linha"


    // $ANTLR start "entryRuledeclarator"
    // InternalAnsic.g:2605:1: entryRuledeclarator returns [EObject current=null] : iv_ruledeclarator= ruledeclarator EOF ;
    public final EObject entryRuledeclarator() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledeclarator = null;


        try {
            // InternalAnsic.g:2605:51: (iv_ruledeclarator= ruledeclarator EOF )
            // InternalAnsic.g:2606:2: iv_ruledeclarator= ruledeclarator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclaratorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledeclarator=ruledeclarator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledeclarator; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledeclarator"


    // $ANTLR start "ruledeclarator"
    // InternalAnsic.g:2612:1: ruledeclarator returns [EObject current=null] : ( ( ( (lv_pointer_0_0= rulepointer ) ) ( (lv_direct_declarator_1_0= ruledirect_declarator ) ) ) | ( (lv_direct_declarator_2_0= ruledirect_declarator ) ) ) ;
    public final EObject ruledeclarator() throws RecognitionException {
        EObject current = null;

        EObject lv_pointer_0_0 = null;

        EObject lv_direct_declarator_1_0 = null;

        EObject lv_direct_declarator_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:2618:2: ( ( ( ( (lv_pointer_0_0= rulepointer ) ) ( (lv_direct_declarator_1_0= ruledirect_declarator ) ) ) | ( (lv_direct_declarator_2_0= ruledirect_declarator ) ) ) )
            // InternalAnsic.g:2619:2: ( ( ( (lv_pointer_0_0= rulepointer ) ) ( (lv_direct_declarator_1_0= ruledirect_declarator ) ) ) | ( (lv_direct_declarator_2_0= ruledirect_declarator ) ) )
            {
            // InternalAnsic.g:2619:2: ( ( ( (lv_pointer_0_0= rulepointer ) ) ( (lv_direct_declarator_1_0= ruledirect_declarator ) ) ) | ( (lv_direct_declarator_2_0= ruledirect_declarator ) ) )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==64) ) {
                alt22=1;
            }
            else if ( (LA22_0==RULE_ID||LA22_0==31) ) {
                alt22=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1 :
                    // InternalAnsic.g:2620:3: ( ( (lv_pointer_0_0= rulepointer ) ) ( (lv_direct_declarator_1_0= ruledirect_declarator ) ) )
                    {
                    // InternalAnsic.g:2620:3: ( ( (lv_pointer_0_0= rulepointer ) ) ( (lv_direct_declarator_1_0= ruledirect_declarator ) ) )
                    // InternalAnsic.g:2621:4: ( (lv_pointer_0_0= rulepointer ) ) ( (lv_direct_declarator_1_0= ruledirect_declarator ) )
                    {
                    // InternalAnsic.g:2621:4: ( (lv_pointer_0_0= rulepointer ) )
                    // InternalAnsic.g:2622:5: (lv_pointer_0_0= rulepointer )
                    {
                    // InternalAnsic.g:2622:5: (lv_pointer_0_0= rulepointer )
                    // InternalAnsic.g:2623:6: lv_pointer_0_0= rulepointer
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDeclaratorAccess().getPointerPointerParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    lv_pointer_0_0=rulepointer();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDeclaratorRule());
                      						}
                      						set(
                      							current,
                      							"pointer",
                      							lv_pointer_0_0,
                      							"org.xtext.example.Ansic.pointer");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:2640:4: ( (lv_direct_declarator_1_0= ruledirect_declarator ) )
                    // InternalAnsic.g:2641:5: (lv_direct_declarator_1_0= ruledirect_declarator )
                    {
                    // InternalAnsic.g:2641:5: (lv_direct_declarator_1_0= ruledirect_declarator )
                    // InternalAnsic.g:2642:6: lv_direct_declarator_1_0= ruledirect_declarator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDeclaratorAccess().getDirect_declaratorDirect_declaratorParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_direct_declarator_1_0=ruledirect_declarator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDeclaratorRule());
                      						}
                      						set(
                      							current,
                      							"direct_declarator",
                      							lv_direct_declarator_1_0,
                      							"org.xtext.example.Ansic.direct_declarator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:2661:3: ( (lv_direct_declarator_2_0= ruledirect_declarator ) )
                    {
                    // InternalAnsic.g:2661:3: ( (lv_direct_declarator_2_0= ruledirect_declarator ) )
                    // InternalAnsic.g:2662:4: (lv_direct_declarator_2_0= ruledirect_declarator )
                    {
                    // InternalAnsic.g:2662:4: (lv_direct_declarator_2_0= ruledirect_declarator )
                    // InternalAnsic.g:2663:5: lv_direct_declarator_2_0= ruledirect_declarator
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDeclaratorAccess().getDirect_declaratorDirect_declaratorParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_direct_declarator_2_0=ruledirect_declarator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDeclaratorRule());
                      					}
                      					set(
                      						current,
                      						"direct_declarator",
                      						lv_direct_declarator_2_0,
                      						"org.xtext.example.Ansic.direct_declarator");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledeclarator"


    // $ANTLR start "entryRulepointer"
    // InternalAnsic.g:2684:1: entryRulepointer returns [EObject current=null] : iv_rulepointer= rulepointer EOF ;
    public final EObject entryRulepointer() throws RecognitionException {
        EObject current = null;

        EObject iv_rulepointer = null;


        try {
            // InternalAnsic.g:2684:48: (iv_rulepointer= rulepointer EOF )
            // InternalAnsic.g:2685:2: iv_rulepointer= rulepointer EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPointerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulepointer=rulepointer();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulepointer; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulepointer"


    // $ANTLR start "rulepointer"
    // InternalAnsic.g:2691:1: rulepointer returns [EObject current=null] : ( (otherlv_0= '*' ( (lv_type_qualifier_list_1_0= ruletype_qualifier_list ) ) ( (lv_pointer_2_0= rulepointer ) ) ) | (otherlv_3= '*' ( (lv_type_qualifier_list_4_0= ruletype_qualifier_list ) ) ) | (otherlv_5= '*' ( (lv_pointer_6_0= rulepointer ) ) ) | otherlv_7= '*' ) ;
    public final EObject rulepointer() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_type_qualifier_list_1_0 = null;

        EObject lv_pointer_2_0 = null;

        EObject lv_type_qualifier_list_4_0 = null;

        EObject lv_pointer_6_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:2697:2: ( ( (otherlv_0= '*' ( (lv_type_qualifier_list_1_0= ruletype_qualifier_list ) ) ( (lv_pointer_2_0= rulepointer ) ) ) | (otherlv_3= '*' ( (lv_type_qualifier_list_4_0= ruletype_qualifier_list ) ) ) | (otherlv_5= '*' ( (lv_pointer_6_0= rulepointer ) ) ) | otherlv_7= '*' ) )
            // InternalAnsic.g:2698:2: ( (otherlv_0= '*' ( (lv_type_qualifier_list_1_0= ruletype_qualifier_list ) ) ( (lv_pointer_2_0= rulepointer ) ) ) | (otherlv_3= '*' ( (lv_type_qualifier_list_4_0= ruletype_qualifier_list ) ) ) | (otherlv_5= '*' ( (lv_pointer_6_0= rulepointer ) ) ) | otherlv_7= '*' )
            {
            // InternalAnsic.g:2698:2: ( (otherlv_0= '*' ( (lv_type_qualifier_list_1_0= ruletype_qualifier_list ) ) ( (lv_pointer_2_0= rulepointer ) ) ) | (otherlv_3= '*' ( (lv_type_qualifier_list_4_0= ruletype_qualifier_list ) ) ) | (otherlv_5= '*' ( (lv_pointer_6_0= rulepointer ) ) ) | otherlv_7= '*' )
            int alt23=4;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==64) ) {
                int LA23_1 = input.LA(2);

                if ( (synpred59_InternalAnsic()) ) {
                    alt23=1;
                }
                else if ( (synpred60_InternalAnsic()) ) {
                    alt23=2;
                }
                else if ( (synpred61_InternalAnsic()) ) {
                    alt23=3;
                }
                else if ( (true) ) {
                    alt23=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 23, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalAnsic.g:2699:3: (otherlv_0= '*' ( (lv_type_qualifier_list_1_0= ruletype_qualifier_list ) ) ( (lv_pointer_2_0= rulepointer ) ) )
                    {
                    // InternalAnsic.g:2699:3: (otherlv_0= '*' ( (lv_type_qualifier_list_1_0= ruletype_qualifier_list ) ) ( (lv_pointer_2_0= rulepointer ) ) )
                    // InternalAnsic.g:2700:4: otherlv_0= '*' ( (lv_type_qualifier_list_1_0= ruletype_qualifier_list ) ) ( (lv_pointer_2_0= rulepointer ) )
                    {
                    otherlv_0=(Token)match(input,64,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getPointerAccess().getAsteriskKeyword_0_0());
                      			
                    }
                    // InternalAnsic.g:2704:4: ( (lv_type_qualifier_list_1_0= ruletype_qualifier_list ) )
                    // InternalAnsic.g:2705:5: (lv_type_qualifier_list_1_0= ruletype_qualifier_list )
                    {
                    // InternalAnsic.g:2705:5: (lv_type_qualifier_list_1_0= ruletype_qualifier_list )
                    // InternalAnsic.g:2706:6: lv_type_qualifier_list_1_0= ruletype_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPointerAccess().getType_qualifier_listType_qualifier_listParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    lv_type_qualifier_list_1_0=ruletype_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPointerRule());
                      						}
                      						set(
                      							current,
                      							"type_qualifier_list",
                      							lv_type_qualifier_list_1_0,
                      							"org.xtext.example.Ansic.type_qualifier_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:2723:4: ( (lv_pointer_2_0= rulepointer ) )
                    // InternalAnsic.g:2724:5: (lv_pointer_2_0= rulepointer )
                    {
                    // InternalAnsic.g:2724:5: (lv_pointer_2_0= rulepointer )
                    // InternalAnsic.g:2725:6: lv_pointer_2_0= rulepointer
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPointerAccess().getPointerPointerParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_pointer_2_0=rulepointer();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPointerRule());
                      						}
                      						set(
                      							current,
                      							"pointer",
                      							lv_pointer_2_0,
                      							"org.xtext.example.Ansic.pointer");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:2744:3: (otherlv_3= '*' ( (lv_type_qualifier_list_4_0= ruletype_qualifier_list ) ) )
                    {
                    // InternalAnsic.g:2744:3: (otherlv_3= '*' ( (lv_type_qualifier_list_4_0= ruletype_qualifier_list ) ) )
                    // InternalAnsic.g:2745:4: otherlv_3= '*' ( (lv_type_qualifier_list_4_0= ruletype_qualifier_list ) )
                    {
                    otherlv_3=(Token)match(input,64,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getPointerAccess().getAsteriskKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:2749:4: ( (lv_type_qualifier_list_4_0= ruletype_qualifier_list ) )
                    // InternalAnsic.g:2750:5: (lv_type_qualifier_list_4_0= ruletype_qualifier_list )
                    {
                    // InternalAnsic.g:2750:5: (lv_type_qualifier_list_4_0= ruletype_qualifier_list )
                    // InternalAnsic.g:2751:6: lv_type_qualifier_list_4_0= ruletype_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPointerAccess().getType_qualifier_listType_qualifier_listParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_qualifier_list_4_0=ruletype_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPointerRule());
                      						}
                      						set(
                      							current,
                      							"type_qualifier_list",
                      							lv_type_qualifier_list_4_0,
                      							"org.xtext.example.Ansic.type_qualifier_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:2770:3: (otherlv_5= '*' ( (lv_pointer_6_0= rulepointer ) ) )
                    {
                    // InternalAnsic.g:2770:3: (otherlv_5= '*' ( (lv_pointer_6_0= rulepointer ) ) )
                    // InternalAnsic.g:2771:4: otherlv_5= '*' ( (lv_pointer_6_0= rulepointer ) )
                    {
                    otherlv_5=(Token)match(input,64,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getPointerAccess().getAsteriskKeyword_2_0());
                      			
                    }
                    // InternalAnsic.g:2775:4: ( (lv_pointer_6_0= rulepointer ) )
                    // InternalAnsic.g:2776:5: (lv_pointer_6_0= rulepointer )
                    {
                    // InternalAnsic.g:2776:5: (lv_pointer_6_0= rulepointer )
                    // InternalAnsic.g:2777:6: lv_pointer_6_0= rulepointer
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPointerAccess().getPointerPointerParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_pointer_6_0=rulepointer();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPointerRule());
                      						}
                      						set(
                      							current,
                      							"pointer",
                      							lv_pointer_6_0,
                      							"org.xtext.example.Ansic.pointer");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalAnsic.g:2796:3: otherlv_7= '*'
                    {
                    otherlv_7=(Token)match(input,64,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_7, grammarAccess.getPointerAccess().getAsteriskKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulepointer"


    // $ANTLR start "entryRuletype_qualifier_list"
    // InternalAnsic.g:2804:1: entryRuletype_qualifier_list returns [EObject current=null] : iv_ruletype_qualifier_list= ruletype_qualifier_list EOF ;
    public final EObject entryRuletype_qualifier_list() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletype_qualifier_list = null;


        try {
            // InternalAnsic.g:2804:60: (iv_ruletype_qualifier_list= ruletype_qualifier_list EOF )
            // InternalAnsic.g:2805:2: iv_ruletype_qualifier_list= ruletype_qualifier_list EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getType_qualifier_listRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletype_qualifier_list=ruletype_qualifier_list();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletype_qualifier_list; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletype_qualifier_list"


    // $ANTLR start "ruletype_qualifier_list"
    // InternalAnsic.g:2811:1: ruletype_qualifier_list returns [EObject current=null] : ( ( (lv_type_qualifier_0_0= ruletype_qualifier ) ) ( (lv_type_qualifier_list_linha_1_0= ruletype_qualifier_list_linha ) ) ) ;
    public final EObject ruletype_qualifier_list() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_type_qualifier_0_0 = null;

        EObject lv_type_qualifier_list_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:2817:2: ( ( ( (lv_type_qualifier_0_0= ruletype_qualifier ) ) ( (lv_type_qualifier_list_linha_1_0= ruletype_qualifier_list_linha ) ) ) )
            // InternalAnsic.g:2818:2: ( ( (lv_type_qualifier_0_0= ruletype_qualifier ) ) ( (lv_type_qualifier_list_linha_1_0= ruletype_qualifier_list_linha ) ) )
            {
            // InternalAnsic.g:2818:2: ( ( (lv_type_qualifier_0_0= ruletype_qualifier ) ) ( (lv_type_qualifier_list_linha_1_0= ruletype_qualifier_list_linha ) ) )
            // InternalAnsic.g:2819:3: ( (lv_type_qualifier_0_0= ruletype_qualifier ) ) ( (lv_type_qualifier_list_linha_1_0= ruletype_qualifier_list_linha ) )
            {
            // InternalAnsic.g:2819:3: ( (lv_type_qualifier_0_0= ruletype_qualifier ) )
            // InternalAnsic.g:2820:4: (lv_type_qualifier_0_0= ruletype_qualifier )
            {
            // InternalAnsic.g:2820:4: (lv_type_qualifier_0_0= ruletype_qualifier )
            // InternalAnsic.g:2821:5: lv_type_qualifier_0_0= ruletype_qualifier
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getType_qualifier_listAccess().getType_qualifierType_qualifierParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_18);
            lv_type_qualifier_0_0=ruletype_qualifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getType_qualifier_listRule());
              					}
              					set(
              						current,
              						"type_qualifier",
              						lv_type_qualifier_0_0,
              						"org.xtext.example.Ansic.type_qualifier");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:2838:3: ( (lv_type_qualifier_list_linha_1_0= ruletype_qualifier_list_linha ) )
            // InternalAnsic.g:2839:4: (lv_type_qualifier_list_linha_1_0= ruletype_qualifier_list_linha )
            {
            // InternalAnsic.g:2839:4: (lv_type_qualifier_list_linha_1_0= ruletype_qualifier_list_linha )
            // InternalAnsic.g:2840:5: lv_type_qualifier_list_linha_1_0= ruletype_qualifier_list_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getType_qualifier_listAccess().getType_qualifier_list_linhaType_qualifier_list_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_type_qualifier_list_linha_1_0=ruletype_qualifier_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getType_qualifier_listRule());
              					}
              					set(
              						current,
              						"type_qualifier_list_linha",
              						lv_type_qualifier_list_linha_1_0,
              						"org.xtext.example.Ansic.type_qualifier_list_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletype_qualifier_list"


    // $ANTLR start "entryRuletype_qualifier_list_linha"
    // InternalAnsic.g:2861:1: entryRuletype_qualifier_list_linha returns [EObject current=null] : iv_ruletype_qualifier_list_linha= ruletype_qualifier_list_linha EOF ;
    public final EObject entryRuletype_qualifier_list_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletype_qualifier_list_linha = null;


        try {
            // InternalAnsic.g:2861:66: (iv_ruletype_qualifier_list_linha= ruletype_qualifier_list_linha EOF )
            // InternalAnsic.g:2862:2: iv_ruletype_qualifier_list_linha= ruletype_qualifier_list_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getType_qualifier_list_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletype_qualifier_list_linha=ruletype_qualifier_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletype_qualifier_list_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletype_qualifier_list_linha"


    // $ANTLR start "ruletype_qualifier_list_linha"
    // InternalAnsic.g:2868:1: ruletype_qualifier_list_linha returns [EObject current=null] : ( () ( ( (lv_type_qualifier_1_0= ruletype_qualifier ) ) ( (lv_type_qualifier_list_linha_2_0= ruletype_qualifier_list_linha ) ) )? ) ;
    public final EObject ruletype_qualifier_list_linha() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_type_qualifier_1_0 = null;

        EObject lv_type_qualifier_list_linha_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:2874:2: ( ( () ( ( (lv_type_qualifier_1_0= ruletype_qualifier ) ) ( (lv_type_qualifier_list_linha_2_0= ruletype_qualifier_list_linha ) ) )? ) )
            // InternalAnsic.g:2875:2: ( () ( ( (lv_type_qualifier_1_0= ruletype_qualifier ) ) ( (lv_type_qualifier_list_linha_2_0= ruletype_qualifier_list_linha ) ) )? )
            {
            // InternalAnsic.g:2875:2: ( () ( ( (lv_type_qualifier_1_0= ruletype_qualifier ) ) ( (lv_type_qualifier_list_linha_2_0= ruletype_qualifier_list_linha ) ) )? )
            // InternalAnsic.g:2876:3: () ( ( (lv_type_qualifier_1_0= ruletype_qualifier ) ) ( (lv_type_qualifier_list_linha_2_0= ruletype_qualifier_list_linha ) ) )?
            {
            // InternalAnsic.g:2876:3: ()
            // InternalAnsic.g:2877:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getType_qualifier_list_linhaAccess().getTypeQualifierListLinhaAtionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:2886:3: ( ( (lv_type_qualifier_1_0= ruletype_qualifier ) ) ( (lv_type_qualifier_list_linha_2_0= ruletype_qualifier_list_linha ) ) )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( ((LA24_0>=33 && LA24_0<=36)) ) {
                alt24=1;
            }
            switch (alt24) {
                case 1 :
                    // InternalAnsic.g:2887:4: ( (lv_type_qualifier_1_0= ruletype_qualifier ) ) ( (lv_type_qualifier_list_linha_2_0= ruletype_qualifier_list_linha ) )
                    {
                    // InternalAnsic.g:2887:4: ( (lv_type_qualifier_1_0= ruletype_qualifier ) )
                    // InternalAnsic.g:2888:5: (lv_type_qualifier_1_0= ruletype_qualifier )
                    {
                    // InternalAnsic.g:2888:5: (lv_type_qualifier_1_0= ruletype_qualifier )
                    // InternalAnsic.g:2889:6: lv_type_qualifier_1_0= ruletype_qualifier
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getType_qualifier_list_linhaAccess().getType_qualifierType_qualifierParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_18);
                    lv_type_qualifier_1_0=ruletype_qualifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getType_qualifier_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"type_qualifier",
                      							lv_type_qualifier_1_0,
                      							"org.xtext.example.Ansic.type_qualifier");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:2906:4: ( (lv_type_qualifier_list_linha_2_0= ruletype_qualifier_list_linha ) )
                    // InternalAnsic.g:2907:5: (lv_type_qualifier_list_linha_2_0= ruletype_qualifier_list_linha )
                    {
                    // InternalAnsic.g:2907:5: (lv_type_qualifier_list_linha_2_0= ruletype_qualifier_list_linha )
                    // InternalAnsic.g:2908:6: lv_type_qualifier_list_linha_2_0= ruletype_qualifier_list_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getType_qualifier_list_linhaAccess().getType_qualifier_list_linhaType_qualifier_list_linhaParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_qualifier_list_linha_2_0=ruletype_qualifier_list_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getType_qualifier_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"type_qualifier_list_linha",
                      							lv_type_qualifier_list_linha_2_0,
                      							"org.xtext.example.Ansic.type_qualifier_list_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletype_qualifier_list_linha"


    // $ANTLR start "entryRuledirect_declarator"
    // InternalAnsic.g:2930:1: entryRuledirect_declarator returns [EObject current=null] : iv_ruledirect_declarator= ruledirect_declarator EOF ;
    public final EObject entryRuledirect_declarator() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledirect_declarator = null;


        try {
            // InternalAnsic.g:2930:58: (iv_ruledirect_declarator= ruledirect_declarator EOF )
            // InternalAnsic.g:2931:2: iv_ruledirect_declarator= ruledirect_declarator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDirect_declaratorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledirect_declarator=ruledirect_declarator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledirect_declarator; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledirect_declarator"


    // $ANTLR start "ruledirect_declarator"
    // InternalAnsic.g:2937:1: ruledirect_declarator returns [EObject current=null] : ( ( ( (lv_identifier_0_0= RULE_ID ) ) ( (lv_direct_declarator_linha_1_0= ruledirect_declarator_linha ) ) ) | (otherlv_2= '(' ( (lv_declarator_3_0= ruledeclarator ) ) otherlv_4= ')' ( (lv_direct_declarator_linha_5_0= ruledirect_declarator_linha ) ) ) ) ;
    public final EObject ruledirect_declarator() throws RecognitionException {
        EObject current = null;

        Token lv_identifier_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_direct_declarator_linha_1_0 = null;

        EObject lv_declarator_3_0 = null;

        EObject lv_direct_declarator_linha_5_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:2943:2: ( ( ( ( (lv_identifier_0_0= RULE_ID ) ) ( (lv_direct_declarator_linha_1_0= ruledirect_declarator_linha ) ) ) | (otherlv_2= '(' ( (lv_declarator_3_0= ruledeclarator ) ) otherlv_4= ')' ( (lv_direct_declarator_linha_5_0= ruledirect_declarator_linha ) ) ) ) )
            // InternalAnsic.g:2944:2: ( ( ( (lv_identifier_0_0= RULE_ID ) ) ( (lv_direct_declarator_linha_1_0= ruledirect_declarator_linha ) ) ) | (otherlv_2= '(' ( (lv_declarator_3_0= ruledeclarator ) ) otherlv_4= ')' ( (lv_direct_declarator_linha_5_0= ruledirect_declarator_linha ) ) ) )
            {
            // InternalAnsic.g:2944:2: ( ( ( (lv_identifier_0_0= RULE_ID ) ) ( (lv_direct_declarator_linha_1_0= ruledirect_declarator_linha ) ) ) | (otherlv_2= '(' ( (lv_declarator_3_0= ruledeclarator ) ) otherlv_4= ')' ( (lv_direct_declarator_linha_5_0= ruledirect_declarator_linha ) ) ) )
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==RULE_ID) ) {
                alt25=1;
            }
            else if ( (LA25_0==31) ) {
                alt25=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }
            switch (alt25) {
                case 1 :
                    // InternalAnsic.g:2945:3: ( ( (lv_identifier_0_0= RULE_ID ) ) ( (lv_direct_declarator_linha_1_0= ruledirect_declarator_linha ) ) )
                    {
                    // InternalAnsic.g:2945:3: ( ( (lv_identifier_0_0= RULE_ID ) ) ( (lv_direct_declarator_linha_1_0= ruledirect_declarator_linha ) ) )
                    // InternalAnsic.g:2946:4: ( (lv_identifier_0_0= RULE_ID ) ) ( (lv_direct_declarator_linha_1_0= ruledirect_declarator_linha ) )
                    {
                    // InternalAnsic.g:2946:4: ( (lv_identifier_0_0= RULE_ID ) )
                    // InternalAnsic.g:2947:5: (lv_identifier_0_0= RULE_ID )
                    {
                    // InternalAnsic.g:2947:5: (lv_identifier_0_0= RULE_ID )
                    // InternalAnsic.g:2948:6: lv_identifier_0_0= RULE_ID
                    {
                    lv_identifier_0_0=(Token)match(input,RULE_ID,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_identifier_0_0, grammarAccess.getDirect_declaratorAccess().getIdentifierIDTerminalRuleCall_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDirect_declaratorRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"identifier",
                      							lv_identifier_0_0,
                      							"org.eclipse.xtext.common.Terminals.ID");
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:2964:4: ( (lv_direct_declarator_linha_1_0= ruledirect_declarator_linha ) )
                    // InternalAnsic.g:2965:5: (lv_direct_declarator_linha_1_0= ruledirect_declarator_linha )
                    {
                    // InternalAnsic.g:2965:5: (lv_direct_declarator_linha_1_0= ruledirect_declarator_linha )
                    // InternalAnsic.g:2966:6: lv_direct_declarator_linha_1_0= ruledirect_declarator_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_declaratorAccess().getDirect_declarator_linhaDirect_declarator_linhaParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_direct_declarator_linha_1_0=ruledirect_declarator_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_declaratorRule());
                      						}
                      						set(
                      							current,
                      							"direct_declarator_linha",
                      							lv_direct_declarator_linha_1_0,
                      							"org.xtext.example.Ansic.direct_declarator_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:2985:3: (otherlv_2= '(' ( (lv_declarator_3_0= ruledeclarator ) ) otherlv_4= ')' ( (lv_direct_declarator_linha_5_0= ruledirect_declarator_linha ) ) )
                    {
                    // InternalAnsic.g:2985:3: (otherlv_2= '(' ( (lv_declarator_3_0= ruledeclarator ) ) otherlv_4= ')' ( (lv_direct_declarator_linha_5_0= ruledirect_declarator_linha ) ) )
                    // InternalAnsic.g:2986:4: otherlv_2= '(' ( (lv_declarator_3_0= ruledeclarator ) ) otherlv_4= ')' ( (lv_direct_declarator_linha_5_0= ruledirect_declarator_linha ) )
                    {
                    otherlv_2=(Token)match(input,31,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getDirect_declaratorAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:2990:4: ( (lv_declarator_3_0= ruledeclarator ) )
                    // InternalAnsic.g:2991:5: (lv_declarator_3_0= ruledeclarator )
                    {
                    // InternalAnsic.g:2991:5: (lv_declarator_3_0= ruledeclarator )
                    // InternalAnsic.g:2992:6: lv_declarator_3_0= ruledeclarator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_declaratorAccess().getDeclaratorDeclaratorParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_declarator_3_0=ruledeclarator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_declaratorRule());
                      						}
                      						set(
                      							current,
                      							"declarator",
                      							lv_declarator_3_0,
                      							"org.xtext.example.Ansic.declarator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,32,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getDirect_declaratorAccess().getRightParenthesisKeyword_1_2());
                      			
                    }
                    // InternalAnsic.g:3013:4: ( (lv_direct_declarator_linha_5_0= ruledirect_declarator_linha ) )
                    // InternalAnsic.g:3014:5: (lv_direct_declarator_linha_5_0= ruledirect_declarator_linha )
                    {
                    // InternalAnsic.g:3014:5: (lv_direct_declarator_linha_5_0= ruledirect_declarator_linha )
                    // InternalAnsic.g:3015:6: lv_direct_declarator_linha_5_0= ruledirect_declarator_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_declaratorAccess().getDirect_declarator_linhaDirect_declarator_linhaParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_direct_declarator_linha_5_0=ruledirect_declarator_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_declaratorRule());
                      						}
                      						set(
                      							current,
                      							"direct_declarator_linha",
                      							lv_direct_declarator_linha_5_0,
                      							"org.xtext.example.Ansic.direct_declarator_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledirect_declarator"


    // $ANTLR start "entryRuledirect_declarator_linha"
    // InternalAnsic.g:3037:1: entryRuledirect_declarator_linha returns [EObject current=null] : iv_ruledirect_declarator_linha= ruledirect_declarator_linha EOF ;
    public final EObject entryRuledirect_declarator_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledirect_declarator_linha = null;


        try {
            // InternalAnsic.g:3037:64: (iv_ruledirect_declarator_linha= ruledirect_declarator_linha EOF )
            // InternalAnsic.g:3038:2: iv_ruledirect_declarator_linha= ruledirect_declarator_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDirect_declarator_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledirect_declarator_linha=ruledirect_declarator_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledirect_declarator_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledirect_declarator_linha"


    // $ANTLR start "ruledirect_declarator_linha"
    // InternalAnsic.g:3044:1: ruledirect_declarator_linha returns [EObject current=null] : ( () ( ( (lv_direct_declarator_complemento_1_0= ruledirect_declarator_complemento ) ) ( (lv_direct_declarator_linha_2_0= ruledirect_declarator_linha ) ) )? ) ;
    public final EObject ruledirect_declarator_linha() throws RecognitionException {
        EObject current = null;

        EObject lv_direct_declarator_complemento_1_0 = null;

        EObject lv_direct_declarator_linha_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:3050:2: ( ( () ( ( (lv_direct_declarator_complemento_1_0= ruledirect_declarator_complemento ) ) ( (lv_direct_declarator_linha_2_0= ruledirect_declarator_linha ) ) )? ) )
            // InternalAnsic.g:3051:2: ( () ( ( (lv_direct_declarator_complemento_1_0= ruledirect_declarator_complemento ) ) ( (lv_direct_declarator_linha_2_0= ruledirect_declarator_linha ) ) )? )
            {
            // InternalAnsic.g:3051:2: ( () ( ( (lv_direct_declarator_complemento_1_0= ruledirect_declarator_complemento ) ) ( (lv_direct_declarator_linha_2_0= ruledirect_declarator_linha ) ) )? )
            // InternalAnsic.g:3052:3: () ( ( (lv_direct_declarator_complemento_1_0= ruledirect_declarator_complemento ) ) ( (lv_direct_declarator_linha_2_0= ruledirect_declarator_linha ) ) )?
            {
            // InternalAnsic.g:3052:3: ()
            // InternalAnsic.g:3053:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDirect_declarator_linhaAccess().getDirectDeclaratorLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:3062:3: ( ( (lv_direct_declarator_complemento_1_0= ruledirect_declarator_complemento ) ) ( (lv_direct_declarator_linha_2_0= ruledirect_declarator_linha ) ) )?
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==31||LA26_0==65) ) {
                alt26=1;
            }
            switch (alt26) {
                case 1 :
                    // InternalAnsic.g:3063:4: ( (lv_direct_declarator_complemento_1_0= ruledirect_declarator_complemento ) ) ( (lv_direct_declarator_linha_2_0= ruledirect_declarator_linha ) )
                    {
                    // InternalAnsic.g:3063:4: ( (lv_direct_declarator_complemento_1_0= ruledirect_declarator_complemento ) )
                    // InternalAnsic.g:3064:5: (lv_direct_declarator_complemento_1_0= ruledirect_declarator_complemento )
                    {
                    // InternalAnsic.g:3064:5: (lv_direct_declarator_complemento_1_0= ruledirect_declarator_complemento )
                    // InternalAnsic.g:3065:6: lv_direct_declarator_complemento_1_0= ruledirect_declarator_complemento
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_declarator_linhaAccess().getDirect_declarator_complementoDirect_declarator_complementoParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_20);
                    lv_direct_declarator_complemento_1_0=ruledirect_declarator_complemento();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_declarator_linhaRule());
                      						}
                      						set(
                      							current,
                      							"direct_declarator_complemento",
                      							lv_direct_declarator_complemento_1_0,
                      							"org.xtext.example.Ansic.direct_declarator_complemento");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:3082:4: ( (lv_direct_declarator_linha_2_0= ruledirect_declarator_linha ) )
                    // InternalAnsic.g:3083:5: (lv_direct_declarator_linha_2_0= ruledirect_declarator_linha )
                    {
                    // InternalAnsic.g:3083:5: (lv_direct_declarator_linha_2_0= ruledirect_declarator_linha )
                    // InternalAnsic.g:3084:6: lv_direct_declarator_linha_2_0= ruledirect_declarator_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_declarator_linhaAccess().getDirect_declarator_linhaDirect_declarator_linhaParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_direct_declarator_linha_2_0=ruledirect_declarator_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_declarator_linhaRule());
                      						}
                      						set(
                      							current,
                      							"direct_declarator_linha",
                      							lv_direct_declarator_linha_2_0,
                      							"org.xtext.example.Ansic.direct_declarator_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledirect_declarator_linha"


    // $ANTLR start "entryRuledirect_declarator_complemento"
    // InternalAnsic.g:3106:1: entryRuledirect_declarator_complemento returns [EObject current=null] : iv_ruledirect_declarator_complemento= ruledirect_declarator_complemento EOF ;
    public final EObject entryRuledirect_declarator_complemento() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledirect_declarator_complemento = null;


        try {
            // InternalAnsic.g:3106:70: (iv_ruledirect_declarator_complemento= ruledirect_declarator_complemento EOF )
            // InternalAnsic.g:3107:2: iv_ruledirect_declarator_complemento= ruledirect_declarator_complemento EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDirect_declarator_complementoRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledirect_declarator_complemento=ruledirect_declarator_complemento();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledirect_declarator_complemento; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledirect_declarator_complemento"


    // $ANTLR start "ruledirect_declarator_complemento"
    // InternalAnsic.g:3113:1: ruledirect_declarator_complemento returns [EObject current=null] : ( (otherlv_0= '[' otherlv_1= ']' ) | (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' ) | (otherlv_5= '[' otherlv_6= 'static' ( (lv_type_qualifier_list_7_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' ) | (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' ) | (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) otherlv_16= '*' otherlv_17= ']' ) | (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' ) | (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_25_0= ruleassignment_expression ) ) otherlv_26= ']' ) | (otherlv_27= '[' ( (lv_type_qualifier_list_28_0= ruletype_qualifier_list ) ) otherlv_29= ']' ) | (otherlv_30= '[' ( (lv_assignment_expression_31_0= ruleassignment_expression ) ) otherlv_32= ']' ) | (otherlv_33= '(' ( (lv_parameter_type_list_34_0= ruleparameter_type_list ) ) otherlv_35= ')' ) | (otherlv_36= '(' otherlv_37= ')' ) | (otherlv_38= '(' ( (lv_identifier_list_39_0= ruleidentifier_list ) ) otherlv_40= ')' ) ) ;
    public final EObject ruledirect_declarator_complemento() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token otherlv_29=null;
        Token otherlv_30=null;
        Token otherlv_32=null;
        Token otherlv_33=null;
        Token otherlv_35=null;
        Token otherlv_36=null;
        Token otherlv_37=null;
        Token otherlv_38=null;
        Token otherlv_40=null;
        EObject lv_type_qualifier_list_7_0 = null;

        EObject lv_assignment_expression_8_0 = null;

        EObject lv_assignment_expression_12_0 = null;

        EObject lv_type_qualifier_list_15_0 = null;

        EObject lv_type_qualifier_list_19_0 = null;

        EObject lv_assignment_expression_21_0 = null;

        EObject lv_type_qualifier_list_24_0 = null;

        EObject lv_assignment_expression_25_0 = null;

        EObject lv_type_qualifier_list_28_0 = null;

        EObject lv_assignment_expression_31_0 = null;

        EObject lv_parameter_type_list_34_0 = null;

        EObject lv_identifier_list_39_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:3119:2: ( ( (otherlv_0= '[' otherlv_1= ']' ) | (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' ) | (otherlv_5= '[' otherlv_6= 'static' ( (lv_type_qualifier_list_7_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' ) | (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' ) | (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) otherlv_16= '*' otherlv_17= ']' ) | (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' ) | (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_25_0= ruleassignment_expression ) ) otherlv_26= ']' ) | (otherlv_27= '[' ( (lv_type_qualifier_list_28_0= ruletype_qualifier_list ) ) otherlv_29= ']' ) | (otherlv_30= '[' ( (lv_assignment_expression_31_0= ruleassignment_expression ) ) otherlv_32= ']' ) | (otherlv_33= '(' ( (lv_parameter_type_list_34_0= ruleparameter_type_list ) ) otherlv_35= ')' ) | (otherlv_36= '(' otherlv_37= ')' ) | (otherlv_38= '(' ( (lv_identifier_list_39_0= ruleidentifier_list ) ) otherlv_40= ')' ) ) )
            // InternalAnsic.g:3120:2: ( (otherlv_0= '[' otherlv_1= ']' ) | (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' ) | (otherlv_5= '[' otherlv_6= 'static' ( (lv_type_qualifier_list_7_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' ) | (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' ) | (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) otherlv_16= '*' otherlv_17= ']' ) | (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' ) | (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_25_0= ruleassignment_expression ) ) otherlv_26= ']' ) | (otherlv_27= '[' ( (lv_type_qualifier_list_28_0= ruletype_qualifier_list ) ) otherlv_29= ']' ) | (otherlv_30= '[' ( (lv_assignment_expression_31_0= ruleassignment_expression ) ) otherlv_32= ']' ) | (otherlv_33= '(' ( (lv_parameter_type_list_34_0= ruleparameter_type_list ) ) otherlv_35= ')' ) | (otherlv_36= '(' otherlv_37= ')' ) | (otherlv_38= '(' ( (lv_identifier_list_39_0= ruleidentifier_list ) ) otherlv_40= ')' ) )
            {
            // InternalAnsic.g:3120:2: ( (otherlv_0= '[' otherlv_1= ']' ) | (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' ) | (otherlv_5= '[' otherlv_6= 'static' ( (lv_type_qualifier_list_7_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' ) | (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' ) | (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) otherlv_16= '*' otherlv_17= ']' ) | (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' ) | (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_25_0= ruleassignment_expression ) ) otherlv_26= ']' ) | (otherlv_27= '[' ( (lv_type_qualifier_list_28_0= ruletype_qualifier_list ) ) otherlv_29= ']' ) | (otherlv_30= '[' ( (lv_assignment_expression_31_0= ruleassignment_expression ) ) otherlv_32= ']' ) | (otherlv_33= '(' ( (lv_parameter_type_list_34_0= ruleparameter_type_list ) ) otherlv_35= ')' ) | (otherlv_36= '(' otherlv_37= ')' ) | (otherlv_38= '(' ( (lv_identifier_list_39_0= ruleidentifier_list ) ) otherlv_40= ')' ) )
            int alt27=12;
            alt27 = dfa27.predict(input);
            switch (alt27) {
                case 1 :
                    // InternalAnsic.g:3121:3: (otherlv_0= '[' otherlv_1= ']' )
                    {
                    // InternalAnsic.g:3121:3: (otherlv_0= '[' otherlv_1= ']' )
                    // InternalAnsic.g:3122:4: otherlv_0= '[' otherlv_1= ']'
                    {
                    otherlv_0=(Token)match(input,65,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getDirect_declarator_complementoAccess().getLeftSquareBracketKeyword_0_0());
                      			
                    }
                    otherlv_1=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getDirect_declarator_complementoAccess().getRightSquareBracketKeyword_0_1());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:3132:3: (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' )
                    {
                    // InternalAnsic.g:3132:3: (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' )
                    // InternalAnsic.g:3133:4: otherlv_2= '[' otherlv_3= '*' otherlv_4= ']'
                    {
                    otherlv_2=(Token)match(input,65,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getDirect_declarator_complementoAccess().getLeftSquareBracketKeyword_1_0());
                      			
                    }
                    otherlv_3=(Token)match(input,64,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getDirect_declarator_complementoAccess().getAsteriskKeyword_1_1());
                      			
                    }
                    otherlv_4=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getDirect_declarator_complementoAccess().getRightSquareBracketKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:3147:3: (otherlv_5= '[' otherlv_6= 'static' ( (lv_type_qualifier_list_7_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' )
                    {
                    // InternalAnsic.g:3147:3: (otherlv_5= '[' otherlv_6= 'static' ( (lv_type_qualifier_list_7_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' )
                    // InternalAnsic.g:3148:4: otherlv_5= '[' otherlv_6= 'static' ( (lv_type_qualifier_list_7_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']'
                    {
                    otherlv_5=(Token)match(input,65,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getDirect_declarator_complementoAccess().getLeftSquareBracketKeyword_2_0());
                      			
                    }
                    otherlv_6=(Token)match(input,60,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getDirect_declarator_complementoAccess().getStaticKeyword_2_1());
                      			
                    }
                    // InternalAnsic.g:3156:4: ( (lv_type_qualifier_list_7_0= ruletype_qualifier_list ) )
                    // InternalAnsic.g:3157:5: (lv_type_qualifier_list_7_0= ruletype_qualifier_list )
                    {
                    // InternalAnsic.g:3157:5: (lv_type_qualifier_list_7_0= ruletype_qualifier_list )
                    // InternalAnsic.g:3158:6: lv_type_qualifier_list_7_0= ruletype_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getType_qualifier_listType_qualifier_listParserRuleCall_2_2_0());
                      					
                    }
                    pushFollow(FOLLOW_8);
                    lv_type_qualifier_list_7_0=ruletype_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_declarator_complementoRule());
                      						}
                      						set(
                      							current,
                      							"type_qualifier_list",
                      							lv_type_qualifier_list_7_0,
                      							"org.xtext.example.Ansic.type_qualifier_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:3175:4: ( (lv_assignment_expression_8_0= ruleassignment_expression ) )
                    // InternalAnsic.g:3176:5: (lv_assignment_expression_8_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:3176:5: (lv_assignment_expression_8_0= ruleassignment_expression )
                    // InternalAnsic.g:3177:6: lv_assignment_expression_8_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getAssignment_expressionAssignment_expressionParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_assignment_expression_8_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_declarator_complementoRule());
                      						}
                      						set(
                      							current,
                      							"assignment_expression",
                      							lv_assignment_expression_8_0,
                      							"org.xtext.example.Ansic.assignment_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getDirect_declarator_complementoAccess().getRightSquareBracketKeyword_2_4());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalAnsic.g:3200:3: (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' )
                    {
                    // InternalAnsic.g:3200:3: (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' )
                    // InternalAnsic.g:3201:4: otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']'
                    {
                    otherlv_10=(Token)match(input,65,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getDirect_declarator_complementoAccess().getLeftSquareBracketKeyword_3_0());
                      			
                    }
                    otherlv_11=(Token)match(input,60,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getDirect_declarator_complementoAccess().getStaticKeyword_3_1());
                      			
                    }
                    // InternalAnsic.g:3209:4: ( (lv_assignment_expression_12_0= ruleassignment_expression ) )
                    // InternalAnsic.g:3210:5: (lv_assignment_expression_12_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:3210:5: (lv_assignment_expression_12_0= ruleassignment_expression )
                    // InternalAnsic.g:3211:6: lv_assignment_expression_12_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getAssignment_expressionAssignment_expressionParserRuleCall_3_2_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_assignment_expression_12_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_declarator_complementoRule());
                      						}
                      						set(
                      							current,
                      							"assignment_expression",
                      							lv_assignment_expression_12_0,
                      							"org.xtext.example.Ansic.assignment_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_13=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getDirect_declarator_complementoAccess().getRightSquareBracketKeyword_3_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalAnsic.g:3234:3: (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) otherlv_16= '*' otherlv_17= ']' )
                    {
                    // InternalAnsic.g:3234:3: (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) otherlv_16= '*' otherlv_17= ']' )
                    // InternalAnsic.g:3235:4: otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) otherlv_16= '*' otherlv_17= ']'
                    {
                    otherlv_14=(Token)match(input,65,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getDirect_declarator_complementoAccess().getLeftSquareBracketKeyword_4_0());
                      			
                    }
                    // InternalAnsic.g:3239:4: ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) )
                    // InternalAnsic.g:3240:5: (lv_type_qualifier_list_15_0= ruletype_qualifier_list )
                    {
                    // InternalAnsic.g:3240:5: (lv_type_qualifier_list_15_0= ruletype_qualifier_list )
                    // InternalAnsic.g:3241:6: lv_type_qualifier_list_15_0= ruletype_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getType_qualifier_listType_qualifier_listParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    lv_type_qualifier_list_15_0=ruletype_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_declarator_complementoRule());
                      						}
                      						set(
                      							current,
                      							"type_qualifier_list",
                      							lv_type_qualifier_list_15_0,
                      							"org.xtext.example.Ansic.type_qualifier_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_16=(Token)match(input,64,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_16, grammarAccess.getDirect_declarator_complementoAccess().getAsteriskKeyword_4_2());
                      			
                    }
                    otherlv_17=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getDirect_declarator_complementoAccess().getRightSquareBracketKeyword_4_3());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalAnsic.g:3268:3: (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' )
                    {
                    // InternalAnsic.g:3268:3: (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' )
                    // InternalAnsic.g:3269:4: otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']'
                    {
                    otherlv_18=(Token)match(input,65,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getDirect_declarator_complementoAccess().getLeftSquareBracketKeyword_5_0());
                      			
                    }
                    // InternalAnsic.g:3273:4: ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) )
                    // InternalAnsic.g:3274:5: (lv_type_qualifier_list_19_0= ruletype_qualifier_list )
                    {
                    // InternalAnsic.g:3274:5: (lv_type_qualifier_list_19_0= ruletype_qualifier_list )
                    // InternalAnsic.g:3275:6: lv_type_qualifier_list_19_0= ruletype_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getType_qualifier_listType_qualifier_listParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_22);
                    lv_type_qualifier_list_19_0=ruletype_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_declarator_complementoRule());
                      						}
                      						set(
                      							current,
                      							"type_qualifier_list",
                      							lv_type_qualifier_list_19_0,
                      							"org.xtext.example.Ansic.type_qualifier_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_20=(Token)match(input,60,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_20, grammarAccess.getDirect_declarator_complementoAccess().getStaticKeyword_5_2());
                      			
                    }
                    // InternalAnsic.g:3296:4: ( (lv_assignment_expression_21_0= ruleassignment_expression ) )
                    // InternalAnsic.g:3297:5: (lv_assignment_expression_21_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:3297:5: (lv_assignment_expression_21_0= ruleassignment_expression )
                    // InternalAnsic.g:3298:6: lv_assignment_expression_21_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getAssignment_expressionAssignment_expressionParserRuleCall_5_3_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_assignment_expression_21_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_declarator_complementoRule());
                      						}
                      						set(
                      							current,
                      							"assignment_expression",
                      							lv_assignment_expression_21_0,
                      							"org.xtext.example.Ansic.assignment_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_22=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_22, grammarAccess.getDirect_declarator_complementoAccess().getRightSquareBracketKeyword_5_4());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalAnsic.g:3321:3: (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_25_0= ruleassignment_expression ) ) otherlv_26= ']' )
                    {
                    // InternalAnsic.g:3321:3: (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_25_0= ruleassignment_expression ) ) otherlv_26= ']' )
                    // InternalAnsic.g:3322:4: otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_25_0= ruleassignment_expression ) ) otherlv_26= ']'
                    {
                    otherlv_23=(Token)match(input,65,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_23, grammarAccess.getDirect_declarator_complementoAccess().getLeftSquareBracketKeyword_6_0());
                      			
                    }
                    // InternalAnsic.g:3326:4: ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) )
                    // InternalAnsic.g:3327:5: (lv_type_qualifier_list_24_0= ruletype_qualifier_list )
                    {
                    // InternalAnsic.g:3327:5: (lv_type_qualifier_list_24_0= ruletype_qualifier_list )
                    // InternalAnsic.g:3328:6: lv_type_qualifier_list_24_0= ruletype_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getType_qualifier_listType_qualifier_listParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_8);
                    lv_type_qualifier_list_24_0=ruletype_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_declarator_complementoRule());
                      						}
                      						set(
                      							current,
                      							"type_qualifier_list",
                      							lv_type_qualifier_list_24_0,
                      							"org.xtext.example.Ansic.type_qualifier_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:3345:4: ( (lv_assignment_expression_25_0= ruleassignment_expression ) )
                    // InternalAnsic.g:3346:5: (lv_assignment_expression_25_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:3346:5: (lv_assignment_expression_25_0= ruleassignment_expression )
                    // InternalAnsic.g:3347:6: lv_assignment_expression_25_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getAssignment_expressionAssignment_expressionParserRuleCall_6_2_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_assignment_expression_25_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_declarator_complementoRule());
                      						}
                      						set(
                      							current,
                      							"assignment_expression",
                      							lv_assignment_expression_25_0,
                      							"org.xtext.example.Ansic.assignment_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_26=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_26, grammarAccess.getDirect_declarator_complementoAccess().getRightSquareBracketKeyword_6_3());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalAnsic.g:3370:3: (otherlv_27= '[' ( (lv_type_qualifier_list_28_0= ruletype_qualifier_list ) ) otherlv_29= ']' )
                    {
                    // InternalAnsic.g:3370:3: (otherlv_27= '[' ( (lv_type_qualifier_list_28_0= ruletype_qualifier_list ) ) otherlv_29= ']' )
                    // InternalAnsic.g:3371:4: otherlv_27= '[' ( (lv_type_qualifier_list_28_0= ruletype_qualifier_list ) ) otherlv_29= ']'
                    {
                    otherlv_27=(Token)match(input,65,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_27, grammarAccess.getDirect_declarator_complementoAccess().getLeftSquareBracketKeyword_7_0());
                      			
                    }
                    // InternalAnsic.g:3375:4: ( (lv_type_qualifier_list_28_0= ruletype_qualifier_list ) )
                    // InternalAnsic.g:3376:5: (lv_type_qualifier_list_28_0= ruletype_qualifier_list )
                    {
                    // InternalAnsic.g:3376:5: (lv_type_qualifier_list_28_0= ruletype_qualifier_list )
                    // InternalAnsic.g:3377:6: lv_type_qualifier_list_28_0= ruletype_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getType_qualifier_listType_qualifier_listParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_type_qualifier_list_28_0=ruletype_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_declarator_complementoRule());
                      						}
                      						set(
                      							current,
                      							"type_qualifier_list",
                      							lv_type_qualifier_list_28_0,
                      							"org.xtext.example.Ansic.type_qualifier_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_29=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_29, grammarAccess.getDirect_declarator_complementoAccess().getRightSquareBracketKeyword_7_2());
                      			
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalAnsic.g:3400:3: (otherlv_30= '[' ( (lv_assignment_expression_31_0= ruleassignment_expression ) ) otherlv_32= ']' )
                    {
                    // InternalAnsic.g:3400:3: (otherlv_30= '[' ( (lv_assignment_expression_31_0= ruleassignment_expression ) ) otherlv_32= ']' )
                    // InternalAnsic.g:3401:4: otherlv_30= '[' ( (lv_assignment_expression_31_0= ruleassignment_expression ) ) otherlv_32= ']'
                    {
                    otherlv_30=(Token)match(input,65,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_30, grammarAccess.getDirect_declarator_complementoAccess().getLeftSquareBracketKeyword_8_0());
                      			
                    }
                    // InternalAnsic.g:3405:4: ( (lv_assignment_expression_31_0= ruleassignment_expression ) )
                    // InternalAnsic.g:3406:5: (lv_assignment_expression_31_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:3406:5: (lv_assignment_expression_31_0= ruleassignment_expression )
                    // InternalAnsic.g:3407:6: lv_assignment_expression_31_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getAssignment_expressionAssignment_expressionParserRuleCall_8_1_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_assignment_expression_31_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_declarator_complementoRule());
                      						}
                      						set(
                      							current,
                      							"assignment_expression",
                      							lv_assignment_expression_31_0,
                      							"org.xtext.example.Ansic.assignment_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_32=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_32, grammarAccess.getDirect_declarator_complementoAccess().getRightSquareBracketKeyword_8_2());
                      			
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalAnsic.g:3430:3: (otherlv_33= '(' ( (lv_parameter_type_list_34_0= ruleparameter_type_list ) ) otherlv_35= ')' )
                    {
                    // InternalAnsic.g:3430:3: (otherlv_33= '(' ( (lv_parameter_type_list_34_0= ruleparameter_type_list ) ) otherlv_35= ')' )
                    // InternalAnsic.g:3431:4: otherlv_33= '(' ( (lv_parameter_type_list_34_0= ruleparameter_type_list ) ) otherlv_35= ')'
                    {
                    otherlv_33=(Token)match(input,31,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_33, grammarAccess.getDirect_declarator_complementoAccess().getLeftParenthesisKeyword_9_0());
                      			
                    }
                    // InternalAnsic.g:3435:4: ( (lv_parameter_type_list_34_0= ruleparameter_type_list ) )
                    // InternalAnsic.g:3436:5: (lv_parameter_type_list_34_0= ruleparameter_type_list )
                    {
                    // InternalAnsic.g:3436:5: (lv_parameter_type_list_34_0= ruleparameter_type_list )
                    // InternalAnsic.g:3437:6: lv_parameter_type_list_34_0= ruleparameter_type_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getParameter_type_listParameter_type_listParserRuleCall_9_1_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_parameter_type_list_34_0=ruleparameter_type_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_declarator_complementoRule());
                      						}
                      						set(
                      							current,
                      							"parameter_type_list",
                      							lv_parameter_type_list_34_0,
                      							"org.xtext.example.Ansic.parameter_type_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_35=(Token)match(input,32,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_35, grammarAccess.getDirect_declarator_complementoAccess().getRightParenthesisKeyword_9_2());
                      			
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalAnsic.g:3460:3: (otherlv_36= '(' otherlv_37= ')' )
                    {
                    // InternalAnsic.g:3460:3: (otherlv_36= '(' otherlv_37= ')' )
                    // InternalAnsic.g:3461:4: otherlv_36= '(' otherlv_37= ')'
                    {
                    otherlv_36=(Token)match(input,31,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_36, grammarAccess.getDirect_declarator_complementoAccess().getLeftParenthesisKeyword_10_0());
                      			
                    }
                    otherlv_37=(Token)match(input,32,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_37, grammarAccess.getDirect_declarator_complementoAccess().getRightParenthesisKeyword_10_1());
                      			
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalAnsic.g:3471:3: (otherlv_38= '(' ( (lv_identifier_list_39_0= ruleidentifier_list ) ) otherlv_40= ')' )
                    {
                    // InternalAnsic.g:3471:3: (otherlv_38= '(' ( (lv_identifier_list_39_0= ruleidentifier_list ) ) otherlv_40= ')' )
                    // InternalAnsic.g:3472:4: otherlv_38= '(' ( (lv_identifier_list_39_0= ruleidentifier_list ) ) otherlv_40= ')'
                    {
                    otherlv_38=(Token)match(input,31,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_38, grammarAccess.getDirect_declarator_complementoAccess().getLeftParenthesisKeyword_11_0());
                      			
                    }
                    // InternalAnsic.g:3476:4: ( (lv_identifier_list_39_0= ruleidentifier_list ) )
                    // InternalAnsic.g:3477:5: (lv_identifier_list_39_0= ruleidentifier_list )
                    {
                    // InternalAnsic.g:3477:5: (lv_identifier_list_39_0= ruleidentifier_list )
                    // InternalAnsic.g:3478:6: lv_identifier_list_39_0= ruleidentifier_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getIdentifier_listIdentifier_listParserRuleCall_11_1_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_identifier_list_39_0=ruleidentifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_declarator_complementoRule());
                      						}
                      						set(
                      							current,
                      							"identifier_list",
                      							lv_identifier_list_39_0,
                      							"org.xtext.example.Ansic.identifier_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_40=(Token)match(input,32,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_40, grammarAccess.getDirect_declarator_complementoAccess().getRightParenthesisKeyword_11_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledirect_declarator_complemento"


    // $ANTLR start "entryRuleparameter_type_list"
    // InternalAnsic.g:3504:1: entryRuleparameter_type_list returns [EObject current=null] : iv_ruleparameter_type_list= ruleparameter_type_list EOF ;
    public final EObject entryRuleparameter_type_list() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleparameter_type_list = null;


        try {
            // InternalAnsic.g:3504:60: (iv_ruleparameter_type_list= ruleparameter_type_list EOF )
            // InternalAnsic.g:3505:2: iv_ruleparameter_type_list= ruleparameter_type_list EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameter_type_listRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleparameter_type_list=ruleparameter_type_list();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleparameter_type_list; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleparameter_type_list"


    // $ANTLR start "ruleparameter_type_list"
    // InternalAnsic.g:3511:1: ruleparameter_type_list returns [EObject current=null] : ( ( ( (lv_parameter_list_0_0= ruleparameter_list ) ) otherlv_1= ',' otherlv_2= '...' ) | ( (lv_parameter_list_3_0= ruleparameter_list ) ) ) ;
    public final EObject ruleparameter_type_list() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_parameter_list_0_0 = null;

        EObject lv_parameter_list_3_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:3517:2: ( ( ( ( (lv_parameter_list_0_0= ruleparameter_list ) ) otherlv_1= ',' otherlv_2= '...' ) | ( (lv_parameter_list_3_0= ruleparameter_list ) ) ) )
            // InternalAnsic.g:3518:2: ( ( ( (lv_parameter_list_0_0= ruleparameter_list ) ) otherlv_1= ',' otherlv_2= '...' ) | ( (lv_parameter_list_3_0= ruleparameter_list ) ) )
            {
            // InternalAnsic.g:3518:2: ( ( ( (lv_parameter_list_0_0= ruleparameter_list ) ) otherlv_1= ',' otherlv_2= '...' ) | ( (lv_parameter_list_3_0= ruleparameter_list ) ) )
            int alt28=2;
            alt28 = dfa28.predict(input);
            switch (alt28) {
                case 1 :
                    // InternalAnsic.g:3519:3: ( ( (lv_parameter_list_0_0= ruleparameter_list ) ) otherlv_1= ',' otherlv_2= '...' )
                    {
                    // InternalAnsic.g:3519:3: ( ( (lv_parameter_list_0_0= ruleparameter_list ) ) otherlv_1= ',' otherlv_2= '...' )
                    // InternalAnsic.g:3520:4: ( (lv_parameter_list_0_0= ruleparameter_list ) ) otherlv_1= ',' otherlv_2= '...'
                    {
                    // InternalAnsic.g:3520:4: ( (lv_parameter_list_0_0= ruleparameter_list ) )
                    // InternalAnsic.g:3521:5: (lv_parameter_list_0_0= ruleparameter_list )
                    {
                    // InternalAnsic.g:3521:5: (lv_parameter_list_0_0= ruleparameter_list )
                    // InternalAnsic.g:3522:6: lv_parameter_list_0_0= ruleparameter_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParameter_type_listAccess().getParameter_listParameter_listParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_parameter_list_0_0=ruleparameter_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParameter_type_listRule());
                      						}
                      						set(
                      							current,
                      							"parameter_list",
                      							lv_parameter_list_0_0,
                      							"org.xtext.example.Ansic.parameter_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,53,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getParameter_type_listAccess().getCommaKeyword_0_1());
                      			
                    }
                    otherlv_2=(Token)match(input,67,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getParameter_type_listAccess().getFullStopFullStopFullStopKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:3549:3: ( (lv_parameter_list_3_0= ruleparameter_list ) )
                    {
                    // InternalAnsic.g:3549:3: ( (lv_parameter_list_3_0= ruleparameter_list ) )
                    // InternalAnsic.g:3550:4: (lv_parameter_list_3_0= ruleparameter_list )
                    {
                    // InternalAnsic.g:3550:4: (lv_parameter_list_3_0= ruleparameter_list )
                    // InternalAnsic.g:3551:5: lv_parameter_list_3_0= ruleparameter_list
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getParameter_type_listAccess().getParameter_listParameter_listParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_parameter_list_3_0=ruleparameter_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getParameter_type_listRule());
                      					}
                      					set(
                      						current,
                      						"parameter_list",
                      						lv_parameter_list_3_0,
                      						"org.xtext.example.Ansic.parameter_list");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleparameter_type_list"


    // $ANTLR start "entryRuleparameter_list"
    // InternalAnsic.g:3572:1: entryRuleparameter_list returns [EObject current=null] : iv_ruleparameter_list= ruleparameter_list EOF ;
    public final EObject entryRuleparameter_list() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleparameter_list = null;


        try {
            // InternalAnsic.g:3572:55: (iv_ruleparameter_list= ruleparameter_list EOF )
            // InternalAnsic.g:3573:2: iv_ruleparameter_list= ruleparameter_list EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameter_listRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleparameter_list=ruleparameter_list();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleparameter_list; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleparameter_list"


    // $ANTLR start "ruleparameter_list"
    // InternalAnsic.g:3579:1: ruleparameter_list returns [EObject current=null] : ( ( (lv_parameter_declaration_0_0= ruleparameter_declaration ) ) ( (lv_parameter_list_linha_1_0= ruleparameter_list_linha ) ) ) ;
    public final EObject ruleparameter_list() throws RecognitionException {
        EObject current = null;

        EObject lv_parameter_declaration_0_0 = null;

        EObject lv_parameter_list_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:3585:2: ( ( ( (lv_parameter_declaration_0_0= ruleparameter_declaration ) ) ( (lv_parameter_list_linha_1_0= ruleparameter_list_linha ) ) ) )
            // InternalAnsic.g:3586:2: ( ( (lv_parameter_declaration_0_0= ruleparameter_declaration ) ) ( (lv_parameter_list_linha_1_0= ruleparameter_list_linha ) ) )
            {
            // InternalAnsic.g:3586:2: ( ( (lv_parameter_declaration_0_0= ruleparameter_declaration ) ) ( (lv_parameter_list_linha_1_0= ruleparameter_list_linha ) ) )
            // InternalAnsic.g:3587:3: ( (lv_parameter_declaration_0_0= ruleparameter_declaration ) ) ( (lv_parameter_list_linha_1_0= ruleparameter_list_linha ) )
            {
            // InternalAnsic.g:3587:3: ( (lv_parameter_declaration_0_0= ruleparameter_declaration ) )
            // InternalAnsic.g:3588:4: (lv_parameter_declaration_0_0= ruleparameter_declaration )
            {
            // InternalAnsic.g:3588:4: (lv_parameter_declaration_0_0= ruleparameter_declaration )
            // InternalAnsic.g:3589:5: lv_parameter_declaration_0_0= ruleparameter_declaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getParameter_listAccess().getParameter_declarationParameter_declarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_12);
            lv_parameter_declaration_0_0=ruleparameter_declaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getParameter_listRule());
              					}
              					set(
              						current,
              						"parameter_declaration",
              						lv_parameter_declaration_0_0,
              						"org.xtext.example.Ansic.parameter_declaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:3606:3: ( (lv_parameter_list_linha_1_0= ruleparameter_list_linha ) )
            // InternalAnsic.g:3607:4: (lv_parameter_list_linha_1_0= ruleparameter_list_linha )
            {
            // InternalAnsic.g:3607:4: (lv_parameter_list_linha_1_0= ruleparameter_list_linha )
            // InternalAnsic.g:3608:5: lv_parameter_list_linha_1_0= ruleparameter_list_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getParameter_listAccess().getParameter_list_linhaParameter_list_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_parameter_list_linha_1_0=ruleparameter_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getParameter_listRule());
              					}
              					set(
              						current,
              						"parameter_list_linha",
              						lv_parameter_list_linha_1_0,
              						"org.xtext.example.Ansic.parameter_list_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleparameter_list"


    // $ANTLR start "entryRuleparameter_list_linha"
    // InternalAnsic.g:3629:1: entryRuleparameter_list_linha returns [EObject current=null] : iv_ruleparameter_list_linha= ruleparameter_list_linha EOF ;
    public final EObject entryRuleparameter_list_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleparameter_list_linha = null;


        try {
            // InternalAnsic.g:3629:61: (iv_ruleparameter_list_linha= ruleparameter_list_linha EOF )
            // InternalAnsic.g:3630:2: iv_ruleparameter_list_linha= ruleparameter_list_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameter_list_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleparameter_list_linha=ruleparameter_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleparameter_list_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleparameter_list_linha"


    // $ANTLR start "ruleparameter_list_linha"
    // InternalAnsic.g:3636:1: ruleparameter_list_linha returns [EObject current=null] : ( () (otherlv_1= ',' ( (lv_parameter_declaration_2_0= ruleparameter_declaration ) ) ( (lv_parameter_list_linha_3_0= ruleparameter_list_linha ) ) )? ) ;
    public final EObject ruleparameter_list_linha() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_parameter_declaration_2_0 = null;

        EObject lv_parameter_list_linha_3_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:3642:2: ( ( () (otherlv_1= ',' ( (lv_parameter_declaration_2_0= ruleparameter_declaration ) ) ( (lv_parameter_list_linha_3_0= ruleparameter_list_linha ) ) )? ) )
            // InternalAnsic.g:3643:2: ( () (otherlv_1= ',' ( (lv_parameter_declaration_2_0= ruleparameter_declaration ) ) ( (lv_parameter_list_linha_3_0= ruleparameter_list_linha ) ) )? )
            {
            // InternalAnsic.g:3643:2: ( () (otherlv_1= ',' ( (lv_parameter_declaration_2_0= ruleparameter_declaration ) ) ( (lv_parameter_list_linha_3_0= ruleparameter_list_linha ) ) )? )
            // InternalAnsic.g:3644:3: () (otherlv_1= ',' ( (lv_parameter_declaration_2_0= ruleparameter_declaration ) ) ( (lv_parameter_list_linha_3_0= ruleparameter_list_linha ) ) )?
            {
            // InternalAnsic.g:3644:3: ()
            // InternalAnsic.g:3645:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getParameter_list_linhaAccess().getParameterListLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:3654:3: (otherlv_1= ',' ( (lv_parameter_declaration_2_0= ruleparameter_declaration ) ) ( (lv_parameter_list_linha_3_0= ruleparameter_list_linha ) ) )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==53) ) {
                int LA29_1 = input.LA(2);

                if ( ((LA29_1>=28 && LA29_1<=30)||(LA29_1>=33 && LA29_1<=50)||(LA29_1>=55 && LA29_1<=56)||(LA29_1>=59 && LA29_1<=63)) ) {
                    alt29=1;
                }
            }
            switch (alt29) {
                case 1 :
                    // InternalAnsic.g:3655:4: otherlv_1= ',' ( (lv_parameter_declaration_2_0= ruleparameter_declaration ) ) ( (lv_parameter_list_linha_3_0= ruleparameter_list_linha ) )
                    {
                    otherlv_1=(Token)match(input,53,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getParameter_list_linhaAccess().getCommaKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:3659:4: ( (lv_parameter_declaration_2_0= ruleparameter_declaration ) )
                    // InternalAnsic.g:3660:5: (lv_parameter_declaration_2_0= ruleparameter_declaration )
                    {
                    // InternalAnsic.g:3660:5: (lv_parameter_declaration_2_0= ruleparameter_declaration )
                    // InternalAnsic.g:3661:6: lv_parameter_declaration_2_0= ruleparameter_declaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParameter_list_linhaAccess().getParameter_declarationParameter_declarationParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_parameter_declaration_2_0=ruleparameter_declaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParameter_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"parameter_declaration",
                      							lv_parameter_declaration_2_0,
                      							"org.xtext.example.Ansic.parameter_declaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:3678:4: ( (lv_parameter_list_linha_3_0= ruleparameter_list_linha ) )
                    // InternalAnsic.g:3679:5: (lv_parameter_list_linha_3_0= ruleparameter_list_linha )
                    {
                    // InternalAnsic.g:3679:5: (lv_parameter_list_linha_3_0= ruleparameter_list_linha )
                    // InternalAnsic.g:3680:6: lv_parameter_list_linha_3_0= ruleparameter_list_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParameter_list_linhaAccess().getParameter_list_linhaParameter_list_linhaParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_parameter_list_linha_3_0=ruleparameter_list_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParameter_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"parameter_list_linha",
                      							lv_parameter_list_linha_3_0,
                      							"org.xtext.example.Ansic.parameter_list_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleparameter_list_linha"


    // $ANTLR start "entryRuleparameter_declaration"
    // InternalAnsic.g:3702:1: entryRuleparameter_declaration returns [EObject current=null] : iv_ruleparameter_declaration= ruleparameter_declaration EOF ;
    public final EObject entryRuleparameter_declaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleparameter_declaration = null;


        try {
            // InternalAnsic.g:3702:62: (iv_ruleparameter_declaration= ruleparameter_declaration EOF )
            // InternalAnsic.g:3703:2: iv_ruleparameter_declaration= ruleparameter_declaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameter_declarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleparameter_declaration=ruleparameter_declaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleparameter_declaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleparameter_declaration"


    // $ANTLR start "ruleparameter_declaration"
    // InternalAnsic.g:3709:1: ruleparameter_declaration returns [EObject current=null] : ( ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) ) | ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_abstract_declarator_3_0= ruleabstract_declarator ) ) ) | ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) ) ;
    public final EObject ruleparameter_declaration() throws RecognitionException {
        EObject current = null;

        EObject lv_declaration_specifiers_0_0 = null;

        EObject lv_declarator_1_0 = null;

        EObject lv_declaration_specifiers_2_0 = null;

        EObject lv_abstract_declarator_3_0 = null;

        EObject lv_declaration_specifiers_4_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:3715:2: ( ( ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) ) | ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_abstract_declarator_3_0= ruleabstract_declarator ) ) ) | ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) ) )
            // InternalAnsic.g:3716:2: ( ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) ) | ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_abstract_declarator_3_0= ruleabstract_declarator ) ) ) | ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) )
            {
            // InternalAnsic.g:3716:2: ( ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) ) | ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_abstract_declarator_3_0= ruleabstract_declarator ) ) ) | ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) )
            int alt30=3;
            alt30 = dfa30.predict(input);
            switch (alt30) {
                case 1 :
                    // InternalAnsic.g:3717:3: ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) )
                    {
                    // InternalAnsic.g:3717:3: ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) )
                    // InternalAnsic.g:3718:4: ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) )
                    {
                    // InternalAnsic.g:3718:4: ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) )
                    // InternalAnsic.g:3719:5: (lv_declaration_specifiers_0_0= ruledeclaration_specifiers )
                    {
                    // InternalAnsic.g:3719:5: (lv_declaration_specifiers_0_0= ruledeclaration_specifiers )
                    // InternalAnsic.g:3720:6: lv_declaration_specifiers_0_0= ruledeclaration_specifiers
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParameter_declarationAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    lv_declaration_specifiers_0_0=ruledeclaration_specifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParameter_declarationRule());
                      						}
                      						set(
                      							current,
                      							"declaration_specifiers",
                      							lv_declaration_specifiers_0_0,
                      							"org.xtext.example.Ansic.declaration_specifiers");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:3737:4: ( (lv_declarator_1_0= ruledeclarator ) )
                    // InternalAnsic.g:3738:5: (lv_declarator_1_0= ruledeclarator )
                    {
                    // InternalAnsic.g:3738:5: (lv_declarator_1_0= ruledeclarator )
                    // InternalAnsic.g:3739:6: lv_declarator_1_0= ruledeclarator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParameter_declarationAccess().getDeclaratorDeclaratorParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_declarator_1_0=ruledeclarator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParameter_declarationRule());
                      						}
                      						set(
                      							current,
                      							"declarator",
                      							lv_declarator_1_0,
                      							"org.xtext.example.Ansic.declarator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:3758:3: ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_abstract_declarator_3_0= ruleabstract_declarator ) ) )
                    {
                    // InternalAnsic.g:3758:3: ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_abstract_declarator_3_0= ruleabstract_declarator ) ) )
                    // InternalAnsic.g:3759:4: ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_abstract_declarator_3_0= ruleabstract_declarator ) )
                    {
                    // InternalAnsic.g:3759:4: ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) )
                    // InternalAnsic.g:3760:5: (lv_declaration_specifiers_2_0= ruledeclaration_specifiers )
                    {
                    // InternalAnsic.g:3760:5: (lv_declaration_specifiers_2_0= ruledeclaration_specifiers )
                    // InternalAnsic.g:3761:6: lv_declaration_specifiers_2_0= ruledeclaration_specifiers
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParameter_declarationAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_24);
                    lv_declaration_specifiers_2_0=ruledeclaration_specifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParameter_declarationRule());
                      						}
                      						set(
                      							current,
                      							"declaration_specifiers",
                      							lv_declaration_specifiers_2_0,
                      							"org.xtext.example.Ansic.declaration_specifiers");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:3778:4: ( (lv_abstract_declarator_3_0= ruleabstract_declarator ) )
                    // InternalAnsic.g:3779:5: (lv_abstract_declarator_3_0= ruleabstract_declarator )
                    {
                    // InternalAnsic.g:3779:5: (lv_abstract_declarator_3_0= ruleabstract_declarator )
                    // InternalAnsic.g:3780:6: lv_abstract_declarator_3_0= ruleabstract_declarator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParameter_declarationAccess().getAbstract_declaratorAbstract_declaratorParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_abstract_declarator_3_0=ruleabstract_declarator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParameter_declarationRule());
                      						}
                      						set(
                      							current,
                      							"abstract_declarator",
                      							lv_abstract_declarator_3_0,
                      							"org.xtext.example.Ansic.abstract_declarator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:3799:3: ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) )
                    {
                    // InternalAnsic.g:3799:3: ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) )
                    // InternalAnsic.g:3800:4: (lv_declaration_specifiers_4_0= ruledeclaration_specifiers )
                    {
                    // InternalAnsic.g:3800:4: (lv_declaration_specifiers_4_0= ruledeclaration_specifiers )
                    // InternalAnsic.g:3801:5: lv_declaration_specifiers_4_0= ruledeclaration_specifiers
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getParameter_declarationAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaration_specifiers_4_0=ruledeclaration_specifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getParameter_declarationRule());
                      					}
                      					set(
                      						current,
                      						"declaration_specifiers",
                      						lv_declaration_specifiers_4_0,
                      						"org.xtext.example.Ansic.declaration_specifiers");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleparameter_declaration"


    // $ANTLR start "entryRuleabstract_declarator"
    // InternalAnsic.g:3822:1: entryRuleabstract_declarator returns [EObject current=null] : iv_ruleabstract_declarator= ruleabstract_declarator EOF ;
    public final EObject entryRuleabstract_declarator() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleabstract_declarator = null;


        try {
            // InternalAnsic.g:3822:60: (iv_ruleabstract_declarator= ruleabstract_declarator EOF )
            // InternalAnsic.g:3823:2: iv_ruleabstract_declarator= ruleabstract_declarator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAbstract_declaratorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleabstract_declarator=ruleabstract_declarator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleabstract_declarator; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleabstract_declarator"


    // $ANTLR start "ruleabstract_declarator"
    // InternalAnsic.g:3829:1: ruleabstract_declarator returns [EObject current=null] : ( ( ( (lv_pointer_0_0= rulepointer ) ) ( (lv_direct_abstract_declarator_1_0= ruledirect_abstract_declarator ) ) ) | ( (lv_pointer_2_0= rulepointer ) ) | ( (lv_direct_abstract_declarator_3_0= ruledirect_abstract_declarator ) ) ) ;
    public final EObject ruleabstract_declarator() throws RecognitionException {
        EObject current = null;

        EObject lv_pointer_0_0 = null;

        EObject lv_direct_abstract_declarator_1_0 = null;

        EObject lv_pointer_2_0 = null;

        EObject lv_direct_abstract_declarator_3_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:3835:2: ( ( ( ( (lv_pointer_0_0= rulepointer ) ) ( (lv_direct_abstract_declarator_1_0= ruledirect_abstract_declarator ) ) ) | ( (lv_pointer_2_0= rulepointer ) ) | ( (lv_direct_abstract_declarator_3_0= ruledirect_abstract_declarator ) ) ) )
            // InternalAnsic.g:3836:2: ( ( ( (lv_pointer_0_0= rulepointer ) ) ( (lv_direct_abstract_declarator_1_0= ruledirect_abstract_declarator ) ) ) | ( (lv_pointer_2_0= rulepointer ) ) | ( (lv_direct_abstract_declarator_3_0= ruledirect_abstract_declarator ) ) )
            {
            // InternalAnsic.g:3836:2: ( ( ( (lv_pointer_0_0= rulepointer ) ) ( (lv_direct_abstract_declarator_1_0= ruledirect_abstract_declarator ) ) ) | ( (lv_pointer_2_0= rulepointer ) ) | ( (lv_direct_abstract_declarator_3_0= ruledirect_abstract_declarator ) ) )
            int alt31=3;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==64) ) {
                int LA31_1 = input.LA(2);

                if ( (synpred80_InternalAnsic()) ) {
                    alt31=1;
                }
                else if ( (synpred81_InternalAnsic()) ) {
                    alt31=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 31, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA31_0==31||LA31_0==65) ) {
                alt31=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }
            switch (alt31) {
                case 1 :
                    // InternalAnsic.g:3837:3: ( ( (lv_pointer_0_0= rulepointer ) ) ( (lv_direct_abstract_declarator_1_0= ruledirect_abstract_declarator ) ) )
                    {
                    // InternalAnsic.g:3837:3: ( ( (lv_pointer_0_0= rulepointer ) ) ( (lv_direct_abstract_declarator_1_0= ruledirect_abstract_declarator ) ) )
                    // InternalAnsic.g:3838:4: ( (lv_pointer_0_0= rulepointer ) ) ( (lv_direct_abstract_declarator_1_0= ruledirect_abstract_declarator ) )
                    {
                    // InternalAnsic.g:3838:4: ( (lv_pointer_0_0= rulepointer ) )
                    // InternalAnsic.g:3839:5: (lv_pointer_0_0= rulepointer )
                    {
                    // InternalAnsic.g:3839:5: (lv_pointer_0_0= rulepointer )
                    // InternalAnsic.g:3840:6: lv_pointer_0_0= rulepointer
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAbstract_declaratorAccess().getPointerPointerParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_24);
                    lv_pointer_0_0=rulepointer();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAbstract_declaratorRule());
                      						}
                      						set(
                      							current,
                      							"pointer",
                      							lv_pointer_0_0,
                      							"org.xtext.example.Ansic.pointer");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:3857:4: ( (lv_direct_abstract_declarator_1_0= ruledirect_abstract_declarator ) )
                    // InternalAnsic.g:3858:5: (lv_direct_abstract_declarator_1_0= ruledirect_abstract_declarator )
                    {
                    // InternalAnsic.g:3858:5: (lv_direct_abstract_declarator_1_0= ruledirect_abstract_declarator )
                    // InternalAnsic.g:3859:6: lv_direct_abstract_declarator_1_0= ruledirect_abstract_declarator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAbstract_declaratorAccess().getDirect_abstract_declaratorDirect_abstract_declaratorParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_direct_abstract_declarator_1_0=ruledirect_abstract_declarator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAbstract_declaratorRule());
                      						}
                      						set(
                      							current,
                      							"direct_abstract_declarator",
                      							lv_direct_abstract_declarator_1_0,
                      							"org.xtext.example.Ansic.direct_abstract_declarator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:3878:3: ( (lv_pointer_2_0= rulepointer ) )
                    {
                    // InternalAnsic.g:3878:3: ( (lv_pointer_2_0= rulepointer ) )
                    // InternalAnsic.g:3879:4: (lv_pointer_2_0= rulepointer )
                    {
                    // InternalAnsic.g:3879:4: (lv_pointer_2_0= rulepointer )
                    // InternalAnsic.g:3880:5: lv_pointer_2_0= rulepointer
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAbstract_declaratorAccess().getPointerPointerParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_pointer_2_0=rulepointer();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getAbstract_declaratorRule());
                      					}
                      					set(
                      						current,
                      						"pointer",
                      						lv_pointer_2_0,
                      						"org.xtext.example.Ansic.pointer");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:3898:3: ( (lv_direct_abstract_declarator_3_0= ruledirect_abstract_declarator ) )
                    {
                    // InternalAnsic.g:3898:3: ( (lv_direct_abstract_declarator_3_0= ruledirect_abstract_declarator ) )
                    // InternalAnsic.g:3899:4: (lv_direct_abstract_declarator_3_0= ruledirect_abstract_declarator )
                    {
                    // InternalAnsic.g:3899:4: (lv_direct_abstract_declarator_3_0= ruledirect_abstract_declarator )
                    // InternalAnsic.g:3900:5: lv_direct_abstract_declarator_3_0= ruledirect_abstract_declarator
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAbstract_declaratorAccess().getDirect_abstract_declaratorDirect_abstract_declaratorParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_direct_abstract_declarator_3_0=ruledirect_abstract_declarator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getAbstract_declaratorRule());
                      					}
                      					set(
                      						current,
                      						"direct_abstract_declarator",
                      						lv_direct_abstract_declarator_3_0,
                      						"org.xtext.example.Ansic.direct_abstract_declarator");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleabstract_declarator"


    // $ANTLR start "entryRuledirect_abstract_declarator"
    // InternalAnsic.g:3921:1: entryRuledirect_abstract_declarator returns [EObject current=null] : iv_ruledirect_abstract_declarator= ruledirect_abstract_declarator EOF ;
    public final EObject entryRuledirect_abstract_declarator() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledirect_abstract_declarator = null;


        try {
            // InternalAnsic.g:3921:67: (iv_ruledirect_abstract_declarator= ruledirect_abstract_declarator EOF )
            // InternalAnsic.g:3922:2: iv_ruledirect_abstract_declarator= ruledirect_abstract_declarator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDirect_abstract_declaratorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledirect_abstract_declarator=ruledirect_abstract_declarator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledirect_abstract_declarator; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledirect_abstract_declarator"


    // $ANTLR start "ruledirect_abstract_declarator"
    // InternalAnsic.g:3928:1: ruledirect_abstract_declarator returns [EObject current=null] : ( ( (otherlv_0= '(' ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) otherlv_2= ')' ) | (otherlv_3= '[' otherlv_4= ']' ) | (otherlv_5= '[' otherlv_6= '*' otherlv_7= ']' ) | (otherlv_8= '[' otherlv_9= 'static' ( (lv_type_qualifier_list_10_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_11_0= ruleassignment_expression ) ) otherlv_12= ']' ) | (otherlv_13= '[' otherlv_14= 'static' ( (lv_assignment_expression_15_0= ruleassignment_expression ) ) otherlv_16= ']' ) | (otherlv_17= '[' ( (lv_type_qualifier_list_18_0= ruletype_qualifier_list ) ) otherlv_19= 'static' ( (lv_assignment_expression_20_0= ruleassignment_expression ) ) otherlv_21= ']' ) | (otherlv_22= '[' ( (lv_type_qualifier_list_23_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_24_0= ruleassignment_expression ) ) otherlv_25= ']' ) | (otherlv_26= '[' ( (lv_type_qualifier_list_27_0= ruletype_qualifier_list ) ) otherlv_28= ']' ) | (otherlv_29= '[' ( (lv_assignment_expression_30_0= ruleassignment_expression ) ) otherlv_31= ']' ) | (otherlv_32= '(' otherlv_33= ')' ) | (otherlv_34= '(' ( (lv_parameter_type_list_35_0= ruleparameter_type_list ) ) otherlv_36= ')' ) ) ( (lv_direct_abstract_declarator_linha_37_0= ruledirect_abstract_declarator_linha ) ) ) ;
    public final EObject ruledirect_abstract_declarator() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_22=null;
        Token otherlv_25=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token otherlv_33=null;
        Token otherlv_34=null;
        Token otherlv_36=null;
        EObject lv_abstract_declarator_1_0 = null;

        EObject lv_type_qualifier_list_10_0 = null;

        EObject lv_assignment_expression_11_0 = null;

        EObject lv_assignment_expression_15_0 = null;

        EObject lv_type_qualifier_list_18_0 = null;

        EObject lv_assignment_expression_20_0 = null;

        EObject lv_type_qualifier_list_23_0 = null;

        EObject lv_assignment_expression_24_0 = null;

        EObject lv_type_qualifier_list_27_0 = null;

        EObject lv_assignment_expression_30_0 = null;

        EObject lv_parameter_type_list_35_0 = null;

        EObject lv_direct_abstract_declarator_linha_37_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:3934:2: ( ( ( (otherlv_0= '(' ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) otherlv_2= ')' ) | (otherlv_3= '[' otherlv_4= ']' ) | (otherlv_5= '[' otherlv_6= '*' otherlv_7= ']' ) | (otherlv_8= '[' otherlv_9= 'static' ( (lv_type_qualifier_list_10_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_11_0= ruleassignment_expression ) ) otherlv_12= ']' ) | (otherlv_13= '[' otherlv_14= 'static' ( (lv_assignment_expression_15_0= ruleassignment_expression ) ) otherlv_16= ']' ) | (otherlv_17= '[' ( (lv_type_qualifier_list_18_0= ruletype_qualifier_list ) ) otherlv_19= 'static' ( (lv_assignment_expression_20_0= ruleassignment_expression ) ) otherlv_21= ']' ) | (otherlv_22= '[' ( (lv_type_qualifier_list_23_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_24_0= ruleassignment_expression ) ) otherlv_25= ']' ) | (otherlv_26= '[' ( (lv_type_qualifier_list_27_0= ruletype_qualifier_list ) ) otherlv_28= ']' ) | (otherlv_29= '[' ( (lv_assignment_expression_30_0= ruleassignment_expression ) ) otherlv_31= ']' ) | (otherlv_32= '(' otherlv_33= ')' ) | (otherlv_34= '(' ( (lv_parameter_type_list_35_0= ruleparameter_type_list ) ) otherlv_36= ')' ) ) ( (lv_direct_abstract_declarator_linha_37_0= ruledirect_abstract_declarator_linha ) ) ) )
            // InternalAnsic.g:3935:2: ( ( (otherlv_0= '(' ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) otherlv_2= ')' ) | (otherlv_3= '[' otherlv_4= ']' ) | (otherlv_5= '[' otherlv_6= '*' otherlv_7= ']' ) | (otherlv_8= '[' otherlv_9= 'static' ( (lv_type_qualifier_list_10_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_11_0= ruleassignment_expression ) ) otherlv_12= ']' ) | (otherlv_13= '[' otherlv_14= 'static' ( (lv_assignment_expression_15_0= ruleassignment_expression ) ) otherlv_16= ']' ) | (otherlv_17= '[' ( (lv_type_qualifier_list_18_0= ruletype_qualifier_list ) ) otherlv_19= 'static' ( (lv_assignment_expression_20_0= ruleassignment_expression ) ) otherlv_21= ']' ) | (otherlv_22= '[' ( (lv_type_qualifier_list_23_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_24_0= ruleassignment_expression ) ) otherlv_25= ']' ) | (otherlv_26= '[' ( (lv_type_qualifier_list_27_0= ruletype_qualifier_list ) ) otherlv_28= ']' ) | (otherlv_29= '[' ( (lv_assignment_expression_30_0= ruleassignment_expression ) ) otherlv_31= ']' ) | (otherlv_32= '(' otherlv_33= ')' ) | (otherlv_34= '(' ( (lv_parameter_type_list_35_0= ruleparameter_type_list ) ) otherlv_36= ')' ) ) ( (lv_direct_abstract_declarator_linha_37_0= ruledirect_abstract_declarator_linha ) ) )
            {
            // InternalAnsic.g:3935:2: ( ( (otherlv_0= '(' ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) otherlv_2= ')' ) | (otherlv_3= '[' otherlv_4= ']' ) | (otherlv_5= '[' otherlv_6= '*' otherlv_7= ']' ) | (otherlv_8= '[' otherlv_9= 'static' ( (lv_type_qualifier_list_10_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_11_0= ruleassignment_expression ) ) otherlv_12= ']' ) | (otherlv_13= '[' otherlv_14= 'static' ( (lv_assignment_expression_15_0= ruleassignment_expression ) ) otherlv_16= ']' ) | (otherlv_17= '[' ( (lv_type_qualifier_list_18_0= ruletype_qualifier_list ) ) otherlv_19= 'static' ( (lv_assignment_expression_20_0= ruleassignment_expression ) ) otherlv_21= ']' ) | (otherlv_22= '[' ( (lv_type_qualifier_list_23_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_24_0= ruleassignment_expression ) ) otherlv_25= ']' ) | (otherlv_26= '[' ( (lv_type_qualifier_list_27_0= ruletype_qualifier_list ) ) otherlv_28= ']' ) | (otherlv_29= '[' ( (lv_assignment_expression_30_0= ruleassignment_expression ) ) otherlv_31= ']' ) | (otherlv_32= '(' otherlv_33= ')' ) | (otherlv_34= '(' ( (lv_parameter_type_list_35_0= ruleparameter_type_list ) ) otherlv_36= ')' ) ) ( (lv_direct_abstract_declarator_linha_37_0= ruledirect_abstract_declarator_linha ) ) )
            // InternalAnsic.g:3936:3: ( (otherlv_0= '(' ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) otherlv_2= ')' ) | (otherlv_3= '[' otherlv_4= ']' ) | (otherlv_5= '[' otherlv_6= '*' otherlv_7= ']' ) | (otherlv_8= '[' otherlv_9= 'static' ( (lv_type_qualifier_list_10_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_11_0= ruleassignment_expression ) ) otherlv_12= ']' ) | (otherlv_13= '[' otherlv_14= 'static' ( (lv_assignment_expression_15_0= ruleassignment_expression ) ) otherlv_16= ']' ) | (otherlv_17= '[' ( (lv_type_qualifier_list_18_0= ruletype_qualifier_list ) ) otherlv_19= 'static' ( (lv_assignment_expression_20_0= ruleassignment_expression ) ) otherlv_21= ']' ) | (otherlv_22= '[' ( (lv_type_qualifier_list_23_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_24_0= ruleassignment_expression ) ) otherlv_25= ']' ) | (otherlv_26= '[' ( (lv_type_qualifier_list_27_0= ruletype_qualifier_list ) ) otherlv_28= ']' ) | (otherlv_29= '[' ( (lv_assignment_expression_30_0= ruleassignment_expression ) ) otherlv_31= ']' ) | (otherlv_32= '(' otherlv_33= ')' ) | (otherlv_34= '(' ( (lv_parameter_type_list_35_0= ruleparameter_type_list ) ) otherlv_36= ')' ) ) ( (lv_direct_abstract_declarator_linha_37_0= ruledirect_abstract_declarator_linha ) )
            {
            // InternalAnsic.g:3936:3: ( (otherlv_0= '(' ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) otherlv_2= ')' ) | (otherlv_3= '[' otherlv_4= ']' ) | (otherlv_5= '[' otherlv_6= '*' otherlv_7= ']' ) | (otherlv_8= '[' otherlv_9= 'static' ( (lv_type_qualifier_list_10_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_11_0= ruleassignment_expression ) ) otherlv_12= ']' ) | (otherlv_13= '[' otherlv_14= 'static' ( (lv_assignment_expression_15_0= ruleassignment_expression ) ) otherlv_16= ']' ) | (otherlv_17= '[' ( (lv_type_qualifier_list_18_0= ruletype_qualifier_list ) ) otherlv_19= 'static' ( (lv_assignment_expression_20_0= ruleassignment_expression ) ) otherlv_21= ']' ) | (otherlv_22= '[' ( (lv_type_qualifier_list_23_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_24_0= ruleassignment_expression ) ) otherlv_25= ']' ) | (otherlv_26= '[' ( (lv_type_qualifier_list_27_0= ruletype_qualifier_list ) ) otherlv_28= ']' ) | (otherlv_29= '[' ( (lv_assignment_expression_30_0= ruleassignment_expression ) ) otherlv_31= ']' ) | (otherlv_32= '(' otherlv_33= ')' ) | (otherlv_34= '(' ( (lv_parameter_type_list_35_0= ruleparameter_type_list ) ) otherlv_36= ')' ) )
            int alt32=11;
            alt32 = dfa32.predict(input);
            switch (alt32) {
                case 1 :
                    // InternalAnsic.g:3937:4: (otherlv_0= '(' ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) otherlv_2= ')' )
                    {
                    // InternalAnsic.g:3937:4: (otherlv_0= '(' ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) otherlv_2= ')' )
                    // InternalAnsic.g:3938:5: otherlv_0= '(' ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) otherlv_2= ')'
                    {
                    otherlv_0=(Token)match(input,31,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_0, grammarAccess.getDirect_abstract_declaratorAccess().getLeftParenthesisKeyword_0_0_0());
                      				
                    }
                    // InternalAnsic.g:3942:5: ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) )
                    // InternalAnsic.g:3943:6: (lv_abstract_declarator_1_0= ruleabstract_declarator )
                    {
                    // InternalAnsic.g:3943:6: (lv_abstract_declarator_1_0= ruleabstract_declarator )
                    // InternalAnsic.g:3944:7: lv_abstract_declarator_1_0= ruleabstract_declarator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getAbstract_declaratorAbstract_declaratorParserRuleCall_0_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_7);
                    lv_abstract_declarator_1_0=ruleabstract_declarator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getDirect_abstract_declaratorRule());
                      							}
                      							set(
                      								current,
                      								"abstract_declarator",
                      								lv_abstract_declarator_1_0,
                      								"org.xtext.example.Ansic.abstract_declarator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,32,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getDirect_abstract_declaratorAccess().getRightParenthesisKeyword_0_0_2());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:3967:4: (otherlv_3= '[' otherlv_4= ']' )
                    {
                    // InternalAnsic.g:3967:4: (otherlv_3= '[' otherlv_4= ']' )
                    // InternalAnsic.g:3968:5: otherlv_3= '[' otherlv_4= ']'
                    {
                    otherlv_3=(Token)match(input,65,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getDirect_abstract_declaratorAccess().getLeftSquareBracketKeyword_0_1_0());
                      				
                    }
                    otherlv_4=(Token)match(input,66,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getDirect_abstract_declaratorAccess().getRightSquareBracketKeyword_0_1_1());
                      				
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:3978:4: (otherlv_5= '[' otherlv_6= '*' otherlv_7= ']' )
                    {
                    // InternalAnsic.g:3978:4: (otherlv_5= '[' otherlv_6= '*' otherlv_7= ']' )
                    // InternalAnsic.g:3979:5: otherlv_5= '[' otherlv_6= '*' otherlv_7= ']'
                    {
                    otherlv_5=(Token)match(input,65,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getDirect_abstract_declaratorAccess().getLeftSquareBracketKeyword_0_2_0());
                      				
                    }
                    otherlv_6=(Token)match(input,64,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getDirect_abstract_declaratorAccess().getAsteriskKeyword_0_2_1());
                      				
                    }
                    otherlv_7=(Token)match(input,66,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getDirect_abstract_declaratorAccess().getRightSquareBracketKeyword_0_2_2());
                      				
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalAnsic.g:3993:4: (otherlv_8= '[' otherlv_9= 'static' ( (lv_type_qualifier_list_10_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_11_0= ruleassignment_expression ) ) otherlv_12= ']' )
                    {
                    // InternalAnsic.g:3993:4: (otherlv_8= '[' otherlv_9= 'static' ( (lv_type_qualifier_list_10_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_11_0= ruleassignment_expression ) ) otherlv_12= ']' )
                    // InternalAnsic.g:3994:5: otherlv_8= '[' otherlv_9= 'static' ( (lv_type_qualifier_list_10_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_11_0= ruleassignment_expression ) ) otherlv_12= ']'
                    {
                    otherlv_8=(Token)match(input,65,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_8, grammarAccess.getDirect_abstract_declaratorAccess().getLeftSquareBracketKeyword_0_3_0());
                      				
                    }
                    otherlv_9=(Token)match(input,60,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getDirect_abstract_declaratorAccess().getStaticKeyword_0_3_1());
                      				
                    }
                    // InternalAnsic.g:4002:5: ( (lv_type_qualifier_list_10_0= ruletype_qualifier_list ) )
                    // InternalAnsic.g:4003:6: (lv_type_qualifier_list_10_0= ruletype_qualifier_list )
                    {
                    // InternalAnsic.g:4003:6: (lv_type_qualifier_list_10_0= ruletype_qualifier_list )
                    // InternalAnsic.g:4004:7: lv_type_qualifier_list_10_0= ruletype_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getType_qualifier_listType_qualifier_listParserRuleCall_0_3_2_0());
                      						
                    }
                    pushFollow(FOLLOW_8);
                    lv_type_qualifier_list_10_0=ruletype_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getDirect_abstract_declaratorRule());
                      							}
                      							set(
                      								current,
                      								"type_qualifier_list",
                      								lv_type_qualifier_list_10_0,
                      								"org.xtext.example.Ansic.type_qualifier_list");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalAnsic.g:4021:5: ( (lv_assignment_expression_11_0= ruleassignment_expression ) )
                    // InternalAnsic.g:4022:6: (lv_assignment_expression_11_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:4022:6: (lv_assignment_expression_11_0= ruleassignment_expression )
                    // InternalAnsic.g:4023:7: lv_assignment_expression_11_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getAssignment_expressionAssignment_expressionParserRuleCall_0_3_3_0());
                      						
                    }
                    pushFollow(FOLLOW_21);
                    lv_assignment_expression_11_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getDirect_abstract_declaratorRule());
                      							}
                      							set(
                      								current,
                      								"assignment_expression",
                      								lv_assignment_expression_11_0,
                      								"org.xtext.example.Ansic.assignment_expression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_12=(Token)match(input,66,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_12, grammarAccess.getDirect_abstract_declaratorAccess().getRightSquareBracketKeyword_0_3_4());
                      				
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalAnsic.g:4046:4: (otherlv_13= '[' otherlv_14= 'static' ( (lv_assignment_expression_15_0= ruleassignment_expression ) ) otherlv_16= ']' )
                    {
                    // InternalAnsic.g:4046:4: (otherlv_13= '[' otherlv_14= 'static' ( (lv_assignment_expression_15_0= ruleassignment_expression ) ) otherlv_16= ']' )
                    // InternalAnsic.g:4047:5: otherlv_13= '[' otherlv_14= 'static' ( (lv_assignment_expression_15_0= ruleassignment_expression ) ) otherlv_16= ']'
                    {
                    otherlv_13=(Token)match(input,65,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_13, grammarAccess.getDirect_abstract_declaratorAccess().getLeftSquareBracketKeyword_0_4_0());
                      				
                    }
                    otherlv_14=(Token)match(input,60,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_14, grammarAccess.getDirect_abstract_declaratorAccess().getStaticKeyword_0_4_1());
                      				
                    }
                    // InternalAnsic.g:4055:5: ( (lv_assignment_expression_15_0= ruleassignment_expression ) )
                    // InternalAnsic.g:4056:6: (lv_assignment_expression_15_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:4056:6: (lv_assignment_expression_15_0= ruleassignment_expression )
                    // InternalAnsic.g:4057:7: lv_assignment_expression_15_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getAssignment_expressionAssignment_expressionParserRuleCall_0_4_2_0());
                      						
                    }
                    pushFollow(FOLLOW_21);
                    lv_assignment_expression_15_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getDirect_abstract_declaratorRule());
                      							}
                      							set(
                      								current,
                      								"assignment_expression",
                      								lv_assignment_expression_15_0,
                      								"org.xtext.example.Ansic.assignment_expression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_16=(Token)match(input,66,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_16, grammarAccess.getDirect_abstract_declaratorAccess().getRightSquareBracketKeyword_0_4_3());
                      				
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalAnsic.g:4080:4: (otherlv_17= '[' ( (lv_type_qualifier_list_18_0= ruletype_qualifier_list ) ) otherlv_19= 'static' ( (lv_assignment_expression_20_0= ruleassignment_expression ) ) otherlv_21= ']' )
                    {
                    // InternalAnsic.g:4080:4: (otherlv_17= '[' ( (lv_type_qualifier_list_18_0= ruletype_qualifier_list ) ) otherlv_19= 'static' ( (lv_assignment_expression_20_0= ruleassignment_expression ) ) otherlv_21= ']' )
                    // InternalAnsic.g:4081:5: otherlv_17= '[' ( (lv_type_qualifier_list_18_0= ruletype_qualifier_list ) ) otherlv_19= 'static' ( (lv_assignment_expression_20_0= ruleassignment_expression ) ) otherlv_21= ']'
                    {
                    otherlv_17=(Token)match(input,65,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_17, grammarAccess.getDirect_abstract_declaratorAccess().getLeftSquareBracketKeyword_0_5_0());
                      				
                    }
                    // InternalAnsic.g:4085:5: ( (lv_type_qualifier_list_18_0= ruletype_qualifier_list ) )
                    // InternalAnsic.g:4086:6: (lv_type_qualifier_list_18_0= ruletype_qualifier_list )
                    {
                    // InternalAnsic.g:4086:6: (lv_type_qualifier_list_18_0= ruletype_qualifier_list )
                    // InternalAnsic.g:4087:7: lv_type_qualifier_list_18_0= ruletype_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getType_qualifier_listType_qualifier_listParserRuleCall_0_5_1_0());
                      						
                    }
                    pushFollow(FOLLOW_22);
                    lv_type_qualifier_list_18_0=ruletype_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getDirect_abstract_declaratorRule());
                      							}
                      							set(
                      								current,
                      								"type_qualifier_list",
                      								lv_type_qualifier_list_18_0,
                      								"org.xtext.example.Ansic.type_qualifier_list");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_19=(Token)match(input,60,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_19, grammarAccess.getDirect_abstract_declaratorAccess().getStaticKeyword_0_5_2());
                      				
                    }
                    // InternalAnsic.g:4108:5: ( (lv_assignment_expression_20_0= ruleassignment_expression ) )
                    // InternalAnsic.g:4109:6: (lv_assignment_expression_20_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:4109:6: (lv_assignment_expression_20_0= ruleassignment_expression )
                    // InternalAnsic.g:4110:7: lv_assignment_expression_20_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getAssignment_expressionAssignment_expressionParserRuleCall_0_5_3_0());
                      						
                    }
                    pushFollow(FOLLOW_21);
                    lv_assignment_expression_20_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getDirect_abstract_declaratorRule());
                      							}
                      							set(
                      								current,
                      								"assignment_expression",
                      								lv_assignment_expression_20_0,
                      								"org.xtext.example.Ansic.assignment_expression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_21=(Token)match(input,66,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_21, grammarAccess.getDirect_abstract_declaratorAccess().getRightSquareBracketKeyword_0_5_4());
                      				
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalAnsic.g:4133:4: (otherlv_22= '[' ( (lv_type_qualifier_list_23_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_24_0= ruleassignment_expression ) ) otherlv_25= ']' )
                    {
                    // InternalAnsic.g:4133:4: (otherlv_22= '[' ( (lv_type_qualifier_list_23_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_24_0= ruleassignment_expression ) ) otherlv_25= ']' )
                    // InternalAnsic.g:4134:5: otherlv_22= '[' ( (lv_type_qualifier_list_23_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_24_0= ruleassignment_expression ) ) otherlv_25= ']'
                    {
                    otherlv_22=(Token)match(input,65,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_22, grammarAccess.getDirect_abstract_declaratorAccess().getLeftSquareBracketKeyword_0_6_0());
                      				
                    }
                    // InternalAnsic.g:4138:5: ( (lv_type_qualifier_list_23_0= ruletype_qualifier_list ) )
                    // InternalAnsic.g:4139:6: (lv_type_qualifier_list_23_0= ruletype_qualifier_list )
                    {
                    // InternalAnsic.g:4139:6: (lv_type_qualifier_list_23_0= ruletype_qualifier_list )
                    // InternalAnsic.g:4140:7: lv_type_qualifier_list_23_0= ruletype_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getType_qualifier_listType_qualifier_listParserRuleCall_0_6_1_0());
                      						
                    }
                    pushFollow(FOLLOW_8);
                    lv_type_qualifier_list_23_0=ruletype_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getDirect_abstract_declaratorRule());
                      							}
                      							set(
                      								current,
                      								"type_qualifier_list",
                      								lv_type_qualifier_list_23_0,
                      								"org.xtext.example.Ansic.type_qualifier_list");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalAnsic.g:4157:5: ( (lv_assignment_expression_24_0= ruleassignment_expression ) )
                    // InternalAnsic.g:4158:6: (lv_assignment_expression_24_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:4158:6: (lv_assignment_expression_24_0= ruleassignment_expression )
                    // InternalAnsic.g:4159:7: lv_assignment_expression_24_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getAssignment_expressionAssignment_expressionParserRuleCall_0_6_2_0());
                      						
                    }
                    pushFollow(FOLLOW_21);
                    lv_assignment_expression_24_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getDirect_abstract_declaratorRule());
                      							}
                      							set(
                      								current,
                      								"assignment_expression",
                      								lv_assignment_expression_24_0,
                      								"org.xtext.example.Ansic.assignment_expression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_25=(Token)match(input,66,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_25, grammarAccess.getDirect_abstract_declaratorAccess().getRightSquareBracketKeyword_0_6_3());
                      				
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalAnsic.g:4182:4: (otherlv_26= '[' ( (lv_type_qualifier_list_27_0= ruletype_qualifier_list ) ) otherlv_28= ']' )
                    {
                    // InternalAnsic.g:4182:4: (otherlv_26= '[' ( (lv_type_qualifier_list_27_0= ruletype_qualifier_list ) ) otherlv_28= ']' )
                    // InternalAnsic.g:4183:5: otherlv_26= '[' ( (lv_type_qualifier_list_27_0= ruletype_qualifier_list ) ) otherlv_28= ']'
                    {
                    otherlv_26=(Token)match(input,65,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_26, grammarAccess.getDirect_abstract_declaratorAccess().getLeftSquareBracketKeyword_0_7_0());
                      				
                    }
                    // InternalAnsic.g:4187:5: ( (lv_type_qualifier_list_27_0= ruletype_qualifier_list ) )
                    // InternalAnsic.g:4188:6: (lv_type_qualifier_list_27_0= ruletype_qualifier_list )
                    {
                    // InternalAnsic.g:4188:6: (lv_type_qualifier_list_27_0= ruletype_qualifier_list )
                    // InternalAnsic.g:4189:7: lv_type_qualifier_list_27_0= ruletype_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getType_qualifier_listType_qualifier_listParserRuleCall_0_7_1_0());
                      						
                    }
                    pushFollow(FOLLOW_21);
                    lv_type_qualifier_list_27_0=ruletype_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getDirect_abstract_declaratorRule());
                      							}
                      							set(
                      								current,
                      								"type_qualifier_list",
                      								lv_type_qualifier_list_27_0,
                      								"org.xtext.example.Ansic.type_qualifier_list");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_28=(Token)match(input,66,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_28, grammarAccess.getDirect_abstract_declaratorAccess().getRightSquareBracketKeyword_0_7_2());
                      				
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalAnsic.g:4212:4: (otherlv_29= '[' ( (lv_assignment_expression_30_0= ruleassignment_expression ) ) otherlv_31= ']' )
                    {
                    // InternalAnsic.g:4212:4: (otherlv_29= '[' ( (lv_assignment_expression_30_0= ruleassignment_expression ) ) otherlv_31= ']' )
                    // InternalAnsic.g:4213:5: otherlv_29= '[' ( (lv_assignment_expression_30_0= ruleassignment_expression ) ) otherlv_31= ']'
                    {
                    otherlv_29=(Token)match(input,65,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_29, grammarAccess.getDirect_abstract_declaratorAccess().getLeftSquareBracketKeyword_0_8_0());
                      				
                    }
                    // InternalAnsic.g:4217:5: ( (lv_assignment_expression_30_0= ruleassignment_expression ) )
                    // InternalAnsic.g:4218:6: (lv_assignment_expression_30_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:4218:6: (lv_assignment_expression_30_0= ruleassignment_expression )
                    // InternalAnsic.g:4219:7: lv_assignment_expression_30_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getAssignment_expressionAssignment_expressionParserRuleCall_0_8_1_0());
                      						
                    }
                    pushFollow(FOLLOW_21);
                    lv_assignment_expression_30_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getDirect_abstract_declaratorRule());
                      							}
                      							set(
                      								current,
                      								"assignment_expression",
                      								lv_assignment_expression_30_0,
                      								"org.xtext.example.Ansic.assignment_expression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_31=(Token)match(input,66,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_31, grammarAccess.getDirect_abstract_declaratorAccess().getRightSquareBracketKeyword_0_8_2());
                      				
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalAnsic.g:4242:4: (otherlv_32= '(' otherlv_33= ')' )
                    {
                    // InternalAnsic.g:4242:4: (otherlv_32= '(' otherlv_33= ')' )
                    // InternalAnsic.g:4243:5: otherlv_32= '(' otherlv_33= ')'
                    {
                    otherlv_32=(Token)match(input,31,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_32, grammarAccess.getDirect_abstract_declaratorAccess().getLeftParenthesisKeyword_0_9_0());
                      				
                    }
                    otherlv_33=(Token)match(input,32,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_33, grammarAccess.getDirect_abstract_declaratorAccess().getRightParenthesisKeyword_0_9_1());
                      				
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalAnsic.g:4253:4: (otherlv_34= '(' ( (lv_parameter_type_list_35_0= ruleparameter_type_list ) ) otherlv_36= ')' )
                    {
                    // InternalAnsic.g:4253:4: (otherlv_34= '(' ( (lv_parameter_type_list_35_0= ruleparameter_type_list ) ) otherlv_36= ')' )
                    // InternalAnsic.g:4254:5: otherlv_34= '(' ( (lv_parameter_type_list_35_0= ruleparameter_type_list ) ) otherlv_36= ')'
                    {
                    otherlv_34=(Token)match(input,31,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_34, grammarAccess.getDirect_abstract_declaratorAccess().getLeftParenthesisKeyword_0_10_0());
                      				
                    }
                    // InternalAnsic.g:4258:5: ( (lv_parameter_type_list_35_0= ruleparameter_type_list ) )
                    // InternalAnsic.g:4259:6: (lv_parameter_type_list_35_0= ruleparameter_type_list )
                    {
                    // InternalAnsic.g:4259:6: (lv_parameter_type_list_35_0= ruleparameter_type_list )
                    // InternalAnsic.g:4260:7: lv_parameter_type_list_35_0= ruleparameter_type_list
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getParameter_type_listParameter_type_listParserRuleCall_0_10_1_0());
                      						
                    }
                    pushFollow(FOLLOW_7);
                    lv_parameter_type_list_35_0=ruleparameter_type_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getDirect_abstract_declaratorRule());
                      							}
                      							set(
                      								current,
                      								"parameter_type_list",
                      								lv_parameter_type_list_35_0,
                      								"org.xtext.example.Ansic.parameter_type_list");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_36=(Token)match(input,32,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_36, grammarAccess.getDirect_abstract_declaratorAccess().getRightParenthesisKeyword_0_10_2());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalAnsic.g:4283:3: ( (lv_direct_abstract_declarator_linha_37_0= ruledirect_abstract_declarator_linha ) )
            // InternalAnsic.g:4284:4: (lv_direct_abstract_declarator_linha_37_0= ruledirect_abstract_declarator_linha )
            {
            // InternalAnsic.g:4284:4: (lv_direct_abstract_declarator_linha_37_0= ruledirect_abstract_declarator_linha )
            // InternalAnsic.g:4285:5: lv_direct_abstract_declarator_linha_37_0= ruledirect_abstract_declarator_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getDirect_abstract_declarator_linhaDirect_abstract_declarator_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_direct_abstract_declarator_linha_37_0=ruledirect_abstract_declarator_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDirect_abstract_declaratorRule());
              					}
              					set(
              						current,
              						"direct_abstract_declarator_linha",
              						lv_direct_abstract_declarator_linha_37_0,
              						"org.xtext.example.Ansic.direct_abstract_declarator_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledirect_abstract_declarator"


    // $ANTLR start "entryRuleinitializer"
    // InternalAnsic.g:4306:1: entryRuleinitializer returns [EObject current=null] : iv_ruleinitializer= ruleinitializer EOF ;
    public final EObject entryRuleinitializer() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleinitializer = null;


        try {
            // InternalAnsic.g:4306:52: (iv_ruleinitializer= ruleinitializer EOF )
            // InternalAnsic.g:4307:2: iv_ruleinitializer= ruleinitializer EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInitializerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleinitializer=ruleinitializer();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleinitializer; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleinitializer"


    // $ANTLR start "ruleinitializer"
    // InternalAnsic.g:4313:1: ruleinitializer returns [EObject current=null] : ( (otherlv_0= '{' ( (lv_init_declarator_list_1_0= ruleinitializer_list ) ) otherlv_2= '}' ) | (otherlv_3= '{' ( (lv_init_declarator_list_4_0= ruleinitializer_list ) ) otherlv_5= ',' otherlv_6= '}' ) | ( (lv_assignment_expression_7_0= ruleassignment_expression ) ) ) ;
    public final EObject ruleinitializer() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_init_declarator_list_1_0 = null;

        EObject lv_init_declarator_list_4_0 = null;

        EObject lv_assignment_expression_7_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:4319:2: ( ( (otherlv_0= '{' ( (lv_init_declarator_list_1_0= ruleinitializer_list ) ) otherlv_2= '}' ) | (otherlv_3= '{' ( (lv_init_declarator_list_4_0= ruleinitializer_list ) ) otherlv_5= ',' otherlv_6= '}' ) | ( (lv_assignment_expression_7_0= ruleassignment_expression ) ) ) )
            // InternalAnsic.g:4320:2: ( (otherlv_0= '{' ( (lv_init_declarator_list_1_0= ruleinitializer_list ) ) otherlv_2= '}' ) | (otherlv_3= '{' ( (lv_init_declarator_list_4_0= ruleinitializer_list ) ) otherlv_5= ',' otherlv_6= '}' ) | ( (lv_assignment_expression_7_0= ruleassignment_expression ) ) )
            {
            // InternalAnsic.g:4320:2: ( (otherlv_0= '{' ( (lv_init_declarator_list_1_0= ruleinitializer_list ) ) otherlv_2= '}' ) | (otherlv_3= '{' ( (lv_init_declarator_list_4_0= ruleinitializer_list ) ) otherlv_5= ',' otherlv_6= '}' ) | ( (lv_assignment_expression_7_0= ruleassignment_expression ) ) )
            int alt33=3;
            alt33 = dfa33.predict(input);
            switch (alt33) {
                case 1 :
                    // InternalAnsic.g:4321:3: (otherlv_0= '{' ( (lv_init_declarator_list_1_0= ruleinitializer_list ) ) otherlv_2= '}' )
                    {
                    // InternalAnsic.g:4321:3: (otherlv_0= '{' ( (lv_init_declarator_list_1_0= ruleinitializer_list ) ) otherlv_2= '}' )
                    // InternalAnsic.g:4322:4: otherlv_0= '{' ( (lv_init_declarator_list_1_0= ruleinitializer_list ) ) otherlv_2= '}'
                    {
                    otherlv_0=(Token)match(input,51,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getInitializerAccess().getLeftCurlyBracketKeyword_0_0());
                      			
                    }
                    // InternalAnsic.g:4326:4: ( (lv_init_declarator_list_1_0= ruleinitializer_list ) )
                    // InternalAnsic.g:4327:5: (lv_init_declarator_list_1_0= ruleinitializer_list )
                    {
                    // InternalAnsic.g:4327:5: (lv_init_declarator_list_1_0= ruleinitializer_list )
                    // InternalAnsic.g:4328:6: lv_init_declarator_list_1_0= ruleinitializer_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInitializerAccess().getInit_declarator_listInitializer_listParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_init_declarator_list_1_0=ruleinitializer_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInitializerRule());
                      						}
                      						set(
                      							current,
                      							"init_declarator_list",
                      							lv_init_declarator_list_1_0,
                      							"org.xtext.example.Ansic.initializer_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,52,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getInitializerAccess().getRightCurlyBracketKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:4351:3: (otherlv_3= '{' ( (lv_init_declarator_list_4_0= ruleinitializer_list ) ) otherlv_5= ',' otherlv_6= '}' )
                    {
                    // InternalAnsic.g:4351:3: (otherlv_3= '{' ( (lv_init_declarator_list_4_0= ruleinitializer_list ) ) otherlv_5= ',' otherlv_6= '}' )
                    // InternalAnsic.g:4352:4: otherlv_3= '{' ( (lv_init_declarator_list_4_0= ruleinitializer_list ) ) otherlv_5= ',' otherlv_6= '}'
                    {
                    otherlv_3=(Token)match(input,51,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getInitializerAccess().getLeftCurlyBracketKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:4356:4: ( (lv_init_declarator_list_4_0= ruleinitializer_list ) )
                    // InternalAnsic.g:4357:5: (lv_init_declarator_list_4_0= ruleinitializer_list )
                    {
                    // InternalAnsic.g:4357:5: (lv_init_declarator_list_4_0= ruleinitializer_list )
                    // InternalAnsic.g:4358:6: lv_init_declarator_list_4_0= ruleinitializer_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInitializerAccess().getInit_declarator_listInitializer_listParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_init_declarator_list_4_0=ruleinitializer_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInitializerRule());
                      						}
                      						set(
                      							current,
                      							"init_declarator_list",
                      							lv_init_declarator_list_4_0,
                      							"org.xtext.example.Ansic.initializer_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,53,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getInitializerAccess().getCommaKeyword_1_2());
                      			
                    }
                    otherlv_6=(Token)match(input,52,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getInitializerAccess().getRightCurlyBracketKeyword_1_3());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:4385:3: ( (lv_assignment_expression_7_0= ruleassignment_expression ) )
                    {
                    // InternalAnsic.g:4385:3: ( (lv_assignment_expression_7_0= ruleassignment_expression ) )
                    // InternalAnsic.g:4386:4: (lv_assignment_expression_7_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:4386:4: (lv_assignment_expression_7_0= ruleassignment_expression )
                    // InternalAnsic.g:4387:5: lv_assignment_expression_7_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getInitializerAccess().getAssignment_expressionAssignment_expressionParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_assignment_expression_7_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getInitializerRule());
                      					}
                      					set(
                      						current,
                      						"assignment_expression",
                      						lv_assignment_expression_7_0,
                      						"org.xtext.example.Ansic.assignment_expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleinitializer"


    // $ANTLR start "entryRuledirect_abstract_declarator_linha"
    // InternalAnsic.g:4408:1: entryRuledirect_abstract_declarator_linha returns [EObject current=null] : iv_ruledirect_abstract_declarator_linha= ruledirect_abstract_declarator_linha EOF ;
    public final EObject entryRuledirect_abstract_declarator_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledirect_abstract_declarator_linha = null;


        try {
            // InternalAnsic.g:4408:73: (iv_ruledirect_abstract_declarator_linha= ruledirect_abstract_declarator_linha EOF )
            // InternalAnsic.g:4409:2: iv_ruledirect_abstract_declarator_linha= ruledirect_abstract_declarator_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDirect_abstract_declarator_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledirect_abstract_declarator_linha=ruledirect_abstract_declarator_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledirect_abstract_declarator_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledirect_abstract_declarator_linha"


    // $ANTLR start "ruledirect_abstract_declarator_linha"
    // InternalAnsic.g:4415:1: ruledirect_abstract_declarator_linha returns [EObject current=null] : ( () ( ( (lv_direct_abstract_declarator_complement_1_0= ruledirect_abstract_declarator_complement ) ) ( (lv_direct_abstract_declarator_linha_2_0= ruledirect_abstract_declarator_linha ) ) )? ) ;
    public final EObject ruledirect_abstract_declarator_linha() throws RecognitionException {
        EObject current = null;

        EObject lv_direct_abstract_declarator_complement_1_0 = null;

        EObject lv_direct_abstract_declarator_linha_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:4421:2: ( ( () ( ( (lv_direct_abstract_declarator_complement_1_0= ruledirect_abstract_declarator_complement ) ) ( (lv_direct_abstract_declarator_linha_2_0= ruledirect_abstract_declarator_linha ) ) )? ) )
            // InternalAnsic.g:4422:2: ( () ( ( (lv_direct_abstract_declarator_complement_1_0= ruledirect_abstract_declarator_complement ) ) ( (lv_direct_abstract_declarator_linha_2_0= ruledirect_abstract_declarator_linha ) ) )? )
            {
            // InternalAnsic.g:4422:2: ( () ( ( (lv_direct_abstract_declarator_complement_1_0= ruledirect_abstract_declarator_complement ) ) ( (lv_direct_abstract_declarator_linha_2_0= ruledirect_abstract_declarator_linha ) ) )? )
            // InternalAnsic.g:4423:3: () ( ( (lv_direct_abstract_declarator_complement_1_0= ruledirect_abstract_declarator_complement ) ) ( (lv_direct_abstract_declarator_linha_2_0= ruledirect_abstract_declarator_linha ) ) )?
            {
            // InternalAnsic.g:4423:3: ()
            // InternalAnsic.g:4424:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDirect_abstract_declarator_linhaAccess().getDirectAbstractDeclarratorLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:4433:3: ( ( (lv_direct_abstract_declarator_complement_1_0= ruledirect_abstract_declarator_complement ) ) ( (lv_direct_abstract_declarator_linha_2_0= ruledirect_abstract_declarator_linha ) ) )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==31||LA34_0==65) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // InternalAnsic.g:4434:4: ( (lv_direct_abstract_declarator_complement_1_0= ruledirect_abstract_declarator_complement ) ) ( (lv_direct_abstract_declarator_linha_2_0= ruledirect_abstract_declarator_linha ) )
                    {
                    // InternalAnsic.g:4434:4: ( (lv_direct_abstract_declarator_complement_1_0= ruledirect_abstract_declarator_complement ) )
                    // InternalAnsic.g:4435:5: (lv_direct_abstract_declarator_complement_1_0= ruledirect_abstract_declarator_complement )
                    {
                    // InternalAnsic.g:4435:5: (lv_direct_abstract_declarator_complement_1_0= ruledirect_abstract_declarator_complement )
                    // InternalAnsic.g:4436:6: lv_direct_abstract_declarator_complement_1_0= ruledirect_abstract_declarator_complement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_abstract_declarator_linhaAccess().getDirect_abstract_declarator_complementDirect_abstract_declarator_complementParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_20);
                    lv_direct_abstract_declarator_complement_1_0=ruledirect_abstract_declarator_complement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_abstract_declarator_linhaRule());
                      						}
                      						set(
                      							current,
                      							"direct_abstract_declarator_complement",
                      							lv_direct_abstract_declarator_complement_1_0,
                      							"org.xtext.example.Ansic.direct_abstract_declarator_complement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:4453:4: ( (lv_direct_abstract_declarator_linha_2_0= ruledirect_abstract_declarator_linha ) )
                    // InternalAnsic.g:4454:5: (lv_direct_abstract_declarator_linha_2_0= ruledirect_abstract_declarator_linha )
                    {
                    // InternalAnsic.g:4454:5: (lv_direct_abstract_declarator_linha_2_0= ruledirect_abstract_declarator_linha )
                    // InternalAnsic.g:4455:6: lv_direct_abstract_declarator_linha_2_0= ruledirect_abstract_declarator_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_abstract_declarator_linhaAccess().getDirect_abstract_declarator_linhaDirect_abstract_declarator_linhaParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_direct_abstract_declarator_linha_2_0=ruledirect_abstract_declarator_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_abstract_declarator_linhaRule());
                      						}
                      						set(
                      							current,
                      							"direct_abstract_declarator_linha",
                      							lv_direct_abstract_declarator_linha_2_0,
                      							"org.xtext.example.Ansic.direct_abstract_declarator_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledirect_abstract_declarator_linha"


    // $ANTLR start "entryRuledirect_abstract_declarator_complement"
    // InternalAnsic.g:4477:1: entryRuledirect_abstract_declarator_complement returns [EObject current=null] : iv_ruledirect_abstract_declarator_complement= ruledirect_abstract_declarator_complement EOF ;
    public final EObject entryRuledirect_abstract_declarator_complement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledirect_abstract_declarator_complement = null;


        try {
            // InternalAnsic.g:4477:78: (iv_ruledirect_abstract_declarator_complement= ruledirect_abstract_declarator_complement EOF )
            // InternalAnsic.g:4478:2: iv_ruledirect_abstract_declarator_complement= ruledirect_abstract_declarator_complement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDirect_abstract_declarator_complementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledirect_abstract_declarator_complement=ruledirect_abstract_declarator_complement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledirect_abstract_declarator_complement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledirect_abstract_declarator_complement"


    // $ANTLR start "ruledirect_abstract_declarator_complement"
    // InternalAnsic.g:4484:1: ruledirect_abstract_declarator_complement returns [EObject current=null] : ( (otherlv_0= '[' otherlv_1= ']' ) | (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' ) | (otherlv_5= '[' otherlv_6= 'static' this_type_qualifier_list_7= ruletype_qualifier_list ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' ) | (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' ) | (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_16_0= ruleassignment_expression ) ) otherlv_17= ']' ) | (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' ) | (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) otherlv_25= ']' ) | (otherlv_26= '[' ( (lv_assignment_expression_27_0= ruleassignment_expression ) ) otherlv_28= ']' ) | (otherlv_29= '(' otherlv_30= ')' ) | (otherlv_31= '(' ( (lv_parameter_type_list_32_0= ruleparameter_type_list ) ) otherlv_33= ')' ) ) ;
    public final EObject ruledirect_abstract_declarator_complement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        Token otherlv_30=null;
        Token otherlv_31=null;
        Token otherlv_33=null;
        EObject this_type_qualifier_list_7 = null;

        EObject lv_assignment_expression_8_0 = null;

        EObject lv_assignment_expression_12_0 = null;

        EObject lv_type_qualifier_list_15_0 = null;

        EObject lv_assignment_expression_16_0 = null;

        EObject lv_type_qualifier_list_19_0 = null;

        EObject lv_assignment_expression_21_0 = null;

        EObject lv_type_qualifier_list_24_0 = null;

        EObject lv_assignment_expression_27_0 = null;

        EObject lv_parameter_type_list_32_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:4490:2: ( ( (otherlv_0= '[' otherlv_1= ']' ) | (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' ) | (otherlv_5= '[' otherlv_6= 'static' this_type_qualifier_list_7= ruletype_qualifier_list ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' ) | (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' ) | (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_16_0= ruleassignment_expression ) ) otherlv_17= ']' ) | (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' ) | (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) otherlv_25= ']' ) | (otherlv_26= '[' ( (lv_assignment_expression_27_0= ruleassignment_expression ) ) otherlv_28= ']' ) | (otherlv_29= '(' otherlv_30= ')' ) | (otherlv_31= '(' ( (lv_parameter_type_list_32_0= ruleparameter_type_list ) ) otherlv_33= ')' ) ) )
            // InternalAnsic.g:4491:2: ( (otherlv_0= '[' otherlv_1= ']' ) | (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' ) | (otherlv_5= '[' otherlv_6= 'static' this_type_qualifier_list_7= ruletype_qualifier_list ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' ) | (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' ) | (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_16_0= ruleassignment_expression ) ) otherlv_17= ']' ) | (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' ) | (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) otherlv_25= ']' ) | (otherlv_26= '[' ( (lv_assignment_expression_27_0= ruleassignment_expression ) ) otherlv_28= ']' ) | (otherlv_29= '(' otherlv_30= ')' ) | (otherlv_31= '(' ( (lv_parameter_type_list_32_0= ruleparameter_type_list ) ) otherlv_33= ')' ) )
            {
            // InternalAnsic.g:4491:2: ( (otherlv_0= '[' otherlv_1= ']' ) | (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' ) | (otherlv_5= '[' otherlv_6= 'static' this_type_qualifier_list_7= ruletype_qualifier_list ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' ) | (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' ) | (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_16_0= ruleassignment_expression ) ) otherlv_17= ']' ) | (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' ) | (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) otherlv_25= ']' ) | (otherlv_26= '[' ( (lv_assignment_expression_27_0= ruleassignment_expression ) ) otherlv_28= ']' ) | (otherlv_29= '(' otherlv_30= ')' ) | (otherlv_31= '(' ( (lv_parameter_type_list_32_0= ruleparameter_type_list ) ) otherlv_33= ')' ) )
            int alt35=10;
            alt35 = dfa35.predict(input);
            switch (alt35) {
                case 1 :
                    // InternalAnsic.g:4492:3: (otherlv_0= '[' otherlv_1= ']' )
                    {
                    // InternalAnsic.g:4492:3: (otherlv_0= '[' otherlv_1= ']' )
                    // InternalAnsic.g:4493:4: otherlv_0= '[' otherlv_1= ']'
                    {
                    otherlv_0=(Token)match(input,65,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getDirect_abstract_declarator_complementAccess().getLeftSquareBracketKeyword_0_0());
                      			
                    }
                    otherlv_1=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getDirect_abstract_declarator_complementAccess().getRightSquareBracketKeyword_0_1());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:4503:3: (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' )
                    {
                    // InternalAnsic.g:4503:3: (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' )
                    // InternalAnsic.g:4504:4: otherlv_2= '[' otherlv_3= '*' otherlv_4= ']'
                    {
                    otherlv_2=(Token)match(input,65,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getDirect_abstract_declarator_complementAccess().getLeftSquareBracketKeyword_1_0());
                      			
                    }
                    otherlv_3=(Token)match(input,64,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getDirect_abstract_declarator_complementAccess().getAsteriskKeyword_1_1());
                      			
                    }
                    otherlv_4=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getDirect_abstract_declarator_complementAccess().getRightSquareBracketKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:4518:3: (otherlv_5= '[' otherlv_6= 'static' this_type_qualifier_list_7= ruletype_qualifier_list ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' )
                    {
                    // InternalAnsic.g:4518:3: (otherlv_5= '[' otherlv_6= 'static' this_type_qualifier_list_7= ruletype_qualifier_list ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' )
                    // InternalAnsic.g:4519:4: otherlv_5= '[' otherlv_6= 'static' this_type_qualifier_list_7= ruletype_qualifier_list ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']'
                    {
                    otherlv_5=(Token)match(input,65,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getDirect_abstract_declarator_complementAccess().getLeftSquareBracketKeyword_2_0());
                      			
                    }
                    otherlv_6=(Token)match(input,60,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getDirect_abstract_declarator_complementAccess().getStaticKeyword_2_1());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getDirect_abstract_declarator_complementAccess().getType_qualifier_listParserRuleCall_2_2());
                      			
                    }
                    pushFollow(FOLLOW_8);
                    this_type_qualifier_list_7=ruletype_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_type_qualifier_list_7;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalAnsic.g:4538:4: ( (lv_assignment_expression_8_0= ruleassignment_expression ) )
                    // InternalAnsic.g:4539:5: (lv_assignment_expression_8_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:4539:5: (lv_assignment_expression_8_0= ruleassignment_expression )
                    // InternalAnsic.g:4540:6: lv_assignment_expression_8_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_abstract_declarator_complementAccess().getAssignment_expressionAssignment_expressionParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_assignment_expression_8_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_abstract_declarator_complementRule());
                      						}
                      						set(
                      							current,
                      							"assignment_expression",
                      							lv_assignment_expression_8_0,
                      							"org.xtext.example.Ansic.assignment_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getDirect_abstract_declarator_complementAccess().getRightSquareBracketKeyword_2_4());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalAnsic.g:4563:3: (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' )
                    {
                    // InternalAnsic.g:4563:3: (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' )
                    // InternalAnsic.g:4564:4: otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']'
                    {
                    otherlv_10=(Token)match(input,65,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getDirect_abstract_declarator_complementAccess().getLeftSquareBracketKeyword_3_0());
                      			
                    }
                    otherlv_11=(Token)match(input,60,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getDirect_abstract_declarator_complementAccess().getStaticKeyword_3_1());
                      			
                    }
                    // InternalAnsic.g:4572:4: ( (lv_assignment_expression_12_0= ruleassignment_expression ) )
                    // InternalAnsic.g:4573:5: (lv_assignment_expression_12_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:4573:5: (lv_assignment_expression_12_0= ruleassignment_expression )
                    // InternalAnsic.g:4574:6: lv_assignment_expression_12_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_abstract_declarator_complementAccess().getAssignment_expressionAssignment_expressionParserRuleCall_3_2_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_assignment_expression_12_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_abstract_declarator_complementRule());
                      						}
                      						set(
                      							current,
                      							"assignment_expression",
                      							lv_assignment_expression_12_0,
                      							"org.xtext.example.Ansic.assignment_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_13=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getDirect_abstract_declarator_complementAccess().getRightSquareBracketKeyword_3_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalAnsic.g:4597:3: (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_16_0= ruleassignment_expression ) ) otherlv_17= ']' )
                    {
                    // InternalAnsic.g:4597:3: (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_16_0= ruleassignment_expression ) ) otherlv_17= ']' )
                    // InternalAnsic.g:4598:4: otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_16_0= ruleassignment_expression ) ) otherlv_17= ']'
                    {
                    otherlv_14=(Token)match(input,65,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getDirect_abstract_declarator_complementAccess().getLeftSquareBracketKeyword_4_0());
                      			
                    }
                    // InternalAnsic.g:4602:4: ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) )
                    // InternalAnsic.g:4603:5: (lv_type_qualifier_list_15_0= ruletype_qualifier_list )
                    {
                    // InternalAnsic.g:4603:5: (lv_type_qualifier_list_15_0= ruletype_qualifier_list )
                    // InternalAnsic.g:4604:6: lv_type_qualifier_list_15_0= ruletype_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_abstract_declarator_complementAccess().getType_qualifier_listType_qualifier_listParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_8);
                    lv_type_qualifier_list_15_0=ruletype_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_abstract_declarator_complementRule());
                      						}
                      						set(
                      							current,
                      							"type_qualifier_list",
                      							lv_type_qualifier_list_15_0,
                      							"org.xtext.example.Ansic.type_qualifier_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:4621:4: ( (lv_assignment_expression_16_0= ruleassignment_expression ) )
                    // InternalAnsic.g:4622:5: (lv_assignment_expression_16_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:4622:5: (lv_assignment_expression_16_0= ruleassignment_expression )
                    // InternalAnsic.g:4623:6: lv_assignment_expression_16_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_abstract_declarator_complementAccess().getAssignment_expressionAssignment_expressionParserRuleCall_4_2_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_assignment_expression_16_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_abstract_declarator_complementRule());
                      						}
                      						set(
                      							current,
                      							"assignment_expression",
                      							lv_assignment_expression_16_0,
                      							"org.xtext.example.Ansic.assignment_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_17=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getDirect_abstract_declarator_complementAccess().getRightSquareBracketKeyword_4_3());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalAnsic.g:4646:3: (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' )
                    {
                    // InternalAnsic.g:4646:3: (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' )
                    // InternalAnsic.g:4647:4: otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']'
                    {
                    otherlv_18=(Token)match(input,65,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getDirect_abstract_declarator_complementAccess().getLeftSquareBracketKeyword_5_0());
                      			
                    }
                    // InternalAnsic.g:4651:4: ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) )
                    // InternalAnsic.g:4652:5: (lv_type_qualifier_list_19_0= ruletype_qualifier_list )
                    {
                    // InternalAnsic.g:4652:5: (lv_type_qualifier_list_19_0= ruletype_qualifier_list )
                    // InternalAnsic.g:4653:6: lv_type_qualifier_list_19_0= ruletype_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_abstract_declarator_complementAccess().getType_qualifier_listType_qualifier_listParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_22);
                    lv_type_qualifier_list_19_0=ruletype_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_abstract_declarator_complementRule());
                      						}
                      						set(
                      							current,
                      							"type_qualifier_list",
                      							lv_type_qualifier_list_19_0,
                      							"org.xtext.example.Ansic.type_qualifier_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_20=(Token)match(input,60,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_20, grammarAccess.getDirect_abstract_declarator_complementAccess().getStaticKeyword_5_2());
                      			
                    }
                    // InternalAnsic.g:4674:4: ( (lv_assignment_expression_21_0= ruleassignment_expression ) )
                    // InternalAnsic.g:4675:5: (lv_assignment_expression_21_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:4675:5: (lv_assignment_expression_21_0= ruleassignment_expression )
                    // InternalAnsic.g:4676:6: lv_assignment_expression_21_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_abstract_declarator_complementAccess().getAssignment_expressionAssignment_expressionParserRuleCall_5_3_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_assignment_expression_21_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_abstract_declarator_complementRule());
                      						}
                      						set(
                      							current,
                      							"assignment_expression",
                      							lv_assignment_expression_21_0,
                      							"org.xtext.example.Ansic.assignment_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_22=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_22, grammarAccess.getDirect_abstract_declarator_complementAccess().getRightSquareBracketKeyword_5_4());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalAnsic.g:4699:3: (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) otherlv_25= ']' )
                    {
                    // InternalAnsic.g:4699:3: (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) otherlv_25= ']' )
                    // InternalAnsic.g:4700:4: otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) otherlv_25= ']'
                    {
                    otherlv_23=(Token)match(input,65,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_23, grammarAccess.getDirect_abstract_declarator_complementAccess().getLeftSquareBracketKeyword_6_0());
                      			
                    }
                    // InternalAnsic.g:4704:4: ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) )
                    // InternalAnsic.g:4705:5: (lv_type_qualifier_list_24_0= ruletype_qualifier_list )
                    {
                    // InternalAnsic.g:4705:5: (lv_type_qualifier_list_24_0= ruletype_qualifier_list )
                    // InternalAnsic.g:4706:6: lv_type_qualifier_list_24_0= ruletype_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_abstract_declarator_complementAccess().getType_qualifier_listType_qualifier_listParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_type_qualifier_list_24_0=ruletype_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_abstract_declarator_complementRule());
                      						}
                      						set(
                      							current,
                      							"type_qualifier_list",
                      							lv_type_qualifier_list_24_0,
                      							"org.xtext.example.Ansic.type_qualifier_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_25=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_25, grammarAccess.getDirect_abstract_declarator_complementAccess().getRightSquareBracketKeyword_6_2());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalAnsic.g:4729:3: (otherlv_26= '[' ( (lv_assignment_expression_27_0= ruleassignment_expression ) ) otherlv_28= ']' )
                    {
                    // InternalAnsic.g:4729:3: (otherlv_26= '[' ( (lv_assignment_expression_27_0= ruleassignment_expression ) ) otherlv_28= ']' )
                    // InternalAnsic.g:4730:4: otherlv_26= '[' ( (lv_assignment_expression_27_0= ruleassignment_expression ) ) otherlv_28= ']'
                    {
                    otherlv_26=(Token)match(input,65,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_26, grammarAccess.getDirect_abstract_declarator_complementAccess().getLeftSquareBracketKeyword_7_0());
                      			
                    }
                    // InternalAnsic.g:4734:4: ( (lv_assignment_expression_27_0= ruleassignment_expression ) )
                    // InternalAnsic.g:4735:5: (lv_assignment_expression_27_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:4735:5: (lv_assignment_expression_27_0= ruleassignment_expression )
                    // InternalAnsic.g:4736:6: lv_assignment_expression_27_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_abstract_declarator_complementAccess().getAssignment_expressionAssignment_expressionParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_assignment_expression_27_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_abstract_declarator_complementRule());
                      						}
                      						set(
                      							current,
                      							"assignment_expression",
                      							lv_assignment_expression_27_0,
                      							"org.xtext.example.Ansic.assignment_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_28=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_28, grammarAccess.getDirect_abstract_declarator_complementAccess().getRightSquareBracketKeyword_7_2());
                      			
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalAnsic.g:4759:3: (otherlv_29= '(' otherlv_30= ')' )
                    {
                    // InternalAnsic.g:4759:3: (otherlv_29= '(' otherlv_30= ')' )
                    // InternalAnsic.g:4760:4: otherlv_29= '(' otherlv_30= ')'
                    {
                    otherlv_29=(Token)match(input,31,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_29, grammarAccess.getDirect_abstract_declarator_complementAccess().getLeftParenthesisKeyword_8_0());
                      			
                    }
                    otherlv_30=(Token)match(input,32,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_30, grammarAccess.getDirect_abstract_declarator_complementAccess().getRightParenthesisKeyword_8_1());
                      			
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalAnsic.g:4770:3: (otherlv_31= '(' ( (lv_parameter_type_list_32_0= ruleparameter_type_list ) ) otherlv_33= ')' )
                    {
                    // InternalAnsic.g:4770:3: (otherlv_31= '(' ( (lv_parameter_type_list_32_0= ruleparameter_type_list ) ) otherlv_33= ')' )
                    // InternalAnsic.g:4771:4: otherlv_31= '(' ( (lv_parameter_type_list_32_0= ruleparameter_type_list ) ) otherlv_33= ')'
                    {
                    otherlv_31=(Token)match(input,31,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_31, grammarAccess.getDirect_abstract_declarator_complementAccess().getLeftParenthesisKeyword_9_0());
                      			
                    }
                    // InternalAnsic.g:4775:4: ( (lv_parameter_type_list_32_0= ruleparameter_type_list ) )
                    // InternalAnsic.g:4776:5: (lv_parameter_type_list_32_0= ruleparameter_type_list )
                    {
                    // InternalAnsic.g:4776:5: (lv_parameter_type_list_32_0= ruleparameter_type_list )
                    // InternalAnsic.g:4777:6: lv_parameter_type_list_32_0= ruleparameter_type_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirect_abstract_declarator_complementAccess().getParameter_type_listParameter_type_listParserRuleCall_9_1_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_parameter_type_list_32_0=ruleparameter_type_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDirect_abstract_declarator_complementRule());
                      						}
                      						set(
                      							current,
                      							"parameter_type_list",
                      							lv_parameter_type_list_32_0,
                      							"org.xtext.example.Ansic.parameter_type_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_33=(Token)match(input,32,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_33, grammarAccess.getDirect_abstract_declarator_complementAccess().getRightParenthesisKeyword_9_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledirect_abstract_declarator_complement"


    // $ANTLR start "entryRuleidentifier_list"
    // InternalAnsic.g:4803:1: entryRuleidentifier_list returns [EObject current=null] : iv_ruleidentifier_list= ruleidentifier_list EOF ;
    public final EObject entryRuleidentifier_list() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleidentifier_list = null;


        try {
            // InternalAnsic.g:4803:56: (iv_ruleidentifier_list= ruleidentifier_list EOF )
            // InternalAnsic.g:4804:2: iv_ruleidentifier_list= ruleidentifier_list EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentifier_listRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleidentifier_list=ruleidentifier_list();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleidentifier_list; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleidentifier_list"


    // $ANTLR start "ruleidentifier_list"
    // InternalAnsic.g:4810:1: ruleidentifier_list returns [EObject current=null] : ( ( (lv_identifier_0_0= RULE_ID ) ) ( (lv_identifier_list_linha_1_0= ruleidentifier_list_linha ) ) ) ;
    public final EObject ruleidentifier_list() throws RecognitionException {
        EObject current = null;

        Token lv_identifier_0_0=null;
        EObject lv_identifier_list_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:4816:2: ( ( ( (lv_identifier_0_0= RULE_ID ) ) ( (lv_identifier_list_linha_1_0= ruleidentifier_list_linha ) ) ) )
            // InternalAnsic.g:4817:2: ( ( (lv_identifier_0_0= RULE_ID ) ) ( (lv_identifier_list_linha_1_0= ruleidentifier_list_linha ) ) )
            {
            // InternalAnsic.g:4817:2: ( ( (lv_identifier_0_0= RULE_ID ) ) ( (lv_identifier_list_linha_1_0= ruleidentifier_list_linha ) ) )
            // InternalAnsic.g:4818:3: ( (lv_identifier_0_0= RULE_ID ) ) ( (lv_identifier_list_linha_1_0= ruleidentifier_list_linha ) )
            {
            // InternalAnsic.g:4818:3: ( (lv_identifier_0_0= RULE_ID ) )
            // InternalAnsic.g:4819:4: (lv_identifier_0_0= RULE_ID )
            {
            // InternalAnsic.g:4819:4: (lv_identifier_0_0= RULE_ID )
            // InternalAnsic.g:4820:5: lv_identifier_0_0= RULE_ID
            {
            lv_identifier_0_0=(Token)match(input,RULE_ID,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_identifier_0_0, grammarAccess.getIdentifier_listAccess().getIdentifierIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getIdentifier_listRule());
              					}
              					setWithLastConsumed(
              						current,
              						"identifier",
              						lv_identifier_0_0,
              						"org.eclipse.xtext.common.Terminals.ID");
              				
            }

            }


            }

            // InternalAnsic.g:4836:3: ( (lv_identifier_list_linha_1_0= ruleidentifier_list_linha ) )
            // InternalAnsic.g:4837:4: (lv_identifier_list_linha_1_0= ruleidentifier_list_linha )
            {
            // InternalAnsic.g:4837:4: (lv_identifier_list_linha_1_0= ruleidentifier_list_linha )
            // InternalAnsic.g:4838:5: lv_identifier_list_linha_1_0= ruleidentifier_list_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIdentifier_listAccess().getIdentifier_list_linhaIdentifier_list_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_identifier_list_linha_1_0=ruleidentifier_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIdentifier_listRule());
              					}
              					set(
              						current,
              						"identifier_list_linha",
              						lv_identifier_list_linha_1_0,
              						"org.xtext.example.Ansic.identifier_list_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleidentifier_list"


    // $ANTLR start "entryRuleidentifier_list_linha"
    // InternalAnsic.g:4859:1: entryRuleidentifier_list_linha returns [EObject current=null] : iv_ruleidentifier_list_linha= ruleidentifier_list_linha EOF ;
    public final EObject entryRuleidentifier_list_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleidentifier_list_linha = null;


        try {
            // InternalAnsic.g:4859:62: (iv_ruleidentifier_list_linha= ruleidentifier_list_linha EOF )
            // InternalAnsic.g:4860:2: iv_ruleidentifier_list_linha= ruleidentifier_list_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentifier_list_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleidentifier_list_linha=ruleidentifier_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleidentifier_list_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleidentifier_list_linha"


    // $ANTLR start "ruleidentifier_list_linha"
    // InternalAnsic.g:4866:1: ruleidentifier_list_linha returns [EObject current=null] : ( () (otherlv_1= ',' ( (lv_identifier_2_0= RULE_ID ) ) ( (lv_identifier_list_linha_3_0= ruleidentifier_list_linha ) ) )? ) ;
    public final EObject ruleidentifier_list_linha() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_identifier_2_0=null;
        EObject lv_identifier_list_linha_3_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:4872:2: ( ( () (otherlv_1= ',' ( (lv_identifier_2_0= RULE_ID ) ) ( (lv_identifier_list_linha_3_0= ruleidentifier_list_linha ) ) )? ) )
            // InternalAnsic.g:4873:2: ( () (otherlv_1= ',' ( (lv_identifier_2_0= RULE_ID ) ) ( (lv_identifier_list_linha_3_0= ruleidentifier_list_linha ) ) )? )
            {
            // InternalAnsic.g:4873:2: ( () (otherlv_1= ',' ( (lv_identifier_2_0= RULE_ID ) ) ( (lv_identifier_list_linha_3_0= ruleidentifier_list_linha ) ) )? )
            // InternalAnsic.g:4874:3: () (otherlv_1= ',' ( (lv_identifier_2_0= RULE_ID ) ) ( (lv_identifier_list_linha_3_0= ruleidentifier_list_linha ) ) )?
            {
            // InternalAnsic.g:4874:3: ()
            // InternalAnsic.g:4875:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getIdentifier_list_linhaAccess().getIdentifierListLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:4884:3: (otherlv_1= ',' ( (lv_identifier_2_0= RULE_ID ) ) ( (lv_identifier_list_linha_3_0= ruleidentifier_list_linha ) ) )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==53) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // InternalAnsic.g:4885:4: otherlv_1= ',' ( (lv_identifier_2_0= RULE_ID ) ) ( (lv_identifier_list_linha_3_0= ruleidentifier_list_linha ) )
                    {
                    otherlv_1=(Token)match(input,53,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getIdentifier_list_linhaAccess().getCommaKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:4889:4: ( (lv_identifier_2_0= RULE_ID ) )
                    // InternalAnsic.g:4890:5: (lv_identifier_2_0= RULE_ID )
                    {
                    // InternalAnsic.g:4890:5: (lv_identifier_2_0= RULE_ID )
                    // InternalAnsic.g:4891:6: lv_identifier_2_0= RULE_ID
                    {
                    lv_identifier_2_0=(Token)match(input,RULE_ID,FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_identifier_2_0, grammarAccess.getIdentifier_list_linhaAccess().getIdentifierIDTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getIdentifier_list_linhaRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"identifier",
                      							lv_identifier_2_0,
                      							"org.eclipse.xtext.common.Terminals.ID");
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:4907:4: ( (lv_identifier_list_linha_3_0= ruleidentifier_list_linha ) )
                    // InternalAnsic.g:4908:5: (lv_identifier_list_linha_3_0= ruleidentifier_list_linha )
                    {
                    // InternalAnsic.g:4908:5: (lv_identifier_list_linha_3_0= ruleidentifier_list_linha )
                    // InternalAnsic.g:4909:6: lv_identifier_list_linha_3_0= ruleidentifier_list_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIdentifier_list_linhaAccess().getIdentifier_list_linhaIdentifier_list_linhaParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_identifier_list_linha_3_0=ruleidentifier_list_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIdentifier_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"identifier_list_linha",
                      							lv_identifier_list_linha_3_0,
                      							"org.xtext.example.Ansic.identifier_list_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleidentifier_list_linha"


    // $ANTLR start "entryRuletranslation_unit_linha"
    // InternalAnsic.g:4931:1: entryRuletranslation_unit_linha returns [EObject current=null] : iv_ruletranslation_unit_linha= ruletranslation_unit_linha EOF ;
    public final EObject entryRuletranslation_unit_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletranslation_unit_linha = null;


        try {
            // InternalAnsic.g:4931:63: (iv_ruletranslation_unit_linha= ruletranslation_unit_linha EOF )
            // InternalAnsic.g:4932:2: iv_ruletranslation_unit_linha= ruletranslation_unit_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTranslation_unit_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletranslation_unit_linha=ruletranslation_unit_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletranslation_unit_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletranslation_unit_linha"


    // $ANTLR start "ruletranslation_unit_linha"
    // InternalAnsic.g:4938:1: ruletranslation_unit_linha returns [EObject current=null] : ( () ( ( (lv_external_declaration_1_0= ruleexternal_declaration ) ) ( (lv_translation_unit_linha_2_0= ruletranslation_unit_linha ) ) )? ) ;
    public final EObject ruletranslation_unit_linha() throws RecognitionException {
        EObject current = null;

        EObject lv_external_declaration_1_0 = null;

        EObject lv_translation_unit_linha_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:4944:2: ( ( () ( ( (lv_external_declaration_1_0= ruleexternal_declaration ) ) ( (lv_translation_unit_linha_2_0= ruletranslation_unit_linha ) ) )? ) )
            // InternalAnsic.g:4945:2: ( () ( ( (lv_external_declaration_1_0= ruleexternal_declaration ) ) ( (lv_translation_unit_linha_2_0= ruletranslation_unit_linha ) ) )? )
            {
            // InternalAnsic.g:4945:2: ( () ( ( (lv_external_declaration_1_0= ruleexternal_declaration ) ) ( (lv_translation_unit_linha_2_0= ruletranslation_unit_linha ) ) )? )
            // InternalAnsic.g:4946:3: () ( ( (lv_external_declaration_1_0= ruleexternal_declaration ) ) ( (lv_translation_unit_linha_2_0= ruletranslation_unit_linha ) ) )?
            {
            // InternalAnsic.g:4946:3: ()
            // InternalAnsic.g:4947:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getTranslation_unit_linhaAccess().getTranlationUnitLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:4956:3: ( ( (lv_external_declaration_1_0= ruleexternal_declaration ) ) ( (lv_translation_unit_linha_2_0= ruletranslation_unit_linha ) ) )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( ((LA37_0>=28 && LA37_0<=30)||(LA37_0>=33 && LA37_0<=50)||(LA37_0>=55 && LA37_0<=56)||(LA37_0>=59 && LA37_0<=63)||LA37_0==71) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // InternalAnsic.g:4957:4: ( (lv_external_declaration_1_0= ruleexternal_declaration ) ) ( (lv_translation_unit_linha_2_0= ruletranslation_unit_linha ) )
                    {
                    // InternalAnsic.g:4957:4: ( (lv_external_declaration_1_0= ruleexternal_declaration ) )
                    // InternalAnsic.g:4958:5: (lv_external_declaration_1_0= ruleexternal_declaration )
                    {
                    // InternalAnsic.g:4958:5: (lv_external_declaration_1_0= ruleexternal_declaration )
                    // InternalAnsic.g:4959:6: lv_external_declaration_1_0= ruleexternal_declaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTranslation_unit_linhaAccess().getExternal_declarationExternal_declarationParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_3);
                    lv_external_declaration_1_0=ruleexternal_declaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTranslation_unit_linhaRule());
                      						}
                      						set(
                      							current,
                      							"external_declaration",
                      							lv_external_declaration_1_0,
                      							"org.xtext.example.Ansic.external_declaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:4976:4: ( (lv_translation_unit_linha_2_0= ruletranslation_unit_linha ) )
                    // InternalAnsic.g:4977:5: (lv_translation_unit_linha_2_0= ruletranslation_unit_linha )
                    {
                    // InternalAnsic.g:4977:5: (lv_translation_unit_linha_2_0= ruletranslation_unit_linha )
                    // InternalAnsic.g:4978:6: lv_translation_unit_linha_2_0= ruletranslation_unit_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTranslation_unit_linhaAccess().getTranslation_unit_linhaTranslation_unit_linhaParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_translation_unit_linha_2_0=ruletranslation_unit_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTranslation_unit_linhaRule());
                      						}
                      						set(
                      							current,
                      							"translation_unit_linha",
                      							lv_translation_unit_linha_2_0,
                      							"org.xtext.example.Ansic.translation_unit_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletranslation_unit_linha"


    // $ANTLR start "entryRuleprimary_expression"
    // InternalAnsic.g:5000:1: entryRuleprimary_expression returns [EObject current=null] : iv_ruleprimary_expression= ruleprimary_expression EOF ;
    public final EObject entryRuleprimary_expression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleprimary_expression = null;


        try {
            // InternalAnsic.g:5000:59: (iv_ruleprimary_expression= ruleprimary_expression EOF )
            // InternalAnsic.g:5001:2: iv_ruleprimary_expression= ruleprimary_expression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimary_expressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleprimary_expression=ruleprimary_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleprimary_expression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleprimary_expression"


    // $ANTLR start "ruleprimary_expression"
    // InternalAnsic.g:5007:1: ruleprimary_expression returns [EObject current=null] : ( ( (lv_identifier_0_0= RULE_ID ) ) | ( (lv_constant_1_0= ruleconstant ) ) | ( (lv_string_2_0= rulestring_ufcg ) ) | (otherlv_3= '(' ( (lv_expression_4_0= ruleexpression ) ) otherlv_5= ')' ) | ( (lv_generic_selection_6_0= rulegeneric_selection ) ) ) ;
    public final EObject ruleprimary_expression() throws RecognitionException {
        EObject current = null;

        Token lv_identifier_0_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_constant_1_0 = null;

        EObject lv_string_2_0 = null;

        EObject lv_expression_4_0 = null;

        EObject lv_generic_selection_6_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:5013:2: ( ( ( (lv_identifier_0_0= RULE_ID ) ) | ( (lv_constant_1_0= ruleconstant ) ) | ( (lv_string_2_0= rulestring_ufcg ) ) | (otherlv_3= '(' ( (lv_expression_4_0= ruleexpression ) ) otherlv_5= ')' ) | ( (lv_generic_selection_6_0= rulegeneric_selection ) ) ) )
            // InternalAnsic.g:5014:2: ( ( (lv_identifier_0_0= RULE_ID ) ) | ( (lv_constant_1_0= ruleconstant ) ) | ( (lv_string_2_0= rulestring_ufcg ) ) | (otherlv_3= '(' ( (lv_expression_4_0= ruleexpression ) ) otherlv_5= ')' ) | ( (lv_generic_selection_6_0= rulegeneric_selection ) ) )
            {
            // InternalAnsic.g:5014:2: ( ( (lv_identifier_0_0= RULE_ID ) ) | ( (lv_constant_1_0= ruleconstant ) ) | ( (lv_string_2_0= rulestring_ufcg ) ) | (otherlv_3= '(' ( (lv_expression_4_0= ruleexpression ) ) otherlv_5= ')' ) | ( (lv_generic_selection_6_0= rulegeneric_selection ) ) )
            int alt38=5;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt38=1;
                }
                break;
            case RULE_I_CONSTANT:
            case RULE_F_CONSTANT:
            case 50:
                {
                alt38=2;
                }
                break;
            case RULE_STRING_LITERAL:
            case 114:
                {
                alt38=3;
                }
                break;
            case 31:
                {
                alt38=4;
                }
                break;
            case 68:
                {
                alt38=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 38, 0, input);

                throw nvae;
            }

            switch (alt38) {
                case 1 :
                    // InternalAnsic.g:5015:3: ( (lv_identifier_0_0= RULE_ID ) )
                    {
                    // InternalAnsic.g:5015:3: ( (lv_identifier_0_0= RULE_ID ) )
                    // InternalAnsic.g:5016:4: (lv_identifier_0_0= RULE_ID )
                    {
                    // InternalAnsic.g:5016:4: (lv_identifier_0_0= RULE_ID )
                    // InternalAnsic.g:5017:5: lv_identifier_0_0= RULE_ID
                    {
                    lv_identifier_0_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_identifier_0_0, grammarAccess.getPrimary_expressionAccess().getIdentifierIDTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getPrimary_expressionRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"identifier",
                      						lv_identifier_0_0,
                      						"org.eclipse.xtext.common.Terminals.ID");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:5034:3: ( (lv_constant_1_0= ruleconstant ) )
                    {
                    // InternalAnsic.g:5034:3: ( (lv_constant_1_0= ruleconstant ) )
                    // InternalAnsic.g:5035:4: (lv_constant_1_0= ruleconstant )
                    {
                    // InternalAnsic.g:5035:4: (lv_constant_1_0= ruleconstant )
                    // InternalAnsic.g:5036:5: lv_constant_1_0= ruleconstant
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimary_expressionAccess().getConstantConstantParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_constant_1_0=ruleconstant();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimary_expressionRule());
                      					}
                      					set(
                      						current,
                      						"constant",
                      						lv_constant_1_0,
                      						"org.xtext.example.Ansic.constant");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:5054:3: ( (lv_string_2_0= rulestring_ufcg ) )
                    {
                    // InternalAnsic.g:5054:3: ( (lv_string_2_0= rulestring_ufcg ) )
                    // InternalAnsic.g:5055:4: (lv_string_2_0= rulestring_ufcg )
                    {
                    // InternalAnsic.g:5055:4: (lv_string_2_0= rulestring_ufcg )
                    // InternalAnsic.g:5056:5: lv_string_2_0= rulestring_ufcg
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimary_expressionAccess().getStringString_ufcgParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_string_2_0=rulestring_ufcg();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimary_expressionRule());
                      					}
                      					set(
                      						current,
                      						"string",
                      						lv_string_2_0,
                      						"org.xtext.example.Ansic.string_ufcg");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalAnsic.g:5074:3: (otherlv_3= '(' ( (lv_expression_4_0= ruleexpression ) ) otherlv_5= ')' )
                    {
                    // InternalAnsic.g:5074:3: (otherlv_3= '(' ( (lv_expression_4_0= ruleexpression ) ) otherlv_5= ')' )
                    // InternalAnsic.g:5075:4: otherlv_3= '(' ( (lv_expression_4_0= ruleexpression ) ) otherlv_5= ')'
                    {
                    otherlv_3=(Token)match(input,31,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getPrimary_expressionAccess().getLeftParenthesisKeyword_3_0());
                      			
                    }
                    // InternalAnsic.g:5079:4: ( (lv_expression_4_0= ruleexpression ) )
                    // InternalAnsic.g:5080:5: (lv_expression_4_0= ruleexpression )
                    {
                    // InternalAnsic.g:5080:5: (lv_expression_4_0= ruleexpression )
                    // InternalAnsic.g:5081:6: lv_expression_4_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimary_expressionAccess().getExpressionExpressionParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_expression_4_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimary_expressionRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_4_0,
                      							"org.xtext.example.Ansic.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,32,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getPrimary_expressionAccess().getRightParenthesisKeyword_3_2());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalAnsic.g:5104:3: ( (lv_generic_selection_6_0= rulegeneric_selection ) )
                    {
                    // InternalAnsic.g:5104:3: ( (lv_generic_selection_6_0= rulegeneric_selection ) )
                    // InternalAnsic.g:5105:4: (lv_generic_selection_6_0= rulegeneric_selection )
                    {
                    // InternalAnsic.g:5105:4: (lv_generic_selection_6_0= rulegeneric_selection )
                    // InternalAnsic.g:5106:5: lv_generic_selection_6_0= rulegeneric_selection
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimary_expressionAccess().getGeneric_selectionGeneric_selectionParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_generic_selection_6_0=rulegeneric_selection();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimary_expressionRule());
                      					}
                      					set(
                      						current,
                      						"generic_selection",
                      						lv_generic_selection_6_0,
                      						"org.xtext.example.Ansic.generic_selection");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleprimary_expression"


    // $ANTLR start "entryRuleenumeration_constant"
    // InternalAnsic.g:5127:1: entryRuleenumeration_constant returns [EObject current=null] : iv_ruleenumeration_constant= ruleenumeration_constant EOF ;
    public final EObject entryRuleenumeration_constant() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleenumeration_constant = null;


        try {
            // InternalAnsic.g:5127:61: (iv_ruleenumeration_constant= ruleenumeration_constant EOF )
            // InternalAnsic.g:5128:2: iv_ruleenumeration_constant= ruleenumeration_constant EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumeration_constantRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleenumeration_constant=ruleenumeration_constant();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleenumeration_constant; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleenumeration_constant"


    // $ANTLR start "ruleenumeration_constant"
    // InternalAnsic.g:5134:1: ruleenumeration_constant returns [EObject current=null] : ( (lv_identifier_0_0= RULE_ID ) ) ;
    public final EObject ruleenumeration_constant() throws RecognitionException {
        EObject current = null;

        Token lv_identifier_0_0=null;


        	enterRule();

        try {
            // InternalAnsic.g:5140:2: ( ( (lv_identifier_0_0= RULE_ID ) ) )
            // InternalAnsic.g:5141:2: ( (lv_identifier_0_0= RULE_ID ) )
            {
            // InternalAnsic.g:5141:2: ( (lv_identifier_0_0= RULE_ID ) )
            // InternalAnsic.g:5142:3: (lv_identifier_0_0= RULE_ID )
            {
            // InternalAnsic.g:5142:3: (lv_identifier_0_0= RULE_ID )
            // InternalAnsic.g:5143:4: lv_identifier_0_0= RULE_ID
            {
            lv_identifier_0_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_identifier_0_0, grammarAccess.getEnumeration_constantAccess().getIdentifierIDTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getEnumeration_constantRule());
              				}
              				setWithLastConsumed(
              					current,
              					"identifier",
              					lv_identifier_0_0,
              					"org.eclipse.xtext.common.Terminals.ID");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleenumeration_constant"


    // $ANTLR start "entryRulegeneric_selection"
    // InternalAnsic.g:5162:1: entryRulegeneric_selection returns [EObject current=null] : iv_rulegeneric_selection= rulegeneric_selection EOF ;
    public final EObject entryRulegeneric_selection() throws RecognitionException {
        EObject current = null;

        EObject iv_rulegeneric_selection = null;


        try {
            // InternalAnsic.g:5162:58: (iv_rulegeneric_selection= rulegeneric_selection EOF )
            // InternalAnsic.g:5163:2: iv_rulegeneric_selection= rulegeneric_selection EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGeneric_selectionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulegeneric_selection=rulegeneric_selection();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulegeneric_selection; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulegeneric_selection"


    // $ANTLR start "rulegeneric_selection"
    // InternalAnsic.g:5169:1: rulegeneric_selection returns [EObject current=null] : ( ( (lv__generic_0_0= '_Generic' ) ) otherlv_1= '(' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) otherlv_3= ',' ( (lv_generic_assoc_list_4_0= rulegeneric_assoc_list ) ) otherlv_5= ')' ) ;
    public final EObject rulegeneric_selection() throws RecognitionException {
        EObject current = null;

        Token lv__generic_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_assignment_expression_2_0 = null;

        EObject lv_generic_assoc_list_4_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:5175:2: ( ( ( (lv__generic_0_0= '_Generic' ) ) otherlv_1= '(' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) otherlv_3= ',' ( (lv_generic_assoc_list_4_0= rulegeneric_assoc_list ) ) otherlv_5= ')' ) )
            // InternalAnsic.g:5176:2: ( ( (lv__generic_0_0= '_Generic' ) ) otherlv_1= '(' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) otherlv_3= ',' ( (lv_generic_assoc_list_4_0= rulegeneric_assoc_list ) ) otherlv_5= ')' )
            {
            // InternalAnsic.g:5176:2: ( ( (lv__generic_0_0= '_Generic' ) ) otherlv_1= '(' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) otherlv_3= ',' ( (lv_generic_assoc_list_4_0= rulegeneric_assoc_list ) ) otherlv_5= ')' )
            // InternalAnsic.g:5177:3: ( (lv__generic_0_0= '_Generic' ) ) otherlv_1= '(' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) otherlv_3= ',' ( (lv_generic_assoc_list_4_0= rulegeneric_assoc_list ) ) otherlv_5= ')'
            {
            // InternalAnsic.g:5177:3: ( (lv__generic_0_0= '_Generic' ) )
            // InternalAnsic.g:5178:4: (lv__generic_0_0= '_Generic' )
            {
            // InternalAnsic.g:5178:4: (lv__generic_0_0= '_Generic' )
            // InternalAnsic.g:5179:5: lv__generic_0_0= '_Generic'
            {
            lv__generic_0_0=(Token)match(input,68,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv__generic_0_0, grammarAccess.getGeneric_selectionAccess().get_generic_GenericKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGeneric_selectionRule());
              					}
              					setWithLastConsumed(current, "_generic", lv__generic_0_0, "_Generic");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,31,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getGeneric_selectionAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalAnsic.g:5195:3: ( (lv_assignment_expression_2_0= ruleassignment_expression ) )
            // InternalAnsic.g:5196:4: (lv_assignment_expression_2_0= ruleassignment_expression )
            {
            // InternalAnsic.g:5196:4: (lv_assignment_expression_2_0= ruleassignment_expression )
            // InternalAnsic.g:5197:5: lv_assignment_expression_2_0= ruleassignment_expression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGeneric_selectionAccess().getAssignment_expressionAssignment_expressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_12);
            lv_assignment_expression_2_0=ruleassignment_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGeneric_selectionRule());
              					}
              					set(
              						current,
              						"assignment_expression",
              						lv_assignment_expression_2_0,
              						"org.xtext.example.Ansic.assignment_expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,53,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getGeneric_selectionAccess().getCommaKeyword_3());
              		
            }
            // InternalAnsic.g:5218:3: ( (lv_generic_assoc_list_4_0= rulegeneric_assoc_list ) )
            // InternalAnsic.g:5219:4: (lv_generic_assoc_list_4_0= rulegeneric_assoc_list )
            {
            // InternalAnsic.g:5219:4: (lv_generic_assoc_list_4_0= rulegeneric_assoc_list )
            // InternalAnsic.g:5220:5: lv_generic_assoc_list_4_0= rulegeneric_assoc_list
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGeneric_selectionAccess().getGeneric_assoc_listGeneric_assoc_listParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_7);
            lv_generic_assoc_list_4_0=rulegeneric_assoc_list();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGeneric_selectionRule());
              					}
              					add(
              						current,
              						"generic_assoc_list",
              						lv_generic_assoc_list_4_0,
              						"org.xtext.example.Ansic.generic_assoc_list");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_5=(Token)match(input,32,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getGeneric_selectionAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulegeneric_selection"


    // $ANTLR start "entryRulegeneric_assoc_list"
    // InternalAnsic.g:5245:1: entryRulegeneric_assoc_list returns [EObject current=null] : iv_rulegeneric_assoc_list= rulegeneric_assoc_list EOF ;
    public final EObject entryRulegeneric_assoc_list() throws RecognitionException {
        EObject current = null;

        EObject iv_rulegeneric_assoc_list = null;


        try {
            // InternalAnsic.g:5245:59: (iv_rulegeneric_assoc_list= rulegeneric_assoc_list EOF )
            // InternalAnsic.g:5246:2: iv_rulegeneric_assoc_list= rulegeneric_assoc_list EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGeneric_assoc_listRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulegeneric_assoc_list=rulegeneric_assoc_list();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulegeneric_assoc_list; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulegeneric_assoc_list"


    // $ANTLR start "rulegeneric_assoc_list"
    // InternalAnsic.g:5252:1: rulegeneric_assoc_list returns [EObject current=null] : ( ( (lv_generic_association_0_0= rulegeneric_association ) ) ( (lv_generic_assoc_list_linha_1_0= rulegeneric_assoc_list_linha ) ) ) ;
    public final EObject rulegeneric_assoc_list() throws RecognitionException {
        EObject current = null;

        EObject lv_generic_association_0_0 = null;

        EObject lv_generic_assoc_list_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:5258:2: ( ( ( (lv_generic_association_0_0= rulegeneric_association ) ) ( (lv_generic_assoc_list_linha_1_0= rulegeneric_assoc_list_linha ) ) ) )
            // InternalAnsic.g:5259:2: ( ( (lv_generic_association_0_0= rulegeneric_association ) ) ( (lv_generic_assoc_list_linha_1_0= rulegeneric_assoc_list_linha ) ) )
            {
            // InternalAnsic.g:5259:2: ( ( (lv_generic_association_0_0= rulegeneric_association ) ) ( (lv_generic_assoc_list_linha_1_0= rulegeneric_assoc_list_linha ) ) )
            // InternalAnsic.g:5260:3: ( (lv_generic_association_0_0= rulegeneric_association ) ) ( (lv_generic_assoc_list_linha_1_0= rulegeneric_assoc_list_linha ) )
            {
            // InternalAnsic.g:5260:3: ( (lv_generic_association_0_0= rulegeneric_association ) )
            // InternalAnsic.g:5261:4: (lv_generic_association_0_0= rulegeneric_association )
            {
            // InternalAnsic.g:5261:4: (lv_generic_association_0_0= rulegeneric_association )
            // InternalAnsic.g:5262:5: lv_generic_association_0_0= rulegeneric_association
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGeneric_assoc_listAccess().getGeneric_associationGeneric_associationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_12);
            lv_generic_association_0_0=rulegeneric_association();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGeneric_assoc_listRule());
              					}
              					set(
              						current,
              						"generic_association",
              						lv_generic_association_0_0,
              						"org.xtext.example.Ansic.generic_association");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:5279:3: ( (lv_generic_assoc_list_linha_1_0= rulegeneric_assoc_list_linha ) )
            // InternalAnsic.g:5280:4: (lv_generic_assoc_list_linha_1_0= rulegeneric_assoc_list_linha )
            {
            // InternalAnsic.g:5280:4: (lv_generic_assoc_list_linha_1_0= rulegeneric_assoc_list_linha )
            // InternalAnsic.g:5281:5: lv_generic_assoc_list_linha_1_0= rulegeneric_assoc_list_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGeneric_assoc_listAccess().getGeneric_assoc_list_linhaGeneric_assoc_list_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_generic_assoc_list_linha_1_0=rulegeneric_assoc_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGeneric_assoc_listRule());
              					}
              					set(
              						current,
              						"generic_assoc_list_linha",
              						lv_generic_assoc_list_linha_1_0,
              						"org.xtext.example.Ansic.generic_assoc_list_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulegeneric_assoc_list"


    // $ANTLR start "entryRulegeneric_assoc_list_linha"
    // InternalAnsic.g:5302:1: entryRulegeneric_assoc_list_linha returns [EObject current=null] : iv_rulegeneric_assoc_list_linha= rulegeneric_assoc_list_linha EOF ;
    public final EObject entryRulegeneric_assoc_list_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_rulegeneric_assoc_list_linha = null;


        try {
            // InternalAnsic.g:5302:65: (iv_rulegeneric_assoc_list_linha= rulegeneric_assoc_list_linha EOF )
            // InternalAnsic.g:5303:2: iv_rulegeneric_assoc_list_linha= rulegeneric_assoc_list_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGeneric_assoc_list_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulegeneric_assoc_list_linha=rulegeneric_assoc_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulegeneric_assoc_list_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulegeneric_assoc_list_linha"


    // $ANTLR start "rulegeneric_assoc_list_linha"
    // InternalAnsic.g:5309:1: rulegeneric_assoc_list_linha returns [EObject current=null] : ( () (otherlv_1= ',' ( (lv_generic_association_2_0= rulegeneric_association ) ) ( (lv_generic_assoc_list_linha_3_0= rulegeneric_assoc_list_linha ) ) )? ) ;
    public final EObject rulegeneric_assoc_list_linha() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_generic_association_2_0 = null;

        EObject lv_generic_assoc_list_linha_3_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:5315:2: ( ( () (otherlv_1= ',' ( (lv_generic_association_2_0= rulegeneric_association ) ) ( (lv_generic_assoc_list_linha_3_0= rulegeneric_assoc_list_linha ) ) )? ) )
            // InternalAnsic.g:5316:2: ( () (otherlv_1= ',' ( (lv_generic_association_2_0= rulegeneric_association ) ) ( (lv_generic_assoc_list_linha_3_0= rulegeneric_assoc_list_linha ) ) )? )
            {
            // InternalAnsic.g:5316:2: ( () (otherlv_1= ',' ( (lv_generic_association_2_0= rulegeneric_association ) ) ( (lv_generic_assoc_list_linha_3_0= rulegeneric_assoc_list_linha ) ) )? )
            // InternalAnsic.g:5317:3: () (otherlv_1= ',' ( (lv_generic_association_2_0= rulegeneric_association ) ) ( (lv_generic_assoc_list_linha_3_0= rulegeneric_assoc_list_linha ) ) )?
            {
            // InternalAnsic.g:5317:3: ()
            // InternalAnsic.g:5318:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getGeneric_assoc_list_linhaAccess().getGenericAssocListLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:5327:3: (otherlv_1= ',' ( (lv_generic_association_2_0= rulegeneric_association ) ) ( (lv_generic_assoc_list_linha_3_0= rulegeneric_assoc_list_linha ) ) )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==53) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // InternalAnsic.g:5328:4: otherlv_1= ',' ( (lv_generic_association_2_0= rulegeneric_association ) ) ( (lv_generic_assoc_list_linha_3_0= rulegeneric_assoc_list_linha ) )
                    {
                    otherlv_1=(Token)match(input,53,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getGeneric_assoc_list_linhaAccess().getCommaKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:5332:4: ( (lv_generic_association_2_0= rulegeneric_association ) )
                    // InternalAnsic.g:5333:5: (lv_generic_association_2_0= rulegeneric_association )
                    {
                    // InternalAnsic.g:5333:5: (lv_generic_association_2_0= rulegeneric_association )
                    // InternalAnsic.g:5334:6: lv_generic_association_2_0= rulegeneric_association
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getGeneric_assoc_list_linhaAccess().getGeneric_associationGeneric_associationParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_generic_association_2_0=rulegeneric_association();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getGeneric_assoc_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"generic_association",
                      							lv_generic_association_2_0,
                      							"org.xtext.example.Ansic.generic_association");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:5351:4: ( (lv_generic_assoc_list_linha_3_0= rulegeneric_assoc_list_linha ) )
                    // InternalAnsic.g:5352:5: (lv_generic_assoc_list_linha_3_0= rulegeneric_assoc_list_linha )
                    {
                    // InternalAnsic.g:5352:5: (lv_generic_assoc_list_linha_3_0= rulegeneric_assoc_list_linha )
                    // InternalAnsic.g:5353:6: lv_generic_assoc_list_linha_3_0= rulegeneric_assoc_list_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getGeneric_assoc_list_linhaAccess().getGeneric_assoc_list_linhaGeneric_assoc_list_linhaParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_generic_assoc_list_linha_3_0=rulegeneric_assoc_list_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getGeneric_assoc_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"generic_assoc_list_linha",
                      							lv_generic_assoc_list_linha_3_0,
                      							"org.xtext.example.Ansic.generic_assoc_list_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulegeneric_assoc_list_linha"


    // $ANTLR start "entryRulegeneric_association"
    // InternalAnsic.g:5375:1: entryRulegeneric_association returns [EObject current=null] : iv_rulegeneric_association= rulegeneric_association EOF ;
    public final EObject entryRulegeneric_association() throws RecognitionException {
        EObject current = null;

        EObject iv_rulegeneric_association = null;


        try {
            // InternalAnsic.g:5375:60: (iv_rulegeneric_association= rulegeneric_association EOF )
            // InternalAnsic.g:5376:2: iv_rulegeneric_association= rulegeneric_association EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGeneric_associationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulegeneric_association=rulegeneric_association();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulegeneric_association; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulegeneric_association"


    // $ANTLR start "rulegeneric_association"
    // InternalAnsic.g:5382:1: rulegeneric_association returns [EObject current=null] : ( ( ( (lv_type_name_0_0= ruletype_name ) ) otherlv_1= ':' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) ) | ( ( (lv_default_3_0= 'default' ) ) otherlv_4= ':' ( (lv_assignment_expression_5_0= ruleassignment_expression ) ) ) ) ;
    public final EObject rulegeneric_association() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_default_3_0=null;
        Token otherlv_4=null;
        EObject lv_type_name_0_0 = null;

        EObject lv_assignment_expression_2_0 = null;

        EObject lv_assignment_expression_5_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:5388:2: ( ( ( ( (lv_type_name_0_0= ruletype_name ) ) otherlv_1= ':' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) ) | ( ( (lv_default_3_0= 'default' ) ) otherlv_4= ':' ( (lv_assignment_expression_5_0= ruleassignment_expression ) ) ) ) )
            // InternalAnsic.g:5389:2: ( ( ( (lv_type_name_0_0= ruletype_name ) ) otherlv_1= ':' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) ) | ( ( (lv_default_3_0= 'default' ) ) otherlv_4= ':' ( (lv_assignment_expression_5_0= ruleassignment_expression ) ) ) )
            {
            // InternalAnsic.g:5389:2: ( ( ( (lv_type_name_0_0= ruletype_name ) ) otherlv_1= ':' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) ) | ( ( (lv_default_3_0= 'default' ) ) otherlv_4= ':' ( (lv_assignment_expression_5_0= ruleassignment_expression ) ) ) )
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( ((LA40_0>=33 && LA40_0<=50)||(LA40_0>=55 && LA40_0<=56)) ) {
                alt40=1;
            }
            else if ( (LA40_0==69) ) {
                alt40=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;
            }
            switch (alt40) {
                case 1 :
                    // InternalAnsic.g:5390:3: ( ( (lv_type_name_0_0= ruletype_name ) ) otherlv_1= ':' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) )
                    {
                    // InternalAnsic.g:5390:3: ( ( (lv_type_name_0_0= ruletype_name ) ) otherlv_1= ':' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) )
                    // InternalAnsic.g:5391:4: ( (lv_type_name_0_0= ruletype_name ) ) otherlv_1= ':' ( (lv_assignment_expression_2_0= ruleassignment_expression ) )
                    {
                    // InternalAnsic.g:5391:4: ( (lv_type_name_0_0= ruletype_name ) )
                    // InternalAnsic.g:5392:5: (lv_type_name_0_0= ruletype_name )
                    {
                    // InternalAnsic.g:5392:5: (lv_type_name_0_0= ruletype_name )
                    // InternalAnsic.g:5393:6: lv_type_name_0_0= ruletype_name
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getGeneric_associationAccess().getType_nameType_nameParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_16);
                    lv_type_name_0_0=ruletype_name();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getGeneric_associationRule());
                      						}
                      						set(
                      							current,
                      							"type_name",
                      							lv_type_name_0_0,
                      							"org.xtext.example.Ansic.type_name");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,58,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getGeneric_associationAccess().getColonKeyword_0_1());
                      			
                    }
                    // InternalAnsic.g:5414:4: ( (lv_assignment_expression_2_0= ruleassignment_expression ) )
                    // InternalAnsic.g:5415:5: (lv_assignment_expression_2_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:5415:5: (lv_assignment_expression_2_0= ruleassignment_expression )
                    // InternalAnsic.g:5416:6: lv_assignment_expression_2_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getGeneric_associationAccess().getAssignment_expressionAssignment_expressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_assignment_expression_2_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getGeneric_associationRule());
                      						}
                      						set(
                      							current,
                      							"assignment_expression",
                      							lv_assignment_expression_2_0,
                      							"org.xtext.example.Ansic.assignment_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:5435:3: ( ( (lv_default_3_0= 'default' ) ) otherlv_4= ':' ( (lv_assignment_expression_5_0= ruleassignment_expression ) ) )
                    {
                    // InternalAnsic.g:5435:3: ( ( (lv_default_3_0= 'default' ) ) otherlv_4= ':' ( (lv_assignment_expression_5_0= ruleassignment_expression ) ) )
                    // InternalAnsic.g:5436:4: ( (lv_default_3_0= 'default' ) ) otherlv_4= ':' ( (lv_assignment_expression_5_0= ruleassignment_expression ) )
                    {
                    // InternalAnsic.g:5436:4: ( (lv_default_3_0= 'default' ) )
                    // InternalAnsic.g:5437:5: (lv_default_3_0= 'default' )
                    {
                    // InternalAnsic.g:5437:5: (lv_default_3_0= 'default' )
                    // InternalAnsic.g:5438:6: lv_default_3_0= 'default'
                    {
                    lv_default_3_0=(Token)match(input,69,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_default_3_0, grammarAccess.getGeneric_associationAccess().getDefaultDefaultKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getGeneric_associationRule());
                      						}
                      						setWithLastConsumed(current, "default", lv_default_3_0, "default");
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,58,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getGeneric_associationAccess().getColonKeyword_1_1());
                      			
                    }
                    // InternalAnsic.g:5454:4: ( (lv_assignment_expression_5_0= ruleassignment_expression ) )
                    // InternalAnsic.g:5455:5: (lv_assignment_expression_5_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:5455:5: (lv_assignment_expression_5_0= ruleassignment_expression )
                    // InternalAnsic.g:5456:6: lv_assignment_expression_5_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getGeneric_associationAccess().getAssignment_expressionAssignment_expressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_assignment_expression_5_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getGeneric_associationRule());
                      						}
                      						set(
                      							current,
                      							"assignment_expression",
                      							lv_assignment_expression_5_0,
                      							"org.xtext.example.Ansic.assignment_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulegeneric_association"


    // $ANTLR start "entryRulepostfix_expression"
    // InternalAnsic.g:5478:1: entryRulepostfix_expression returns [EObject current=null] : iv_rulepostfix_expression= rulepostfix_expression EOF ;
    public final EObject entryRulepostfix_expression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulepostfix_expression = null;


        try {
            // InternalAnsic.g:5478:59: (iv_rulepostfix_expression= rulepostfix_expression EOF )
            // InternalAnsic.g:5479:2: iv_rulepostfix_expression= rulepostfix_expression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPostfix_expressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulepostfix_expression=rulepostfix_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulepostfix_expression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulepostfix_expression"


    // $ANTLR start "rulepostfix_expression"
    // InternalAnsic.g:5485:1: rulepostfix_expression returns [EObject current=null] : ( ( ( (lv_primary_expression_0_0= ruleprimary_expression ) ) ( (lv_postfix_expression_linha_1_0= rulepostfix_expression_linha ) ) ) | (otherlv_2= '(' this_type_name_3= ruletype_name otherlv_4= ')' otherlv_5= '{' ( (lv_initializer_list_6_0= ruleinitializer_list ) ) otherlv_7= '}' ( (lv_postfix_expression_linha_8_0= rulepostfix_expression_linha ) ) ) | (otherlv_9= '(' this_type_name_10= ruletype_name otherlv_11= ')' otherlv_12= '{' ( (lv_initializer_list_13_0= ruleinitializer_list ) ) otherlv_14= ',' otherlv_15= '}' ( (lv_postfix_expression_linha_16_0= rulepostfix_expression_linha ) ) ) ) ;
    public final EObject rulepostfix_expression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        EObject lv_primary_expression_0_0 = null;

        EObject lv_postfix_expression_linha_1_0 = null;

        EObject this_type_name_3 = null;

        EObject lv_initializer_list_6_0 = null;

        EObject lv_postfix_expression_linha_8_0 = null;

        EObject this_type_name_10 = null;

        EObject lv_initializer_list_13_0 = null;

        EObject lv_postfix_expression_linha_16_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:5491:2: ( ( ( ( (lv_primary_expression_0_0= ruleprimary_expression ) ) ( (lv_postfix_expression_linha_1_0= rulepostfix_expression_linha ) ) ) | (otherlv_2= '(' this_type_name_3= ruletype_name otherlv_4= ')' otherlv_5= '{' ( (lv_initializer_list_6_0= ruleinitializer_list ) ) otherlv_7= '}' ( (lv_postfix_expression_linha_8_0= rulepostfix_expression_linha ) ) ) | (otherlv_9= '(' this_type_name_10= ruletype_name otherlv_11= ')' otherlv_12= '{' ( (lv_initializer_list_13_0= ruleinitializer_list ) ) otherlv_14= ',' otherlv_15= '}' ( (lv_postfix_expression_linha_16_0= rulepostfix_expression_linha ) ) ) ) )
            // InternalAnsic.g:5492:2: ( ( ( (lv_primary_expression_0_0= ruleprimary_expression ) ) ( (lv_postfix_expression_linha_1_0= rulepostfix_expression_linha ) ) ) | (otherlv_2= '(' this_type_name_3= ruletype_name otherlv_4= ')' otherlv_5= '{' ( (lv_initializer_list_6_0= ruleinitializer_list ) ) otherlv_7= '}' ( (lv_postfix_expression_linha_8_0= rulepostfix_expression_linha ) ) ) | (otherlv_9= '(' this_type_name_10= ruletype_name otherlv_11= ')' otherlv_12= '{' ( (lv_initializer_list_13_0= ruleinitializer_list ) ) otherlv_14= ',' otherlv_15= '}' ( (lv_postfix_expression_linha_16_0= rulepostfix_expression_linha ) ) ) )
            {
            // InternalAnsic.g:5492:2: ( ( ( (lv_primary_expression_0_0= ruleprimary_expression ) ) ( (lv_postfix_expression_linha_1_0= rulepostfix_expression_linha ) ) ) | (otherlv_2= '(' this_type_name_3= ruletype_name otherlv_4= ')' otherlv_5= '{' ( (lv_initializer_list_6_0= ruleinitializer_list ) ) otherlv_7= '}' ( (lv_postfix_expression_linha_8_0= rulepostfix_expression_linha ) ) ) | (otherlv_9= '(' this_type_name_10= ruletype_name otherlv_11= ')' otherlv_12= '{' ( (lv_initializer_list_13_0= ruleinitializer_list ) ) otherlv_14= ',' otherlv_15= '}' ( (lv_postfix_expression_linha_16_0= rulepostfix_expression_linha ) ) ) )
            int alt41=3;
            alt41 = dfa41.predict(input);
            switch (alt41) {
                case 1 :
                    // InternalAnsic.g:5493:3: ( ( (lv_primary_expression_0_0= ruleprimary_expression ) ) ( (lv_postfix_expression_linha_1_0= rulepostfix_expression_linha ) ) )
                    {
                    // InternalAnsic.g:5493:3: ( ( (lv_primary_expression_0_0= ruleprimary_expression ) ) ( (lv_postfix_expression_linha_1_0= rulepostfix_expression_linha ) ) )
                    // InternalAnsic.g:5494:4: ( (lv_primary_expression_0_0= ruleprimary_expression ) ) ( (lv_postfix_expression_linha_1_0= rulepostfix_expression_linha ) )
                    {
                    // InternalAnsic.g:5494:4: ( (lv_primary_expression_0_0= ruleprimary_expression ) )
                    // InternalAnsic.g:5495:5: (lv_primary_expression_0_0= ruleprimary_expression )
                    {
                    // InternalAnsic.g:5495:5: (lv_primary_expression_0_0= ruleprimary_expression )
                    // InternalAnsic.g:5496:6: lv_primary_expression_0_0= ruleprimary_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPostfix_expressionAccess().getPrimary_expressionPrimary_expressionParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_27);
                    lv_primary_expression_0_0=ruleprimary_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPostfix_expressionRule());
                      						}
                      						set(
                      							current,
                      							"primary_expression",
                      							lv_primary_expression_0_0,
                      							"org.xtext.example.Ansic.primary_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:5513:4: ( (lv_postfix_expression_linha_1_0= rulepostfix_expression_linha ) )
                    // InternalAnsic.g:5514:5: (lv_postfix_expression_linha_1_0= rulepostfix_expression_linha )
                    {
                    // InternalAnsic.g:5514:5: (lv_postfix_expression_linha_1_0= rulepostfix_expression_linha )
                    // InternalAnsic.g:5515:6: lv_postfix_expression_linha_1_0= rulepostfix_expression_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPostfix_expressionAccess().getPostfix_expression_linhaPostfix_expression_linhaParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_postfix_expression_linha_1_0=rulepostfix_expression_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPostfix_expressionRule());
                      						}
                      						set(
                      							current,
                      							"postfix_expression_linha",
                      							lv_postfix_expression_linha_1_0,
                      							"org.xtext.example.Ansic.postfix_expression_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:5534:3: (otherlv_2= '(' this_type_name_3= ruletype_name otherlv_4= ')' otherlv_5= '{' ( (lv_initializer_list_6_0= ruleinitializer_list ) ) otherlv_7= '}' ( (lv_postfix_expression_linha_8_0= rulepostfix_expression_linha ) ) )
                    {
                    // InternalAnsic.g:5534:3: (otherlv_2= '(' this_type_name_3= ruletype_name otherlv_4= ')' otherlv_5= '{' ( (lv_initializer_list_6_0= ruleinitializer_list ) ) otherlv_7= '}' ( (lv_postfix_expression_linha_8_0= rulepostfix_expression_linha ) ) )
                    // InternalAnsic.g:5535:4: otherlv_2= '(' this_type_name_3= ruletype_name otherlv_4= ')' otherlv_5= '{' ( (lv_initializer_list_6_0= ruleinitializer_list ) ) otherlv_7= '}' ( (lv_postfix_expression_linha_8_0= rulepostfix_expression_linha ) )
                    {
                    otherlv_2=(Token)match(input,31,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPostfix_expressionAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPostfix_expressionAccess().getType_nameParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_7);
                    this_type_name_3=ruletype_name();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_type_name_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_4=(Token)match(input,32,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getPostfix_expressionAccess().getRightParenthesisKeyword_1_2());
                      			
                    }
                    otherlv_5=(Token)match(input,51,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getPostfix_expressionAccess().getLeftCurlyBracketKeyword_1_3());
                      			
                    }
                    // InternalAnsic.g:5558:4: ( (lv_initializer_list_6_0= ruleinitializer_list ) )
                    // InternalAnsic.g:5559:5: (lv_initializer_list_6_0= ruleinitializer_list )
                    {
                    // InternalAnsic.g:5559:5: (lv_initializer_list_6_0= ruleinitializer_list )
                    // InternalAnsic.g:5560:6: lv_initializer_list_6_0= ruleinitializer_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPostfix_expressionAccess().getInitializer_listInitializer_listParserRuleCall_1_4_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_initializer_list_6_0=ruleinitializer_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPostfix_expressionRule());
                      						}
                      						set(
                      							current,
                      							"initializer_list",
                      							lv_initializer_list_6_0,
                      							"org.xtext.example.Ansic.initializer_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_7=(Token)match(input,52,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getPostfix_expressionAccess().getRightCurlyBracketKeyword_1_5());
                      			
                    }
                    // InternalAnsic.g:5581:4: ( (lv_postfix_expression_linha_8_0= rulepostfix_expression_linha ) )
                    // InternalAnsic.g:5582:5: (lv_postfix_expression_linha_8_0= rulepostfix_expression_linha )
                    {
                    // InternalAnsic.g:5582:5: (lv_postfix_expression_linha_8_0= rulepostfix_expression_linha )
                    // InternalAnsic.g:5583:6: lv_postfix_expression_linha_8_0= rulepostfix_expression_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPostfix_expressionAccess().getPostfix_expression_linhaPostfix_expression_linhaParserRuleCall_1_6_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_postfix_expression_linha_8_0=rulepostfix_expression_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPostfix_expressionRule());
                      						}
                      						set(
                      							current,
                      							"postfix_expression_linha",
                      							lv_postfix_expression_linha_8_0,
                      							"org.xtext.example.Ansic.postfix_expression_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:5602:3: (otherlv_9= '(' this_type_name_10= ruletype_name otherlv_11= ')' otherlv_12= '{' ( (lv_initializer_list_13_0= ruleinitializer_list ) ) otherlv_14= ',' otherlv_15= '}' ( (lv_postfix_expression_linha_16_0= rulepostfix_expression_linha ) ) )
                    {
                    // InternalAnsic.g:5602:3: (otherlv_9= '(' this_type_name_10= ruletype_name otherlv_11= ')' otherlv_12= '{' ( (lv_initializer_list_13_0= ruleinitializer_list ) ) otherlv_14= ',' otherlv_15= '}' ( (lv_postfix_expression_linha_16_0= rulepostfix_expression_linha ) ) )
                    // InternalAnsic.g:5603:4: otherlv_9= '(' this_type_name_10= ruletype_name otherlv_11= ')' otherlv_12= '{' ( (lv_initializer_list_13_0= ruleinitializer_list ) ) otherlv_14= ',' otherlv_15= '}' ( (lv_postfix_expression_linha_16_0= rulepostfix_expression_linha ) )
                    {
                    otherlv_9=(Token)match(input,31,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getPostfix_expressionAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPostfix_expressionAccess().getType_nameParserRuleCall_2_1());
                      			
                    }
                    pushFollow(FOLLOW_7);
                    this_type_name_10=ruletype_name();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_type_name_10;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_11=(Token)match(input,32,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getPostfix_expressionAccess().getRightParenthesisKeyword_2_2());
                      			
                    }
                    otherlv_12=(Token)match(input,51,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getPostfix_expressionAccess().getLeftCurlyBracketKeyword_2_3());
                      			
                    }
                    // InternalAnsic.g:5626:4: ( (lv_initializer_list_13_0= ruleinitializer_list ) )
                    // InternalAnsic.g:5627:5: (lv_initializer_list_13_0= ruleinitializer_list )
                    {
                    // InternalAnsic.g:5627:5: (lv_initializer_list_13_0= ruleinitializer_list )
                    // InternalAnsic.g:5628:6: lv_initializer_list_13_0= ruleinitializer_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPostfix_expressionAccess().getInitializer_listInitializer_listParserRuleCall_2_4_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_initializer_list_13_0=ruleinitializer_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPostfix_expressionRule());
                      						}
                      						set(
                      							current,
                      							"initializer_list",
                      							lv_initializer_list_13_0,
                      							"org.xtext.example.Ansic.initializer_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_14=(Token)match(input,53,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getPostfix_expressionAccess().getCommaKeyword_2_5());
                      			
                    }
                    otherlv_15=(Token)match(input,52,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_15, grammarAccess.getPostfix_expressionAccess().getRightCurlyBracketKeyword_2_6());
                      			
                    }
                    // InternalAnsic.g:5653:4: ( (lv_postfix_expression_linha_16_0= rulepostfix_expression_linha ) )
                    // InternalAnsic.g:5654:5: (lv_postfix_expression_linha_16_0= rulepostfix_expression_linha )
                    {
                    // InternalAnsic.g:5654:5: (lv_postfix_expression_linha_16_0= rulepostfix_expression_linha )
                    // InternalAnsic.g:5655:6: lv_postfix_expression_linha_16_0= rulepostfix_expression_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPostfix_expressionAccess().getPostfix_expression_linhaPostfix_expression_linhaParserRuleCall_2_7_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_postfix_expression_linha_16_0=rulepostfix_expression_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPostfix_expressionRule());
                      						}
                      						set(
                      							current,
                      							"postfix_expression_linha",
                      							lv_postfix_expression_linha_16_0,
                      							"org.xtext.example.Ansic.postfix_expression_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulepostfix_expression"


    // $ANTLR start "entryRulepostfix_expression_linha"
    // InternalAnsic.g:5677:1: entryRulepostfix_expression_linha returns [EObject current=null] : iv_rulepostfix_expression_linha= rulepostfix_expression_linha EOF ;
    public final EObject entryRulepostfix_expression_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_rulepostfix_expression_linha = null;


        try {
            // InternalAnsic.g:5677:65: (iv_rulepostfix_expression_linha= rulepostfix_expression_linha EOF )
            // InternalAnsic.g:5678:2: iv_rulepostfix_expression_linha= rulepostfix_expression_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPostfix_expression_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulepostfix_expression_linha=rulepostfix_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulepostfix_expression_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulepostfix_expression_linha"


    // $ANTLR start "rulepostfix_expression_linha"
    // InternalAnsic.g:5684:1: rulepostfix_expression_linha returns [EObject current=null] : ( () ( ( (lv_postfix_expression_complement_1_0= rulepostfix_expression_complement ) ) ( (lv_postfix_expression_linha_2_0= rulepostfix_expression_linha ) ) )? ) ;
    public final EObject rulepostfix_expression_linha() throws RecognitionException {
        EObject current = null;

        EObject lv_postfix_expression_complement_1_0 = null;

        EObject lv_postfix_expression_linha_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:5690:2: ( ( () ( ( (lv_postfix_expression_complement_1_0= rulepostfix_expression_complement ) ) ( (lv_postfix_expression_linha_2_0= rulepostfix_expression_linha ) ) )? ) )
            // InternalAnsic.g:5691:2: ( () ( ( (lv_postfix_expression_complement_1_0= rulepostfix_expression_complement ) ) ( (lv_postfix_expression_linha_2_0= rulepostfix_expression_linha ) ) )? )
            {
            // InternalAnsic.g:5691:2: ( () ( ( (lv_postfix_expression_complement_1_0= rulepostfix_expression_complement ) ) ( (lv_postfix_expression_linha_2_0= rulepostfix_expression_linha ) ) )? )
            // InternalAnsic.g:5692:3: () ( ( (lv_postfix_expression_complement_1_0= rulepostfix_expression_complement ) ) ( (lv_postfix_expression_linha_2_0= rulepostfix_expression_linha ) ) )?
            {
            // InternalAnsic.g:5692:3: ()
            // InternalAnsic.g:5693:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getPostfix_expression_linhaAccess().getPostfixExpressionLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:5702:3: ( ( (lv_postfix_expression_complement_1_0= rulepostfix_expression_complement ) ) ( (lv_postfix_expression_linha_2_0= rulepostfix_expression_linha ) ) )?
            int alt42=2;
            alt42 = dfa42.predict(input);
            switch (alt42) {
                case 1 :
                    // InternalAnsic.g:5703:4: ( (lv_postfix_expression_complement_1_0= rulepostfix_expression_complement ) ) ( (lv_postfix_expression_linha_2_0= rulepostfix_expression_linha ) )
                    {
                    // InternalAnsic.g:5703:4: ( (lv_postfix_expression_complement_1_0= rulepostfix_expression_complement ) )
                    // InternalAnsic.g:5704:5: (lv_postfix_expression_complement_1_0= rulepostfix_expression_complement )
                    {
                    // InternalAnsic.g:5704:5: (lv_postfix_expression_complement_1_0= rulepostfix_expression_complement )
                    // InternalAnsic.g:5705:6: lv_postfix_expression_complement_1_0= rulepostfix_expression_complement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPostfix_expression_linhaAccess().getPostfix_expression_complementPostfix_expression_complementParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_27);
                    lv_postfix_expression_complement_1_0=rulepostfix_expression_complement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPostfix_expression_linhaRule());
                      						}
                      						set(
                      							current,
                      							"postfix_expression_complement",
                      							lv_postfix_expression_complement_1_0,
                      							"org.xtext.example.Ansic.postfix_expression_complement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:5722:4: ( (lv_postfix_expression_linha_2_0= rulepostfix_expression_linha ) )
                    // InternalAnsic.g:5723:5: (lv_postfix_expression_linha_2_0= rulepostfix_expression_linha )
                    {
                    // InternalAnsic.g:5723:5: (lv_postfix_expression_linha_2_0= rulepostfix_expression_linha )
                    // InternalAnsic.g:5724:6: lv_postfix_expression_linha_2_0= rulepostfix_expression_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPostfix_expression_linhaAccess().getPostfix_expression_linhaPostfix_expression_linhaParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_postfix_expression_linha_2_0=rulepostfix_expression_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPostfix_expression_linhaRule());
                      						}
                      						set(
                      							current,
                      							"postfix_expression_linha",
                      							lv_postfix_expression_linha_2_0,
                      							"org.xtext.example.Ansic.postfix_expression_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulepostfix_expression_linha"


    // $ANTLR start "entryRuleinitializer_list"
    // InternalAnsic.g:5746:1: entryRuleinitializer_list returns [EObject current=null] : iv_ruleinitializer_list= ruleinitializer_list EOF ;
    public final EObject entryRuleinitializer_list() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleinitializer_list = null;


        try {
            // InternalAnsic.g:5746:57: (iv_ruleinitializer_list= ruleinitializer_list EOF )
            // InternalAnsic.g:5747:2: iv_ruleinitializer_list= ruleinitializer_list EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInitializer_listRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleinitializer_list=ruleinitializer_list();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleinitializer_list; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleinitializer_list"


    // $ANTLR start "ruleinitializer_list"
    // InternalAnsic.g:5753:1: ruleinitializer_list returns [EObject current=null] : ( ( ( (lv_designation_0_0= ruledesignation ) ) ( (lv_initializer_1_0= ruleinitializer ) ) ( (lv_init_declarator_list_linha_2_0= ruleinit_declarator_list_linha ) ) ) | ( ( (lv_initializer_3_0= ruleinitializer ) ) ( (lv_init_declarator_list_linha_4_0= ruleinit_declarator_list_linha ) ) ) ) ;
    public final EObject ruleinitializer_list() throws RecognitionException {
        EObject current = null;

        EObject lv_designation_0_0 = null;

        EObject lv_initializer_1_0 = null;

        EObject lv_init_declarator_list_linha_2_0 = null;

        EObject lv_initializer_3_0 = null;

        EObject lv_init_declarator_list_linha_4_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:5759:2: ( ( ( ( (lv_designation_0_0= ruledesignation ) ) ( (lv_initializer_1_0= ruleinitializer ) ) ( (lv_init_declarator_list_linha_2_0= ruleinit_declarator_list_linha ) ) ) | ( ( (lv_initializer_3_0= ruleinitializer ) ) ( (lv_init_declarator_list_linha_4_0= ruleinit_declarator_list_linha ) ) ) ) )
            // InternalAnsic.g:5760:2: ( ( ( (lv_designation_0_0= ruledesignation ) ) ( (lv_initializer_1_0= ruleinitializer ) ) ( (lv_init_declarator_list_linha_2_0= ruleinit_declarator_list_linha ) ) ) | ( ( (lv_initializer_3_0= ruleinitializer ) ) ( (lv_init_declarator_list_linha_4_0= ruleinit_declarator_list_linha ) ) ) )
            {
            // InternalAnsic.g:5760:2: ( ( ( (lv_designation_0_0= ruledesignation ) ) ( (lv_initializer_1_0= ruleinitializer ) ) ( (lv_init_declarator_list_linha_2_0= ruleinit_declarator_list_linha ) ) ) | ( ( (lv_initializer_3_0= ruleinitializer ) ) ( (lv_init_declarator_list_linha_4_0= ruleinit_declarator_list_linha ) ) ) )
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==65||LA43_0==70) ) {
                alt43=1;
            }
            else if ( ((LA43_0>=RULE_ID && LA43_0<=RULE_F_CONSTANT)||LA43_0==31||(LA43_0>=50 && LA43_0<=51)||LA43_0==64||LA43_0==68||(LA43_0>=73 && LA43_0<=76)||(LA43_0>=79 && LA43_0<=80)||LA43_0==96||(LA43_0>=112 && LA43_0<=114)) ) {
                alt43=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;
            }
            switch (alt43) {
                case 1 :
                    // InternalAnsic.g:5761:3: ( ( (lv_designation_0_0= ruledesignation ) ) ( (lv_initializer_1_0= ruleinitializer ) ) ( (lv_init_declarator_list_linha_2_0= ruleinit_declarator_list_linha ) ) )
                    {
                    // InternalAnsic.g:5761:3: ( ( (lv_designation_0_0= ruledesignation ) ) ( (lv_initializer_1_0= ruleinitializer ) ) ( (lv_init_declarator_list_linha_2_0= ruleinit_declarator_list_linha ) ) )
                    // InternalAnsic.g:5762:4: ( (lv_designation_0_0= ruledesignation ) ) ( (lv_initializer_1_0= ruleinitializer ) ) ( (lv_init_declarator_list_linha_2_0= ruleinit_declarator_list_linha ) )
                    {
                    // InternalAnsic.g:5762:4: ( (lv_designation_0_0= ruledesignation ) )
                    // InternalAnsic.g:5763:5: (lv_designation_0_0= ruledesignation )
                    {
                    // InternalAnsic.g:5763:5: (lv_designation_0_0= ruledesignation )
                    // InternalAnsic.g:5764:6: lv_designation_0_0= ruledesignation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInitializer_listAccess().getDesignationDesignationParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_25);
                    lv_designation_0_0=ruledesignation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInitializer_listRule());
                      						}
                      						set(
                      							current,
                      							"designation",
                      							lv_designation_0_0,
                      							"org.xtext.example.Ansic.designation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:5781:4: ( (lv_initializer_1_0= ruleinitializer ) )
                    // InternalAnsic.g:5782:5: (lv_initializer_1_0= ruleinitializer )
                    {
                    // InternalAnsic.g:5782:5: (lv_initializer_1_0= ruleinitializer )
                    // InternalAnsic.g:5783:6: lv_initializer_1_0= ruleinitializer
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInitializer_listAccess().getInitializerInitializerParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_initializer_1_0=ruleinitializer();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInitializer_listRule());
                      						}
                      						set(
                      							current,
                      							"initializer",
                      							lv_initializer_1_0,
                      							"org.xtext.example.Ansic.initializer");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:5800:4: ( (lv_init_declarator_list_linha_2_0= ruleinit_declarator_list_linha ) )
                    // InternalAnsic.g:5801:5: (lv_init_declarator_list_linha_2_0= ruleinit_declarator_list_linha )
                    {
                    // InternalAnsic.g:5801:5: (lv_init_declarator_list_linha_2_0= ruleinit_declarator_list_linha )
                    // InternalAnsic.g:5802:6: lv_init_declarator_list_linha_2_0= ruleinit_declarator_list_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInitializer_listAccess().getInit_declarator_list_linhaInit_declarator_list_linhaParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_init_declarator_list_linha_2_0=ruleinit_declarator_list_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInitializer_listRule());
                      						}
                      						set(
                      							current,
                      							"init_declarator_list_linha",
                      							lv_init_declarator_list_linha_2_0,
                      							"org.xtext.example.Ansic.init_declarator_list_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:5821:3: ( ( (lv_initializer_3_0= ruleinitializer ) ) ( (lv_init_declarator_list_linha_4_0= ruleinit_declarator_list_linha ) ) )
                    {
                    // InternalAnsic.g:5821:3: ( ( (lv_initializer_3_0= ruleinitializer ) ) ( (lv_init_declarator_list_linha_4_0= ruleinit_declarator_list_linha ) ) )
                    // InternalAnsic.g:5822:4: ( (lv_initializer_3_0= ruleinitializer ) ) ( (lv_init_declarator_list_linha_4_0= ruleinit_declarator_list_linha ) )
                    {
                    // InternalAnsic.g:5822:4: ( (lv_initializer_3_0= ruleinitializer ) )
                    // InternalAnsic.g:5823:5: (lv_initializer_3_0= ruleinitializer )
                    {
                    // InternalAnsic.g:5823:5: (lv_initializer_3_0= ruleinitializer )
                    // InternalAnsic.g:5824:6: lv_initializer_3_0= ruleinitializer
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInitializer_listAccess().getInitializerInitializerParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_initializer_3_0=ruleinitializer();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInitializer_listRule());
                      						}
                      						set(
                      							current,
                      							"initializer",
                      							lv_initializer_3_0,
                      							"org.xtext.example.Ansic.initializer");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:5841:4: ( (lv_init_declarator_list_linha_4_0= ruleinit_declarator_list_linha ) )
                    // InternalAnsic.g:5842:5: (lv_init_declarator_list_linha_4_0= ruleinit_declarator_list_linha )
                    {
                    // InternalAnsic.g:5842:5: (lv_init_declarator_list_linha_4_0= ruleinit_declarator_list_linha )
                    // InternalAnsic.g:5843:6: lv_init_declarator_list_linha_4_0= ruleinit_declarator_list_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInitializer_listAccess().getInit_declarator_list_linhaInit_declarator_list_linhaParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_init_declarator_list_linha_4_0=ruleinit_declarator_list_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInitializer_listRule());
                      						}
                      						set(
                      							current,
                      							"init_declarator_list_linha",
                      							lv_init_declarator_list_linha_4_0,
                      							"org.xtext.example.Ansic.init_declarator_list_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleinitializer_list"


    // $ANTLR start "entryRuleinitializer_list_complement"
    // InternalAnsic.g:5865:1: entryRuleinitializer_list_complement returns [EObject current=null] : iv_ruleinitializer_list_complement= ruleinitializer_list_complement EOF ;
    public final EObject entryRuleinitializer_list_complement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleinitializer_list_complement = null;


        try {
            // InternalAnsic.g:5865:68: (iv_ruleinitializer_list_complement= ruleinitializer_list_complement EOF )
            // InternalAnsic.g:5866:2: iv_ruleinitializer_list_complement= ruleinitializer_list_complement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInitializer_list_complementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleinitializer_list_complement=ruleinitializer_list_complement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleinitializer_list_complement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleinitializer_list_complement"


    // $ANTLR start "ruleinitializer_list_complement"
    // InternalAnsic.g:5872:1: ruleinitializer_list_complement returns [EObject current=null] : ( (otherlv_0= ',' ( (lv_designation_1_0= ruledesignation ) ) ( (lv_initializer_2_0= ruleinitializer ) ) ) | (otherlv_3= ',' ( (lv_initializer_4_0= ruleinitializer ) ) ) ) ;
    public final EObject ruleinitializer_list_complement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        EObject lv_designation_1_0 = null;

        EObject lv_initializer_2_0 = null;

        EObject lv_initializer_4_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:5878:2: ( ( (otherlv_0= ',' ( (lv_designation_1_0= ruledesignation ) ) ( (lv_initializer_2_0= ruleinitializer ) ) ) | (otherlv_3= ',' ( (lv_initializer_4_0= ruleinitializer ) ) ) ) )
            // InternalAnsic.g:5879:2: ( (otherlv_0= ',' ( (lv_designation_1_0= ruledesignation ) ) ( (lv_initializer_2_0= ruleinitializer ) ) ) | (otherlv_3= ',' ( (lv_initializer_4_0= ruleinitializer ) ) ) )
            {
            // InternalAnsic.g:5879:2: ( (otherlv_0= ',' ( (lv_designation_1_0= ruledesignation ) ) ( (lv_initializer_2_0= ruleinitializer ) ) ) | (otherlv_3= ',' ( (lv_initializer_4_0= ruleinitializer ) ) ) )
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==53) ) {
                int LA44_1 = input.LA(2);

                if ( (LA44_1==65||LA44_1==70) ) {
                    alt44=1;
                }
                else if ( ((LA44_1>=RULE_ID && LA44_1<=RULE_F_CONSTANT)||LA44_1==31||(LA44_1>=50 && LA44_1<=51)||LA44_1==64||LA44_1==68||(LA44_1>=73 && LA44_1<=76)||(LA44_1>=79 && LA44_1<=80)||LA44_1==96||(LA44_1>=112 && LA44_1<=114)) ) {
                    alt44=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 44, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 44, 0, input);

                throw nvae;
            }
            switch (alt44) {
                case 1 :
                    // InternalAnsic.g:5880:3: (otherlv_0= ',' ( (lv_designation_1_0= ruledesignation ) ) ( (lv_initializer_2_0= ruleinitializer ) ) )
                    {
                    // InternalAnsic.g:5880:3: (otherlv_0= ',' ( (lv_designation_1_0= ruledesignation ) ) ( (lv_initializer_2_0= ruleinitializer ) ) )
                    // InternalAnsic.g:5881:4: otherlv_0= ',' ( (lv_designation_1_0= ruledesignation ) ) ( (lv_initializer_2_0= ruleinitializer ) )
                    {
                    otherlv_0=(Token)match(input,53,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getInitializer_list_complementAccess().getCommaKeyword_0_0());
                      			
                    }
                    // InternalAnsic.g:5885:4: ( (lv_designation_1_0= ruledesignation ) )
                    // InternalAnsic.g:5886:5: (lv_designation_1_0= ruledesignation )
                    {
                    // InternalAnsic.g:5886:5: (lv_designation_1_0= ruledesignation )
                    // InternalAnsic.g:5887:6: lv_designation_1_0= ruledesignation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInitializer_list_complementAccess().getDesignationDesignationParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_25);
                    lv_designation_1_0=ruledesignation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInitializer_list_complementRule());
                      						}
                      						set(
                      							current,
                      							"designation",
                      							lv_designation_1_0,
                      							"org.xtext.example.Ansic.designation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:5904:4: ( (lv_initializer_2_0= ruleinitializer ) )
                    // InternalAnsic.g:5905:5: (lv_initializer_2_0= ruleinitializer )
                    {
                    // InternalAnsic.g:5905:5: (lv_initializer_2_0= ruleinitializer )
                    // InternalAnsic.g:5906:6: lv_initializer_2_0= ruleinitializer
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInitializer_list_complementAccess().getInitializerInitializerParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_initializer_2_0=ruleinitializer();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInitializer_list_complementRule());
                      						}
                      						set(
                      							current,
                      							"initializer",
                      							lv_initializer_2_0,
                      							"org.xtext.example.Ansic.initializer");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:5925:3: (otherlv_3= ',' ( (lv_initializer_4_0= ruleinitializer ) ) )
                    {
                    // InternalAnsic.g:5925:3: (otherlv_3= ',' ( (lv_initializer_4_0= ruleinitializer ) ) )
                    // InternalAnsic.g:5926:4: otherlv_3= ',' ( (lv_initializer_4_0= ruleinitializer ) )
                    {
                    otherlv_3=(Token)match(input,53,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getInitializer_list_complementAccess().getCommaKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:5930:4: ( (lv_initializer_4_0= ruleinitializer ) )
                    // InternalAnsic.g:5931:5: (lv_initializer_4_0= ruleinitializer )
                    {
                    // InternalAnsic.g:5931:5: (lv_initializer_4_0= ruleinitializer )
                    // InternalAnsic.g:5932:6: lv_initializer_4_0= ruleinitializer
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInitializer_list_complementAccess().getInitializerInitializerParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_initializer_4_0=ruleinitializer();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInitializer_list_complementRule());
                      						}
                      						set(
                      							current,
                      							"initializer",
                      							lv_initializer_4_0,
                      							"org.xtext.example.Ansic.initializer");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleinitializer_list_complement"


    // $ANTLR start "entryRuledesignation"
    // InternalAnsic.g:5954:1: entryRuledesignation returns [EObject current=null] : iv_ruledesignation= ruledesignation EOF ;
    public final EObject entryRuledesignation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledesignation = null;


        try {
            // InternalAnsic.g:5954:52: (iv_ruledesignation= ruledesignation EOF )
            // InternalAnsic.g:5955:2: iv_ruledesignation= ruledesignation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDesignationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledesignation=ruledesignation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledesignation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledesignation"


    // $ANTLR start "ruledesignation"
    // InternalAnsic.g:5961:1: ruledesignation returns [EObject current=null] : ( ( (lv_designator_list_0_0= ruledesignator_list ) ) otherlv_1= '=' ) ;
    public final EObject ruledesignation() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_designator_list_0_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:5967:2: ( ( ( (lv_designator_list_0_0= ruledesignator_list ) ) otherlv_1= '=' ) )
            // InternalAnsic.g:5968:2: ( ( (lv_designator_list_0_0= ruledesignator_list ) ) otherlv_1= '=' )
            {
            // InternalAnsic.g:5968:2: ( ( (lv_designator_list_0_0= ruledesignator_list ) ) otherlv_1= '=' )
            // InternalAnsic.g:5969:3: ( (lv_designator_list_0_0= ruledesignator_list ) ) otherlv_1= '='
            {
            // InternalAnsic.g:5969:3: ( (lv_designator_list_0_0= ruledesignator_list ) )
            // InternalAnsic.g:5970:4: (lv_designator_list_0_0= ruledesignator_list )
            {
            // InternalAnsic.g:5970:4: (lv_designator_list_0_0= ruledesignator_list )
            // InternalAnsic.g:5971:5: lv_designator_list_0_0= ruledesignator_list
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDesignationAccess().getDesignator_listDesignator_listParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_13);
            lv_designator_list_0_0=ruledesignator_list();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDesignationRule());
              					}
              					set(
              						current,
              						"designator_list",
              						lv_designator_list_0_0,
              						"org.xtext.example.Ansic.designator_list");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,54,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDesignationAccess().getEqualsSignKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledesignation"


    // $ANTLR start "entryRuledesignator_list"
    // InternalAnsic.g:5996:1: entryRuledesignator_list returns [EObject current=null] : iv_ruledesignator_list= ruledesignator_list EOF ;
    public final EObject entryRuledesignator_list() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledesignator_list = null;


        try {
            // InternalAnsic.g:5996:56: (iv_ruledesignator_list= ruledesignator_list EOF )
            // InternalAnsic.g:5997:2: iv_ruledesignator_list= ruledesignator_list EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDesignator_listRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledesignator_list=ruledesignator_list();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledesignator_list; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledesignator_list"


    // $ANTLR start "ruledesignator_list"
    // InternalAnsic.g:6003:1: ruledesignator_list returns [EObject current=null] : ( ( (lv_designator_0_0= ruledesignator ) ) ( (lv_designator_list_linha_1_0= ruledesignator_list_linha ) ) ) ;
    public final EObject ruledesignator_list() throws RecognitionException {
        EObject current = null;

        EObject lv_designator_0_0 = null;

        EObject lv_designator_list_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:6009:2: ( ( ( (lv_designator_0_0= ruledesignator ) ) ( (lv_designator_list_linha_1_0= ruledesignator_list_linha ) ) ) )
            // InternalAnsic.g:6010:2: ( ( (lv_designator_0_0= ruledesignator ) ) ( (lv_designator_list_linha_1_0= ruledesignator_list_linha ) ) )
            {
            // InternalAnsic.g:6010:2: ( ( (lv_designator_0_0= ruledesignator ) ) ( (lv_designator_list_linha_1_0= ruledesignator_list_linha ) ) )
            // InternalAnsic.g:6011:3: ( (lv_designator_0_0= ruledesignator ) ) ( (lv_designator_list_linha_1_0= ruledesignator_list_linha ) )
            {
            // InternalAnsic.g:6011:3: ( (lv_designator_0_0= ruledesignator ) )
            // InternalAnsic.g:6012:4: (lv_designator_0_0= ruledesignator )
            {
            // InternalAnsic.g:6012:4: (lv_designator_0_0= ruledesignator )
            // InternalAnsic.g:6013:5: lv_designator_0_0= ruledesignator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDesignator_listAccess().getDesignatorDesignatorParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_28);
            lv_designator_0_0=ruledesignator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDesignator_listRule());
              					}
              					set(
              						current,
              						"designator",
              						lv_designator_0_0,
              						"org.xtext.example.Ansic.designator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:6030:3: ( (lv_designator_list_linha_1_0= ruledesignator_list_linha ) )
            // InternalAnsic.g:6031:4: (lv_designator_list_linha_1_0= ruledesignator_list_linha )
            {
            // InternalAnsic.g:6031:4: (lv_designator_list_linha_1_0= ruledesignator_list_linha )
            // InternalAnsic.g:6032:5: lv_designator_list_linha_1_0= ruledesignator_list_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDesignator_listAccess().getDesignator_list_linhaDesignator_list_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_designator_list_linha_1_0=ruledesignator_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDesignator_listRule());
              					}
              					set(
              						current,
              						"designator_list_linha",
              						lv_designator_list_linha_1_0,
              						"org.xtext.example.Ansic.designator_list_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledesignator_list"


    // $ANTLR start "entryRuledesignator_list_linha"
    // InternalAnsic.g:6053:1: entryRuledesignator_list_linha returns [EObject current=null] : iv_ruledesignator_list_linha= ruledesignator_list_linha EOF ;
    public final EObject entryRuledesignator_list_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledesignator_list_linha = null;


        try {
            // InternalAnsic.g:6053:62: (iv_ruledesignator_list_linha= ruledesignator_list_linha EOF )
            // InternalAnsic.g:6054:2: iv_ruledesignator_list_linha= ruledesignator_list_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDesignator_list_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledesignator_list_linha=ruledesignator_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledesignator_list_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledesignator_list_linha"


    // $ANTLR start "ruledesignator_list_linha"
    // InternalAnsic.g:6060:1: ruledesignator_list_linha returns [EObject current=null] : ( () ( ( (lv_designator_1_0= ruledesignator ) ) ( (lv_designator_list_linha_2_0= ruledeclaration_list_linha ) ) )? ) ;
    public final EObject ruledesignator_list_linha() throws RecognitionException {
        EObject current = null;

        EObject lv_designator_1_0 = null;

        EObject lv_designator_list_linha_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:6066:2: ( ( () ( ( (lv_designator_1_0= ruledesignator ) ) ( (lv_designator_list_linha_2_0= ruledeclaration_list_linha ) ) )? ) )
            // InternalAnsic.g:6067:2: ( () ( ( (lv_designator_1_0= ruledesignator ) ) ( (lv_designator_list_linha_2_0= ruledeclaration_list_linha ) ) )? )
            {
            // InternalAnsic.g:6067:2: ( () ( ( (lv_designator_1_0= ruledesignator ) ) ( (lv_designator_list_linha_2_0= ruledeclaration_list_linha ) ) )? )
            // InternalAnsic.g:6068:3: () ( ( (lv_designator_1_0= ruledesignator ) ) ( (lv_designator_list_linha_2_0= ruledeclaration_list_linha ) ) )?
            {
            // InternalAnsic.g:6068:3: ()
            // InternalAnsic.g:6069:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDesignator_list_linhaAccess().getDesignatorListLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:6078:3: ( ( (lv_designator_1_0= ruledesignator ) ) ( (lv_designator_list_linha_2_0= ruledeclaration_list_linha ) ) )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==65||LA45_0==70) ) {
                alt45=1;
            }
            switch (alt45) {
                case 1 :
                    // InternalAnsic.g:6079:4: ( (lv_designator_1_0= ruledesignator ) ) ( (lv_designator_list_linha_2_0= ruledeclaration_list_linha ) )
                    {
                    // InternalAnsic.g:6079:4: ( (lv_designator_1_0= ruledesignator ) )
                    // InternalAnsic.g:6080:5: (lv_designator_1_0= ruledesignator )
                    {
                    // InternalAnsic.g:6080:5: (lv_designator_1_0= ruledesignator )
                    // InternalAnsic.g:6081:6: lv_designator_1_0= ruledesignator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDesignator_list_linhaAccess().getDesignatorDesignatorParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_3);
                    lv_designator_1_0=ruledesignator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDesignator_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"designator",
                      							lv_designator_1_0,
                      							"org.xtext.example.Ansic.designator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:6098:4: ( (lv_designator_list_linha_2_0= ruledeclaration_list_linha ) )
                    // InternalAnsic.g:6099:5: (lv_designator_list_linha_2_0= ruledeclaration_list_linha )
                    {
                    // InternalAnsic.g:6099:5: (lv_designator_list_linha_2_0= ruledeclaration_list_linha )
                    // InternalAnsic.g:6100:6: lv_designator_list_linha_2_0= ruledeclaration_list_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDesignator_list_linhaAccess().getDesignator_list_linhaDeclaration_list_linhaParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_designator_list_linha_2_0=ruledeclaration_list_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDesignator_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"designator_list_linha",
                      							lv_designator_list_linha_2_0,
                      							"org.xtext.example.Ansic.declaration_list_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledesignator_list_linha"


    // $ANTLR start "entryRuledesignator"
    // InternalAnsic.g:6122:1: entryRuledesignator returns [EObject current=null] : iv_ruledesignator= ruledesignator EOF ;
    public final EObject entryRuledesignator() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledesignator = null;


        try {
            // InternalAnsic.g:6122:51: (iv_ruledesignator= ruledesignator EOF )
            // InternalAnsic.g:6123:2: iv_ruledesignator= ruledesignator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDesignatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledesignator=ruledesignator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledesignator; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledesignator"


    // $ANTLR start "ruledesignator"
    // InternalAnsic.g:6129:1: ruledesignator returns [EObject current=null] : ( (otherlv_0= '[' ( (lv_constant_expression_1_0= ruleconditional_expression ) ) otherlv_2= ']' ) | (otherlv_3= '.' ( (lv_identifier_4_0= RULE_ID ) ) ) ) ;
    public final EObject ruledesignator() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_identifier_4_0=null;
        EObject lv_constant_expression_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:6135:2: ( ( (otherlv_0= '[' ( (lv_constant_expression_1_0= ruleconditional_expression ) ) otherlv_2= ']' ) | (otherlv_3= '.' ( (lv_identifier_4_0= RULE_ID ) ) ) ) )
            // InternalAnsic.g:6136:2: ( (otherlv_0= '[' ( (lv_constant_expression_1_0= ruleconditional_expression ) ) otherlv_2= ']' ) | (otherlv_3= '.' ( (lv_identifier_4_0= RULE_ID ) ) ) )
            {
            // InternalAnsic.g:6136:2: ( (otherlv_0= '[' ( (lv_constant_expression_1_0= ruleconditional_expression ) ) otherlv_2= ']' ) | (otherlv_3= '.' ( (lv_identifier_4_0= RULE_ID ) ) ) )
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==65) ) {
                alt46=1;
            }
            else if ( (LA46_0==70) ) {
                alt46=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 46, 0, input);

                throw nvae;
            }
            switch (alt46) {
                case 1 :
                    // InternalAnsic.g:6137:3: (otherlv_0= '[' ( (lv_constant_expression_1_0= ruleconditional_expression ) ) otherlv_2= ']' )
                    {
                    // InternalAnsic.g:6137:3: (otherlv_0= '[' ( (lv_constant_expression_1_0= ruleconditional_expression ) ) otherlv_2= ']' )
                    // InternalAnsic.g:6138:4: otherlv_0= '[' ( (lv_constant_expression_1_0= ruleconditional_expression ) ) otherlv_2= ']'
                    {
                    otherlv_0=(Token)match(input,65,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getDesignatorAccess().getLeftSquareBracketKeyword_0_0());
                      			
                    }
                    // InternalAnsic.g:6142:4: ( (lv_constant_expression_1_0= ruleconditional_expression ) )
                    // InternalAnsic.g:6143:5: (lv_constant_expression_1_0= ruleconditional_expression )
                    {
                    // InternalAnsic.g:6143:5: (lv_constant_expression_1_0= ruleconditional_expression )
                    // InternalAnsic.g:6144:6: lv_constant_expression_1_0= ruleconditional_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDesignatorAccess().getConstant_expressionConditional_expressionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_constant_expression_1_0=ruleconditional_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDesignatorRule());
                      						}
                      						set(
                      							current,
                      							"constant_expression",
                      							lv_constant_expression_1_0,
                      							"org.xtext.example.Ansic.conditional_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getDesignatorAccess().getRightSquareBracketKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:6167:3: (otherlv_3= '.' ( (lv_identifier_4_0= RULE_ID ) ) )
                    {
                    // InternalAnsic.g:6167:3: (otherlv_3= '.' ( (lv_identifier_4_0= RULE_ID ) ) )
                    // InternalAnsic.g:6168:4: otherlv_3= '.' ( (lv_identifier_4_0= RULE_ID ) )
                    {
                    otherlv_3=(Token)match(input,70,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getDesignatorAccess().getFullStopKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:6172:4: ( (lv_identifier_4_0= RULE_ID ) )
                    // InternalAnsic.g:6173:5: (lv_identifier_4_0= RULE_ID )
                    {
                    // InternalAnsic.g:6173:5: (lv_identifier_4_0= RULE_ID )
                    // InternalAnsic.g:6174:6: lv_identifier_4_0= RULE_ID
                    {
                    lv_identifier_4_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_identifier_4_0, grammarAccess.getDesignatorAccess().getIdentifierIDTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDesignatorRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"identifier",
                      							lv_identifier_4_0,
                      							"org.eclipse.xtext.common.Terminals.ID");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledesignator"


    // $ANTLR start "entryRulestatic_assert_declaration"
    // InternalAnsic.g:6195:1: entryRulestatic_assert_declaration returns [EObject current=null] : iv_rulestatic_assert_declaration= rulestatic_assert_declaration EOF ;
    public final EObject entryRulestatic_assert_declaration() throws RecognitionException {
        EObject current = null;

        EObject iv_rulestatic_assert_declaration = null;


        try {
            // InternalAnsic.g:6195:66: (iv_rulestatic_assert_declaration= rulestatic_assert_declaration EOF )
            // InternalAnsic.g:6196:2: iv_rulestatic_assert_declaration= rulestatic_assert_declaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatic_assert_declarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulestatic_assert_declaration=rulestatic_assert_declaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulestatic_assert_declaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulestatic_assert_declaration"


    // $ANTLR start "rulestatic_assert_declaration"
    // InternalAnsic.g:6202:1: rulestatic_assert_declaration returns [EObject current=null] : (otherlv_0= '_Static_assert' otherlv_1= '(' ( (lv_constant_expression_2_0= ruleconstant_expression ) ) otherlv_3= ',' this_STRING_LITERAL_4= RULE_STRING_LITERAL otherlv_5= ')' otherlv_6= ';' ) ;
    public final EObject rulestatic_assert_declaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token this_STRING_LITERAL_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_constant_expression_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:6208:2: ( (otherlv_0= '_Static_assert' otherlv_1= '(' ( (lv_constant_expression_2_0= ruleconstant_expression ) ) otherlv_3= ',' this_STRING_LITERAL_4= RULE_STRING_LITERAL otherlv_5= ')' otherlv_6= ';' ) )
            // InternalAnsic.g:6209:2: (otherlv_0= '_Static_assert' otherlv_1= '(' ( (lv_constant_expression_2_0= ruleconstant_expression ) ) otherlv_3= ',' this_STRING_LITERAL_4= RULE_STRING_LITERAL otherlv_5= ')' otherlv_6= ';' )
            {
            // InternalAnsic.g:6209:2: (otherlv_0= '_Static_assert' otherlv_1= '(' ( (lv_constant_expression_2_0= ruleconstant_expression ) ) otherlv_3= ',' this_STRING_LITERAL_4= RULE_STRING_LITERAL otherlv_5= ')' otherlv_6= ';' )
            // InternalAnsic.g:6210:3: otherlv_0= '_Static_assert' otherlv_1= '(' ( (lv_constant_expression_2_0= ruleconstant_expression ) ) otherlv_3= ',' this_STRING_LITERAL_4= RULE_STRING_LITERAL otherlv_5= ')' otherlv_6= ';'
            {
            otherlv_0=(Token)match(input,71,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getStatic_assert_declarationAccess().get_Static_assertKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,31,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getStatic_assert_declarationAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalAnsic.g:6218:3: ( (lv_constant_expression_2_0= ruleconstant_expression ) )
            // InternalAnsic.g:6219:4: (lv_constant_expression_2_0= ruleconstant_expression )
            {
            // InternalAnsic.g:6219:4: (lv_constant_expression_2_0= ruleconstant_expression )
            // InternalAnsic.g:6220:5: lv_constant_expression_2_0= ruleconstant_expression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStatic_assert_declarationAccess().getConstant_expressionConstant_expressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_12);
            lv_constant_expression_2_0=ruleconstant_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStatic_assert_declarationRule());
              					}
              					set(
              						current,
              						"constant_expression",
              						lv_constant_expression_2_0,
              						"org.xtext.example.Ansic.constant_expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,53,FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getStatic_assert_declarationAccess().getCommaKeyword_3());
              		
            }
            this_STRING_LITERAL_4=(Token)match(input,RULE_STRING_LITERAL,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_STRING_LITERAL_4, grammarAccess.getStatic_assert_declarationAccess().getSTRING_LITERALTerminalRuleCall_4());
              		
            }
            otherlv_5=(Token)match(input,32,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getStatic_assert_declarationAccess().getRightParenthesisKeyword_5());
              		
            }
            otherlv_6=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getStatic_assert_declarationAccess().getSemicolonKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulestatic_assert_declaration"


    // $ANTLR start "entryRulepostfix_expression_complement"
    // InternalAnsic.g:6257:1: entryRulepostfix_expression_complement returns [EObject current=null] : iv_rulepostfix_expression_complement= rulepostfix_expression_complement EOF ;
    public final EObject entryRulepostfix_expression_complement() throws RecognitionException {
        EObject current = null;

        EObject iv_rulepostfix_expression_complement = null;


        try {
            // InternalAnsic.g:6257:70: (iv_rulepostfix_expression_complement= rulepostfix_expression_complement EOF )
            // InternalAnsic.g:6258:2: iv_rulepostfix_expression_complement= rulepostfix_expression_complement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPostfix_expression_complementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulepostfix_expression_complement=rulepostfix_expression_complement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulepostfix_expression_complement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulepostfix_expression_complement"


    // $ANTLR start "rulepostfix_expression_complement"
    // InternalAnsic.g:6264:1: rulepostfix_expression_complement returns [EObject current=null] : ( ( () otherlv_1= '[' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ']' ) | ( () otherlv_5= '(' otherlv_6= ')' ) | ( () otherlv_8= '(' ( (lv_argument_expression_list_9_0= ruleargument_expression_list ) ) otherlv_10= ')' ) | ( () otherlv_12= '.' ( (lv_identifier_13_0= RULE_ID ) ) ) | ( () otherlv_15= '->' ( (lv_identifier_16_0= RULE_ID ) ) ) | ( () otherlv_18= '++' ) | ( () otherlv_20= '--' ) ) ;
    public final EObject rulepostfix_expression_complement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token lv_identifier_13_0=null;
        Token otherlv_15=null;
        Token lv_identifier_16_0=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        EObject lv_expression_2_0 = null;

        EObject lv_argument_expression_list_9_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:6270:2: ( ( ( () otherlv_1= '[' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ']' ) | ( () otherlv_5= '(' otherlv_6= ')' ) | ( () otherlv_8= '(' ( (lv_argument_expression_list_9_0= ruleargument_expression_list ) ) otherlv_10= ')' ) | ( () otherlv_12= '.' ( (lv_identifier_13_0= RULE_ID ) ) ) | ( () otherlv_15= '->' ( (lv_identifier_16_0= RULE_ID ) ) ) | ( () otherlv_18= '++' ) | ( () otherlv_20= '--' ) ) )
            // InternalAnsic.g:6271:2: ( ( () otherlv_1= '[' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ']' ) | ( () otherlv_5= '(' otherlv_6= ')' ) | ( () otherlv_8= '(' ( (lv_argument_expression_list_9_0= ruleargument_expression_list ) ) otherlv_10= ')' ) | ( () otherlv_12= '.' ( (lv_identifier_13_0= RULE_ID ) ) ) | ( () otherlv_15= '->' ( (lv_identifier_16_0= RULE_ID ) ) ) | ( () otherlv_18= '++' ) | ( () otherlv_20= '--' ) )
            {
            // InternalAnsic.g:6271:2: ( ( () otherlv_1= '[' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ']' ) | ( () otherlv_5= '(' otherlv_6= ')' ) | ( () otherlv_8= '(' ( (lv_argument_expression_list_9_0= ruleargument_expression_list ) ) otherlv_10= ')' ) | ( () otherlv_12= '.' ( (lv_identifier_13_0= RULE_ID ) ) ) | ( () otherlv_15= '->' ( (lv_identifier_16_0= RULE_ID ) ) ) | ( () otherlv_18= '++' ) | ( () otherlv_20= '--' ) )
            int alt47=7;
            switch ( input.LA(1) ) {
            case 65:
                {
                alt47=1;
                }
                break;
            case 31:
                {
                int LA47_2 = input.LA(2);

                if ( (LA47_2==32) ) {
                    alt47=2;
                }
                else if ( ((LA47_2>=RULE_ID && LA47_2<=RULE_F_CONSTANT)||LA47_2==31||LA47_2==50||LA47_2==64||LA47_2==68||(LA47_2>=73 && LA47_2<=76)||(LA47_2>=79 && LA47_2<=80)||LA47_2==96||(LA47_2>=112 && LA47_2<=114)) ) {
                    alt47=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 47, 2, input);

                    throw nvae;
                }
                }
                break;
            case 70:
                {
                alt47=4;
                }
                break;
            case 72:
                {
                alt47=5;
                }
                break;
            case 73:
                {
                alt47=6;
                }
                break;
            case 74:
                {
                alt47=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 47, 0, input);

                throw nvae;
            }

            switch (alt47) {
                case 1 :
                    // InternalAnsic.g:6272:3: ( () otherlv_1= '[' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ']' )
                    {
                    // InternalAnsic.g:6272:3: ( () otherlv_1= '[' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ']' )
                    // InternalAnsic.g:6273:4: () otherlv_1= '[' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ']'
                    {
                    // InternalAnsic.g:6273:4: ()
                    // InternalAnsic.g:6274:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPostfix_expression_complementAccess().getPostfixExpressionComplementExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_1=(Token)match(input,65,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getPostfix_expression_complementAccess().getLeftSquareBracketKeyword_0_1());
                      			
                    }
                    // InternalAnsic.g:6287:4: ( (lv_expression_2_0= ruleexpression ) )
                    // InternalAnsic.g:6288:5: (lv_expression_2_0= ruleexpression )
                    {
                    // InternalAnsic.g:6288:5: (lv_expression_2_0= ruleexpression )
                    // InternalAnsic.g:6289:6: lv_expression_2_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPostfix_expression_complementAccess().getExpressionExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_expression_2_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPostfix_expression_complementRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_2_0,
                      							"org.xtext.example.Ansic.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getPostfix_expression_complementAccess().getRightSquareBracketKeyword_0_3());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:6312:3: ( () otherlv_5= '(' otherlv_6= ')' )
                    {
                    // InternalAnsic.g:6312:3: ( () otherlv_5= '(' otherlv_6= ')' )
                    // InternalAnsic.g:6313:4: () otherlv_5= '(' otherlv_6= ')'
                    {
                    // InternalAnsic.g:6313:4: ()
                    // InternalAnsic.g:6314:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPostfix_expression_complementAccess().getPostfixExpressionComplementEmptyAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_5=(Token)match(input,31,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getPostfix_expression_complementAccess().getLeftParenthesisKeyword_1_1());
                      			
                    }
                    otherlv_6=(Token)match(input,32,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getPostfix_expression_complementAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:6333:3: ( () otherlv_8= '(' ( (lv_argument_expression_list_9_0= ruleargument_expression_list ) ) otherlv_10= ')' )
                    {
                    // InternalAnsic.g:6333:3: ( () otherlv_8= '(' ( (lv_argument_expression_list_9_0= ruleargument_expression_list ) ) otherlv_10= ')' )
                    // InternalAnsic.g:6334:4: () otherlv_8= '(' ( (lv_argument_expression_list_9_0= ruleargument_expression_list ) ) otherlv_10= ')'
                    {
                    // InternalAnsic.g:6334:4: ()
                    // InternalAnsic.g:6335:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPostfix_expression_complementAccess().getPostfixExpressionComplementArgListAction_2_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_8=(Token)match(input,31,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getPostfix_expression_complementAccess().getLeftParenthesisKeyword_2_1());
                      			
                    }
                    // InternalAnsic.g:6348:4: ( (lv_argument_expression_list_9_0= ruleargument_expression_list ) )
                    // InternalAnsic.g:6349:5: (lv_argument_expression_list_9_0= ruleargument_expression_list )
                    {
                    // InternalAnsic.g:6349:5: (lv_argument_expression_list_9_0= ruleargument_expression_list )
                    // InternalAnsic.g:6350:6: lv_argument_expression_list_9_0= ruleargument_expression_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPostfix_expression_complementAccess().getArgument_expression_listArgument_expression_listParserRuleCall_2_2_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_argument_expression_list_9_0=ruleargument_expression_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPostfix_expression_complementRule());
                      						}
                      						add(
                      							current,
                      							"argument_expression_list",
                      							lv_argument_expression_list_9_0,
                      							"org.xtext.example.Ansic.argument_expression_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_10=(Token)match(input,32,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getPostfix_expression_complementAccess().getRightParenthesisKeyword_2_3());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalAnsic.g:6373:3: ( () otherlv_12= '.' ( (lv_identifier_13_0= RULE_ID ) ) )
                    {
                    // InternalAnsic.g:6373:3: ( () otherlv_12= '.' ( (lv_identifier_13_0= RULE_ID ) ) )
                    // InternalAnsic.g:6374:4: () otherlv_12= '.' ( (lv_identifier_13_0= RULE_ID ) )
                    {
                    // InternalAnsic.g:6374:4: ()
                    // InternalAnsic.g:6375:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPostfix_expression_complementAccess().getPostfixExpressionComplementIdentifierAction_3_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_12=(Token)match(input,70,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getPostfix_expression_complementAccess().getFullStopKeyword_3_1());
                      			
                    }
                    // InternalAnsic.g:6388:4: ( (lv_identifier_13_0= RULE_ID ) )
                    // InternalAnsic.g:6389:5: (lv_identifier_13_0= RULE_ID )
                    {
                    // InternalAnsic.g:6389:5: (lv_identifier_13_0= RULE_ID )
                    // InternalAnsic.g:6390:6: lv_identifier_13_0= RULE_ID
                    {
                    lv_identifier_13_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_identifier_13_0, grammarAccess.getPostfix_expression_complementAccess().getIdentifierIDTerminalRuleCall_3_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPostfix_expression_complementRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"identifier",
                      							lv_identifier_13_0,
                      							"org.eclipse.xtext.common.Terminals.ID");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalAnsic.g:6408:3: ( () otherlv_15= '->' ( (lv_identifier_16_0= RULE_ID ) ) )
                    {
                    // InternalAnsic.g:6408:3: ( () otherlv_15= '->' ( (lv_identifier_16_0= RULE_ID ) ) )
                    // InternalAnsic.g:6409:4: () otherlv_15= '->' ( (lv_identifier_16_0= RULE_ID ) )
                    {
                    // InternalAnsic.g:6409:4: ()
                    // InternalAnsic.g:6410:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPostfix_expression_complementAccess().getPostfixExpressionComplementPointerAction_4_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_15=(Token)match(input,72,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_15, grammarAccess.getPostfix_expression_complementAccess().getHyphenMinusGreaterThanSignKeyword_4_1());
                      			
                    }
                    // InternalAnsic.g:6423:4: ( (lv_identifier_16_0= RULE_ID ) )
                    // InternalAnsic.g:6424:5: (lv_identifier_16_0= RULE_ID )
                    {
                    // InternalAnsic.g:6424:5: (lv_identifier_16_0= RULE_ID )
                    // InternalAnsic.g:6425:6: lv_identifier_16_0= RULE_ID
                    {
                    lv_identifier_16_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_identifier_16_0, grammarAccess.getPostfix_expression_complementAccess().getIdentifierIDTerminalRuleCall_4_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPostfix_expression_complementRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"identifier",
                      							lv_identifier_16_0,
                      							"org.eclipse.xtext.common.Terminals.ID");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalAnsic.g:6443:3: ( () otherlv_18= '++' )
                    {
                    // InternalAnsic.g:6443:3: ( () otherlv_18= '++' )
                    // InternalAnsic.g:6444:4: () otherlv_18= '++'
                    {
                    // InternalAnsic.g:6444:4: ()
                    // InternalAnsic.g:6445:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPostfix_expression_complementAccess().getPostfixExpressionComplementIncrementAction_5_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_18=(Token)match(input,73,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getPostfix_expression_complementAccess().getPlusSignPlusSignKeyword_5_1());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalAnsic.g:6460:3: ( () otherlv_20= '--' )
                    {
                    // InternalAnsic.g:6460:3: ( () otherlv_20= '--' )
                    // InternalAnsic.g:6461:4: () otherlv_20= '--'
                    {
                    // InternalAnsic.g:6461:4: ()
                    // InternalAnsic.g:6462:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPostfix_expression_complementAccess().getPostfixExpressionComplementDecrementAction_6_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_20=(Token)match(input,74,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_20, grammarAccess.getPostfix_expression_complementAccess().getHyphenMinusHyphenMinusKeyword_6_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulepostfix_expression_complement"


    // $ANTLR start "entryRuleargument_expression_list"
    // InternalAnsic.g:6480:1: entryRuleargument_expression_list returns [EObject current=null] : iv_ruleargument_expression_list= ruleargument_expression_list EOF ;
    public final EObject entryRuleargument_expression_list() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleargument_expression_list = null;


        try {
            // InternalAnsic.g:6480:65: (iv_ruleargument_expression_list= ruleargument_expression_list EOF )
            // InternalAnsic.g:6481:2: iv_ruleargument_expression_list= ruleargument_expression_list EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArgument_expression_listRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleargument_expression_list=ruleargument_expression_list();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleargument_expression_list; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleargument_expression_list"


    // $ANTLR start "ruleargument_expression_list"
    // InternalAnsic.g:6487:1: ruleargument_expression_list returns [EObject current=null] : ( ( (lv_assignment_expression_0_0= ruleassignment_expression ) ) ( (lv_argument_expression_list_linha_1_0= ruleargument_expression_list_linha ) ) ) ;
    public final EObject ruleargument_expression_list() throws RecognitionException {
        EObject current = null;

        EObject lv_assignment_expression_0_0 = null;

        EObject lv_argument_expression_list_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:6493:2: ( ( ( (lv_assignment_expression_0_0= ruleassignment_expression ) ) ( (lv_argument_expression_list_linha_1_0= ruleargument_expression_list_linha ) ) ) )
            // InternalAnsic.g:6494:2: ( ( (lv_assignment_expression_0_0= ruleassignment_expression ) ) ( (lv_argument_expression_list_linha_1_0= ruleargument_expression_list_linha ) ) )
            {
            // InternalAnsic.g:6494:2: ( ( (lv_assignment_expression_0_0= ruleassignment_expression ) ) ( (lv_argument_expression_list_linha_1_0= ruleargument_expression_list_linha ) ) )
            // InternalAnsic.g:6495:3: ( (lv_assignment_expression_0_0= ruleassignment_expression ) ) ( (lv_argument_expression_list_linha_1_0= ruleargument_expression_list_linha ) )
            {
            // InternalAnsic.g:6495:3: ( (lv_assignment_expression_0_0= ruleassignment_expression ) )
            // InternalAnsic.g:6496:4: (lv_assignment_expression_0_0= ruleassignment_expression )
            {
            // InternalAnsic.g:6496:4: (lv_assignment_expression_0_0= ruleassignment_expression )
            // InternalAnsic.g:6497:5: lv_assignment_expression_0_0= ruleassignment_expression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getArgument_expression_listAccess().getAssignment_expressionAssignment_expressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_12);
            lv_assignment_expression_0_0=ruleassignment_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getArgument_expression_listRule());
              					}
              					set(
              						current,
              						"assignment_expression",
              						lv_assignment_expression_0_0,
              						"org.xtext.example.Ansic.assignment_expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:6514:3: ( (lv_argument_expression_list_linha_1_0= ruleargument_expression_list_linha ) )
            // InternalAnsic.g:6515:4: (lv_argument_expression_list_linha_1_0= ruleargument_expression_list_linha )
            {
            // InternalAnsic.g:6515:4: (lv_argument_expression_list_linha_1_0= ruleargument_expression_list_linha )
            // InternalAnsic.g:6516:5: lv_argument_expression_list_linha_1_0= ruleargument_expression_list_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getArgument_expression_listAccess().getArgument_expression_list_linhaArgument_expression_list_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_argument_expression_list_linha_1_0=ruleargument_expression_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getArgument_expression_listRule());
              					}
              					set(
              						current,
              						"argument_expression_list_linha",
              						lv_argument_expression_list_linha_1_0,
              						"org.xtext.example.Ansic.argument_expression_list_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleargument_expression_list"


    // $ANTLR start "entryRuleargument_expression_list_linha"
    // InternalAnsic.g:6537:1: entryRuleargument_expression_list_linha returns [EObject current=null] : iv_ruleargument_expression_list_linha= ruleargument_expression_list_linha EOF ;
    public final EObject entryRuleargument_expression_list_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleargument_expression_list_linha = null;


        try {
            // InternalAnsic.g:6537:71: (iv_ruleargument_expression_list_linha= ruleargument_expression_list_linha EOF )
            // InternalAnsic.g:6538:2: iv_ruleargument_expression_list_linha= ruleargument_expression_list_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArgument_expression_list_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleargument_expression_list_linha=ruleargument_expression_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleargument_expression_list_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleargument_expression_list_linha"


    // $ANTLR start "ruleargument_expression_list_linha"
    // InternalAnsic.g:6544:1: ruleargument_expression_list_linha returns [EObject current=null] : ( () (otherlv_1= ',' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) ( (lv_argument_expression_list_linha_3_0= ruleargument_expression_list_linha ) ) )? ) ;
    public final EObject ruleargument_expression_list_linha() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_assignment_expression_2_0 = null;

        EObject lv_argument_expression_list_linha_3_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:6550:2: ( ( () (otherlv_1= ',' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) ( (lv_argument_expression_list_linha_3_0= ruleargument_expression_list_linha ) ) )? ) )
            // InternalAnsic.g:6551:2: ( () (otherlv_1= ',' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) ( (lv_argument_expression_list_linha_3_0= ruleargument_expression_list_linha ) ) )? )
            {
            // InternalAnsic.g:6551:2: ( () (otherlv_1= ',' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) ( (lv_argument_expression_list_linha_3_0= ruleargument_expression_list_linha ) ) )? )
            // InternalAnsic.g:6552:3: () (otherlv_1= ',' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) ( (lv_argument_expression_list_linha_3_0= ruleargument_expression_list_linha ) ) )?
            {
            // InternalAnsic.g:6552:3: ()
            // InternalAnsic.g:6553:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getArgument_expression_list_linhaAccess().getArgumentExpressionListLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:6562:3: (otherlv_1= ',' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) ( (lv_argument_expression_list_linha_3_0= ruleargument_expression_list_linha ) ) )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==53) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // InternalAnsic.g:6563:4: otherlv_1= ',' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) ( (lv_argument_expression_list_linha_3_0= ruleargument_expression_list_linha ) )
                    {
                    otherlv_1=(Token)match(input,53,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getArgument_expression_list_linhaAccess().getCommaKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:6567:4: ( (lv_assignment_expression_2_0= ruleassignment_expression ) )
                    // InternalAnsic.g:6568:5: (lv_assignment_expression_2_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:6568:5: (lv_assignment_expression_2_0= ruleassignment_expression )
                    // InternalAnsic.g:6569:6: lv_assignment_expression_2_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getArgument_expression_list_linhaAccess().getAssignment_expressionAssignment_expressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_assignment_expression_2_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getArgument_expression_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"assignment_expression",
                      							lv_assignment_expression_2_0,
                      							"org.xtext.example.Ansic.assignment_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:6586:4: ( (lv_argument_expression_list_linha_3_0= ruleargument_expression_list_linha ) )
                    // InternalAnsic.g:6587:5: (lv_argument_expression_list_linha_3_0= ruleargument_expression_list_linha )
                    {
                    // InternalAnsic.g:6587:5: (lv_argument_expression_list_linha_3_0= ruleargument_expression_list_linha )
                    // InternalAnsic.g:6588:6: lv_argument_expression_list_linha_3_0= ruleargument_expression_list_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getArgument_expression_list_linhaAccess().getArgument_expression_list_linhaArgument_expression_list_linhaParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_argument_expression_list_linha_3_0=ruleargument_expression_list_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getArgument_expression_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"argument_expression_list_linha",
                      							lv_argument_expression_list_linha_3_0,
                      							"org.xtext.example.Ansic.argument_expression_list_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleargument_expression_list_linha"


    // $ANTLR start "entryRuleunary_expression"
    // InternalAnsic.g:6610:1: entryRuleunary_expression returns [EObject current=null] : iv_ruleunary_expression= ruleunary_expression EOF ;
    public final EObject entryRuleunary_expression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleunary_expression = null;


        try {
            // InternalAnsic.g:6610:57: (iv_ruleunary_expression= ruleunary_expression EOF )
            // InternalAnsic.g:6611:2: iv_ruleunary_expression= ruleunary_expression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnary_expressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleunary_expression=ruleunary_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleunary_expression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleunary_expression"


    // $ANTLR start "ruleunary_expression"
    // InternalAnsic.g:6617:1: ruleunary_expression returns [EObject current=null] : ( ( (lv_postfix_expression_0_0= rulepostfix_expression ) ) | (otherlv_1= '++' ( (lv_unary_expression_2_0= ruleunary_expression ) ) ) | (otherlv_3= '--' ( (lv_unary_expression_4_0= ruleunary_expression ) ) ) | ( ( (lv_unary_operator_5_0= ruleunary_operator ) ) ( (lv_cast_expression_6_0= rulecast_expression ) ) ) | (otherlv_7= 'sizeof' ( (lv_unary_expression_8_0= ruleunary_expression ) ) ) | (otherlv_9= 'sizeof' otherlv_10= '(' ( (lv_type_name_11_0= ruletype_name ) ) otherlv_12= ')' ) | (otherlv_13= '_Alignof' otherlv_14= '(' ( (lv_type_name_15_0= ruletype_name ) ) otherlv_16= ')' ) ) ;
    public final EObject ruleunary_expression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        EObject lv_postfix_expression_0_0 = null;

        EObject lv_unary_expression_2_0 = null;

        EObject lv_unary_expression_4_0 = null;

        AntlrDatatypeRuleToken lv_unary_operator_5_0 = null;

        EObject lv_cast_expression_6_0 = null;

        EObject lv_unary_expression_8_0 = null;

        EObject lv_type_name_11_0 = null;

        EObject lv_type_name_15_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:6623:2: ( ( ( (lv_postfix_expression_0_0= rulepostfix_expression ) ) | (otherlv_1= '++' ( (lv_unary_expression_2_0= ruleunary_expression ) ) ) | (otherlv_3= '--' ( (lv_unary_expression_4_0= ruleunary_expression ) ) ) | ( ( (lv_unary_operator_5_0= ruleunary_operator ) ) ( (lv_cast_expression_6_0= rulecast_expression ) ) ) | (otherlv_7= 'sizeof' ( (lv_unary_expression_8_0= ruleunary_expression ) ) ) | (otherlv_9= 'sizeof' otherlv_10= '(' ( (lv_type_name_11_0= ruletype_name ) ) otherlv_12= ')' ) | (otherlv_13= '_Alignof' otherlv_14= '(' ( (lv_type_name_15_0= ruletype_name ) ) otherlv_16= ')' ) ) )
            // InternalAnsic.g:6624:2: ( ( (lv_postfix_expression_0_0= rulepostfix_expression ) ) | (otherlv_1= '++' ( (lv_unary_expression_2_0= ruleunary_expression ) ) ) | (otherlv_3= '--' ( (lv_unary_expression_4_0= ruleunary_expression ) ) ) | ( ( (lv_unary_operator_5_0= ruleunary_operator ) ) ( (lv_cast_expression_6_0= rulecast_expression ) ) ) | (otherlv_7= 'sizeof' ( (lv_unary_expression_8_0= ruleunary_expression ) ) ) | (otherlv_9= 'sizeof' otherlv_10= '(' ( (lv_type_name_11_0= ruletype_name ) ) otherlv_12= ')' ) | (otherlv_13= '_Alignof' otherlv_14= '(' ( (lv_type_name_15_0= ruletype_name ) ) otherlv_16= ')' ) )
            {
            // InternalAnsic.g:6624:2: ( ( (lv_postfix_expression_0_0= rulepostfix_expression ) ) | (otherlv_1= '++' ( (lv_unary_expression_2_0= ruleunary_expression ) ) ) | (otherlv_3= '--' ( (lv_unary_expression_4_0= ruleunary_expression ) ) ) | ( ( (lv_unary_operator_5_0= ruleunary_operator ) ) ( (lv_cast_expression_6_0= rulecast_expression ) ) ) | (otherlv_7= 'sizeof' ( (lv_unary_expression_8_0= ruleunary_expression ) ) ) | (otherlv_9= 'sizeof' otherlv_10= '(' ( (lv_type_name_11_0= ruletype_name ) ) otherlv_12= ')' ) | (otherlv_13= '_Alignof' otherlv_14= '(' ( (lv_type_name_15_0= ruletype_name ) ) otherlv_16= ')' ) )
            int alt49=7;
            alt49 = dfa49.predict(input);
            switch (alt49) {
                case 1 :
                    // InternalAnsic.g:6625:3: ( (lv_postfix_expression_0_0= rulepostfix_expression ) )
                    {
                    // InternalAnsic.g:6625:3: ( (lv_postfix_expression_0_0= rulepostfix_expression ) )
                    // InternalAnsic.g:6626:4: (lv_postfix_expression_0_0= rulepostfix_expression )
                    {
                    // InternalAnsic.g:6626:4: (lv_postfix_expression_0_0= rulepostfix_expression )
                    // InternalAnsic.g:6627:5: lv_postfix_expression_0_0= rulepostfix_expression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getUnary_expressionAccess().getPostfix_expressionPostfix_expressionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_postfix_expression_0_0=rulepostfix_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getUnary_expressionRule());
                      					}
                      					set(
                      						current,
                      						"postfix_expression",
                      						lv_postfix_expression_0_0,
                      						"org.xtext.example.Ansic.postfix_expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:6645:3: (otherlv_1= '++' ( (lv_unary_expression_2_0= ruleunary_expression ) ) )
                    {
                    // InternalAnsic.g:6645:3: (otherlv_1= '++' ( (lv_unary_expression_2_0= ruleunary_expression ) ) )
                    // InternalAnsic.g:6646:4: otherlv_1= '++' ( (lv_unary_expression_2_0= ruleunary_expression ) )
                    {
                    otherlv_1=(Token)match(input,73,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getUnary_expressionAccess().getPlusSignPlusSignKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:6650:4: ( (lv_unary_expression_2_0= ruleunary_expression ) )
                    // InternalAnsic.g:6651:5: (lv_unary_expression_2_0= ruleunary_expression )
                    {
                    // InternalAnsic.g:6651:5: (lv_unary_expression_2_0= ruleunary_expression )
                    // InternalAnsic.g:6652:6: lv_unary_expression_2_0= ruleunary_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnary_expressionAccess().getUnary_expressionUnary_expressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_unary_expression_2_0=ruleunary_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnary_expressionRule());
                      						}
                      						set(
                      							current,
                      							"unary_expression",
                      							lv_unary_expression_2_0,
                      							"org.xtext.example.Ansic.unary_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:6671:3: (otherlv_3= '--' ( (lv_unary_expression_4_0= ruleunary_expression ) ) )
                    {
                    // InternalAnsic.g:6671:3: (otherlv_3= '--' ( (lv_unary_expression_4_0= ruleunary_expression ) ) )
                    // InternalAnsic.g:6672:4: otherlv_3= '--' ( (lv_unary_expression_4_0= ruleunary_expression ) )
                    {
                    otherlv_3=(Token)match(input,74,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getUnary_expressionAccess().getHyphenMinusHyphenMinusKeyword_2_0());
                      			
                    }
                    // InternalAnsic.g:6676:4: ( (lv_unary_expression_4_0= ruleunary_expression ) )
                    // InternalAnsic.g:6677:5: (lv_unary_expression_4_0= ruleunary_expression )
                    {
                    // InternalAnsic.g:6677:5: (lv_unary_expression_4_0= ruleunary_expression )
                    // InternalAnsic.g:6678:6: lv_unary_expression_4_0= ruleunary_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnary_expressionAccess().getUnary_expressionUnary_expressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_unary_expression_4_0=ruleunary_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnary_expressionRule());
                      						}
                      						set(
                      							current,
                      							"unary_expression",
                      							lv_unary_expression_4_0,
                      							"org.xtext.example.Ansic.unary_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalAnsic.g:6697:3: ( ( (lv_unary_operator_5_0= ruleunary_operator ) ) ( (lv_cast_expression_6_0= rulecast_expression ) ) )
                    {
                    // InternalAnsic.g:6697:3: ( ( (lv_unary_operator_5_0= ruleunary_operator ) ) ( (lv_cast_expression_6_0= rulecast_expression ) ) )
                    // InternalAnsic.g:6698:4: ( (lv_unary_operator_5_0= ruleunary_operator ) ) ( (lv_cast_expression_6_0= rulecast_expression ) )
                    {
                    // InternalAnsic.g:6698:4: ( (lv_unary_operator_5_0= ruleunary_operator ) )
                    // InternalAnsic.g:6699:5: (lv_unary_operator_5_0= ruleunary_operator )
                    {
                    // InternalAnsic.g:6699:5: (lv_unary_operator_5_0= ruleunary_operator )
                    // InternalAnsic.g:6700:6: lv_unary_operator_5_0= ruleunary_operator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnary_expressionAccess().getUnary_operatorUnary_operatorParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_8);
                    lv_unary_operator_5_0=ruleunary_operator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnary_expressionRule());
                      						}
                      						set(
                      							current,
                      							"unary_operator",
                      							lv_unary_operator_5_0,
                      							"org.xtext.example.Ansic.unary_operator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:6717:4: ( (lv_cast_expression_6_0= rulecast_expression ) )
                    // InternalAnsic.g:6718:5: (lv_cast_expression_6_0= rulecast_expression )
                    {
                    // InternalAnsic.g:6718:5: (lv_cast_expression_6_0= rulecast_expression )
                    // InternalAnsic.g:6719:6: lv_cast_expression_6_0= rulecast_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnary_expressionAccess().getCast_expressionCast_expressionParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_cast_expression_6_0=rulecast_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnary_expressionRule());
                      						}
                      						set(
                      							current,
                      							"cast_expression",
                      							lv_cast_expression_6_0,
                      							"org.xtext.example.Ansic.cast_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalAnsic.g:6738:3: (otherlv_7= 'sizeof' ( (lv_unary_expression_8_0= ruleunary_expression ) ) )
                    {
                    // InternalAnsic.g:6738:3: (otherlv_7= 'sizeof' ( (lv_unary_expression_8_0= ruleunary_expression ) ) )
                    // InternalAnsic.g:6739:4: otherlv_7= 'sizeof' ( (lv_unary_expression_8_0= ruleunary_expression ) )
                    {
                    otherlv_7=(Token)match(input,75,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getUnary_expressionAccess().getSizeofKeyword_4_0());
                      			
                    }
                    // InternalAnsic.g:6743:4: ( (lv_unary_expression_8_0= ruleunary_expression ) )
                    // InternalAnsic.g:6744:5: (lv_unary_expression_8_0= ruleunary_expression )
                    {
                    // InternalAnsic.g:6744:5: (lv_unary_expression_8_0= ruleunary_expression )
                    // InternalAnsic.g:6745:6: lv_unary_expression_8_0= ruleunary_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnary_expressionAccess().getUnary_expressionUnary_expressionParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_unary_expression_8_0=ruleunary_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnary_expressionRule());
                      						}
                      						set(
                      							current,
                      							"unary_expression",
                      							lv_unary_expression_8_0,
                      							"org.xtext.example.Ansic.unary_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalAnsic.g:6764:3: (otherlv_9= 'sizeof' otherlv_10= '(' ( (lv_type_name_11_0= ruletype_name ) ) otherlv_12= ')' )
                    {
                    // InternalAnsic.g:6764:3: (otherlv_9= 'sizeof' otherlv_10= '(' ( (lv_type_name_11_0= ruletype_name ) ) otherlv_12= ')' )
                    // InternalAnsic.g:6765:4: otherlv_9= 'sizeof' otherlv_10= '(' ( (lv_type_name_11_0= ruletype_name ) ) otherlv_12= ')'
                    {
                    otherlv_9=(Token)match(input,75,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getUnary_expressionAccess().getSizeofKeyword_5_0());
                      			
                    }
                    otherlv_10=(Token)match(input,31,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getUnary_expressionAccess().getLeftParenthesisKeyword_5_1());
                      			
                    }
                    // InternalAnsic.g:6773:4: ( (lv_type_name_11_0= ruletype_name ) )
                    // InternalAnsic.g:6774:5: (lv_type_name_11_0= ruletype_name )
                    {
                    // InternalAnsic.g:6774:5: (lv_type_name_11_0= ruletype_name )
                    // InternalAnsic.g:6775:6: lv_type_name_11_0= ruletype_name
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnary_expressionAccess().getType_nameType_nameParserRuleCall_5_2_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_type_name_11_0=ruletype_name();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnary_expressionRule());
                      						}
                      						set(
                      							current,
                      							"type_name",
                      							lv_type_name_11_0,
                      							"org.xtext.example.Ansic.type_name");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_12=(Token)match(input,32,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getUnary_expressionAccess().getRightParenthesisKeyword_5_3());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalAnsic.g:6798:3: (otherlv_13= '_Alignof' otherlv_14= '(' ( (lv_type_name_15_0= ruletype_name ) ) otherlv_16= ')' )
                    {
                    // InternalAnsic.g:6798:3: (otherlv_13= '_Alignof' otherlv_14= '(' ( (lv_type_name_15_0= ruletype_name ) ) otherlv_16= ')' )
                    // InternalAnsic.g:6799:4: otherlv_13= '_Alignof' otherlv_14= '(' ( (lv_type_name_15_0= ruletype_name ) ) otherlv_16= ')'
                    {
                    otherlv_13=(Token)match(input,76,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getUnary_expressionAccess().get_AlignofKeyword_6_0());
                      			
                    }
                    otherlv_14=(Token)match(input,31,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getUnary_expressionAccess().getLeftParenthesisKeyword_6_1());
                      			
                    }
                    // InternalAnsic.g:6807:4: ( (lv_type_name_15_0= ruletype_name ) )
                    // InternalAnsic.g:6808:5: (lv_type_name_15_0= ruletype_name )
                    {
                    // InternalAnsic.g:6808:5: (lv_type_name_15_0= ruletype_name )
                    // InternalAnsic.g:6809:6: lv_type_name_15_0= ruletype_name
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnary_expressionAccess().getType_nameType_nameParserRuleCall_6_2_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_type_name_15_0=ruletype_name();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnary_expressionRule());
                      						}
                      						set(
                      							current,
                      							"type_name",
                      							lv_type_name_15_0,
                      							"org.xtext.example.Ansic.type_name");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_16=(Token)match(input,32,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_16, grammarAccess.getUnary_expressionAccess().getRightParenthesisKeyword_6_3());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleunary_expression"


    // $ANTLR start "entryRulecast_expression"
    // InternalAnsic.g:6835:1: entryRulecast_expression returns [EObject current=null] : iv_rulecast_expression= rulecast_expression EOF ;
    public final EObject entryRulecast_expression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulecast_expression = null;


        try {
            // InternalAnsic.g:6835:56: (iv_rulecast_expression= rulecast_expression EOF )
            // InternalAnsic.g:6836:2: iv_rulecast_expression= rulecast_expression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCast_expressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulecast_expression=rulecast_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulecast_expression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulecast_expression"


    // $ANTLR start "rulecast_expression"
    // InternalAnsic.g:6842:1: rulecast_expression returns [EObject current=null] : ( ( (lv_unary_expression_0_0= ruleunary_expression ) ) | (otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')' ( (lv_cast_expression_4_0= rulecast_expression ) ) ) ) ;
    public final EObject rulecast_expression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_unary_expression_0_0 = null;

        EObject lv_type_name_2_0 = null;

        EObject lv_cast_expression_4_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:6848:2: ( ( ( (lv_unary_expression_0_0= ruleunary_expression ) ) | (otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')' ( (lv_cast_expression_4_0= rulecast_expression ) ) ) ) )
            // InternalAnsic.g:6849:2: ( ( (lv_unary_expression_0_0= ruleunary_expression ) ) | (otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')' ( (lv_cast_expression_4_0= rulecast_expression ) ) ) )
            {
            // InternalAnsic.g:6849:2: ( ( (lv_unary_expression_0_0= ruleunary_expression ) ) | (otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')' ( (lv_cast_expression_4_0= rulecast_expression ) ) ) )
            int alt50=2;
            alt50 = dfa50.predict(input);
            switch (alt50) {
                case 1 :
                    // InternalAnsic.g:6850:3: ( (lv_unary_expression_0_0= ruleunary_expression ) )
                    {
                    // InternalAnsic.g:6850:3: ( (lv_unary_expression_0_0= ruleunary_expression ) )
                    // InternalAnsic.g:6851:4: (lv_unary_expression_0_0= ruleunary_expression )
                    {
                    // InternalAnsic.g:6851:4: (lv_unary_expression_0_0= ruleunary_expression )
                    // InternalAnsic.g:6852:5: lv_unary_expression_0_0= ruleunary_expression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getCast_expressionAccess().getUnary_expressionUnary_expressionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_unary_expression_0_0=ruleunary_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getCast_expressionRule());
                      					}
                      					set(
                      						current,
                      						"unary_expression",
                      						lv_unary_expression_0_0,
                      						"org.xtext.example.Ansic.unary_expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:6870:3: (otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')' ( (lv_cast_expression_4_0= rulecast_expression ) ) )
                    {
                    // InternalAnsic.g:6870:3: (otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')' ( (lv_cast_expression_4_0= rulecast_expression ) ) )
                    // InternalAnsic.g:6871:4: otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')' ( (lv_cast_expression_4_0= rulecast_expression ) )
                    {
                    otherlv_1=(Token)match(input,31,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getCast_expressionAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:6875:4: ( (lv_type_name_2_0= ruletype_name ) )
                    // InternalAnsic.g:6876:5: (lv_type_name_2_0= ruletype_name )
                    {
                    // InternalAnsic.g:6876:5: (lv_type_name_2_0= ruletype_name )
                    // InternalAnsic.g:6877:6: lv_type_name_2_0= ruletype_name
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCast_expressionAccess().getType_nameType_nameParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_type_name_2_0=ruletype_name();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCast_expressionRule());
                      						}
                      						set(
                      							current,
                      							"type_name",
                      							lv_type_name_2_0,
                      							"org.xtext.example.Ansic.type_name");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,32,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getCast_expressionAccess().getRightParenthesisKeyword_1_2());
                      			
                    }
                    // InternalAnsic.g:6898:4: ( (lv_cast_expression_4_0= rulecast_expression ) )
                    // InternalAnsic.g:6899:5: (lv_cast_expression_4_0= rulecast_expression )
                    {
                    // InternalAnsic.g:6899:5: (lv_cast_expression_4_0= rulecast_expression )
                    // InternalAnsic.g:6900:6: lv_cast_expression_4_0= rulecast_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCast_expressionAccess().getCast_expressionCast_expressionParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_cast_expression_4_0=rulecast_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCast_expressionRule());
                      						}
                      						set(
                      							current,
                      							"cast_expression",
                      							lv_cast_expression_4_0,
                      							"org.xtext.example.Ansic.cast_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulecast_expression"


    // $ANTLR start "entryRulemultiplicative_expression"
    // InternalAnsic.g:6922:1: entryRulemultiplicative_expression returns [EObject current=null] : iv_rulemultiplicative_expression= rulemultiplicative_expression EOF ;
    public final EObject entryRulemultiplicative_expression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulemultiplicative_expression = null;


        try {
            // InternalAnsic.g:6922:66: (iv_rulemultiplicative_expression= rulemultiplicative_expression EOF )
            // InternalAnsic.g:6923:2: iv_rulemultiplicative_expression= rulemultiplicative_expression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicative_expressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulemultiplicative_expression=rulemultiplicative_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulemultiplicative_expression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulemultiplicative_expression"


    // $ANTLR start "rulemultiplicative_expression"
    // InternalAnsic.g:6929:1: rulemultiplicative_expression returns [EObject current=null] : ( ( (lv_cast_expression_0_0= rulecast_expression ) ) ( (lv_multiplicative_expression_linha_1_0= rulemultiplicative_expression_linha ) ) ) ;
    public final EObject rulemultiplicative_expression() throws RecognitionException {
        EObject current = null;

        EObject lv_cast_expression_0_0 = null;

        EObject lv_multiplicative_expression_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:6935:2: ( ( ( (lv_cast_expression_0_0= rulecast_expression ) ) ( (lv_multiplicative_expression_linha_1_0= rulemultiplicative_expression_linha ) ) ) )
            // InternalAnsic.g:6936:2: ( ( (lv_cast_expression_0_0= rulecast_expression ) ) ( (lv_multiplicative_expression_linha_1_0= rulemultiplicative_expression_linha ) ) )
            {
            // InternalAnsic.g:6936:2: ( ( (lv_cast_expression_0_0= rulecast_expression ) ) ( (lv_multiplicative_expression_linha_1_0= rulemultiplicative_expression_linha ) ) )
            // InternalAnsic.g:6937:3: ( (lv_cast_expression_0_0= rulecast_expression ) ) ( (lv_multiplicative_expression_linha_1_0= rulemultiplicative_expression_linha ) )
            {
            // InternalAnsic.g:6937:3: ( (lv_cast_expression_0_0= rulecast_expression ) )
            // InternalAnsic.g:6938:4: (lv_cast_expression_0_0= rulecast_expression )
            {
            // InternalAnsic.g:6938:4: (lv_cast_expression_0_0= rulecast_expression )
            // InternalAnsic.g:6939:5: lv_cast_expression_0_0= rulecast_expression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMultiplicative_expressionAccess().getCast_expressionCast_expressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_30);
            lv_cast_expression_0_0=rulecast_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMultiplicative_expressionRule());
              					}
              					set(
              						current,
              						"cast_expression",
              						lv_cast_expression_0_0,
              						"org.xtext.example.Ansic.cast_expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:6956:3: ( (lv_multiplicative_expression_linha_1_0= rulemultiplicative_expression_linha ) )
            // InternalAnsic.g:6957:4: (lv_multiplicative_expression_linha_1_0= rulemultiplicative_expression_linha )
            {
            // InternalAnsic.g:6957:4: (lv_multiplicative_expression_linha_1_0= rulemultiplicative_expression_linha )
            // InternalAnsic.g:6958:5: lv_multiplicative_expression_linha_1_0= rulemultiplicative_expression_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMultiplicative_expressionAccess().getMultiplicative_expression_linhaMultiplicative_expression_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_multiplicative_expression_linha_1_0=rulemultiplicative_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMultiplicative_expressionRule());
              					}
              					set(
              						current,
              						"multiplicative_expression_linha",
              						lv_multiplicative_expression_linha_1_0,
              						"org.xtext.example.Ansic.multiplicative_expression_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulemultiplicative_expression"


    // $ANTLR start "entryRulemultiplicative_expression_linha"
    // InternalAnsic.g:6979:1: entryRulemultiplicative_expression_linha returns [EObject current=null] : iv_rulemultiplicative_expression_linha= rulemultiplicative_expression_linha EOF ;
    public final EObject entryRulemultiplicative_expression_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_rulemultiplicative_expression_linha = null;


        try {
            // InternalAnsic.g:6979:72: (iv_rulemultiplicative_expression_linha= rulemultiplicative_expression_linha EOF )
            // InternalAnsic.g:6980:2: iv_rulemultiplicative_expression_linha= rulemultiplicative_expression_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicative_expression_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulemultiplicative_expression_linha=rulemultiplicative_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulemultiplicative_expression_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulemultiplicative_expression_linha"


    // $ANTLR start "rulemultiplicative_expression_linha"
    // InternalAnsic.g:6986:1: rulemultiplicative_expression_linha returns [EObject current=null] : ( () ( ( (lv_multiplicative_expression_complement_1_0= rulemultiplicative_expression_complement ) ) ( (lv_multiplicative_expression_linha_2_0= rulemultiplicative_expression_linha ) ) )? ) ;
    public final EObject rulemultiplicative_expression_linha() throws RecognitionException {
        EObject current = null;

        EObject lv_multiplicative_expression_complement_1_0 = null;

        EObject lv_multiplicative_expression_linha_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:6992:2: ( ( () ( ( (lv_multiplicative_expression_complement_1_0= rulemultiplicative_expression_complement ) ) ( (lv_multiplicative_expression_linha_2_0= rulemultiplicative_expression_linha ) ) )? ) )
            // InternalAnsic.g:6993:2: ( () ( ( (lv_multiplicative_expression_complement_1_0= rulemultiplicative_expression_complement ) ) ( (lv_multiplicative_expression_linha_2_0= rulemultiplicative_expression_linha ) ) )? )
            {
            // InternalAnsic.g:6993:2: ( () ( ( (lv_multiplicative_expression_complement_1_0= rulemultiplicative_expression_complement ) ) ( (lv_multiplicative_expression_linha_2_0= rulemultiplicative_expression_linha ) ) )? )
            // InternalAnsic.g:6994:3: () ( ( (lv_multiplicative_expression_complement_1_0= rulemultiplicative_expression_complement ) ) ( (lv_multiplicative_expression_linha_2_0= rulemultiplicative_expression_linha ) ) )?
            {
            // InternalAnsic.g:6994:3: ()
            // InternalAnsic.g:6995:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMultiplicative_expression_linhaAccess().getMultiplicativeExpressionLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:7004:3: ( ( (lv_multiplicative_expression_complement_1_0= rulemultiplicative_expression_complement ) ) ( (lv_multiplicative_expression_linha_2_0= rulemultiplicative_expression_linha ) ) )?
            int alt51=2;
            alt51 = dfa51.predict(input);
            switch (alt51) {
                case 1 :
                    // InternalAnsic.g:7005:4: ( (lv_multiplicative_expression_complement_1_0= rulemultiplicative_expression_complement ) ) ( (lv_multiplicative_expression_linha_2_0= rulemultiplicative_expression_linha ) )
                    {
                    // InternalAnsic.g:7005:4: ( (lv_multiplicative_expression_complement_1_0= rulemultiplicative_expression_complement ) )
                    // InternalAnsic.g:7006:5: (lv_multiplicative_expression_complement_1_0= rulemultiplicative_expression_complement )
                    {
                    // InternalAnsic.g:7006:5: (lv_multiplicative_expression_complement_1_0= rulemultiplicative_expression_complement )
                    // InternalAnsic.g:7007:6: lv_multiplicative_expression_complement_1_0= rulemultiplicative_expression_complement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMultiplicative_expression_linhaAccess().getMultiplicative_expression_complementMultiplicative_expression_complementParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_30);
                    lv_multiplicative_expression_complement_1_0=rulemultiplicative_expression_complement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMultiplicative_expression_linhaRule());
                      						}
                      						set(
                      							current,
                      							"multiplicative_expression_complement",
                      							lv_multiplicative_expression_complement_1_0,
                      							"org.xtext.example.Ansic.multiplicative_expression_complement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:7024:4: ( (lv_multiplicative_expression_linha_2_0= rulemultiplicative_expression_linha ) )
                    // InternalAnsic.g:7025:5: (lv_multiplicative_expression_linha_2_0= rulemultiplicative_expression_linha )
                    {
                    // InternalAnsic.g:7025:5: (lv_multiplicative_expression_linha_2_0= rulemultiplicative_expression_linha )
                    // InternalAnsic.g:7026:6: lv_multiplicative_expression_linha_2_0= rulemultiplicative_expression_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMultiplicative_expression_linhaAccess().getMultiplicative_expression_linhaMultiplicative_expression_linhaParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_multiplicative_expression_linha_2_0=rulemultiplicative_expression_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMultiplicative_expression_linhaRule());
                      						}
                      						set(
                      							current,
                      							"multiplicative_expression_linha",
                      							lv_multiplicative_expression_linha_2_0,
                      							"org.xtext.example.Ansic.multiplicative_expression_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulemultiplicative_expression_linha"


    // $ANTLR start "entryRulemultiplicative_expression_complement"
    // InternalAnsic.g:7048:1: entryRulemultiplicative_expression_complement returns [EObject current=null] : iv_rulemultiplicative_expression_complement= rulemultiplicative_expression_complement EOF ;
    public final EObject entryRulemultiplicative_expression_complement() throws RecognitionException {
        EObject current = null;

        EObject iv_rulemultiplicative_expression_complement = null;


        try {
            // InternalAnsic.g:7048:77: (iv_rulemultiplicative_expression_complement= rulemultiplicative_expression_complement EOF )
            // InternalAnsic.g:7049:2: iv_rulemultiplicative_expression_complement= rulemultiplicative_expression_complement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicative_expression_complementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulemultiplicative_expression_complement=rulemultiplicative_expression_complement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulemultiplicative_expression_complement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulemultiplicative_expression_complement"


    // $ANTLR start "rulemultiplicative_expression_complement"
    // InternalAnsic.g:7055:1: rulemultiplicative_expression_complement returns [EObject current=null] : ( (otherlv_0= '*' ( (lv_cast_expression_1_0= rulecast_expression ) ) ) | (otherlv_2= '/' ( (lv_cast_expression_3_0= rulecast_expression ) ) ) | (otherlv_4= '%' ( (lv_cast_expression_5_0= rulecast_expression ) ) ) ) ;
    public final EObject rulemultiplicative_expression_complement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_cast_expression_1_0 = null;

        EObject lv_cast_expression_3_0 = null;

        EObject lv_cast_expression_5_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:7061:2: ( ( (otherlv_0= '*' ( (lv_cast_expression_1_0= rulecast_expression ) ) ) | (otherlv_2= '/' ( (lv_cast_expression_3_0= rulecast_expression ) ) ) | (otherlv_4= '%' ( (lv_cast_expression_5_0= rulecast_expression ) ) ) ) )
            // InternalAnsic.g:7062:2: ( (otherlv_0= '*' ( (lv_cast_expression_1_0= rulecast_expression ) ) ) | (otherlv_2= '/' ( (lv_cast_expression_3_0= rulecast_expression ) ) ) | (otherlv_4= '%' ( (lv_cast_expression_5_0= rulecast_expression ) ) ) )
            {
            // InternalAnsic.g:7062:2: ( (otherlv_0= '*' ( (lv_cast_expression_1_0= rulecast_expression ) ) ) | (otherlv_2= '/' ( (lv_cast_expression_3_0= rulecast_expression ) ) ) | (otherlv_4= '%' ( (lv_cast_expression_5_0= rulecast_expression ) ) ) )
            int alt52=3;
            switch ( input.LA(1) ) {
            case 64:
                {
                alt52=1;
                }
                break;
            case 77:
                {
                alt52=2;
                }
                break;
            case 78:
                {
                alt52=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;
            }

            switch (alt52) {
                case 1 :
                    // InternalAnsic.g:7063:3: (otherlv_0= '*' ( (lv_cast_expression_1_0= rulecast_expression ) ) )
                    {
                    // InternalAnsic.g:7063:3: (otherlv_0= '*' ( (lv_cast_expression_1_0= rulecast_expression ) ) )
                    // InternalAnsic.g:7064:4: otherlv_0= '*' ( (lv_cast_expression_1_0= rulecast_expression ) )
                    {
                    otherlv_0=(Token)match(input,64,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getMultiplicative_expression_complementAccess().getAsteriskKeyword_0_0());
                      			
                    }
                    // InternalAnsic.g:7068:4: ( (lv_cast_expression_1_0= rulecast_expression ) )
                    // InternalAnsic.g:7069:5: (lv_cast_expression_1_0= rulecast_expression )
                    {
                    // InternalAnsic.g:7069:5: (lv_cast_expression_1_0= rulecast_expression )
                    // InternalAnsic.g:7070:6: lv_cast_expression_1_0= rulecast_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMultiplicative_expression_complementAccess().getCast_expressionCast_expressionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_cast_expression_1_0=rulecast_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMultiplicative_expression_complementRule());
                      						}
                      						set(
                      							current,
                      							"cast_expression",
                      							lv_cast_expression_1_0,
                      							"org.xtext.example.Ansic.cast_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:7089:3: (otherlv_2= '/' ( (lv_cast_expression_3_0= rulecast_expression ) ) )
                    {
                    // InternalAnsic.g:7089:3: (otherlv_2= '/' ( (lv_cast_expression_3_0= rulecast_expression ) ) )
                    // InternalAnsic.g:7090:4: otherlv_2= '/' ( (lv_cast_expression_3_0= rulecast_expression ) )
                    {
                    otherlv_2=(Token)match(input,77,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getMultiplicative_expression_complementAccess().getSolidusKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:7094:4: ( (lv_cast_expression_3_0= rulecast_expression ) )
                    // InternalAnsic.g:7095:5: (lv_cast_expression_3_0= rulecast_expression )
                    {
                    // InternalAnsic.g:7095:5: (lv_cast_expression_3_0= rulecast_expression )
                    // InternalAnsic.g:7096:6: lv_cast_expression_3_0= rulecast_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMultiplicative_expression_complementAccess().getCast_expressionCast_expressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_cast_expression_3_0=rulecast_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMultiplicative_expression_complementRule());
                      						}
                      						set(
                      							current,
                      							"cast_expression",
                      							lv_cast_expression_3_0,
                      							"org.xtext.example.Ansic.cast_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:7115:3: (otherlv_4= '%' ( (lv_cast_expression_5_0= rulecast_expression ) ) )
                    {
                    // InternalAnsic.g:7115:3: (otherlv_4= '%' ( (lv_cast_expression_5_0= rulecast_expression ) ) )
                    // InternalAnsic.g:7116:4: otherlv_4= '%' ( (lv_cast_expression_5_0= rulecast_expression ) )
                    {
                    otherlv_4=(Token)match(input,78,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getMultiplicative_expression_complementAccess().getPercentSignKeyword_2_0());
                      			
                    }
                    // InternalAnsic.g:7120:4: ( (lv_cast_expression_5_0= rulecast_expression ) )
                    // InternalAnsic.g:7121:5: (lv_cast_expression_5_0= rulecast_expression )
                    {
                    // InternalAnsic.g:7121:5: (lv_cast_expression_5_0= rulecast_expression )
                    // InternalAnsic.g:7122:6: lv_cast_expression_5_0= rulecast_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMultiplicative_expression_complementAccess().getCast_expressionCast_expressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_cast_expression_5_0=rulecast_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMultiplicative_expression_complementRule());
                      						}
                      						set(
                      							current,
                      							"cast_expression",
                      							lv_cast_expression_5_0,
                      							"org.xtext.example.Ansic.cast_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulemultiplicative_expression_complement"


    // $ANTLR start "entryRuleadditive_expression"
    // InternalAnsic.g:7144:1: entryRuleadditive_expression returns [EObject current=null] : iv_ruleadditive_expression= ruleadditive_expression EOF ;
    public final EObject entryRuleadditive_expression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleadditive_expression = null;


        try {
            // InternalAnsic.g:7144:60: (iv_ruleadditive_expression= ruleadditive_expression EOF )
            // InternalAnsic.g:7145:2: iv_ruleadditive_expression= ruleadditive_expression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAdditive_expressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleadditive_expression=ruleadditive_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleadditive_expression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleadditive_expression"


    // $ANTLR start "ruleadditive_expression"
    // InternalAnsic.g:7151:1: ruleadditive_expression returns [EObject current=null] : ( ( (lv_multiplicative_expression_0_0= rulemultiplicative_expression ) ) ( (lv_additive_expression_linha_1_0= ruleadditive_expression_linha ) ) ) ;
    public final EObject ruleadditive_expression() throws RecognitionException {
        EObject current = null;

        EObject lv_multiplicative_expression_0_0 = null;

        EObject lv_additive_expression_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:7157:2: ( ( ( (lv_multiplicative_expression_0_0= rulemultiplicative_expression ) ) ( (lv_additive_expression_linha_1_0= ruleadditive_expression_linha ) ) ) )
            // InternalAnsic.g:7158:2: ( ( (lv_multiplicative_expression_0_0= rulemultiplicative_expression ) ) ( (lv_additive_expression_linha_1_0= ruleadditive_expression_linha ) ) )
            {
            // InternalAnsic.g:7158:2: ( ( (lv_multiplicative_expression_0_0= rulemultiplicative_expression ) ) ( (lv_additive_expression_linha_1_0= ruleadditive_expression_linha ) ) )
            // InternalAnsic.g:7159:3: ( (lv_multiplicative_expression_0_0= rulemultiplicative_expression ) ) ( (lv_additive_expression_linha_1_0= ruleadditive_expression_linha ) )
            {
            // InternalAnsic.g:7159:3: ( (lv_multiplicative_expression_0_0= rulemultiplicative_expression ) )
            // InternalAnsic.g:7160:4: (lv_multiplicative_expression_0_0= rulemultiplicative_expression )
            {
            // InternalAnsic.g:7160:4: (lv_multiplicative_expression_0_0= rulemultiplicative_expression )
            // InternalAnsic.g:7161:5: lv_multiplicative_expression_0_0= rulemultiplicative_expression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAdditive_expressionAccess().getMultiplicative_expressionMultiplicative_expressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_31);
            lv_multiplicative_expression_0_0=rulemultiplicative_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAdditive_expressionRule());
              					}
              					set(
              						current,
              						"multiplicative_expression",
              						lv_multiplicative_expression_0_0,
              						"org.xtext.example.Ansic.multiplicative_expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:7178:3: ( (lv_additive_expression_linha_1_0= ruleadditive_expression_linha ) )
            // InternalAnsic.g:7179:4: (lv_additive_expression_linha_1_0= ruleadditive_expression_linha )
            {
            // InternalAnsic.g:7179:4: (lv_additive_expression_linha_1_0= ruleadditive_expression_linha )
            // InternalAnsic.g:7180:5: lv_additive_expression_linha_1_0= ruleadditive_expression_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAdditive_expressionAccess().getAdditive_expression_linhaAdditive_expression_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_additive_expression_linha_1_0=ruleadditive_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAdditive_expressionRule());
              					}
              					set(
              						current,
              						"additive_expression_linha",
              						lv_additive_expression_linha_1_0,
              						"org.xtext.example.Ansic.additive_expression_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleadditive_expression"


    // $ANTLR start "entryRuleadditive_expression_linha"
    // InternalAnsic.g:7201:1: entryRuleadditive_expression_linha returns [EObject current=null] : iv_ruleadditive_expression_linha= ruleadditive_expression_linha EOF ;
    public final EObject entryRuleadditive_expression_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleadditive_expression_linha = null;


        try {
            // InternalAnsic.g:7201:66: (iv_ruleadditive_expression_linha= ruleadditive_expression_linha EOF )
            // InternalAnsic.g:7202:2: iv_ruleadditive_expression_linha= ruleadditive_expression_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAdditive_expression_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleadditive_expression_linha=ruleadditive_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleadditive_expression_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleadditive_expression_linha"


    // $ANTLR start "ruleadditive_expression_linha"
    // InternalAnsic.g:7208:1: ruleadditive_expression_linha returns [EObject current=null] : ( () ( ( (lv_additive_expression_complement_1_0= ruleadditive_expression_complement ) ) ( (lv_additive_expression_linha_2_0= ruleadditive_expression_linha ) ) )? ) ;
    public final EObject ruleadditive_expression_linha() throws RecognitionException {
        EObject current = null;

        EObject lv_additive_expression_complement_1_0 = null;

        EObject lv_additive_expression_linha_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:7214:2: ( ( () ( ( (lv_additive_expression_complement_1_0= ruleadditive_expression_complement ) ) ( (lv_additive_expression_linha_2_0= ruleadditive_expression_linha ) ) )? ) )
            // InternalAnsic.g:7215:2: ( () ( ( (lv_additive_expression_complement_1_0= ruleadditive_expression_complement ) ) ( (lv_additive_expression_linha_2_0= ruleadditive_expression_linha ) ) )? )
            {
            // InternalAnsic.g:7215:2: ( () ( ( (lv_additive_expression_complement_1_0= ruleadditive_expression_complement ) ) ( (lv_additive_expression_linha_2_0= ruleadditive_expression_linha ) ) )? )
            // InternalAnsic.g:7216:3: () ( ( (lv_additive_expression_complement_1_0= ruleadditive_expression_complement ) ) ( (lv_additive_expression_linha_2_0= ruleadditive_expression_linha ) ) )?
            {
            // InternalAnsic.g:7216:3: ()
            // InternalAnsic.g:7217:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getAdditive_expression_linhaAccess().getAdditiveExpressionLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:7226:3: ( ( (lv_additive_expression_complement_1_0= ruleadditive_expression_complement ) ) ( (lv_additive_expression_linha_2_0= ruleadditive_expression_linha ) ) )?
            int alt53=2;
            alt53 = dfa53.predict(input);
            switch (alt53) {
                case 1 :
                    // InternalAnsic.g:7227:4: ( (lv_additive_expression_complement_1_0= ruleadditive_expression_complement ) ) ( (lv_additive_expression_linha_2_0= ruleadditive_expression_linha ) )
                    {
                    // InternalAnsic.g:7227:4: ( (lv_additive_expression_complement_1_0= ruleadditive_expression_complement ) )
                    // InternalAnsic.g:7228:5: (lv_additive_expression_complement_1_0= ruleadditive_expression_complement )
                    {
                    // InternalAnsic.g:7228:5: (lv_additive_expression_complement_1_0= ruleadditive_expression_complement )
                    // InternalAnsic.g:7229:6: lv_additive_expression_complement_1_0= ruleadditive_expression_complement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAdditive_expression_linhaAccess().getAdditive_expression_complementAdditive_expression_complementParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_31);
                    lv_additive_expression_complement_1_0=ruleadditive_expression_complement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAdditive_expression_linhaRule());
                      						}
                      						set(
                      							current,
                      							"additive_expression_complement",
                      							lv_additive_expression_complement_1_0,
                      							"org.xtext.example.Ansic.additive_expression_complement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:7246:4: ( (lv_additive_expression_linha_2_0= ruleadditive_expression_linha ) )
                    // InternalAnsic.g:7247:5: (lv_additive_expression_linha_2_0= ruleadditive_expression_linha )
                    {
                    // InternalAnsic.g:7247:5: (lv_additive_expression_linha_2_0= ruleadditive_expression_linha )
                    // InternalAnsic.g:7248:6: lv_additive_expression_linha_2_0= ruleadditive_expression_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAdditive_expression_linhaAccess().getAdditive_expression_linhaAdditive_expression_linhaParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_additive_expression_linha_2_0=ruleadditive_expression_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAdditive_expression_linhaRule());
                      						}
                      						set(
                      							current,
                      							"additive_expression_linha",
                      							lv_additive_expression_linha_2_0,
                      							"org.xtext.example.Ansic.additive_expression_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleadditive_expression_linha"


    // $ANTLR start "entryRuleadditive_expression_complement"
    // InternalAnsic.g:7270:1: entryRuleadditive_expression_complement returns [EObject current=null] : iv_ruleadditive_expression_complement= ruleadditive_expression_complement EOF ;
    public final EObject entryRuleadditive_expression_complement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleadditive_expression_complement = null;


        try {
            // InternalAnsic.g:7270:71: (iv_ruleadditive_expression_complement= ruleadditive_expression_complement EOF )
            // InternalAnsic.g:7271:2: iv_ruleadditive_expression_complement= ruleadditive_expression_complement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAdditive_expression_complementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleadditive_expression_complement=ruleadditive_expression_complement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleadditive_expression_complement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleadditive_expression_complement"


    // $ANTLR start "ruleadditive_expression_complement"
    // InternalAnsic.g:7277:1: ruleadditive_expression_complement returns [EObject current=null] : ( (otherlv_0= '+' ( (lv_multiplicative_expression_1_0= rulemultiplicative_expression ) ) ) | (otherlv_2= '-' ( (lv_multiplicative_expression_3_0= rulemultiplicative_expression ) ) ) ) ;
    public final EObject ruleadditive_expression_complement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_multiplicative_expression_1_0 = null;

        EObject lv_multiplicative_expression_3_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:7283:2: ( ( (otherlv_0= '+' ( (lv_multiplicative_expression_1_0= rulemultiplicative_expression ) ) ) | (otherlv_2= '-' ( (lv_multiplicative_expression_3_0= rulemultiplicative_expression ) ) ) ) )
            // InternalAnsic.g:7284:2: ( (otherlv_0= '+' ( (lv_multiplicative_expression_1_0= rulemultiplicative_expression ) ) ) | (otherlv_2= '-' ( (lv_multiplicative_expression_3_0= rulemultiplicative_expression ) ) ) )
            {
            // InternalAnsic.g:7284:2: ( (otherlv_0= '+' ( (lv_multiplicative_expression_1_0= rulemultiplicative_expression ) ) ) | (otherlv_2= '-' ( (lv_multiplicative_expression_3_0= rulemultiplicative_expression ) ) ) )
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==79) ) {
                alt54=1;
            }
            else if ( (LA54_0==80) ) {
                alt54=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 54, 0, input);

                throw nvae;
            }
            switch (alt54) {
                case 1 :
                    // InternalAnsic.g:7285:3: (otherlv_0= '+' ( (lv_multiplicative_expression_1_0= rulemultiplicative_expression ) ) )
                    {
                    // InternalAnsic.g:7285:3: (otherlv_0= '+' ( (lv_multiplicative_expression_1_0= rulemultiplicative_expression ) ) )
                    // InternalAnsic.g:7286:4: otherlv_0= '+' ( (lv_multiplicative_expression_1_0= rulemultiplicative_expression ) )
                    {
                    otherlv_0=(Token)match(input,79,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getAdditive_expression_complementAccess().getPlusSignKeyword_0_0());
                      			
                    }
                    // InternalAnsic.g:7290:4: ( (lv_multiplicative_expression_1_0= rulemultiplicative_expression ) )
                    // InternalAnsic.g:7291:5: (lv_multiplicative_expression_1_0= rulemultiplicative_expression )
                    {
                    // InternalAnsic.g:7291:5: (lv_multiplicative_expression_1_0= rulemultiplicative_expression )
                    // InternalAnsic.g:7292:6: lv_multiplicative_expression_1_0= rulemultiplicative_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAdditive_expression_complementAccess().getMultiplicative_expressionMultiplicative_expressionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_multiplicative_expression_1_0=rulemultiplicative_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAdditive_expression_complementRule());
                      						}
                      						set(
                      							current,
                      							"multiplicative_expression",
                      							lv_multiplicative_expression_1_0,
                      							"org.xtext.example.Ansic.multiplicative_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:7311:3: (otherlv_2= '-' ( (lv_multiplicative_expression_3_0= rulemultiplicative_expression ) ) )
                    {
                    // InternalAnsic.g:7311:3: (otherlv_2= '-' ( (lv_multiplicative_expression_3_0= rulemultiplicative_expression ) ) )
                    // InternalAnsic.g:7312:4: otherlv_2= '-' ( (lv_multiplicative_expression_3_0= rulemultiplicative_expression ) )
                    {
                    otherlv_2=(Token)match(input,80,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getAdditive_expression_complementAccess().getHyphenMinusKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:7316:4: ( (lv_multiplicative_expression_3_0= rulemultiplicative_expression ) )
                    // InternalAnsic.g:7317:5: (lv_multiplicative_expression_3_0= rulemultiplicative_expression )
                    {
                    // InternalAnsic.g:7317:5: (lv_multiplicative_expression_3_0= rulemultiplicative_expression )
                    // InternalAnsic.g:7318:6: lv_multiplicative_expression_3_0= rulemultiplicative_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAdditive_expression_complementAccess().getMultiplicative_expressionMultiplicative_expressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_multiplicative_expression_3_0=rulemultiplicative_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAdditive_expression_complementRule());
                      						}
                      						set(
                      							current,
                      							"multiplicative_expression",
                      							lv_multiplicative_expression_3_0,
                      							"org.xtext.example.Ansic.multiplicative_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleadditive_expression_complement"


    // $ANTLR start "entryRuleshift_expression"
    // InternalAnsic.g:7340:1: entryRuleshift_expression returns [EObject current=null] : iv_ruleshift_expression= ruleshift_expression EOF ;
    public final EObject entryRuleshift_expression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleshift_expression = null;


        try {
            // InternalAnsic.g:7340:57: (iv_ruleshift_expression= ruleshift_expression EOF )
            // InternalAnsic.g:7341:2: iv_ruleshift_expression= ruleshift_expression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShift_expressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleshift_expression=ruleshift_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleshift_expression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleshift_expression"


    // $ANTLR start "ruleshift_expression"
    // InternalAnsic.g:7347:1: ruleshift_expression returns [EObject current=null] : ( ( (lv_additive_expression_0_0= ruleadditive_expression ) ) ( (lv_shift_expression_linha_1_0= ruleshift_expression_linha ) ) ) ;
    public final EObject ruleshift_expression() throws RecognitionException {
        EObject current = null;

        EObject lv_additive_expression_0_0 = null;

        EObject lv_shift_expression_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:7353:2: ( ( ( (lv_additive_expression_0_0= ruleadditive_expression ) ) ( (lv_shift_expression_linha_1_0= ruleshift_expression_linha ) ) ) )
            // InternalAnsic.g:7354:2: ( ( (lv_additive_expression_0_0= ruleadditive_expression ) ) ( (lv_shift_expression_linha_1_0= ruleshift_expression_linha ) ) )
            {
            // InternalAnsic.g:7354:2: ( ( (lv_additive_expression_0_0= ruleadditive_expression ) ) ( (lv_shift_expression_linha_1_0= ruleshift_expression_linha ) ) )
            // InternalAnsic.g:7355:3: ( (lv_additive_expression_0_0= ruleadditive_expression ) ) ( (lv_shift_expression_linha_1_0= ruleshift_expression_linha ) )
            {
            // InternalAnsic.g:7355:3: ( (lv_additive_expression_0_0= ruleadditive_expression ) )
            // InternalAnsic.g:7356:4: (lv_additive_expression_0_0= ruleadditive_expression )
            {
            // InternalAnsic.g:7356:4: (lv_additive_expression_0_0= ruleadditive_expression )
            // InternalAnsic.g:7357:5: lv_additive_expression_0_0= ruleadditive_expression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getShift_expressionAccess().getAdditive_expressionAdditive_expressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_32);
            lv_additive_expression_0_0=ruleadditive_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getShift_expressionRule());
              					}
              					set(
              						current,
              						"additive_expression",
              						lv_additive_expression_0_0,
              						"org.xtext.example.Ansic.additive_expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:7374:3: ( (lv_shift_expression_linha_1_0= ruleshift_expression_linha ) )
            // InternalAnsic.g:7375:4: (lv_shift_expression_linha_1_0= ruleshift_expression_linha )
            {
            // InternalAnsic.g:7375:4: (lv_shift_expression_linha_1_0= ruleshift_expression_linha )
            // InternalAnsic.g:7376:5: lv_shift_expression_linha_1_0= ruleshift_expression_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getShift_expressionAccess().getShift_expression_linhaShift_expression_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_shift_expression_linha_1_0=ruleshift_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getShift_expressionRule());
              					}
              					set(
              						current,
              						"shift_expression_linha",
              						lv_shift_expression_linha_1_0,
              						"org.xtext.example.Ansic.shift_expression_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleshift_expression"


    // $ANTLR start "entryRuleshift_expression_linha"
    // InternalAnsic.g:7397:1: entryRuleshift_expression_linha returns [EObject current=null] : iv_ruleshift_expression_linha= ruleshift_expression_linha EOF ;
    public final EObject entryRuleshift_expression_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleshift_expression_linha = null;


        try {
            // InternalAnsic.g:7397:63: (iv_ruleshift_expression_linha= ruleshift_expression_linha EOF )
            // InternalAnsic.g:7398:2: iv_ruleshift_expression_linha= ruleshift_expression_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShift_expression_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleshift_expression_linha=ruleshift_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleshift_expression_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleshift_expression_linha"


    // $ANTLR start "ruleshift_expression_linha"
    // InternalAnsic.g:7404:1: ruleshift_expression_linha returns [EObject current=null] : ( () ( ( (lv_shift_expression_complement_1_0= ruleshift_expression_complement ) ) ( (lv_shift_expression_linha_2_0= ruleshift_expression_linha ) ) )? ) ;
    public final EObject ruleshift_expression_linha() throws RecognitionException {
        EObject current = null;

        EObject lv_shift_expression_complement_1_0 = null;

        EObject lv_shift_expression_linha_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:7410:2: ( ( () ( ( (lv_shift_expression_complement_1_0= ruleshift_expression_complement ) ) ( (lv_shift_expression_linha_2_0= ruleshift_expression_linha ) ) )? ) )
            // InternalAnsic.g:7411:2: ( () ( ( (lv_shift_expression_complement_1_0= ruleshift_expression_complement ) ) ( (lv_shift_expression_linha_2_0= ruleshift_expression_linha ) ) )? )
            {
            // InternalAnsic.g:7411:2: ( () ( ( (lv_shift_expression_complement_1_0= ruleshift_expression_complement ) ) ( (lv_shift_expression_linha_2_0= ruleshift_expression_linha ) ) )? )
            // InternalAnsic.g:7412:3: () ( ( (lv_shift_expression_complement_1_0= ruleshift_expression_complement ) ) ( (lv_shift_expression_linha_2_0= ruleshift_expression_linha ) ) )?
            {
            // InternalAnsic.g:7412:3: ()
            // InternalAnsic.g:7413:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getShift_expression_linhaAccess().getShiftExpressionLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:7422:3: ( ( (lv_shift_expression_complement_1_0= ruleshift_expression_complement ) ) ( (lv_shift_expression_linha_2_0= ruleshift_expression_linha ) ) )?
            int alt55=2;
            alt55 = dfa55.predict(input);
            switch (alt55) {
                case 1 :
                    // InternalAnsic.g:7423:4: ( (lv_shift_expression_complement_1_0= ruleshift_expression_complement ) ) ( (lv_shift_expression_linha_2_0= ruleshift_expression_linha ) )
                    {
                    // InternalAnsic.g:7423:4: ( (lv_shift_expression_complement_1_0= ruleshift_expression_complement ) )
                    // InternalAnsic.g:7424:5: (lv_shift_expression_complement_1_0= ruleshift_expression_complement )
                    {
                    // InternalAnsic.g:7424:5: (lv_shift_expression_complement_1_0= ruleshift_expression_complement )
                    // InternalAnsic.g:7425:6: lv_shift_expression_complement_1_0= ruleshift_expression_complement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getShift_expression_linhaAccess().getShift_expression_complementShift_expression_complementParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_32);
                    lv_shift_expression_complement_1_0=ruleshift_expression_complement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getShift_expression_linhaRule());
                      						}
                      						set(
                      							current,
                      							"shift_expression_complement",
                      							lv_shift_expression_complement_1_0,
                      							"org.xtext.example.Ansic.shift_expression_complement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:7442:4: ( (lv_shift_expression_linha_2_0= ruleshift_expression_linha ) )
                    // InternalAnsic.g:7443:5: (lv_shift_expression_linha_2_0= ruleshift_expression_linha )
                    {
                    // InternalAnsic.g:7443:5: (lv_shift_expression_linha_2_0= ruleshift_expression_linha )
                    // InternalAnsic.g:7444:6: lv_shift_expression_linha_2_0= ruleshift_expression_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getShift_expression_linhaAccess().getShift_expression_linhaShift_expression_linhaParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_shift_expression_linha_2_0=ruleshift_expression_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getShift_expression_linhaRule());
                      						}
                      						set(
                      							current,
                      							"shift_expression_linha",
                      							lv_shift_expression_linha_2_0,
                      							"org.xtext.example.Ansic.shift_expression_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleshift_expression_linha"


    // $ANTLR start "entryRuleshift_expression_complement"
    // InternalAnsic.g:7466:1: entryRuleshift_expression_complement returns [EObject current=null] : iv_ruleshift_expression_complement= ruleshift_expression_complement EOF ;
    public final EObject entryRuleshift_expression_complement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleshift_expression_complement = null;


        try {
            // InternalAnsic.g:7466:68: (iv_ruleshift_expression_complement= ruleshift_expression_complement EOF )
            // InternalAnsic.g:7467:2: iv_ruleshift_expression_complement= ruleshift_expression_complement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShift_expression_complementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleshift_expression_complement=ruleshift_expression_complement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleshift_expression_complement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleshift_expression_complement"


    // $ANTLR start "ruleshift_expression_complement"
    // InternalAnsic.g:7473:1: ruleshift_expression_complement returns [EObject current=null] : ( (otherlv_0= '<<' ( (lv_additive_expression_1_0= ruleadditive_expression ) ) ) | (otherlv_2= '>>' ( (lv_additive_expression_3_0= ruleadditive_expression ) ) ) ) ;
    public final EObject ruleshift_expression_complement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_additive_expression_1_0 = null;

        EObject lv_additive_expression_3_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:7479:2: ( ( (otherlv_0= '<<' ( (lv_additive_expression_1_0= ruleadditive_expression ) ) ) | (otherlv_2= '>>' ( (lv_additive_expression_3_0= ruleadditive_expression ) ) ) ) )
            // InternalAnsic.g:7480:2: ( (otherlv_0= '<<' ( (lv_additive_expression_1_0= ruleadditive_expression ) ) ) | (otherlv_2= '>>' ( (lv_additive_expression_3_0= ruleadditive_expression ) ) ) )
            {
            // InternalAnsic.g:7480:2: ( (otherlv_0= '<<' ( (lv_additive_expression_1_0= ruleadditive_expression ) ) ) | (otherlv_2= '>>' ( (lv_additive_expression_3_0= ruleadditive_expression ) ) ) )
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==81) ) {
                alt56=1;
            }
            else if ( (LA56_0==82) ) {
                alt56=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;
            }
            switch (alt56) {
                case 1 :
                    // InternalAnsic.g:7481:3: (otherlv_0= '<<' ( (lv_additive_expression_1_0= ruleadditive_expression ) ) )
                    {
                    // InternalAnsic.g:7481:3: (otherlv_0= '<<' ( (lv_additive_expression_1_0= ruleadditive_expression ) ) )
                    // InternalAnsic.g:7482:4: otherlv_0= '<<' ( (lv_additive_expression_1_0= ruleadditive_expression ) )
                    {
                    otherlv_0=(Token)match(input,81,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getShift_expression_complementAccess().getLessThanSignLessThanSignKeyword_0_0());
                      			
                    }
                    // InternalAnsic.g:7486:4: ( (lv_additive_expression_1_0= ruleadditive_expression ) )
                    // InternalAnsic.g:7487:5: (lv_additive_expression_1_0= ruleadditive_expression )
                    {
                    // InternalAnsic.g:7487:5: (lv_additive_expression_1_0= ruleadditive_expression )
                    // InternalAnsic.g:7488:6: lv_additive_expression_1_0= ruleadditive_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getShift_expression_complementAccess().getAdditive_expressionAdditive_expressionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_additive_expression_1_0=ruleadditive_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getShift_expression_complementRule());
                      						}
                      						set(
                      							current,
                      							"additive_expression",
                      							lv_additive_expression_1_0,
                      							"org.xtext.example.Ansic.additive_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:7507:3: (otherlv_2= '>>' ( (lv_additive_expression_3_0= ruleadditive_expression ) ) )
                    {
                    // InternalAnsic.g:7507:3: (otherlv_2= '>>' ( (lv_additive_expression_3_0= ruleadditive_expression ) ) )
                    // InternalAnsic.g:7508:4: otherlv_2= '>>' ( (lv_additive_expression_3_0= ruleadditive_expression ) )
                    {
                    otherlv_2=(Token)match(input,82,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getShift_expression_complementAccess().getGreaterThanSignGreaterThanSignKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:7512:4: ( (lv_additive_expression_3_0= ruleadditive_expression ) )
                    // InternalAnsic.g:7513:5: (lv_additive_expression_3_0= ruleadditive_expression )
                    {
                    // InternalAnsic.g:7513:5: (lv_additive_expression_3_0= ruleadditive_expression )
                    // InternalAnsic.g:7514:6: lv_additive_expression_3_0= ruleadditive_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getShift_expression_complementAccess().getAdditive_expressionAdditive_expressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_additive_expression_3_0=ruleadditive_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getShift_expression_complementRule());
                      						}
                      						set(
                      							current,
                      							"additive_expression",
                      							lv_additive_expression_3_0,
                      							"org.xtext.example.Ansic.additive_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleshift_expression_complement"


    // $ANTLR start "entryRulerelational_expression"
    // InternalAnsic.g:7536:1: entryRulerelational_expression returns [EObject current=null] : iv_rulerelational_expression= rulerelational_expression EOF ;
    public final EObject entryRulerelational_expression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulerelational_expression = null;


        try {
            // InternalAnsic.g:7536:62: (iv_rulerelational_expression= rulerelational_expression EOF )
            // InternalAnsic.g:7537:2: iv_rulerelational_expression= rulerelational_expression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRelational_expressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerelational_expression=rulerelational_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerelational_expression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerelational_expression"


    // $ANTLR start "rulerelational_expression"
    // InternalAnsic.g:7543:1: rulerelational_expression returns [EObject current=null] : ( ( (lv_shift_expression_0_0= ruleshift_expression ) ) ( (lv_relational_expression_linha_1_0= rulerelational_expression_linha ) ) ) ;
    public final EObject rulerelational_expression() throws RecognitionException {
        EObject current = null;

        EObject lv_shift_expression_0_0 = null;

        EObject lv_relational_expression_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:7549:2: ( ( ( (lv_shift_expression_0_0= ruleshift_expression ) ) ( (lv_relational_expression_linha_1_0= rulerelational_expression_linha ) ) ) )
            // InternalAnsic.g:7550:2: ( ( (lv_shift_expression_0_0= ruleshift_expression ) ) ( (lv_relational_expression_linha_1_0= rulerelational_expression_linha ) ) )
            {
            // InternalAnsic.g:7550:2: ( ( (lv_shift_expression_0_0= ruleshift_expression ) ) ( (lv_relational_expression_linha_1_0= rulerelational_expression_linha ) ) )
            // InternalAnsic.g:7551:3: ( (lv_shift_expression_0_0= ruleshift_expression ) ) ( (lv_relational_expression_linha_1_0= rulerelational_expression_linha ) )
            {
            // InternalAnsic.g:7551:3: ( (lv_shift_expression_0_0= ruleshift_expression ) )
            // InternalAnsic.g:7552:4: (lv_shift_expression_0_0= ruleshift_expression )
            {
            // InternalAnsic.g:7552:4: (lv_shift_expression_0_0= ruleshift_expression )
            // InternalAnsic.g:7553:5: lv_shift_expression_0_0= ruleshift_expression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRelational_expressionAccess().getShift_expressionShift_expressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_32);
            lv_shift_expression_0_0=ruleshift_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRelational_expressionRule());
              					}
              					set(
              						current,
              						"shift_expression",
              						lv_shift_expression_0_0,
              						"org.xtext.example.Ansic.shift_expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:7570:3: ( (lv_relational_expression_linha_1_0= rulerelational_expression_linha ) )
            // InternalAnsic.g:7571:4: (lv_relational_expression_linha_1_0= rulerelational_expression_linha )
            {
            // InternalAnsic.g:7571:4: (lv_relational_expression_linha_1_0= rulerelational_expression_linha )
            // InternalAnsic.g:7572:5: lv_relational_expression_linha_1_0= rulerelational_expression_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRelational_expressionAccess().getRelational_expression_linhaRelational_expression_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_relational_expression_linha_1_0=rulerelational_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRelational_expressionRule());
              					}
              					set(
              						current,
              						"relational_expression_linha",
              						lv_relational_expression_linha_1_0,
              						"org.xtext.example.Ansic.relational_expression_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerelational_expression"


    // $ANTLR start "entryRulerelational_expression_linha"
    // InternalAnsic.g:7593:1: entryRulerelational_expression_linha returns [EObject current=null] : iv_rulerelational_expression_linha= rulerelational_expression_linha EOF ;
    public final EObject entryRulerelational_expression_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_rulerelational_expression_linha = null;


        try {
            // InternalAnsic.g:7593:68: (iv_rulerelational_expression_linha= rulerelational_expression_linha EOF )
            // InternalAnsic.g:7594:2: iv_rulerelational_expression_linha= rulerelational_expression_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRelational_expression_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerelational_expression_linha=rulerelational_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerelational_expression_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerelational_expression_linha"


    // $ANTLR start "rulerelational_expression_linha"
    // InternalAnsic.g:7600:1: rulerelational_expression_linha returns [EObject current=null] : ( () ( ( (lv_shift_expression_complement_1_0= ruleshift_expression_complement ) ) ( (lv_relational_expression_linha_2_0= rulerelational_expression_linha ) ) )? ) ;
    public final EObject rulerelational_expression_linha() throws RecognitionException {
        EObject current = null;

        EObject lv_shift_expression_complement_1_0 = null;

        EObject lv_relational_expression_linha_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:7606:2: ( ( () ( ( (lv_shift_expression_complement_1_0= ruleshift_expression_complement ) ) ( (lv_relational_expression_linha_2_0= rulerelational_expression_linha ) ) )? ) )
            // InternalAnsic.g:7607:2: ( () ( ( (lv_shift_expression_complement_1_0= ruleshift_expression_complement ) ) ( (lv_relational_expression_linha_2_0= rulerelational_expression_linha ) ) )? )
            {
            // InternalAnsic.g:7607:2: ( () ( ( (lv_shift_expression_complement_1_0= ruleshift_expression_complement ) ) ( (lv_relational_expression_linha_2_0= rulerelational_expression_linha ) ) )? )
            // InternalAnsic.g:7608:3: () ( ( (lv_shift_expression_complement_1_0= ruleshift_expression_complement ) ) ( (lv_relational_expression_linha_2_0= rulerelational_expression_linha ) ) )?
            {
            // InternalAnsic.g:7608:3: ()
            // InternalAnsic.g:7609:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRelational_expression_linhaAccess().getRelationalExpressionLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:7618:3: ( ( (lv_shift_expression_complement_1_0= ruleshift_expression_complement ) ) ( (lv_relational_expression_linha_2_0= rulerelational_expression_linha ) ) )?
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( ((LA57_0>=81 && LA57_0<=82)) ) {
                alt57=1;
            }
            switch (alt57) {
                case 1 :
                    // InternalAnsic.g:7619:4: ( (lv_shift_expression_complement_1_0= ruleshift_expression_complement ) ) ( (lv_relational_expression_linha_2_0= rulerelational_expression_linha ) )
                    {
                    // InternalAnsic.g:7619:4: ( (lv_shift_expression_complement_1_0= ruleshift_expression_complement ) )
                    // InternalAnsic.g:7620:5: (lv_shift_expression_complement_1_0= ruleshift_expression_complement )
                    {
                    // InternalAnsic.g:7620:5: (lv_shift_expression_complement_1_0= ruleshift_expression_complement )
                    // InternalAnsic.g:7621:6: lv_shift_expression_complement_1_0= ruleshift_expression_complement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRelational_expression_linhaAccess().getShift_expression_complementShift_expression_complementParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_32);
                    lv_shift_expression_complement_1_0=ruleshift_expression_complement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRelational_expression_linhaRule());
                      						}
                      						set(
                      							current,
                      							"shift_expression_complement",
                      							lv_shift_expression_complement_1_0,
                      							"org.xtext.example.Ansic.shift_expression_complement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:7638:4: ( (lv_relational_expression_linha_2_0= rulerelational_expression_linha ) )
                    // InternalAnsic.g:7639:5: (lv_relational_expression_linha_2_0= rulerelational_expression_linha )
                    {
                    // InternalAnsic.g:7639:5: (lv_relational_expression_linha_2_0= rulerelational_expression_linha )
                    // InternalAnsic.g:7640:6: lv_relational_expression_linha_2_0= rulerelational_expression_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRelational_expression_linhaAccess().getRelational_expression_linhaRelational_expression_linhaParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_relational_expression_linha_2_0=rulerelational_expression_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRelational_expression_linhaRule());
                      						}
                      						set(
                      							current,
                      							"relational_expression_linha",
                      							lv_relational_expression_linha_2_0,
                      							"org.xtext.example.Ansic.relational_expression_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerelational_expression_linha"


    // $ANTLR start "entryRuleequality_expression"
    // InternalAnsic.g:7662:1: entryRuleequality_expression returns [EObject current=null] : iv_ruleequality_expression= ruleequality_expression EOF ;
    public final EObject entryRuleequality_expression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleequality_expression = null;


        try {
            // InternalAnsic.g:7662:60: (iv_ruleequality_expression= ruleequality_expression EOF )
            // InternalAnsic.g:7663:2: iv_ruleequality_expression= ruleequality_expression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEquality_expressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleequality_expression=ruleequality_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleequality_expression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleequality_expression"


    // $ANTLR start "ruleequality_expression"
    // InternalAnsic.g:7669:1: ruleequality_expression returns [EObject current=null] : ( ( (lv_relational_expression_0_0= rulerelational_expression ) ) ( (lv_equality_expression_linha_1_0= ruleequality_expression_linha ) ) ) ;
    public final EObject ruleequality_expression() throws RecognitionException {
        EObject current = null;

        EObject lv_relational_expression_0_0 = null;

        EObject lv_equality_expression_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:7675:2: ( ( ( (lv_relational_expression_0_0= rulerelational_expression ) ) ( (lv_equality_expression_linha_1_0= ruleequality_expression_linha ) ) ) )
            // InternalAnsic.g:7676:2: ( ( (lv_relational_expression_0_0= rulerelational_expression ) ) ( (lv_equality_expression_linha_1_0= ruleequality_expression_linha ) ) )
            {
            // InternalAnsic.g:7676:2: ( ( (lv_relational_expression_0_0= rulerelational_expression ) ) ( (lv_equality_expression_linha_1_0= ruleequality_expression_linha ) ) )
            // InternalAnsic.g:7677:3: ( (lv_relational_expression_0_0= rulerelational_expression ) ) ( (lv_equality_expression_linha_1_0= ruleequality_expression_linha ) )
            {
            // InternalAnsic.g:7677:3: ( (lv_relational_expression_0_0= rulerelational_expression ) )
            // InternalAnsic.g:7678:4: (lv_relational_expression_0_0= rulerelational_expression )
            {
            // InternalAnsic.g:7678:4: (lv_relational_expression_0_0= rulerelational_expression )
            // InternalAnsic.g:7679:5: lv_relational_expression_0_0= rulerelational_expression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEquality_expressionAccess().getRelational_expressionRelational_expressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_33);
            lv_relational_expression_0_0=rulerelational_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEquality_expressionRule());
              					}
              					set(
              						current,
              						"relational_expression",
              						lv_relational_expression_0_0,
              						"org.xtext.example.Ansic.relational_expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:7696:3: ( (lv_equality_expression_linha_1_0= ruleequality_expression_linha ) )
            // InternalAnsic.g:7697:4: (lv_equality_expression_linha_1_0= ruleequality_expression_linha )
            {
            // InternalAnsic.g:7697:4: (lv_equality_expression_linha_1_0= ruleequality_expression_linha )
            // InternalAnsic.g:7698:5: lv_equality_expression_linha_1_0= ruleequality_expression_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEquality_expressionAccess().getEquality_expression_linhaEquality_expression_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_equality_expression_linha_1_0=ruleequality_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEquality_expressionRule());
              					}
              					set(
              						current,
              						"equality_expression_linha",
              						lv_equality_expression_linha_1_0,
              						"org.xtext.example.Ansic.equality_expression_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleequality_expression"


    // $ANTLR start "entryRuleequality_expression_linha"
    // InternalAnsic.g:7719:1: entryRuleequality_expression_linha returns [EObject current=null] : iv_ruleequality_expression_linha= ruleequality_expression_linha EOF ;
    public final EObject entryRuleequality_expression_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleequality_expression_linha = null;


        try {
            // InternalAnsic.g:7719:66: (iv_ruleequality_expression_linha= ruleequality_expression_linha EOF )
            // InternalAnsic.g:7720:2: iv_ruleequality_expression_linha= ruleequality_expression_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEquality_expression_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleequality_expression_linha=ruleequality_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleequality_expression_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleequality_expression_linha"


    // $ANTLR start "ruleequality_expression_linha"
    // InternalAnsic.g:7726:1: ruleequality_expression_linha returns [EObject current=null] : ( () ( ( (lv_equality_expression_complement_1_0= ruleequality_expression_complement ) ) ( (lv_equality_expression_linha_2_0= ruleequality_expression_linha ) ) )? ) ;
    public final EObject ruleequality_expression_linha() throws RecognitionException {
        EObject current = null;

        EObject lv_equality_expression_complement_1_0 = null;

        EObject lv_equality_expression_linha_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:7732:2: ( ( () ( ( (lv_equality_expression_complement_1_0= ruleequality_expression_complement ) ) ( (lv_equality_expression_linha_2_0= ruleequality_expression_linha ) ) )? ) )
            // InternalAnsic.g:7733:2: ( () ( ( (lv_equality_expression_complement_1_0= ruleequality_expression_complement ) ) ( (lv_equality_expression_linha_2_0= ruleequality_expression_linha ) ) )? )
            {
            // InternalAnsic.g:7733:2: ( () ( ( (lv_equality_expression_complement_1_0= ruleequality_expression_complement ) ) ( (lv_equality_expression_linha_2_0= ruleequality_expression_linha ) ) )? )
            // InternalAnsic.g:7734:3: () ( ( (lv_equality_expression_complement_1_0= ruleequality_expression_complement ) ) ( (lv_equality_expression_linha_2_0= ruleequality_expression_linha ) ) )?
            {
            // InternalAnsic.g:7734:3: ()
            // InternalAnsic.g:7735:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getEquality_expression_linhaAccess().getEqualityExpressionLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:7744:3: ( ( (lv_equality_expression_complement_1_0= ruleequality_expression_complement ) ) ( (lv_equality_expression_linha_2_0= ruleequality_expression_linha ) ) )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( ((LA58_0>=83 && LA58_0<=84)) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // InternalAnsic.g:7745:4: ( (lv_equality_expression_complement_1_0= ruleequality_expression_complement ) ) ( (lv_equality_expression_linha_2_0= ruleequality_expression_linha ) )
                    {
                    // InternalAnsic.g:7745:4: ( (lv_equality_expression_complement_1_0= ruleequality_expression_complement ) )
                    // InternalAnsic.g:7746:5: (lv_equality_expression_complement_1_0= ruleequality_expression_complement )
                    {
                    // InternalAnsic.g:7746:5: (lv_equality_expression_complement_1_0= ruleequality_expression_complement )
                    // InternalAnsic.g:7747:6: lv_equality_expression_complement_1_0= ruleequality_expression_complement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEquality_expression_linhaAccess().getEquality_expression_complementEquality_expression_complementParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_33);
                    lv_equality_expression_complement_1_0=ruleequality_expression_complement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEquality_expression_linhaRule());
                      						}
                      						set(
                      							current,
                      							"equality_expression_complement",
                      							lv_equality_expression_complement_1_0,
                      							"org.xtext.example.Ansic.equality_expression_complement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:7764:4: ( (lv_equality_expression_linha_2_0= ruleequality_expression_linha ) )
                    // InternalAnsic.g:7765:5: (lv_equality_expression_linha_2_0= ruleequality_expression_linha )
                    {
                    // InternalAnsic.g:7765:5: (lv_equality_expression_linha_2_0= ruleequality_expression_linha )
                    // InternalAnsic.g:7766:6: lv_equality_expression_linha_2_0= ruleequality_expression_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEquality_expression_linhaAccess().getEquality_expression_linhaEquality_expression_linhaParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_equality_expression_linha_2_0=ruleequality_expression_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEquality_expression_linhaRule());
                      						}
                      						set(
                      							current,
                      							"equality_expression_linha",
                      							lv_equality_expression_linha_2_0,
                      							"org.xtext.example.Ansic.equality_expression_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleequality_expression_linha"


    // $ANTLR start "entryRuleequality_expression_complement"
    // InternalAnsic.g:7788:1: entryRuleequality_expression_complement returns [EObject current=null] : iv_ruleequality_expression_complement= ruleequality_expression_complement EOF ;
    public final EObject entryRuleequality_expression_complement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleequality_expression_complement = null;


        try {
            // InternalAnsic.g:7788:71: (iv_ruleequality_expression_complement= ruleequality_expression_complement EOF )
            // InternalAnsic.g:7789:2: iv_ruleequality_expression_complement= ruleequality_expression_complement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEquality_expression_complementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleequality_expression_complement=ruleequality_expression_complement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleequality_expression_complement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleequality_expression_complement"


    // $ANTLR start "ruleequality_expression_complement"
    // InternalAnsic.g:7795:1: ruleequality_expression_complement returns [EObject current=null] : ( (otherlv_0= '==' ( (lv_relational_expression_1_0= rulerelational_expression ) ) ) | (otherlv_2= '!=' ( (lv_relational_expression_3_0= rulerelational_expression ) ) ) ) ;
    public final EObject ruleequality_expression_complement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_relational_expression_1_0 = null;

        EObject lv_relational_expression_3_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:7801:2: ( ( (otherlv_0= '==' ( (lv_relational_expression_1_0= rulerelational_expression ) ) ) | (otherlv_2= '!=' ( (lv_relational_expression_3_0= rulerelational_expression ) ) ) ) )
            // InternalAnsic.g:7802:2: ( (otherlv_0= '==' ( (lv_relational_expression_1_0= rulerelational_expression ) ) ) | (otherlv_2= '!=' ( (lv_relational_expression_3_0= rulerelational_expression ) ) ) )
            {
            // InternalAnsic.g:7802:2: ( (otherlv_0= '==' ( (lv_relational_expression_1_0= rulerelational_expression ) ) ) | (otherlv_2= '!=' ( (lv_relational_expression_3_0= rulerelational_expression ) ) ) )
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==83) ) {
                alt59=1;
            }
            else if ( (LA59_0==84) ) {
                alt59=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 59, 0, input);

                throw nvae;
            }
            switch (alt59) {
                case 1 :
                    // InternalAnsic.g:7803:3: (otherlv_0= '==' ( (lv_relational_expression_1_0= rulerelational_expression ) ) )
                    {
                    // InternalAnsic.g:7803:3: (otherlv_0= '==' ( (lv_relational_expression_1_0= rulerelational_expression ) ) )
                    // InternalAnsic.g:7804:4: otherlv_0= '==' ( (lv_relational_expression_1_0= rulerelational_expression ) )
                    {
                    otherlv_0=(Token)match(input,83,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getEquality_expression_complementAccess().getEqualsSignEqualsSignKeyword_0_0());
                      			
                    }
                    // InternalAnsic.g:7808:4: ( (lv_relational_expression_1_0= rulerelational_expression ) )
                    // InternalAnsic.g:7809:5: (lv_relational_expression_1_0= rulerelational_expression )
                    {
                    // InternalAnsic.g:7809:5: (lv_relational_expression_1_0= rulerelational_expression )
                    // InternalAnsic.g:7810:6: lv_relational_expression_1_0= rulerelational_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEquality_expression_complementAccess().getRelational_expressionRelational_expressionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_relational_expression_1_0=rulerelational_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEquality_expression_complementRule());
                      						}
                      						set(
                      							current,
                      							"relational_expression",
                      							lv_relational_expression_1_0,
                      							"org.xtext.example.Ansic.relational_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:7829:3: (otherlv_2= '!=' ( (lv_relational_expression_3_0= rulerelational_expression ) ) )
                    {
                    // InternalAnsic.g:7829:3: (otherlv_2= '!=' ( (lv_relational_expression_3_0= rulerelational_expression ) ) )
                    // InternalAnsic.g:7830:4: otherlv_2= '!=' ( (lv_relational_expression_3_0= rulerelational_expression ) )
                    {
                    otherlv_2=(Token)match(input,84,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getEquality_expression_complementAccess().getExclamationMarkEqualsSignKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:7834:4: ( (lv_relational_expression_3_0= rulerelational_expression ) )
                    // InternalAnsic.g:7835:5: (lv_relational_expression_3_0= rulerelational_expression )
                    {
                    // InternalAnsic.g:7835:5: (lv_relational_expression_3_0= rulerelational_expression )
                    // InternalAnsic.g:7836:6: lv_relational_expression_3_0= rulerelational_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEquality_expression_complementAccess().getRelational_expressionRelational_expressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_relational_expression_3_0=rulerelational_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEquality_expression_complementRule());
                      						}
                      						set(
                      							current,
                      							"relational_expression",
                      							lv_relational_expression_3_0,
                      							"org.xtext.example.Ansic.relational_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleequality_expression_complement"


    // $ANTLR start "entryRulestatement"
    // InternalAnsic.g:7858:1: entryRulestatement returns [EObject current=null] : iv_rulestatement= rulestatement EOF ;
    public final EObject entryRulestatement() throws RecognitionException {
        EObject current = null;

        EObject iv_rulestatement = null;


        try {
            // InternalAnsic.g:7858:50: (iv_rulestatement= rulestatement EOF )
            // InternalAnsic.g:7859:2: iv_rulestatement= rulestatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulestatement=rulestatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulestatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulestatement"


    // $ANTLR start "rulestatement"
    // InternalAnsic.g:7865:1: rulestatement returns [EObject current=null] : (this_labeled_statement_0= rulelabeled_statement | this_compound_statement_1= rulecompound_statement | this_expression_statement_2= ruleexpression_statement | this_selection_statement_3= ruleselection_statement | this_iteration_statement_4= ruleiteration_statement | this_jump_statement_5= rulejump_statement ) ;
    public final EObject rulestatement() throws RecognitionException {
        EObject current = null;

        EObject this_labeled_statement_0 = null;

        EObject this_compound_statement_1 = null;

        EObject this_expression_statement_2 = null;

        EObject this_selection_statement_3 = null;

        EObject this_iteration_statement_4 = null;

        EObject this_jump_statement_5 = null;



        	enterRule();

        try {
            // InternalAnsic.g:7871:2: ( (this_labeled_statement_0= rulelabeled_statement | this_compound_statement_1= rulecompound_statement | this_expression_statement_2= ruleexpression_statement | this_selection_statement_3= ruleselection_statement | this_iteration_statement_4= ruleiteration_statement | this_jump_statement_5= rulejump_statement ) )
            // InternalAnsic.g:7872:2: (this_labeled_statement_0= rulelabeled_statement | this_compound_statement_1= rulecompound_statement | this_expression_statement_2= ruleexpression_statement | this_selection_statement_3= ruleselection_statement | this_iteration_statement_4= ruleiteration_statement | this_jump_statement_5= rulejump_statement )
            {
            // InternalAnsic.g:7872:2: (this_labeled_statement_0= rulelabeled_statement | this_compound_statement_1= rulecompound_statement | this_expression_statement_2= ruleexpression_statement | this_selection_statement_3= ruleselection_statement | this_iteration_statement_4= ruleiteration_statement | this_jump_statement_5= rulejump_statement )
            int alt60=6;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA60_1 = input.LA(2);

                if ( (LA60_1==58) ) {
                    alt60=1;
                }
                else if ( (LA60_1==31||(LA60_1>=53 && LA60_1<=54)||LA60_1==57||(LA60_1>=64 && LA60_1<=65)||LA60_1==70||(LA60_1>=72 && LA60_1<=74)||(LA60_1>=77 && LA60_1<=84)||(LA60_1>=96 && LA60_1<=111)) ) {
                    alt60=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 60, 1, input);

                    throw nvae;
                }
                }
                break;
            case 69:
            case 95:
                {
                alt60=1;
                }
                break;
            case 51:
                {
                alt60=2;
                }
                break;
            case RULE_STRING_LITERAL:
            case RULE_I_CONSTANT:
            case RULE_F_CONSTANT:
            case 31:
            case 50:
            case 57:
            case 64:
            case 68:
            case 73:
            case 74:
            case 75:
            case 76:
            case 79:
            case 80:
            case 96:
            case 112:
            case 113:
            case 114:
                {
                alt60=3;
                }
                break;
            case 92:
            case 94:
                {
                alt60=4;
                }
                break;
            case 89:
            case 90:
            case 91:
                {
                alt60=5;
                }
                break;
            case 85:
            case 86:
            case 87:
            case 88:
                {
                alt60=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 60, 0, input);

                throw nvae;
            }

            switch (alt60) {
                case 1 :
                    // InternalAnsic.g:7873:3: this_labeled_statement_0= rulelabeled_statement
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getLabeled_statementParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_labeled_statement_0=rulelabeled_statement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_labeled_statement_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsic.g:7885:3: this_compound_statement_1= rulecompound_statement
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getCompound_statementParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_compound_statement_1=rulecompound_statement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_compound_statement_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAnsic.g:7897:3: this_expression_statement_2= ruleexpression_statement
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getExpression_statementParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_expression_statement_2=ruleexpression_statement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_expression_statement_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAnsic.g:7909:3: this_selection_statement_3= ruleselection_statement
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getSelection_statementParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_selection_statement_3=ruleselection_statement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_selection_statement_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalAnsic.g:7921:3: this_iteration_statement_4= ruleiteration_statement
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getIteration_statementParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_iteration_statement_4=ruleiteration_statement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_iteration_statement_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalAnsic.g:7933:3: this_jump_statement_5= rulejump_statement
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getJump_statementParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_jump_statement_5=rulejump_statement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_jump_statement_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulestatement"


    // $ANTLR start "entryRulejump_statement"
    // InternalAnsic.g:7948:1: entryRulejump_statement returns [EObject current=null] : iv_rulejump_statement= rulejump_statement EOF ;
    public final EObject entryRulejump_statement() throws RecognitionException {
        EObject current = null;

        EObject iv_rulejump_statement = null;


        try {
            // InternalAnsic.g:7948:55: (iv_rulejump_statement= rulejump_statement EOF )
            // InternalAnsic.g:7949:2: iv_rulejump_statement= rulejump_statement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJump_statementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulejump_statement=rulejump_statement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulejump_statement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulejump_statement"


    // $ANTLR start "rulejump_statement"
    // InternalAnsic.g:7955:1: rulejump_statement returns [EObject current=null] : ( (otherlv_0= 'goto' ( (lv_identifier_1_0= RULE_ID ) ) otherlv_2= ';' ) | (otherlv_3= 'continue' otherlv_4= ';' ) | (otherlv_5= 'break' otherlv_6= ';' ) | (otherlv_7= 'return' otherlv_8= ';' ) | (otherlv_9= 'return' ( (lv_expression_10_0= ruleexpression ) ) otherlv_11= ';' ) ) ;
    public final EObject rulejump_statement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_identifier_1_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        EObject lv_expression_10_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:7961:2: ( ( (otherlv_0= 'goto' ( (lv_identifier_1_0= RULE_ID ) ) otherlv_2= ';' ) | (otherlv_3= 'continue' otherlv_4= ';' ) | (otherlv_5= 'break' otherlv_6= ';' ) | (otherlv_7= 'return' otherlv_8= ';' ) | (otherlv_9= 'return' ( (lv_expression_10_0= ruleexpression ) ) otherlv_11= ';' ) ) )
            // InternalAnsic.g:7962:2: ( (otherlv_0= 'goto' ( (lv_identifier_1_0= RULE_ID ) ) otherlv_2= ';' ) | (otherlv_3= 'continue' otherlv_4= ';' ) | (otherlv_5= 'break' otherlv_6= ';' ) | (otherlv_7= 'return' otherlv_8= ';' ) | (otherlv_9= 'return' ( (lv_expression_10_0= ruleexpression ) ) otherlv_11= ';' ) )
            {
            // InternalAnsic.g:7962:2: ( (otherlv_0= 'goto' ( (lv_identifier_1_0= RULE_ID ) ) otherlv_2= ';' ) | (otherlv_3= 'continue' otherlv_4= ';' ) | (otherlv_5= 'break' otherlv_6= ';' ) | (otherlv_7= 'return' otherlv_8= ';' ) | (otherlv_9= 'return' ( (lv_expression_10_0= ruleexpression ) ) otherlv_11= ';' ) )
            int alt61=5;
            switch ( input.LA(1) ) {
            case 85:
                {
                alt61=1;
                }
                break;
            case 86:
                {
                alt61=2;
                }
                break;
            case 87:
                {
                alt61=3;
                }
                break;
            case 88:
                {
                int LA61_4 = input.LA(2);

                if ( ((LA61_4>=RULE_ID && LA61_4<=RULE_F_CONSTANT)||LA61_4==31||LA61_4==50||LA61_4==64||LA61_4==68||(LA61_4>=73 && LA61_4<=76)||(LA61_4>=79 && LA61_4<=80)||LA61_4==96||(LA61_4>=112 && LA61_4<=114)) ) {
                    alt61=5;
                }
                else if ( (LA61_4==57) ) {
                    alt61=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 4, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 61, 0, input);

                throw nvae;
            }

            switch (alt61) {
                case 1 :
                    // InternalAnsic.g:7963:3: (otherlv_0= 'goto' ( (lv_identifier_1_0= RULE_ID ) ) otherlv_2= ';' )
                    {
                    // InternalAnsic.g:7963:3: (otherlv_0= 'goto' ( (lv_identifier_1_0= RULE_ID ) ) otherlv_2= ';' )
                    // InternalAnsic.g:7964:4: otherlv_0= 'goto' ( (lv_identifier_1_0= RULE_ID ) ) otherlv_2= ';'
                    {
                    otherlv_0=(Token)match(input,85,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getJump_statementAccess().getGotoKeyword_0_0());
                      			
                    }
                    // InternalAnsic.g:7968:4: ( (lv_identifier_1_0= RULE_ID ) )
                    // InternalAnsic.g:7969:5: (lv_identifier_1_0= RULE_ID )
                    {
                    // InternalAnsic.g:7969:5: (lv_identifier_1_0= RULE_ID )
                    // InternalAnsic.g:7970:6: lv_identifier_1_0= RULE_ID
                    {
                    lv_identifier_1_0=(Token)match(input,RULE_ID,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_identifier_1_0, grammarAccess.getJump_statementAccess().getIdentifierIDTerminalRuleCall_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getJump_statementRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"identifier",
                      							lv_identifier_1_0,
                      							"org.eclipse.xtext.common.Terminals.ID");
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getJump_statementAccess().getSemicolonKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:7992:3: (otherlv_3= 'continue' otherlv_4= ';' )
                    {
                    // InternalAnsic.g:7992:3: (otherlv_3= 'continue' otherlv_4= ';' )
                    // InternalAnsic.g:7993:4: otherlv_3= 'continue' otherlv_4= ';'
                    {
                    otherlv_3=(Token)match(input,86,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getJump_statementAccess().getContinueKeyword_1_0());
                      			
                    }
                    otherlv_4=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getJump_statementAccess().getSemicolonKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:8003:3: (otherlv_5= 'break' otherlv_6= ';' )
                    {
                    // InternalAnsic.g:8003:3: (otherlv_5= 'break' otherlv_6= ';' )
                    // InternalAnsic.g:8004:4: otherlv_5= 'break' otherlv_6= ';'
                    {
                    otherlv_5=(Token)match(input,87,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getJump_statementAccess().getBreakKeyword_2_0());
                      			
                    }
                    otherlv_6=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getJump_statementAccess().getSemicolonKeyword_2_1());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalAnsic.g:8014:3: (otherlv_7= 'return' otherlv_8= ';' )
                    {
                    // InternalAnsic.g:8014:3: (otherlv_7= 'return' otherlv_8= ';' )
                    // InternalAnsic.g:8015:4: otherlv_7= 'return' otherlv_8= ';'
                    {
                    otherlv_7=(Token)match(input,88,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getJump_statementAccess().getReturnKeyword_3_0());
                      			
                    }
                    otherlv_8=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getJump_statementAccess().getSemicolonKeyword_3_1());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalAnsic.g:8025:3: (otherlv_9= 'return' ( (lv_expression_10_0= ruleexpression ) ) otherlv_11= ';' )
                    {
                    // InternalAnsic.g:8025:3: (otherlv_9= 'return' ( (lv_expression_10_0= ruleexpression ) ) otherlv_11= ';' )
                    // InternalAnsic.g:8026:4: otherlv_9= 'return' ( (lv_expression_10_0= ruleexpression ) ) otherlv_11= ';'
                    {
                    otherlv_9=(Token)match(input,88,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getJump_statementAccess().getReturnKeyword_4_0());
                      			
                    }
                    // InternalAnsic.g:8030:4: ( (lv_expression_10_0= ruleexpression ) )
                    // InternalAnsic.g:8031:5: (lv_expression_10_0= ruleexpression )
                    {
                    // InternalAnsic.g:8031:5: (lv_expression_10_0= ruleexpression )
                    // InternalAnsic.g:8032:6: lv_expression_10_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJump_statementAccess().getExpressionExpressionParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_14);
                    lv_expression_10_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJump_statementRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_10_0,
                      							"org.xtext.example.Ansic.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_11=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getJump_statementAccess().getSemicolonKeyword_4_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulejump_statement"


    // $ANTLR start "entryRuleiteration_statement"
    // InternalAnsic.g:8058:1: entryRuleiteration_statement returns [EObject current=null] : iv_ruleiteration_statement= ruleiteration_statement EOF ;
    public final EObject entryRuleiteration_statement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleiteration_statement = null;


        try {
            // InternalAnsic.g:8058:60: (iv_ruleiteration_statement= ruleiteration_statement EOF )
            // InternalAnsic.g:8059:2: iv_ruleiteration_statement= ruleiteration_statement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIteration_statementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleiteration_statement=ruleiteration_statement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleiteration_statement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleiteration_statement"


    // $ANTLR start "ruleiteration_statement"
    // InternalAnsic.g:8065:1: ruleiteration_statement returns [EObject current=null] : ( (otherlv_0= 'while' otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_statement_4_0= rulestatement ) ) ) | (otherlv_5= 'do' ( (lv_statement_6_0= rulestatement ) ) otherlv_7= 'while' otherlv_8= '(' ( (lv_expression_9_0= ruleexpression ) ) otherlv_10= ')' otherlv_11= ';' ) | (otherlv_12= 'for' otherlv_13= '(' ( (lv_expression_statement_14_0= ruleexpression_statement ) ) ( (lv_expression_statement2_15_0= ruleexpression_statement ) ) otherlv_16= ')' ( (lv_statement_17_0= rulestatement ) ) ) | (otherlv_18= 'for' otherlv_19= '(' ( (lv_expression_statement_20_0= ruleexpression_statement ) ) ( (lv_expression_statement2_21_0= ruleexpression_statement ) ) ( (lv_expression_22_0= ruleexpression ) ) otherlv_23= ')' ( (lv_statement_24_0= rulestatement ) ) ) | (otherlv_25= 'for' otherlv_26= '(' ( (lv_declaration_27_0= ruledeclaration ) ) ( (lv_expression_statement_28_0= ruleexpression_statement ) ) otherlv_29= ')' ( (lv_statement_30_0= rulestatement ) ) ) | (otherlv_31= 'for' otherlv_32= '(' ( (lv_declaration_33_0= ruledeclaration ) ) ( (lv_expression_statement_34_0= ruleexpression_statement ) ) ( (lv_expression_35_0= ruleexpression ) ) otherlv_36= ')' ( (lv_statement_37_0= rulestatement ) ) ) ) ;
    public final EObject ruleiteration_statement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        Token otherlv_26=null;
        Token otherlv_29=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token otherlv_36=null;
        EObject lv_expression_2_0 = null;

        EObject lv_statement_4_0 = null;

        EObject lv_statement_6_0 = null;

        EObject lv_expression_9_0 = null;

        EObject lv_expression_statement_14_0 = null;

        EObject lv_expression_statement2_15_0 = null;

        EObject lv_statement_17_0 = null;

        EObject lv_expression_statement_20_0 = null;

        EObject lv_expression_statement2_21_0 = null;

        EObject lv_expression_22_0 = null;

        EObject lv_statement_24_0 = null;

        EObject lv_declaration_27_0 = null;

        EObject lv_expression_statement_28_0 = null;

        EObject lv_statement_30_0 = null;

        EObject lv_declaration_33_0 = null;

        EObject lv_expression_statement_34_0 = null;

        EObject lv_expression_35_0 = null;

        EObject lv_statement_37_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:8071:2: ( ( (otherlv_0= 'while' otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_statement_4_0= rulestatement ) ) ) | (otherlv_5= 'do' ( (lv_statement_6_0= rulestatement ) ) otherlv_7= 'while' otherlv_8= '(' ( (lv_expression_9_0= ruleexpression ) ) otherlv_10= ')' otherlv_11= ';' ) | (otherlv_12= 'for' otherlv_13= '(' ( (lv_expression_statement_14_0= ruleexpression_statement ) ) ( (lv_expression_statement2_15_0= ruleexpression_statement ) ) otherlv_16= ')' ( (lv_statement_17_0= rulestatement ) ) ) | (otherlv_18= 'for' otherlv_19= '(' ( (lv_expression_statement_20_0= ruleexpression_statement ) ) ( (lv_expression_statement2_21_0= ruleexpression_statement ) ) ( (lv_expression_22_0= ruleexpression ) ) otherlv_23= ')' ( (lv_statement_24_0= rulestatement ) ) ) | (otherlv_25= 'for' otherlv_26= '(' ( (lv_declaration_27_0= ruledeclaration ) ) ( (lv_expression_statement_28_0= ruleexpression_statement ) ) otherlv_29= ')' ( (lv_statement_30_0= rulestatement ) ) ) | (otherlv_31= 'for' otherlv_32= '(' ( (lv_declaration_33_0= ruledeclaration ) ) ( (lv_expression_statement_34_0= ruleexpression_statement ) ) ( (lv_expression_35_0= ruleexpression ) ) otherlv_36= ')' ( (lv_statement_37_0= rulestatement ) ) ) ) )
            // InternalAnsic.g:8072:2: ( (otherlv_0= 'while' otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_statement_4_0= rulestatement ) ) ) | (otherlv_5= 'do' ( (lv_statement_6_0= rulestatement ) ) otherlv_7= 'while' otherlv_8= '(' ( (lv_expression_9_0= ruleexpression ) ) otherlv_10= ')' otherlv_11= ';' ) | (otherlv_12= 'for' otherlv_13= '(' ( (lv_expression_statement_14_0= ruleexpression_statement ) ) ( (lv_expression_statement2_15_0= ruleexpression_statement ) ) otherlv_16= ')' ( (lv_statement_17_0= rulestatement ) ) ) | (otherlv_18= 'for' otherlv_19= '(' ( (lv_expression_statement_20_0= ruleexpression_statement ) ) ( (lv_expression_statement2_21_0= ruleexpression_statement ) ) ( (lv_expression_22_0= ruleexpression ) ) otherlv_23= ')' ( (lv_statement_24_0= rulestatement ) ) ) | (otherlv_25= 'for' otherlv_26= '(' ( (lv_declaration_27_0= ruledeclaration ) ) ( (lv_expression_statement_28_0= ruleexpression_statement ) ) otherlv_29= ')' ( (lv_statement_30_0= rulestatement ) ) ) | (otherlv_31= 'for' otherlv_32= '(' ( (lv_declaration_33_0= ruledeclaration ) ) ( (lv_expression_statement_34_0= ruleexpression_statement ) ) ( (lv_expression_35_0= ruleexpression ) ) otherlv_36= ')' ( (lv_statement_37_0= rulestatement ) ) ) )
            {
            // InternalAnsic.g:8072:2: ( (otherlv_0= 'while' otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_statement_4_0= rulestatement ) ) ) | (otherlv_5= 'do' ( (lv_statement_6_0= rulestatement ) ) otherlv_7= 'while' otherlv_8= '(' ( (lv_expression_9_0= ruleexpression ) ) otherlv_10= ')' otherlv_11= ';' ) | (otherlv_12= 'for' otherlv_13= '(' ( (lv_expression_statement_14_0= ruleexpression_statement ) ) ( (lv_expression_statement2_15_0= ruleexpression_statement ) ) otherlv_16= ')' ( (lv_statement_17_0= rulestatement ) ) ) | (otherlv_18= 'for' otherlv_19= '(' ( (lv_expression_statement_20_0= ruleexpression_statement ) ) ( (lv_expression_statement2_21_0= ruleexpression_statement ) ) ( (lv_expression_22_0= ruleexpression ) ) otherlv_23= ')' ( (lv_statement_24_0= rulestatement ) ) ) | (otherlv_25= 'for' otherlv_26= '(' ( (lv_declaration_27_0= ruledeclaration ) ) ( (lv_expression_statement_28_0= ruleexpression_statement ) ) otherlv_29= ')' ( (lv_statement_30_0= rulestatement ) ) ) | (otherlv_31= 'for' otherlv_32= '(' ( (lv_declaration_33_0= ruledeclaration ) ) ( (lv_expression_statement_34_0= ruleexpression_statement ) ) ( (lv_expression_35_0= ruleexpression ) ) otherlv_36= ')' ( (lv_statement_37_0= rulestatement ) ) ) )
            int alt62=6;
            switch ( input.LA(1) ) {
            case 89:
                {
                alt62=1;
                }
                break;
            case 90:
                {
                alt62=2;
                }
                break;
            case 91:
                {
                int LA62_3 = input.LA(2);

                if ( (synpred154_InternalAnsic()) ) {
                    alt62=3;
                }
                else if ( (synpred155_InternalAnsic()) ) {
                    alt62=4;
                }
                else if ( (synpred156_InternalAnsic()) ) {
                    alt62=5;
                }
                else if ( (true) ) {
                    alt62=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 62, 3, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 62, 0, input);

                throw nvae;
            }

            switch (alt62) {
                case 1 :
                    // InternalAnsic.g:8073:3: (otherlv_0= 'while' otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_statement_4_0= rulestatement ) ) )
                    {
                    // InternalAnsic.g:8073:3: (otherlv_0= 'while' otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_statement_4_0= rulestatement ) ) )
                    // InternalAnsic.g:8074:4: otherlv_0= 'while' otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_statement_4_0= rulestatement ) )
                    {
                    otherlv_0=(Token)match(input,89,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getIteration_statementAccess().getWhileKeyword_0_0());
                      			
                    }
                    otherlv_1=(Token)match(input,31,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getIteration_statementAccess().getLeftParenthesisKeyword_0_1());
                      			
                    }
                    // InternalAnsic.g:8082:4: ( (lv_expression_2_0= ruleexpression ) )
                    // InternalAnsic.g:8083:5: (lv_expression_2_0= ruleexpression )
                    {
                    // InternalAnsic.g:8083:5: (lv_expression_2_0= ruleexpression )
                    // InternalAnsic.g:8084:6: lv_expression_2_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIteration_statementAccess().getExpressionExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_expression_2_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIteration_statementRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_2_0,
                      							"org.xtext.example.Ansic.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,32,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getIteration_statementAccess().getRightParenthesisKeyword_0_3());
                      			
                    }
                    // InternalAnsic.g:8105:4: ( (lv_statement_4_0= rulestatement ) )
                    // InternalAnsic.g:8106:5: (lv_statement_4_0= rulestatement )
                    {
                    // InternalAnsic.g:8106:5: (lv_statement_4_0= rulestatement )
                    // InternalAnsic.g:8107:6: lv_statement_4_0= rulestatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIteration_statementAccess().getStatementStatementParserRuleCall_0_4_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_statement_4_0=rulestatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIteration_statementRule());
                      						}
                      						set(
                      							current,
                      							"statement",
                      							lv_statement_4_0,
                      							"org.xtext.example.Ansic.statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:8126:3: (otherlv_5= 'do' ( (lv_statement_6_0= rulestatement ) ) otherlv_7= 'while' otherlv_8= '(' ( (lv_expression_9_0= ruleexpression ) ) otherlv_10= ')' otherlv_11= ';' )
                    {
                    // InternalAnsic.g:8126:3: (otherlv_5= 'do' ( (lv_statement_6_0= rulestatement ) ) otherlv_7= 'while' otherlv_8= '(' ( (lv_expression_9_0= ruleexpression ) ) otherlv_10= ')' otherlv_11= ';' )
                    // InternalAnsic.g:8127:4: otherlv_5= 'do' ( (lv_statement_6_0= rulestatement ) ) otherlv_7= 'while' otherlv_8= '(' ( (lv_expression_9_0= ruleexpression ) ) otherlv_10= ')' otherlv_11= ';'
                    {
                    otherlv_5=(Token)match(input,90,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getIteration_statementAccess().getDoKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:8131:4: ( (lv_statement_6_0= rulestatement ) )
                    // InternalAnsic.g:8132:5: (lv_statement_6_0= rulestatement )
                    {
                    // InternalAnsic.g:8132:5: (lv_statement_6_0= rulestatement )
                    // InternalAnsic.g:8133:6: lv_statement_6_0= rulestatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIteration_statementAccess().getStatementStatementParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_35);
                    lv_statement_6_0=rulestatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIteration_statementRule());
                      						}
                      						set(
                      							current,
                      							"statement",
                      							lv_statement_6_0,
                      							"org.xtext.example.Ansic.statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_7=(Token)match(input,89,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getIteration_statementAccess().getWhileKeyword_1_2());
                      			
                    }
                    otherlv_8=(Token)match(input,31,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getIteration_statementAccess().getLeftParenthesisKeyword_1_3());
                      			
                    }
                    // InternalAnsic.g:8158:4: ( (lv_expression_9_0= ruleexpression ) )
                    // InternalAnsic.g:8159:5: (lv_expression_9_0= ruleexpression )
                    {
                    // InternalAnsic.g:8159:5: (lv_expression_9_0= ruleexpression )
                    // InternalAnsic.g:8160:6: lv_expression_9_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIteration_statementAccess().getExpressionExpressionParserRuleCall_1_4_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_expression_9_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIteration_statementRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_9_0,
                      							"org.xtext.example.Ansic.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_10=(Token)match(input,32,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getIteration_statementAccess().getRightParenthesisKeyword_1_5());
                      			
                    }
                    otherlv_11=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getIteration_statementAccess().getSemicolonKeyword_1_6());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:8187:3: (otherlv_12= 'for' otherlv_13= '(' ( (lv_expression_statement_14_0= ruleexpression_statement ) ) ( (lv_expression_statement2_15_0= ruleexpression_statement ) ) otherlv_16= ')' ( (lv_statement_17_0= rulestatement ) ) )
                    {
                    // InternalAnsic.g:8187:3: (otherlv_12= 'for' otherlv_13= '(' ( (lv_expression_statement_14_0= ruleexpression_statement ) ) ( (lv_expression_statement2_15_0= ruleexpression_statement ) ) otherlv_16= ')' ( (lv_statement_17_0= rulestatement ) ) )
                    // InternalAnsic.g:8188:4: otherlv_12= 'for' otherlv_13= '(' ( (lv_expression_statement_14_0= ruleexpression_statement ) ) ( (lv_expression_statement2_15_0= ruleexpression_statement ) ) otherlv_16= ')' ( (lv_statement_17_0= rulestatement ) )
                    {
                    otherlv_12=(Token)match(input,91,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getIteration_statementAccess().getForKeyword_2_0());
                      			
                    }
                    otherlv_13=(Token)match(input,31,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getIteration_statementAccess().getLeftParenthesisKeyword_2_1());
                      			
                    }
                    // InternalAnsic.g:8196:4: ( (lv_expression_statement_14_0= ruleexpression_statement ) )
                    // InternalAnsic.g:8197:5: (lv_expression_statement_14_0= ruleexpression_statement )
                    {
                    // InternalAnsic.g:8197:5: (lv_expression_statement_14_0= ruleexpression_statement )
                    // InternalAnsic.g:8198:6: lv_expression_statement_14_0= ruleexpression_statement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIteration_statementAccess().getExpression_statementExpression_statementParserRuleCall_2_2_0());
                      					
                    }
                    pushFollow(FOLLOW_36);
                    lv_expression_statement_14_0=ruleexpression_statement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIteration_statementRule());
                      						}
                      						set(
                      							current,
                      							"expression_statement",
                      							lv_expression_statement_14_0,
                      							"org.xtext.example.Ansic.expression_statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:8215:4: ( (lv_expression_statement2_15_0= ruleexpression_statement ) )
                    // InternalAnsic.g:8216:5: (lv_expression_statement2_15_0= ruleexpression_statement )
                    {
                    // InternalAnsic.g:8216:5: (lv_expression_statement2_15_0= ruleexpression_statement )
                    // InternalAnsic.g:8217:6: lv_expression_statement2_15_0= ruleexpression_statement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIteration_statementAccess().getExpression_statement2Expression_statementParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_expression_statement2_15_0=ruleexpression_statement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIteration_statementRule());
                      						}
                      						set(
                      							current,
                      							"expression_statement2",
                      							lv_expression_statement2_15_0,
                      							"org.xtext.example.Ansic.expression_statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_16=(Token)match(input,32,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_16, grammarAccess.getIteration_statementAccess().getRightParenthesisKeyword_2_4());
                      			
                    }
                    // InternalAnsic.g:8238:4: ( (lv_statement_17_0= rulestatement ) )
                    // InternalAnsic.g:8239:5: (lv_statement_17_0= rulestatement )
                    {
                    // InternalAnsic.g:8239:5: (lv_statement_17_0= rulestatement )
                    // InternalAnsic.g:8240:6: lv_statement_17_0= rulestatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIteration_statementAccess().getStatementStatementParserRuleCall_2_5_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_statement_17_0=rulestatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIteration_statementRule());
                      						}
                      						set(
                      							current,
                      							"statement",
                      							lv_statement_17_0,
                      							"org.xtext.example.Ansic.statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalAnsic.g:8259:3: (otherlv_18= 'for' otherlv_19= '(' ( (lv_expression_statement_20_0= ruleexpression_statement ) ) ( (lv_expression_statement2_21_0= ruleexpression_statement ) ) ( (lv_expression_22_0= ruleexpression ) ) otherlv_23= ')' ( (lv_statement_24_0= rulestatement ) ) )
                    {
                    // InternalAnsic.g:8259:3: (otherlv_18= 'for' otherlv_19= '(' ( (lv_expression_statement_20_0= ruleexpression_statement ) ) ( (lv_expression_statement2_21_0= ruleexpression_statement ) ) ( (lv_expression_22_0= ruleexpression ) ) otherlv_23= ')' ( (lv_statement_24_0= rulestatement ) ) )
                    // InternalAnsic.g:8260:4: otherlv_18= 'for' otherlv_19= '(' ( (lv_expression_statement_20_0= ruleexpression_statement ) ) ( (lv_expression_statement2_21_0= ruleexpression_statement ) ) ( (lv_expression_22_0= ruleexpression ) ) otherlv_23= ')' ( (lv_statement_24_0= rulestatement ) )
                    {
                    otherlv_18=(Token)match(input,91,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getIteration_statementAccess().getForKeyword_3_0());
                      			
                    }
                    otherlv_19=(Token)match(input,31,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_19, grammarAccess.getIteration_statementAccess().getLeftParenthesisKeyword_3_1());
                      			
                    }
                    // InternalAnsic.g:8268:4: ( (lv_expression_statement_20_0= ruleexpression_statement ) )
                    // InternalAnsic.g:8269:5: (lv_expression_statement_20_0= ruleexpression_statement )
                    {
                    // InternalAnsic.g:8269:5: (lv_expression_statement_20_0= ruleexpression_statement )
                    // InternalAnsic.g:8270:6: lv_expression_statement_20_0= ruleexpression_statement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIteration_statementAccess().getExpression_statementExpression_statementParserRuleCall_3_2_0());
                      					
                    }
                    pushFollow(FOLLOW_36);
                    lv_expression_statement_20_0=ruleexpression_statement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIteration_statementRule());
                      						}
                      						set(
                      							current,
                      							"expression_statement",
                      							lv_expression_statement_20_0,
                      							"org.xtext.example.Ansic.expression_statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:8287:4: ( (lv_expression_statement2_21_0= ruleexpression_statement ) )
                    // InternalAnsic.g:8288:5: (lv_expression_statement2_21_0= ruleexpression_statement )
                    {
                    // InternalAnsic.g:8288:5: (lv_expression_statement2_21_0= ruleexpression_statement )
                    // InternalAnsic.g:8289:6: lv_expression_statement2_21_0= ruleexpression_statement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIteration_statementAccess().getExpression_statement2Expression_statementParserRuleCall_3_3_0());
                      					
                    }
                    pushFollow(FOLLOW_8);
                    lv_expression_statement2_21_0=ruleexpression_statement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIteration_statementRule());
                      						}
                      						set(
                      							current,
                      							"expression_statement2",
                      							lv_expression_statement2_21_0,
                      							"org.xtext.example.Ansic.expression_statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:8306:4: ( (lv_expression_22_0= ruleexpression ) )
                    // InternalAnsic.g:8307:5: (lv_expression_22_0= ruleexpression )
                    {
                    // InternalAnsic.g:8307:5: (lv_expression_22_0= ruleexpression )
                    // InternalAnsic.g:8308:6: lv_expression_22_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIteration_statementAccess().getExpressionExpressionParserRuleCall_3_4_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_expression_22_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIteration_statementRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_22_0,
                      							"org.xtext.example.Ansic.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_23=(Token)match(input,32,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_23, grammarAccess.getIteration_statementAccess().getRightParenthesisKeyword_3_5());
                      			
                    }
                    // InternalAnsic.g:8329:4: ( (lv_statement_24_0= rulestatement ) )
                    // InternalAnsic.g:8330:5: (lv_statement_24_0= rulestatement )
                    {
                    // InternalAnsic.g:8330:5: (lv_statement_24_0= rulestatement )
                    // InternalAnsic.g:8331:6: lv_statement_24_0= rulestatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIteration_statementAccess().getStatementStatementParserRuleCall_3_6_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_statement_24_0=rulestatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIteration_statementRule());
                      						}
                      						set(
                      							current,
                      							"statement",
                      							lv_statement_24_0,
                      							"org.xtext.example.Ansic.statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalAnsic.g:8350:3: (otherlv_25= 'for' otherlv_26= '(' ( (lv_declaration_27_0= ruledeclaration ) ) ( (lv_expression_statement_28_0= ruleexpression_statement ) ) otherlv_29= ')' ( (lv_statement_30_0= rulestatement ) ) )
                    {
                    // InternalAnsic.g:8350:3: (otherlv_25= 'for' otherlv_26= '(' ( (lv_declaration_27_0= ruledeclaration ) ) ( (lv_expression_statement_28_0= ruleexpression_statement ) ) otherlv_29= ')' ( (lv_statement_30_0= rulestatement ) ) )
                    // InternalAnsic.g:8351:4: otherlv_25= 'for' otherlv_26= '(' ( (lv_declaration_27_0= ruledeclaration ) ) ( (lv_expression_statement_28_0= ruleexpression_statement ) ) otherlv_29= ')' ( (lv_statement_30_0= rulestatement ) )
                    {
                    otherlv_25=(Token)match(input,91,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_25, grammarAccess.getIteration_statementAccess().getForKeyword_4_0());
                      			
                    }
                    otherlv_26=(Token)match(input,31,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_26, grammarAccess.getIteration_statementAccess().getLeftParenthesisKeyword_4_1());
                      			
                    }
                    // InternalAnsic.g:8359:4: ( (lv_declaration_27_0= ruledeclaration ) )
                    // InternalAnsic.g:8360:5: (lv_declaration_27_0= ruledeclaration )
                    {
                    // InternalAnsic.g:8360:5: (lv_declaration_27_0= ruledeclaration )
                    // InternalAnsic.g:8361:6: lv_declaration_27_0= ruledeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIteration_statementAccess().getDeclarationDeclarationParserRuleCall_4_2_0());
                      					
                    }
                    pushFollow(FOLLOW_36);
                    lv_declaration_27_0=ruledeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIteration_statementRule());
                      						}
                      						set(
                      							current,
                      							"declaration",
                      							lv_declaration_27_0,
                      							"org.xtext.example.Ansic.declaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:8378:4: ( (lv_expression_statement_28_0= ruleexpression_statement ) )
                    // InternalAnsic.g:8379:5: (lv_expression_statement_28_0= ruleexpression_statement )
                    {
                    // InternalAnsic.g:8379:5: (lv_expression_statement_28_0= ruleexpression_statement )
                    // InternalAnsic.g:8380:6: lv_expression_statement_28_0= ruleexpression_statement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIteration_statementAccess().getExpression_statementExpression_statementParserRuleCall_4_3_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_expression_statement_28_0=ruleexpression_statement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIteration_statementRule());
                      						}
                      						set(
                      							current,
                      							"expression_statement",
                      							lv_expression_statement_28_0,
                      							"org.xtext.example.Ansic.expression_statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_29=(Token)match(input,32,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_29, grammarAccess.getIteration_statementAccess().getRightParenthesisKeyword_4_4());
                      			
                    }
                    // InternalAnsic.g:8401:4: ( (lv_statement_30_0= rulestatement ) )
                    // InternalAnsic.g:8402:5: (lv_statement_30_0= rulestatement )
                    {
                    // InternalAnsic.g:8402:5: (lv_statement_30_0= rulestatement )
                    // InternalAnsic.g:8403:6: lv_statement_30_0= rulestatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIteration_statementAccess().getStatementStatementParserRuleCall_4_5_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_statement_30_0=rulestatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIteration_statementRule());
                      						}
                      						set(
                      							current,
                      							"statement",
                      							lv_statement_30_0,
                      							"org.xtext.example.Ansic.statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalAnsic.g:8422:3: (otherlv_31= 'for' otherlv_32= '(' ( (lv_declaration_33_0= ruledeclaration ) ) ( (lv_expression_statement_34_0= ruleexpression_statement ) ) ( (lv_expression_35_0= ruleexpression ) ) otherlv_36= ')' ( (lv_statement_37_0= rulestatement ) ) )
                    {
                    // InternalAnsic.g:8422:3: (otherlv_31= 'for' otherlv_32= '(' ( (lv_declaration_33_0= ruledeclaration ) ) ( (lv_expression_statement_34_0= ruleexpression_statement ) ) ( (lv_expression_35_0= ruleexpression ) ) otherlv_36= ')' ( (lv_statement_37_0= rulestatement ) ) )
                    // InternalAnsic.g:8423:4: otherlv_31= 'for' otherlv_32= '(' ( (lv_declaration_33_0= ruledeclaration ) ) ( (lv_expression_statement_34_0= ruleexpression_statement ) ) ( (lv_expression_35_0= ruleexpression ) ) otherlv_36= ')' ( (lv_statement_37_0= rulestatement ) )
                    {
                    otherlv_31=(Token)match(input,91,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_31, grammarAccess.getIteration_statementAccess().getForKeyword_5_0());
                      			
                    }
                    otherlv_32=(Token)match(input,31,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_32, grammarAccess.getIteration_statementAccess().getLeftParenthesisKeyword_5_1());
                      			
                    }
                    // InternalAnsic.g:8431:4: ( (lv_declaration_33_0= ruledeclaration ) )
                    // InternalAnsic.g:8432:5: (lv_declaration_33_0= ruledeclaration )
                    {
                    // InternalAnsic.g:8432:5: (lv_declaration_33_0= ruledeclaration )
                    // InternalAnsic.g:8433:6: lv_declaration_33_0= ruledeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIteration_statementAccess().getDeclarationDeclarationParserRuleCall_5_2_0());
                      					
                    }
                    pushFollow(FOLLOW_36);
                    lv_declaration_33_0=ruledeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIteration_statementRule());
                      						}
                      						set(
                      							current,
                      							"declaration",
                      							lv_declaration_33_0,
                      							"org.xtext.example.Ansic.declaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:8450:4: ( (lv_expression_statement_34_0= ruleexpression_statement ) )
                    // InternalAnsic.g:8451:5: (lv_expression_statement_34_0= ruleexpression_statement )
                    {
                    // InternalAnsic.g:8451:5: (lv_expression_statement_34_0= ruleexpression_statement )
                    // InternalAnsic.g:8452:6: lv_expression_statement_34_0= ruleexpression_statement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIteration_statementAccess().getExpression_statementExpression_statementParserRuleCall_5_3_0());
                      					
                    }
                    pushFollow(FOLLOW_8);
                    lv_expression_statement_34_0=ruleexpression_statement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIteration_statementRule());
                      						}
                      						set(
                      							current,
                      							"expression_statement",
                      							lv_expression_statement_34_0,
                      							"org.xtext.example.Ansic.expression_statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:8469:4: ( (lv_expression_35_0= ruleexpression ) )
                    // InternalAnsic.g:8470:5: (lv_expression_35_0= ruleexpression )
                    {
                    // InternalAnsic.g:8470:5: (lv_expression_35_0= ruleexpression )
                    // InternalAnsic.g:8471:6: lv_expression_35_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIteration_statementAccess().getExpressionExpressionParserRuleCall_5_4_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_expression_35_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIteration_statementRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_35_0,
                      							"org.xtext.example.Ansic.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_36=(Token)match(input,32,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_36, grammarAccess.getIteration_statementAccess().getRightParenthesisKeyword_5_5());
                      			
                    }
                    // InternalAnsic.g:8492:4: ( (lv_statement_37_0= rulestatement ) )
                    // InternalAnsic.g:8493:5: (lv_statement_37_0= rulestatement )
                    {
                    // InternalAnsic.g:8493:5: (lv_statement_37_0= rulestatement )
                    // InternalAnsic.g:8494:6: lv_statement_37_0= rulestatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIteration_statementAccess().getStatementStatementParserRuleCall_5_6_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_statement_37_0=rulestatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIteration_statementRule());
                      						}
                      						set(
                      							current,
                      							"statement",
                      							lv_statement_37_0,
                      							"org.xtext.example.Ansic.statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleiteration_statement"


    // $ANTLR start "entryRuleselection_statement"
    // InternalAnsic.g:8516:1: entryRuleselection_statement returns [EObject current=null] : iv_ruleselection_statement= ruleselection_statement EOF ;
    public final EObject entryRuleselection_statement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleselection_statement = null;


        try {
            // InternalAnsic.g:8516:60: (iv_ruleselection_statement= ruleselection_statement EOF )
            // InternalAnsic.g:8517:2: iv_ruleselection_statement= ruleselection_statement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSelection_statementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleselection_statement=ruleselection_statement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleselection_statement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleselection_statement"


    // $ANTLR start "ruleselection_statement"
    // InternalAnsic.g:8523:1: ruleselection_statement returns [EObject current=null] : ( (otherlv_0= 'if' otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_statement_4_0= rulestatement ) ) otherlv_5= 'else' ( (lv_statement2_6_0= rulestatement ) ) ) | (otherlv_7= 'if' otherlv_8= '(' ( (lv_expression_9_0= ruleexpression ) ) otherlv_10= ')' ( (lv_statement_11_0= rulestatement ) ) ) | (otherlv_12= 'switch' otherlv_13= '(' ( (lv_expression_14_0= ruleexpression ) ) otherlv_15= ')' ( (lv_statement_16_0= ruleexpression ) ) ) ) ;
    public final EObject ruleselection_statement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        EObject lv_expression_2_0 = null;

        EObject lv_statement_4_0 = null;

        EObject lv_statement2_6_0 = null;

        EObject lv_expression_9_0 = null;

        EObject lv_statement_11_0 = null;

        EObject lv_expression_14_0 = null;

        EObject lv_statement_16_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:8529:2: ( ( (otherlv_0= 'if' otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_statement_4_0= rulestatement ) ) otherlv_5= 'else' ( (lv_statement2_6_0= rulestatement ) ) ) | (otherlv_7= 'if' otherlv_8= '(' ( (lv_expression_9_0= ruleexpression ) ) otherlv_10= ')' ( (lv_statement_11_0= rulestatement ) ) ) | (otherlv_12= 'switch' otherlv_13= '(' ( (lv_expression_14_0= ruleexpression ) ) otherlv_15= ')' ( (lv_statement_16_0= ruleexpression ) ) ) ) )
            // InternalAnsic.g:8530:2: ( (otherlv_0= 'if' otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_statement_4_0= rulestatement ) ) otherlv_5= 'else' ( (lv_statement2_6_0= rulestatement ) ) ) | (otherlv_7= 'if' otherlv_8= '(' ( (lv_expression_9_0= ruleexpression ) ) otherlv_10= ')' ( (lv_statement_11_0= rulestatement ) ) ) | (otherlv_12= 'switch' otherlv_13= '(' ( (lv_expression_14_0= ruleexpression ) ) otherlv_15= ')' ( (lv_statement_16_0= ruleexpression ) ) ) )
            {
            // InternalAnsic.g:8530:2: ( (otherlv_0= 'if' otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_statement_4_0= rulestatement ) ) otherlv_5= 'else' ( (lv_statement2_6_0= rulestatement ) ) ) | (otherlv_7= 'if' otherlv_8= '(' ( (lv_expression_9_0= ruleexpression ) ) otherlv_10= ')' ( (lv_statement_11_0= rulestatement ) ) ) | (otherlv_12= 'switch' otherlv_13= '(' ( (lv_expression_14_0= ruleexpression ) ) otherlv_15= ')' ( (lv_statement_16_0= ruleexpression ) ) ) )
            int alt63=3;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==92) ) {
                int LA63_1 = input.LA(2);

                if ( (synpred157_InternalAnsic()) ) {
                    alt63=1;
                }
                else if ( (synpred158_InternalAnsic()) ) {
                    alt63=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 63, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA63_0==94) ) {
                alt63=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 63, 0, input);

                throw nvae;
            }
            switch (alt63) {
                case 1 :
                    // InternalAnsic.g:8531:3: (otherlv_0= 'if' otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_statement_4_0= rulestatement ) ) otherlv_5= 'else' ( (lv_statement2_6_0= rulestatement ) ) )
                    {
                    // InternalAnsic.g:8531:3: (otherlv_0= 'if' otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_statement_4_0= rulestatement ) ) otherlv_5= 'else' ( (lv_statement2_6_0= rulestatement ) ) )
                    // InternalAnsic.g:8532:4: otherlv_0= 'if' otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_statement_4_0= rulestatement ) ) otherlv_5= 'else' ( (lv_statement2_6_0= rulestatement ) )
                    {
                    otherlv_0=(Token)match(input,92,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSelection_statementAccess().getIfKeyword_0_0());
                      			
                    }
                    otherlv_1=(Token)match(input,31,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSelection_statementAccess().getLeftParenthesisKeyword_0_1());
                      			
                    }
                    // InternalAnsic.g:8540:4: ( (lv_expression_2_0= ruleexpression ) )
                    // InternalAnsic.g:8541:5: (lv_expression_2_0= ruleexpression )
                    {
                    // InternalAnsic.g:8541:5: (lv_expression_2_0= ruleexpression )
                    // InternalAnsic.g:8542:6: lv_expression_2_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSelection_statementAccess().getExpressionExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_expression_2_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSelection_statementRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_2_0,
                      							"org.xtext.example.Ansic.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,32,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getSelection_statementAccess().getRightParenthesisKeyword_0_3());
                      			
                    }
                    // InternalAnsic.g:8563:4: ( (lv_statement_4_0= rulestatement ) )
                    // InternalAnsic.g:8564:5: (lv_statement_4_0= rulestatement )
                    {
                    // InternalAnsic.g:8564:5: (lv_statement_4_0= rulestatement )
                    // InternalAnsic.g:8565:6: lv_statement_4_0= rulestatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSelection_statementAccess().getStatementStatementParserRuleCall_0_4_0());
                      					
                    }
                    pushFollow(FOLLOW_37);
                    lv_statement_4_0=rulestatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSelection_statementRule());
                      						}
                      						set(
                      							current,
                      							"statement",
                      							lv_statement_4_0,
                      							"org.xtext.example.Ansic.statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,93,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getSelection_statementAccess().getElseKeyword_0_5());
                      			
                    }
                    // InternalAnsic.g:8586:4: ( (lv_statement2_6_0= rulestatement ) )
                    // InternalAnsic.g:8587:5: (lv_statement2_6_0= rulestatement )
                    {
                    // InternalAnsic.g:8587:5: (lv_statement2_6_0= rulestatement )
                    // InternalAnsic.g:8588:6: lv_statement2_6_0= rulestatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSelection_statementAccess().getStatement2StatementParserRuleCall_0_6_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_statement2_6_0=rulestatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSelection_statementRule());
                      						}
                      						set(
                      							current,
                      							"statement2",
                      							lv_statement2_6_0,
                      							"org.xtext.example.Ansic.statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:8607:3: (otherlv_7= 'if' otherlv_8= '(' ( (lv_expression_9_0= ruleexpression ) ) otherlv_10= ')' ( (lv_statement_11_0= rulestatement ) ) )
                    {
                    // InternalAnsic.g:8607:3: (otherlv_7= 'if' otherlv_8= '(' ( (lv_expression_9_0= ruleexpression ) ) otherlv_10= ')' ( (lv_statement_11_0= rulestatement ) ) )
                    // InternalAnsic.g:8608:4: otherlv_7= 'if' otherlv_8= '(' ( (lv_expression_9_0= ruleexpression ) ) otherlv_10= ')' ( (lv_statement_11_0= rulestatement ) )
                    {
                    otherlv_7=(Token)match(input,92,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getSelection_statementAccess().getIfKeyword_1_0());
                      			
                    }
                    otherlv_8=(Token)match(input,31,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getSelection_statementAccess().getLeftParenthesisKeyword_1_1());
                      			
                    }
                    // InternalAnsic.g:8616:4: ( (lv_expression_9_0= ruleexpression ) )
                    // InternalAnsic.g:8617:5: (lv_expression_9_0= ruleexpression )
                    {
                    // InternalAnsic.g:8617:5: (lv_expression_9_0= ruleexpression )
                    // InternalAnsic.g:8618:6: lv_expression_9_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSelection_statementAccess().getExpressionExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_expression_9_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSelection_statementRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_9_0,
                      							"org.xtext.example.Ansic.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_10=(Token)match(input,32,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getSelection_statementAccess().getRightParenthesisKeyword_1_3());
                      			
                    }
                    // InternalAnsic.g:8639:4: ( (lv_statement_11_0= rulestatement ) )
                    // InternalAnsic.g:8640:5: (lv_statement_11_0= rulestatement )
                    {
                    // InternalAnsic.g:8640:5: (lv_statement_11_0= rulestatement )
                    // InternalAnsic.g:8641:6: lv_statement_11_0= rulestatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSelection_statementAccess().getStatementStatementParserRuleCall_1_4_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_statement_11_0=rulestatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSelection_statementRule());
                      						}
                      						set(
                      							current,
                      							"statement",
                      							lv_statement_11_0,
                      							"org.xtext.example.Ansic.statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:8660:3: (otherlv_12= 'switch' otherlv_13= '(' ( (lv_expression_14_0= ruleexpression ) ) otherlv_15= ')' ( (lv_statement_16_0= ruleexpression ) ) )
                    {
                    // InternalAnsic.g:8660:3: (otherlv_12= 'switch' otherlv_13= '(' ( (lv_expression_14_0= ruleexpression ) ) otherlv_15= ')' ( (lv_statement_16_0= ruleexpression ) ) )
                    // InternalAnsic.g:8661:4: otherlv_12= 'switch' otherlv_13= '(' ( (lv_expression_14_0= ruleexpression ) ) otherlv_15= ')' ( (lv_statement_16_0= ruleexpression ) )
                    {
                    otherlv_12=(Token)match(input,94,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getSelection_statementAccess().getSwitchKeyword_2_0());
                      			
                    }
                    otherlv_13=(Token)match(input,31,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getSelection_statementAccess().getLeftParenthesisKeyword_2_1());
                      			
                    }
                    // InternalAnsic.g:8669:4: ( (lv_expression_14_0= ruleexpression ) )
                    // InternalAnsic.g:8670:5: (lv_expression_14_0= ruleexpression )
                    {
                    // InternalAnsic.g:8670:5: (lv_expression_14_0= ruleexpression )
                    // InternalAnsic.g:8671:6: lv_expression_14_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSelection_statementAccess().getExpressionExpressionParserRuleCall_2_2_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_expression_14_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSelection_statementRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_14_0,
                      							"org.xtext.example.Ansic.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_15=(Token)match(input,32,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_15, grammarAccess.getSelection_statementAccess().getRightParenthesisKeyword_2_3());
                      			
                    }
                    // InternalAnsic.g:8692:4: ( (lv_statement_16_0= ruleexpression ) )
                    // InternalAnsic.g:8693:5: (lv_statement_16_0= ruleexpression )
                    {
                    // InternalAnsic.g:8693:5: (lv_statement_16_0= ruleexpression )
                    // InternalAnsic.g:8694:6: lv_statement_16_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSelection_statementAccess().getStatementExpressionParserRuleCall_2_4_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_statement_16_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSelection_statementRule());
                      						}
                      						set(
                      							current,
                      							"statement",
                      							lv_statement_16_0,
                      							"org.xtext.example.Ansic.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleselection_statement"


    // $ANTLR start "entryRulelabeled_statement"
    // InternalAnsic.g:8716:1: entryRulelabeled_statement returns [EObject current=null] : iv_rulelabeled_statement= rulelabeled_statement EOF ;
    public final EObject entryRulelabeled_statement() throws RecognitionException {
        EObject current = null;

        EObject iv_rulelabeled_statement = null;


        try {
            // InternalAnsic.g:8716:58: (iv_rulelabeled_statement= rulelabeled_statement EOF )
            // InternalAnsic.g:8717:2: iv_rulelabeled_statement= rulelabeled_statement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLabeled_statementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulelabeled_statement=rulelabeled_statement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulelabeled_statement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulelabeled_statement"


    // $ANTLR start "rulelabeled_statement"
    // InternalAnsic.g:8723:1: rulelabeled_statement returns [EObject current=null] : ( ( ( (lv_identifier_0_0= RULE_ID ) ) otherlv_1= ':' ( (lv_statement_2_0= rulestatement ) ) ) | (otherlv_3= 'case' ( (lv_constant_expression_4_0= ruleconditional_expression ) ) otherlv_5= ':' ( (lv_statement_6_0= rulestatement ) ) ) | (otherlv_7= 'default' otherlv_8= ':' ( (lv_statement_9_0= rulestatement ) ) ) ) ;
    public final EObject rulelabeled_statement() throws RecognitionException {
        EObject current = null;

        Token lv_identifier_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_statement_2_0 = null;

        EObject lv_constant_expression_4_0 = null;

        EObject lv_statement_6_0 = null;

        EObject lv_statement_9_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:8729:2: ( ( ( ( (lv_identifier_0_0= RULE_ID ) ) otherlv_1= ':' ( (lv_statement_2_0= rulestatement ) ) ) | (otherlv_3= 'case' ( (lv_constant_expression_4_0= ruleconditional_expression ) ) otherlv_5= ':' ( (lv_statement_6_0= rulestatement ) ) ) | (otherlv_7= 'default' otherlv_8= ':' ( (lv_statement_9_0= rulestatement ) ) ) ) )
            // InternalAnsic.g:8730:2: ( ( ( (lv_identifier_0_0= RULE_ID ) ) otherlv_1= ':' ( (lv_statement_2_0= rulestatement ) ) ) | (otherlv_3= 'case' ( (lv_constant_expression_4_0= ruleconditional_expression ) ) otherlv_5= ':' ( (lv_statement_6_0= rulestatement ) ) ) | (otherlv_7= 'default' otherlv_8= ':' ( (lv_statement_9_0= rulestatement ) ) ) )
            {
            // InternalAnsic.g:8730:2: ( ( ( (lv_identifier_0_0= RULE_ID ) ) otherlv_1= ':' ( (lv_statement_2_0= rulestatement ) ) ) | (otherlv_3= 'case' ( (lv_constant_expression_4_0= ruleconditional_expression ) ) otherlv_5= ':' ( (lv_statement_6_0= rulestatement ) ) ) | (otherlv_7= 'default' otherlv_8= ':' ( (lv_statement_9_0= rulestatement ) ) ) )
            int alt64=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt64=1;
                }
                break;
            case 95:
                {
                alt64=2;
                }
                break;
            case 69:
                {
                alt64=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 64, 0, input);

                throw nvae;
            }

            switch (alt64) {
                case 1 :
                    // InternalAnsic.g:8731:3: ( ( (lv_identifier_0_0= RULE_ID ) ) otherlv_1= ':' ( (lv_statement_2_0= rulestatement ) ) )
                    {
                    // InternalAnsic.g:8731:3: ( ( (lv_identifier_0_0= RULE_ID ) ) otherlv_1= ':' ( (lv_statement_2_0= rulestatement ) ) )
                    // InternalAnsic.g:8732:4: ( (lv_identifier_0_0= RULE_ID ) ) otherlv_1= ':' ( (lv_statement_2_0= rulestatement ) )
                    {
                    // InternalAnsic.g:8732:4: ( (lv_identifier_0_0= RULE_ID ) )
                    // InternalAnsic.g:8733:5: (lv_identifier_0_0= RULE_ID )
                    {
                    // InternalAnsic.g:8733:5: (lv_identifier_0_0= RULE_ID )
                    // InternalAnsic.g:8734:6: lv_identifier_0_0= RULE_ID
                    {
                    lv_identifier_0_0=(Token)match(input,RULE_ID,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_identifier_0_0, grammarAccess.getLabeled_statementAccess().getIdentifierIDTerminalRuleCall_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getLabeled_statementRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"identifier",
                      							lv_identifier_0_0,
                      							"org.eclipse.xtext.common.Terminals.ID");
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,58,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getLabeled_statementAccess().getColonKeyword_0_1());
                      			
                    }
                    // InternalAnsic.g:8754:4: ( (lv_statement_2_0= rulestatement ) )
                    // InternalAnsic.g:8755:5: (lv_statement_2_0= rulestatement )
                    {
                    // InternalAnsic.g:8755:5: (lv_statement_2_0= rulestatement )
                    // InternalAnsic.g:8756:6: lv_statement_2_0= rulestatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLabeled_statementAccess().getStatementStatementParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_statement_2_0=rulestatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLabeled_statementRule());
                      						}
                      						set(
                      							current,
                      							"statement",
                      							lv_statement_2_0,
                      							"org.xtext.example.Ansic.statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:8775:3: (otherlv_3= 'case' ( (lv_constant_expression_4_0= ruleconditional_expression ) ) otherlv_5= ':' ( (lv_statement_6_0= rulestatement ) ) )
                    {
                    // InternalAnsic.g:8775:3: (otherlv_3= 'case' ( (lv_constant_expression_4_0= ruleconditional_expression ) ) otherlv_5= ':' ( (lv_statement_6_0= rulestatement ) ) )
                    // InternalAnsic.g:8776:4: otherlv_3= 'case' ( (lv_constant_expression_4_0= ruleconditional_expression ) ) otherlv_5= ':' ( (lv_statement_6_0= rulestatement ) )
                    {
                    otherlv_3=(Token)match(input,95,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getLabeled_statementAccess().getCaseKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:8780:4: ( (lv_constant_expression_4_0= ruleconditional_expression ) )
                    // InternalAnsic.g:8781:5: (lv_constant_expression_4_0= ruleconditional_expression )
                    {
                    // InternalAnsic.g:8781:5: (lv_constant_expression_4_0= ruleconditional_expression )
                    // InternalAnsic.g:8782:6: lv_constant_expression_4_0= ruleconditional_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLabeled_statementAccess().getConstant_expressionConditional_expressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_16);
                    lv_constant_expression_4_0=ruleconditional_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLabeled_statementRule());
                      						}
                      						set(
                      							current,
                      							"constant_expression",
                      							lv_constant_expression_4_0,
                      							"org.xtext.example.Ansic.conditional_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,58,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getLabeled_statementAccess().getColonKeyword_1_2());
                      			
                    }
                    // InternalAnsic.g:8803:4: ( (lv_statement_6_0= rulestatement ) )
                    // InternalAnsic.g:8804:5: (lv_statement_6_0= rulestatement )
                    {
                    // InternalAnsic.g:8804:5: (lv_statement_6_0= rulestatement )
                    // InternalAnsic.g:8805:6: lv_statement_6_0= rulestatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLabeled_statementAccess().getStatementStatementParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_statement_6_0=rulestatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLabeled_statementRule());
                      						}
                      						set(
                      							current,
                      							"statement",
                      							lv_statement_6_0,
                      							"org.xtext.example.Ansic.statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:8824:3: (otherlv_7= 'default' otherlv_8= ':' ( (lv_statement_9_0= rulestatement ) ) )
                    {
                    // InternalAnsic.g:8824:3: (otherlv_7= 'default' otherlv_8= ':' ( (lv_statement_9_0= rulestatement ) ) )
                    // InternalAnsic.g:8825:4: otherlv_7= 'default' otherlv_8= ':' ( (lv_statement_9_0= rulestatement ) )
                    {
                    otherlv_7=(Token)match(input,69,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getLabeled_statementAccess().getDefaultKeyword_2_0());
                      			
                    }
                    otherlv_8=(Token)match(input,58,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getLabeled_statementAccess().getColonKeyword_2_1());
                      			
                    }
                    // InternalAnsic.g:8833:4: ( (lv_statement_9_0= rulestatement ) )
                    // InternalAnsic.g:8834:5: (lv_statement_9_0= rulestatement )
                    {
                    // InternalAnsic.g:8834:5: (lv_statement_9_0= rulestatement )
                    // InternalAnsic.g:8835:6: lv_statement_9_0= rulestatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLabeled_statementAccess().getStatementStatementParserRuleCall_2_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_statement_9_0=rulestatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLabeled_statementRule());
                      						}
                      						set(
                      							current,
                      							"statement",
                      							lv_statement_9_0,
                      							"org.xtext.example.Ansic.statement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulelabeled_statement"


    // $ANTLR start "entryRulecompound_statement"
    // InternalAnsic.g:8857:1: entryRulecompound_statement returns [EObject current=null] : iv_rulecompound_statement= rulecompound_statement EOF ;
    public final EObject entryRulecompound_statement() throws RecognitionException {
        EObject current = null;

        EObject iv_rulecompound_statement = null;


        try {
            // InternalAnsic.g:8857:59: (iv_rulecompound_statement= rulecompound_statement EOF )
            // InternalAnsic.g:8858:2: iv_rulecompound_statement= rulecompound_statement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCompound_statementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulecompound_statement=rulecompound_statement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulecompound_statement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulecompound_statement"


    // $ANTLR start "rulecompound_statement"
    // InternalAnsic.g:8864:1: rulecompound_statement returns [EObject current=null] : ( (otherlv_0= '{' otherlv_1= '}' ) | (otherlv_2= '{' ( (lv_block_item_list_3_0= ruleblock_item_list ) ) otherlv_4= '}' ) ) ;
    public final EObject rulecompound_statement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_block_item_list_3_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:8870:2: ( ( (otherlv_0= '{' otherlv_1= '}' ) | (otherlv_2= '{' ( (lv_block_item_list_3_0= ruleblock_item_list ) ) otherlv_4= '}' ) ) )
            // InternalAnsic.g:8871:2: ( (otherlv_0= '{' otherlv_1= '}' ) | (otherlv_2= '{' ( (lv_block_item_list_3_0= ruleblock_item_list ) ) otherlv_4= '}' ) )
            {
            // InternalAnsic.g:8871:2: ( (otherlv_0= '{' otherlv_1= '}' ) | (otherlv_2= '{' ( (lv_block_item_list_3_0= ruleblock_item_list ) ) otherlv_4= '}' ) )
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==51) ) {
                int LA65_1 = input.LA(2);

                if ( ((LA65_1>=RULE_ID && LA65_1<=RULE_F_CONSTANT)||(LA65_1>=28 && LA65_1<=31)||(LA65_1>=33 && LA65_1<=51)||(LA65_1>=55 && LA65_1<=57)||(LA65_1>=59 && LA65_1<=64)||(LA65_1>=68 && LA65_1<=69)||LA65_1==71||(LA65_1>=73 && LA65_1<=76)||(LA65_1>=79 && LA65_1<=80)||(LA65_1>=85 && LA65_1<=92)||(LA65_1>=94 && LA65_1<=96)||(LA65_1>=112 && LA65_1<=114)) ) {
                    alt65=2;
                }
                else if ( (LA65_1==52) ) {
                    alt65=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 65, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 65, 0, input);

                throw nvae;
            }
            switch (alt65) {
                case 1 :
                    // InternalAnsic.g:8872:3: (otherlv_0= '{' otherlv_1= '}' )
                    {
                    // InternalAnsic.g:8872:3: (otherlv_0= '{' otherlv_1= '}' )
                    // InternalAnsic.g:8873:4: otherlv_0= '{' otherlv_1= '}'
                    {
                    otherlv_0=(Token)match(input,51,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getCompound_statementAccess().getLeftCurlyBracketKeyword_0_0());
                      			
                    }
                    otherlv_1=(Token)match(input,52,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getCompound_statementAccess().getRightCurlyBracketKeyword_0_1());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:8883:3: (otherlv_2= '{' ( (lv_block_item_list_3_0= ruleblock_item_list ) ) otherlv_4= '}' )
                    {
                    // InternalAnsic.g:8883:3: (otherlv_2= '{' ( (lv_block_item_list_3_0= ruleblock_item_list ) ) otherlv_4= '}' )
                    // InternalAnsic.g:8884:4: otherlv_2= '{' ( (lv_block_item_list_3_0= ruleblock_item_list ) ) otherlv_4= '}'
                    {
                    otherlv_2=(Token)match(input,51,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getCompound_statementAccess().getLeftCurlyBracketKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:8888:4: ( (lv_block_item_list_3_0= ruleblock_item_list ) )
                    // InternalAnsic.g:8889:5: (lv_block_item_list_3_0= ruleblock_item_list )
                    {
                    // InternalAnsic.g:8889:5: (lv_block_item_list_3_0= ruleblock_item_list )
                    // InternalAnsic.g:8890:6: lv_block_item_list_3_0= ruleblock_item_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCompound_statementAccess().getBlock_item_listBlock_item_listParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_block_item_list_3_0=ruleblock_item_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCompound_statementRule());
                      						}
                      						set(
                      							current,
                      							"block_item_list",
                      							lv_block_item_list_3_0,
                      							"org.xtext.example.Ansic.block_item_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,52,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getCompound_statementAccess().getRightCurlyBracketKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulecompound_statement"


    // $ANTLR start "entryRuleblock_item_list"
    // InternalAnsic.g:8916:1: entryRuleblock_item_list returns [EObject current=null] : iv_ruleblock_item_list= ruleblock_item_list EOF ;
    public final EObject entryRuleblock_item_list() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleblock_item_list = null;


        try {
            // InternalAnsic.g:8916:56: (iv_ruleblock_item_list= ruleblock_item_list EOF )
            // InternalAnsic.g:8917:2: iv_ruleblock_item_list= ruleblock_item_list EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBlock_item_listRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleblock_item_list=ruleblock_item_list();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleblock_item_list; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleblock_item_list"


    // $ANTLR start "ruleblock_item_list"
    // InternalAnsic.g:8923:1: ruleblock_item_list returns [EObject current=null] : (this_block_item_0= ruleblock_item ( (lv_block_item_list_linha_1_0= ruleblock_item_list_linha ) ) ) ;
    public final EObject ruleblock_item_list() throws RecognitionException {
        EObject current = null;

        EObject this_block_item_0 = null;

        EObject lv_block_item_list_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:8929:2: ( (this_block_item_0= ruleblock_item ( (lv_block_item_list_linha_1_0= ruleblock_item_list_linha ) ) ) )
            // InternalAnsic.g:8930:2: (this_block_item_0= ruleblock_item ( (lv_block_item_list_linha_1_0= ruleblock_item_list_linha ) ) )
            {
            // InternalAnsic.g:8930:2: (this_block_item_0= ruleblock_item ( (lv_block_item_list_linha_1_0= ruleblock_item_list_linha ) ) )
            // InternalAnsic.g:8931:3: this_block_item_0= ruleblock_item ( (lv_block_item_list_linha_1_0= ruleblock_item_list_linha ) )
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getBlock_item_listAccess().getBlock_itemParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_38);
            this_block_item_0=ruleblock_item();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_block_item_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalAnsic.g:8942:3: ( (lv_block_item_list_linha_1_0= ruleblock_item_list_linha ) )
            // InternalAnsic.g:8943:4: (lv_block_item_list_linha_1_0= ruleblock_item_list_linha )
            {
            // InternalAnsic.g:8943:4: (lv_block_item_list_linha_1_0= ruleblock_item_list_linha )
            // InternalAnsic.g:8944:5: lv_block_item_list_linha_1_0= ruleblock_item_list_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBlock_item_listAccess().getBlock_item_list_linhaBlock_item_list_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_block_item_list_linha_1_0=ruleblock_item_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBlock_item_listRule());
              					}
              					set(
              						current,
              						"block_item_list_linha",
              						lv_block_item_list_linha_1_0,
              						"org.xtext.example.Ansic.block_item_list_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleblock_item_list"


    // $ANTLR start "entryRuleblock_item_list_linha"
    // InternalAnsic.g:8965:1: entryRuleblock_item_list_linha returns [EObject current=null] : iv_ruleblock_item_list_linha= ruleblock_item_list_linha EOF ;
    public final EObject entryRuleblock_item_list_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleblock_item_list_linha = null;


        try {
            // InternalAnsic.g:8965:62: (iv_ruleblock_item_list_linha= ruleblock_item_list_linha EOF )
            // InternalAnsic.g:8966:2: iv_ruleblock_item_list_linha= ruleblock_item_list_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBlock_item_list_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleblock_item_list_linha=ruleblock_item_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleblock_item_list_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleblock_item_list_linha"


    // $ANTLR start "ruleblock_item_list_linha"
    // InternalAnsic.g:8972:1: ruleblock_item_list_linha returns [EObject current=null] : ( () ( ( (lv_block_item_1_0= ruleblock_item ) ) ( (lv_block_item_list_linha_2_0= ruleblock_item_list_linha ) ) )? ) ;
    public final EObject ruleblock_item_list_linha() throws RecognitionException {
        EObject current = null;

        EObject lv_block_item_1_0 = null;

        EObject lv_block_item_list_linha_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:8978:2: ( ( () ( ( (lv_block_item_1_0= ruleblock_item ) ) ( (lv_block_item_list_linha_2_0= ruleblock_item_list_linha ) ) )? ) )
            // InternalAnsic.g:8979:2: ( () ( ( (lv_block_item_1_0= ruleblock_item ) ) ( (lv_block_item_list_linha_2_0= ruleblock_item_list_linha ) ) )? )
            {
            // InternalAnsic.g:8979:2: ( () ( ( (lv_block_item_1_0= ruleblock_item ) ) ( (lv_block_item_list_linha_2_0= ruleblock_item_list_linha ) ) )? )
            // InternalAnsic.g:8980:3: () ( ( (lv_block_item_1_0= ruleblock_item ) ) ( (lv_block_item_list_linha_2_0= ruleblock_item_list_linha ) ) )?
            {
            // InternalAnsic.g:8980:3: ()
            // InternalAnsic.g:8981:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getBlock_item_list_linhaAccess().getBlockItemListLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:8990:3: ( ( (lv_block_item_1_0= ruleblock_item ) ) ( (lv_block_item_list_linha_2_0= ruleblock_item_list_linha ) ) )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( ((LA66_0>=RULE_ID && LA66_0<=RULE_F_CONSTANT)||(LA66_0>=28 && LA66_0<=31)||(LA66_0>=33 && LA66_0<=51)||(LA66_0>=55 && LA66_0<=57)||(LA66_0>=59 && LA66_0<=64)||(LA66_0>=68 && LA66_0<=69)||LA66_0==71||(LA66_0>=73 && LA66_0<=76)||(LA66_0>=79 && LA66_0<=80)||(LA66_0>=85 && LA66_0<=92)||(LA66_0>=94 && LA66_0<=96)||(LA66_0>=112 && LA66_0<=114)) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // InternalAnsic.g:8991:4: ( (lv_block_item_1_0= ruleblock_item ) ) ( (lv_block_item_list_linha_2_0= ruleblock_item_list_linha ) )
                    {
                    // InternalAnsic.g:8991:4: ( (lv_block_item_1_0= ruleblock_item ) )
                    // InternalAnsic.g:8992:5: (lv_block_item_1_0= ruleblock_item )
                    {
                    // InternalAnsic.g:8992:5: (lv_block_item_1_0= ruleblock_item )
                    // InternalAnsic.g:8993:6: lv_block_item_1_0= ruleblock_item
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBlock_item_list_linhaAccess().getBlock_itemBlock_itemParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_38);
                    lv_block_item_1_0=ruleblock_item();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getBlock_item_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"block_item",
                      							lv_block_item_1_0,
                      							"org.xtext.example.Ansic.block_item");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:9010:4: ( (lv_block_item_list_linha_2_0= ruleblock_item_list_linha ) )
                    // InternalAnsic.g:9011:5: (lv_block_item_list_linha_2_0= ruleblock_item_list_linha )
                    {
                    // InternalAnsic.g:9011:5: (lv_block_item_list_linha_2_0= ruleblock_item_list_linha )
                    // InternalAnsic.g:9012:6: lv_block_item_list_linha_2_0= ruleblock_item_list_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBlock_item_list_linhaAccess().getBlock_item_list_linhaBlock_item_list_linhaParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_block_item_list_linha_2_0=ruleblock_item_list_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getBlock_item_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"block_item_list_linha",
                      							lv_block_item_list_linha_2_0,
                      							"org.xtext.example.Ansic.block_item_list_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleblock_item_list_linha"


    // $ANTLR start "entryRuleblock_item"
    // InternalAnsic.g:9034:1: entryRuleblock_item returns [EObject current=null] : iv_ruleblock_item= ruleblock_item EOF ;
    public final EObject entryRuleblock_item() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleblock_item = null;


        try {
            // InternalAnsic.g:9034:51: (iv_ruleblock_item= ruleblock_item EOF )
            // InternalAnsic.g:9035:2: iv_ruleblock_item= ruleblock_item EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBlock_itemRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleblock_item=ruleblock_item();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleblock_item; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleblock_item"


    // $ANTLR start "ruleblock_item"
    // InternalAnsic.g:9041:1: ruleblock_item returns [EObject current=null] : ( ( (lv_declaration_0_0= ruledeclaration ) ) | ( (lv_statement_1_0= rulestatement ) ) ) ;
    public final EObject ruleblock_item() throws RecognitionException {
        EObject current = null;

        EObject lv_declaration_0_0 = null;

        EObject lv_statement_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:9047:2: ( ( ( (lv_declaration_0_0= ruledeclaration ) ) | ( (lv_statement_1_0= rulestatement ) ) ) )
            // InternalAnsic.g:9048:2: ( ( (lv_declaration_0_0= ruledeclaration ) ) | ( (lv_statement_1_0= rulestatement ) ) )
            {
            // InternalAnsic.g:9048:2: ( ( (lv_declaration_0_0= ruledeclaration ) ) | ( (lv_statement_1_0= rulestatement ) ) )
            int alt67=2;
            switch ( input.LA(1) ) {
            case 28:
            case 29:
            case 30:
            case 33:
            case 34:
            case 35:
            case 36:
            case 37:
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
            case 48:
            case 49:
            case 55:
            case 56:
            case 59:
            case 60:
            case 61:
            case 62:
            case 63:
            case 71:
                {
                alt67=1;
                }
                break;
            case 50:
                {
                int LA67_2 = input.LA(2);

                if ( (LA67_2==RULE_ID||LA67_2==51) ) {
                    alt67=1;
                }
                else if ( (LA67_2==31||(LA67_2>=53 && LA67_2<=54)||LA67_2==57||(LA67_2>=64 && LA67_2<=65)||LA67_2==70||(LA67_2>=72 && LA67_2<=74)||(LA67_2>=77 && LA67_2<=84)||(LA67_2>=96 && LA67_2<=111)) ) {
                    alt67=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 67, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
            case RULE_STRING_LITERAL:
            case RULE_I_CONSTANT:
            case RULE_F_CONSTANT:
            case 31:
            case 51:
            case 57:
            case 64:
            case 68:
            case 69:
            case 73:
            case 74:
            case 75:
            case 76:
            case 79:
            case 80:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 91:
            case 92:
            case 94:
            case 95:
            case 96:
            case 112:
            case 113:
            case 114:
                {
                alt67=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 67, 0, input);

                throw nvae;
            }

            switch (alt67) {
                case 1 :
                    // InternalAnsic.g:9049:3: ( (lv_declaration_0_0= ruledeclaration ) )
                    {
                    // InternalAnsic.g:9049:3: ( (lv_declaration_0_0= ruledeclaration ) )
                    // InternalAnsic.g:9050:4: (lv_declaration_0_0= ruledeclaration )
                    {
                    // InternalAnsic.g:9050:4: (lv_declaration_0_0= ruledeclaration )
                    // InternalAnsic.g:9051:5: lv_declaration_0_0= ruledeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getBlock_itemAccess().getDeclarationDeclarationParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaration_0_0=ruledeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getBlock_itemRule());
                      					}
                      					set(
                      						current,
                      						"declaration",
                      						lv_declaration_0_0,
                      						"org.xtext.example.Ansic.declaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:9069:3: ( (lv_statement_1_0= rulestatement ) )
                    {
                    // InternalAnsic.g:9069:3: ( (lv_statement_1_0= rulestatement ) )
                    // InternalAnsic.g:9070:4: (lv_statement_1_0= rulestatement )
                    {
                    // InternalAnsic.g:9070:4: (lv_statement_1_0= rulestatement )
                    // InternalAnsic.g:9071:5: lv_statement_1_0= rulestatement
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getBlock_itemAccess().getStatementStatementParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_statement_1_0=rulestatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getBlock_itemRule());
                      					}
                      					set(
                      						current,
                      						"statement",
                      						lv_statement_1_0,
                      						"org.xtext.example.Ansic.statement");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleblock_item"


    // $ANTLR start "entryRuleexpression_statement"
    // InternalAnsic.g:9092:1: entryRuleexpression_statement returns [EObject current=null] : iv_ruleexpression_statement= ruleexpression_statement EOF ;
    public final EObject entryRuleexpression_statement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleexpression_statement = null;


        try {
            // InternalAnsic.g:9092:61: (iv_ruleexpression_statement= ruleexpression_statement EOF )
            // InternalAnsic.g:9093:2: iv_ruleexpression_statement= ruleexpression_statement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpression_statementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleexpression_statement=ruleexpression_statement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexpression_statement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleexpression_statement"


    // $ANTLR start "ruleexpression_statement"
    // InternalAnsic.g:9099:1: ruleexpression_statement returns [EObject current=null] : (otherlv_0= ';' | ( ( (lv_expression_1_0= ruleexpression ) ) otherlv_2= ';' ) ) ;
    public final EObject ruleexpression_statement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_expression_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:9105:2: ( (otherlv_0= ';' | ( ( (lv_expression_1_0= ruleexpression ) ) otherlv_2= ';' ) ) )
            // InternalAnsic.g:9106:2: (otherlv_0= ';' | ( ( (lv_expression_1_0= ruleexpression ) ) otherlv_2= ';' ) )
            {
            // InternalAnsic.g:9106:2: (otherlv_0= ';' | ( ( (lv_expression_1_0= ruleexpression ) ) otherlv_2= ';' ) )
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==57) ) {
                alt68=1;
            }
            else if ( ((LA68_0>=RULE_ID && LA68_0<=RULE_F_CONSTANT)||LA68_0==31||LA68_0==50||LA68_0==64||LA68_0==68||(LA68_0>=73 && LA68_0<=76)||(LA68_0>=79 && LA68_0<=80)||LA68_0==96||(LA68_0>=112 && LA68_0<=114)) ) {
                alt68=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 68, 0, input);

                throw nvae;
            }
            switch (alt68) {
                case 1 :
                    // InternalAnsic.g:9107:3: otherlv_0= ';'
                    {
                    otherlv_0=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_0, grammarAccess.getExpression_statementAccess().getSemicolonKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsic.g:9112:3: ( ( (lv_expression_1_0= ruleexpression ) ) otherlv_2= ';' )
                    {
                    // InternalAnsic.g:9112:3: ( ( (lv_expression_1_0= ruleexpression ) ) otherlv_2= ';' )
                    // InternalAnsic.g:9113:4: ( (lv_expression_1_0= ruleexpression ) ) otherlv_2= ';'
                    {
                    // InternalAnsic.g:9113:4: ( (lv_expression_1_0= ruleexpression ) )
                    // InternalAnsic.g:9114:5: (lv_expression_1_0= ruleexpression )
                    {
                    // InternalAnsic.g:9114:5: (lv_expression_1_0= ruleexpression )
                    // InternalAnsic.g:9115:6: lv_expression_1_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpression_statementAccess().getExpressionExpressionParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_14);
                    lv_expression_1_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpression_statementRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_1_0,
                      							"org.xtext.example.Ansic.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getExpression_statementAccess().getSemicolonKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleexpression_statement"


    // $ANTLR start "entryRuleand_expression"
    // InternalAnsic.g:9141:1: entryRuleand_expression returns [EObject current=null] : iv_ruleand_expression= ruleand_expression EOF ;
    public final EObject entryRuleand_expression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleand_expression = null;


        try {
            // InternalAnsic.g:9141:55: (iv_ruleand_expression= ruleand_expression EOF )
            // InternalAnsic.g:9142:2: iv_ruleand_expression= ruleand_expression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnd_expressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleand_expression=ruleand_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleand_expression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleand_expression"


    // $ANTLR start "ruleand_expression"
    // InternalAnsic.g:9148:1: ruleand_expression returns [EObject current=null] : ( ( (lv_equality_expression_0_0= ruleequality_expression ) ) ( (lv_and_expression_linha_1_0= ruleand_expression_linha ) ) ) ;
    public final EObject ruleand_expression() throws RecognitionException {
        EObject current = null;

        EObject lv_equality_expression_0_0 = null;

        EObject lv_and_expression_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:9154:2: ( ( ( (lv_equality_expression_0_0= ruleequality_expression ) ) ( (lv_and_expression_linha_1_0= ruleand_expression_linha ) ) ) )
            // InternalAnsic.g:9155:2: ( ( (lv_equality_expression_0_0= ruleequality_expression ) ) ( (lv_and_expression_linha_1_0= ruleand_expression_linha ) ) )
            {
            // InternalAnsic.g:9155:2: ( ( (lv_equality_expression_0_0= ruleequality_expression ) ) ( (lv_and_expression_linha_1_0= ruleand_expression_linha ) ) )
            // InternalAnsic.g:9156:3: ( (lv_equality_expression_0_0= ruleequality_expression ) ) ( (lv_and_expression_linha_1_0= ruleand_expression_linha ) )
            {
            // InternalAnsic.g:9156:3: ( (lv_equality_expression_0_0= ruleequality_expression ) )
            // InternalAnsic.g:9157:4: (lv_equality_expression_0_0= ruleequality_expression )
            {
            // InternalAnsic.g:9157:4: (lv_equality_expression_0_0= ruleequality_expression )
            // InternalAnsic.g:9158:5: lv_equality_expression_0_0= ruleequality_expression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAnd_expressionAccess().getEquality_expressionEquality_expressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_39);
            lv_equality_expression_0_0=ruleequality_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAnd_expressionRule());
              					}
              					set(
              						current,
              						"equality_expression",
              						lv_equality_expression_0_0,
              						"org.xtext.example.Ansic.equality_expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:9175:3: ( (lv_and_expression_linha_1_0= ruleand_expression_linha ) )
            // InternalAnsic.g:9176:4: (lv_and_expression_linha_1_0= ruleand_expression_linha )
            {
            // InternalAnsic.g:9176:4: (lv_and_expression_linha_1_0= ruleand_expression_linha )
            // InternalAnsic.g:9177:5: lv_and_expression_linha_1_0= ruleand_expression_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAnd_expressionAccess().getAnd_expression_linhaAnd_expression_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_and_expression_linha_1_0=ruleand_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAnd_expressionRule());
              					}
              					set(
              						current,
              						"and_expression_linha",
              						lv_and_expression_linha_1_0,
              						"org.xtext.example.Ansic.and_expression_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleand_expression"


    // $ANTLR start "entryRuleand_expression_linha"
    // InternalAnsic.g:9198:1: entryRuleand_expression_linha returns [EObject current=null] : iv_ruleand_expression_linha= ruleand_expression_linha EOF ;
    public final EObject entryRuleand_expression_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleand_expression_linha = null;


        try {
            // InternalAnsic.g:9198:61: (iv_ruleand_expression_linha= ruleand_expression_linha EOF )
            // InternalAnsic.g:9199:2: iv_ruleand_expression_linha= ruleand_expression_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnd_expression_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleand_expression_linha=ruleand_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleand_expression_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleand_expression_linha"


    // $ANTLR start "ruleand_expression_linha"
    // InternalAnsic.g:9205:1: ruleand_expression_linha returns [EObject current=null] : ( () (otherlv_1= '&' ( (lv_equality_expression_2_0= ruleequality_expression ) ) ( (lv_and_expression_linha_3_0= ruleand_expression_linha ) ) )? ) ;
    public final EObject ruleand_expression_linha() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_equality_expression_2_0 = null;

        EObject lv_and_expression_linha_3_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:9211:2: ( ( () (otherlv_1= '&' ( (lv_equality_expression_2_0= ruleequality_expression ) ) ( (lv_and_expression_linha_3_0= ruleand_expression_linha ) ) )? ) )
            // InternalAnsic.g:9212:2: ( () (otherlv_1= '&' ( (lv_equality_expression_2_0= ruleequality_expression ) ) ( (lv_and_expression_linha_3_0= ruleand_expression_linha ) ) )? )
            {
            // InternalAnsic.g:9212:2: ( () (otherlv_1= '&' ( (lv_equality_expression_2_0= ruleequality_expression ) ) ( (lv_and_expression_linha_3_0= ruleand_expression_linha ) ) )? )
            // InternalAnsic.g:9213:3: () (otherlv_1= '&' ( (lv_equality_expression_2_0= ruleequality_expression ) ) ( (lv_and_expression_linha_3_0= ruleand_expression_linha ) ) )?
            {
            // InternalAnsic.g:9213:3: ()
            // InternalAnsic.g:9214:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getAnd_expression_linhaAccess().getAndExpressionLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:9223:3: (otherlv_1= '&' ( (lv_equality_expression_2_0= ruleequality_expression ) ) ( (lv_and_expression_linha_3_0= ruleand_expression_linha ) ) )?
            int alt69=2;
            alt69 = dfa69.predict(input);
            switch (alt69) {
                case 1 :
                    // InternalAnsic.g:9224:4: otherlv_1= '&' ( (lv_equality_expression_2_0= ruleequality_expression ) ) ( (lv_and_expression_linha_3_0= ruleand_expression_linha ) )
                    {
                    otherlv_1=(Token)match(input,96,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getAnd_expression_linhaAccess().getAmpersandKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:9228:4: ( (lv_equality_expression_2_0= ruleequality_expression ) )
                    // InternalAnsic.g:9229:5: (lv_equality_expression_2_0= ruleequality_expression )
                    {
                    // InternalAnsic.g:9229:5: (lv_equality_expression_2_0= ruleequality_expression )
                    // InternalAnsic.g:9230:6: lv_equality_expression_2_0= ruleequality_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAnd_expression_linhaAccess().getEquality_expressionEquality_expressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_39);
                    lv_equality_expression_2_0=ruleequality_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAnd_expression_linhaRule());
                      						}
                      						set(
                      							current,
                      							"equality_expression",
                      							lv_equality_expression_2_0,
                      							"org.xtext.example.Ansic.equality_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:9247:4: ( (lv_and_expression_linha_3_0= ruleand_expression_linha ) )
                    // InternalAnsic.g:9248:5: (lv_and_expression_linha_3_0= ruleand_expression_linha )
                    {
                    // InternalAnsic.g:9248:5: (lv_and_expression_linha_3_0= ruleand_expression_linha )
                    // InternalAnsic.g:9249:6: lv_and_expression_linha_3_0= ruleand_expression_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAnd_expression_linhaAccess().getAnd_expression_linhaAnd_expression_linhaParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_and_expression_linha_3_0=ruleand_expression_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAnd_expression_linhaRule());
                      						}
                      						set(
                      							current,
                      							"and_expression_linha",
                      							lv_and_expression_linha_3_0,
                      							"org.xtext.example.Ansic.and_expression_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleand_expression_linha"


    // $ANTLR start "entryRuleexclusive_or_expression"
    // InternalAnsic.g:9271:1: entryRuleexclusive_or_expression returns [EObject current=null] : iv_ruleexclusive_or_expression= ruleexclusive_or_expression EOF ;
    public final EObject entryRuleexclusive_or_expression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleexclusive_or_expression = null;


        try {
            // InternalAnsic.g:9271:64: (iv_ruleexclusive_or_expression= ruleexclusive_or_expression EOF )
            // InternalAnsic.g:9272:2: iv_ruleexclusive_or_expression= ruleexclusive_or_expression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExclusive_or_expressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleexclusive_or_expression=ruleexclusive_or_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexclusive_or_expression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleexclusive_or_expression"


    // $ANTLR start "ruleexclusive_or_expression"
    // InternalAnsic.g:9278:1: ruleexclusive_or_expression returns [EObject current=null] : ( ( (lv_and_expression_0_0= ruleand_expression ) ) ( (lv_exclusive_or_expression_linha_1_0= ruleexclusive_or_expression_linha ) ) ) ;
    public final EObject ruleexclusive_or_expression() throws RecognitionException {
        EObject current = null;

        EObject lv_and_expression_0_0 = null;

        EObject lv_exclusive_or_expression_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:9284:2: ( ( ( (lv_and_expression_0_0= ruleand_expression ) ) ( (lv_exclusive_or_expression_linha_1_0= ruleexclusive_or_expression_linha ) ) ) )
            // InternalAnsic.g:9285:2: ( ( (lv_and_expression_0_0= ruleand_expression ) ) ( (lv_exclusive_or_expression_linha_1_0= ruleexclusive_or_expression_linha ) ) )
            {
            // InternalAnsic.g:9285:2: ( ( (lv_and_expression_0_0= ruleand_expression ) ) ( (lv_exclusive_or_expression_linha_1_0= ruleexclusive_or_expression_linha ) ) )
            // InternalAnsic.g:9286:3: ( (lv_and_expression_0_0= ruleand_expression ) ) ( (lv_exclusive_or_expression_linha_1_0= ruleexclusive_or_expression_linha ) )
            {
            // InternalAnsic.g:9286:3: ( (lv_and_expression_0_0= ruleand_expression ) )
            // InternalAnsic.g:9287:4: (lv_and_expression_0_0= ruleand_expression )
            {
            // InternalAnsic.g:9287:4: (lv_and_expression_0_0= ruleand_expression )
            // InternalAnsic.g:9288:5: lv_and_expression_0_0= ruleand_expression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExclusive_or_expressionAccess().getAnd_expressionAnd_expressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_40);
            lv_and_expression_0_0=ruleand_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExclusive_or_expressionRule());
              					}
              					set(
              						current,
              						"and_expression",
              						lv_and_expression_0_0,
              						"org.xtext.example.Ansic.and_expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:9305:3: ( (lv_exclusive_or_expression_linha_1_0= ruleexclusive_or_expression_linha ) )
            // InternalAnsic.g:9306:4: (lv_exclusive_or_expression_linha_1_0= ruleexclusive_or_expression_linha )
            {
            // InternalAnsic.g:9306:4: (lv_exclusive_or_expression_linha_1_0= ruleexclusive_or_expression_linha )
            // InternalAnsic.g:9307:5: lv_exclusive_or_expression_linha_1_0= ruleexclusive_or_expression_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExclusive_or_expressionAccess().getExclusive_or_expression_linhaExclusive_or_expression_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_exclusive_or_expression_linha_1_0=ruleexclusive_or_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExclusive_or_expressionRule());
              					}
              					set(
              						current,
              						"exclusive_or_expression_linha",
              						lv_exclusive_or_expression_linha_1_0,
              						"org.xtext.example.Ansic.exclusive_or_expression_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleexclusive_or_expression"


    // $ANTLR start "entryRuleexclusive_or_expression_linha"
    // InternalAnsic.g:9328:1: entryRuleexclusive_or_expression_linha returns [EObject current=null] : iv_ruleexclusive_or_expression_linha= ruleexclusive_or_expression_linha EOF ;
    public final EObject entryRuleexclusive_or_expression_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleexclusive_or_expression_linha = null;


        try {
            // InternalAnsic.g:9328:70: (iv_ruleexclusive_or_expression_linha= ruleexclusive_or_expression_linha EOF )
            // InternalAnsic.g:9329:2: iv_ruleexclusive_or_expression_linha= ruleexclusive_or_expression_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExclusive_or_expression_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleexclusive_or_expression_linha=ruleexclusive_or_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexclusive_or_expression_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleexclusive_or_expression_linha"


    // $ANTLR start "ruleexclusive_or_expression_linha"
    // InternalAnsic.g:9335:1: ruleexclusive_or_expression_linha returns [EObject current=null] : ( () (otherlv_1= '^' ( (lv_and_expression_2_0= ruleand_expression ) ) ( (lv_exclusive_or_expression_linha_3_0= ruleexclusive_or_expression_linha ) ) )? ) ;
    public final EObject ruleexclusive_or_expression_linha() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_and_expression_2_0 = null;

        EObject lv_exclusive_or_expression_linha_3_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:9341:2: ( ( () (otherlv_1= '^' ( (lv_and_expression_2_0= ruleand_expression ) ) ( (lv_exclusive_or_expression_linha_3_0= ruleexclusive_or_expression_linha ) ) )? ) )
            // InternalAnsic.g:9342:2: ( () (otherlv_1= '^' ( (lv_and_expression_2_0= ruleand_expression ) ) ( (lv_exclusive_or_expression_linha_3_0= ruleexclusive_or_expression_linha ) ) )? )
            {
            // InternalAnsic.g:9342:2: ( () (otherlv_1= '^' ( (lv_and_expression_2_0= ruleand_expression ) ) ( (lv_exclusive_or_expression_linha_3_0= ruleexclusive_or_expression_linha ) ) )? )
            // InternalAnsic.g:9343:3: () (otherlv_1= '^' ( (lv_and_expression_2_0= ruleand_expression ) ) ( (lv_exclusive_or_expression_linha_3_0= ruleexclusive_or_expression_linha ) ) )?
            {
            // InternalAnsic.g:9343:3: ()
            // InternalAnsic.g:9344:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getExclusive_or_expression_linhaAccess().getExclusiveOrExpressionLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:9353:3: (otherlv_1= '^' ( (lv_and_expression_2_0= ruleand_expression ) ) ( (lv_exclusive_or_expression_linha_3_0= ruleexclusive_or_expression_linha ) ) )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==97) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // InternalAnsic.g:9354:4: otherlv_1= '^' ( (lv_and_expression_2_0= ruleand_expression ) ) ( (lv_exclusive_or_expression_linha_3_0= ruleexclusive_or_expression_linha ) )
                    {
                    otherlv_1=(Token)match(input,97,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getExclusive_or_expression_linhaAccess().getCircumflexAccentKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:9358:4: ( (lv_and_expression_2_0= ruleand_expression ) )
                    // InternalAnsic.g:9359:5: (lv_and_expression_2_0= ruleand_expression )
                    {
                    // InternalAnsic.g:9359:5: (lv_and_expression_2_0= ruleand_expression )
                    // InternalAnsic.g:9360:6: lv_and_expression_2_0= ruleand_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExclusive_or_expression_linhaAccess().getAnd_expressionAnd_expressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_40);
                    lv_and_expression_2_0=ruleand_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExclusive_or_expression_linhaRule());
                      						}
                      						set(
                      							current,
                      							"and_expression",
                      							lv_and_expression_2_0,
                      							"org.xtext.example.Ansic.and_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:9377:4: ( (lv_exclusive_or_expression_linha_3_0= ruleexclusive_or_expression_linha ) )
                    // InternalAnsic.g:9378:5: (lv_exclusive_or_expression_linha_3_0= ruleexclusive_or_expression_linha )
                    {
                    // InternalAnsic.g:9378:5: (lv_exclusive_or_expression_linha_3_0= ruleexclusive_or_expression_linha )
                    // InternalAnsic.g:9379:6: lv_exclusive_or_expression_linha_3_0= ruleexclusive_or_expression_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExclusive_or_expression_linhaAccess().getExclusive_or_expression_linhaExclusive_or_expression_linhaParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_exclusive_or_expression_linha_3_0=ruleexclusive_or_expression_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExclusive_or_expression_linhaRule());
                      						}
                      						set(
                      							current,
                      							"exclusive_or_expression_linha",
                      							lv_exclusive_or_expression_linha_3_0,
                      							"org.xtext.example.Ansic.exclusive_or_expression_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleexclusive_or_expression_linha"


    // $ANTLR start "entryRuleinclusive_or_expression"
    // InternalAnsic.g:9401:1: entryRuleinclusive_or_expression returns [EObject current=null] : iv_ruleinclusive_or_expression= ruleinclusive_or_expression EOF ;
    public final EObject entryRuleinclusive_or_expression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleinclusive_or_expression = null;


        try {
            // InternalAnsic.g:9401:64: (iv_ruleinclusive_or_expression= ruleinclusive_or_expression EOF )
            // InternalAnsic.g:9402:2: iv_ruleinclusive_or_expression= ruleinclusive_or_expression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInclusive_or_expressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleinclusive_or_expression=ruleinclusive_or_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleinclusive_or_expression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleinclusive_or_expression"


    // $ANTLR start "ruleinclusive_or_expression"
    // InternalAnsic.g:9408:1: ruleinclusive_or_expression returns [EObject current=null] : ( ( (lv_exclusive_or_expression_0_0= ruleexclusive_or_expression ) ) ( (lv_inclusive_or_expression_linha_1_0= ruleinclusive_or_expression_linha ) ) ) ;
    public final EObject ruleinclusive_or_expression() throws RecognitionException {
        EObject current = null;

        EObject lv_exclusive_or_expression_0_0 = null;

        EObject lv_inclusive_or_expression_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:9414:2: ( ( ( (lv_exclusive_or_expression_0_0= ruleexclusive_or_expression ) ) ( (lv_inclusive_or_expression_linha_1_0= ruleinclusive_or_expression_linha ) ) ) )
            // InternalAnsic.g:9415:2: ( ( (lv_exclusive_or_expression_0_0= ruleexclusive_or_expression ) ) ( (lv_inclusive_or_expression_linha_1_0= ruleinclusive_or_expression_linha ) ) )
            {
            // InternalAnsic.g:9415:2: ( ( (lv_exclusive_or_expression_0_0= ruleexclusive_or_expression ) ) ( (lv_inclusive_or_expression_linha_1_0= ruleinclusive_or_expression_linha ) ) )
            // InternalAnsic.g:9416:3: ( (lv_exclusive_or_expression_0_0= ruleexclusive_or_expression ) ) ( (lv_inclusive_or_expression_linha_1_0= ruleinclusive_or_expression_linha ) )
            {
            // InternalAnsic.g:9416:3: ( (lv_exclusive_or_expression_0_0= ruleexclusive_or_expression ) )
            // InternalAnsic.g:9417:4: (lv_exclusive_or_expression_0_0= ruleexclusive_or_expression )
            {
            // InternalAnsic.g:9417:4: (lv_exclusive_or_expression_0_0= ruleexclusive_or_expression )
            // InternalAnsic.g:9418:5: lv_exclusive_or_expression_0_0= ruleexclusive_or_expression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getInclusive_or_expressionAccess().getExclusive_or_expressionExclusive_or_expressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_41);
            lv_exclusive_or_expression_0_0=ruleexclusive_or_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getInclusive_or_expressionRule());
              					}
              					set(
              						current,
              						"exclusive_or_expression",
              						lv_exclusive_or_expression_0_0,
              						"org.xtext.example.Ansic.exclusive_or_expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:9435:3: ( (lv_inclusive_or_expression_linha_1_0= ruleinclusive_or_expression_linha ) )
            // InternalAnsic.g:9436:4: (lv_inclusive_or_expression_linha_1_0= ruleinclusive_or_expression_linha )
            {
            // InternalAnsic.g:9436:4: (lv_inclusive_or_expression_linha_1_0= ruleinclusive_or_expression_linha )
            // InternalAnsic.g:9437:5: lv_inclusive_or_expression_linha_1_0= ruleinclusive_or_expression_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getInclusive_or_expressionAccess().getInclusive_or_expression_linhaInclusive_or_expression_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_inclusive_or_expression_linha_1_0=ruleinclusive_or_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getInclusive_or_expressionRule());
              					}
              					set(
              						current,
              						"inclusive_or_expression_linha",
              						lv_inclusive_or_expression_linha_1_0,
              						"org.xtext.example.Ansic.inclusive_or_expression_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleinclusive_or_expression"


    // $ANTLR start "entryRuleinclusive_or_expression_linha"
    // InternalAnsic.g:9458:1: entryRuleinclusive_or_expression_linha returns [EObject current=null] : iv_ruleinclusive_or_expression_linha= ruleinclusive_or_expression_linha EOF ;
    public final EObject entryRuleinclusive_or_expression_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleinclusive_or_expression_linha = null;


        try {
            // InternalAnsic.g:9458:70: (iv_ruleinclusive_or_expression_linha= ruleinclusive_or_expression_linha EOF )
            // InternalAnsic.g:9459:2: iv_ruleinclusive_or_expression_linha= ruleinclusive_or_expression_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInclusive_or_expression_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleinclusive_or_expression_linha=ruleinclusive_or_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleinclusive_or_expression_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleinclusive_or_expression_linha"


    // $ANTLR start "ruleinclusive_or_expression_linha"
    // InternalAnsic.g:9465:1: ruleinclusive_or_expression_linha returns [EObject current=null] : ( () (otherlv_1= '|' ( (lv_exclusive_or_expression_2_0= ruleexclusive_or_expression ) ) ( (lv_inclusive_or_expression_linha_3_0= ruleinclusive_or_expression_linha ) ) )? ) ;
    public final EObject ruleinclusive_or_expression_linha() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_exclusive_or_expression_2_0 = null;

        EObject lv_inclusive_or_expression_linha_3_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:9471:2: ( ( () (otherlv_1= '|' ( (lv_exclusive_or_expression_2_0= ruleexclusive_or_expression ) ) ( (lv_inclusive_or_expression_linha_3_0= ruleinclusive_or_expression_linha ) ) )? ) )
            // InternalAnsic.g:9472:2: ( () (otherlv_1= '|' ( (lv_exclusive_or_expression_2_0= ruleexclusive_or_expression ) ) ( (lv_inclusive_or_expression_linha_3_0= ruleinclusive_or_expression_linha ) ) )? )
            {
            // InternalAnsic.g:9472:2: ( () (otherlv_1= '|' ( (lv_exclusive_or_expression_2_0= ruleexclusive_or_expression ) ) ( (lv_inclusive_or_expression_linha_3_0= ruleinclusive_or_expression_linha ) ) )? )
            // InternalAnsic.g:9473:3: () (otherlv_1= '|' ( (lv_exclusive_or_expression_2_0= ruleexclusive_or_expression ) ) ( (lv_inclusive_or_expression_linha_3_0= ruleinclusive_or_expression_linha ) ) )?
            {
            // InternalAnsic.g:9473:3: ()
            // InternalAnsic.g:9474:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getInclusive_or_expression_linhaAccess().getInclusiveOrExpressionLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:9483:3: (otherlv_1= '|' ( (lv_exclusive_or_expression_2_0= ruleexclusive_or_expression ) ) ( (lv_inclusive_or_expression_linha_3_0= ruleinclusive_or_expression_linha ) ) )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==98) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalAnsic.g:9484:4: otherlv_1= '|' ( (lv_exclusive_or_expression_2_0= ruleexclusive_or_expression ) ) ( (lv_inclusive_or_expression_linha_3_0= ruleinclusive_or_expression_linha ) )
                    {
                    otherlv_1=(Token)match(input,98,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getInclusive_or_expression_linhaAccess().getVerticalLineKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:9488:4: ( (lv_exclusive_or_expression_2_0= ruleexclusive_or_expression ) )
                    // InternalAnsic.g:9489:5: (lv_exclusive_or_expression_2_0= ruleexclusive_or_expression )
                    {
                    // InternalAnsic.g:9489:5: (lv_exclusive_or_expression_2_0= ruleexclusive_or_expression )
                    // InternalAnsic.g:9490:6: lv_exclusive_or_expression_2_0= ruleexclusive_or_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInclusive_or_expression_linhaAccess().getExclusive_or_expressionExclusive_or_expressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_41);
                    lv_exclusive_or_expression_2_0=ruleexclusive_or_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInclusive_or_expression_linhaRule());
                      						}
                      						set(
                      							current,
                      							"exclusive_or_expression",
                      							lv_exclusive_or_expression_2_0,
                      							"org.xtext.example.Ansic.exclusive_or_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:9507:4: ( (lv_inclusive_or_expression_linha_3_0= ruleinclusive_or_expression_linha ) )
                    // InternalAnsic.g:9508:5: (lv_inclusive_or_expression_linha_3_0= ruleinclusive_or_expression_linha )
                    {
                    // InternalAnsic.g:9508:5: (lv_inclusive_or_expression_linha_3_0= ruleinclusive_or_expression_linha )
                    // InternalAnsic.g:9509:6: lv_inclusive_or_expression_linha_3_0= ruleinclusive_or_expression_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInclusive_or_expression_linhaAccess().getInclusive_or_expression_linhaInclusive_or_expression_linhaParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_inclusive_or_expression_linha_3_0=ruleinclusive_or_expression_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInclusive_or_expression_linhaRule());
                      						}
                      						set(
                      							current,
                      							"inclusive_or_expression_linha",
                      							lv_inclusive_or_expression_linha_3_0,
                      							"org.xtext.example.Ansic.inclusive_or_expression_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleinclusive_or_expression_linha"


    // $ANTLR start "entryRulelogical_and_expression"
    // InternalAnsic.g:9531:1: entryRulelogical_and_expression returns [EObject current=null] : iv_rulelogical_and_expression= rulelogical_and_expression EOF ;
    public final EObject entryRulelogical_and_expression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulelogical_and_expression = null;


        try {
            // InternalAnsic.g:9531:63: (iv_rulelogical_and_expression= rulelogical_and_expression EOF )
            // InternalAnsic.g:9532:2: iv_rulelogical_and_expression= rulelogical_and_expression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogical_and_expressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulelogical_and_expression=rulelogical_and_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulelogical_and_expression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulelogical_and_expression"


    // $ANTLR start "rulelogical_and_expression"
    // InternalAnsic.g:9538:1: rulelogical_and_expression returns [EObject current=null] : ( ( (lv_inclusive_or_expression_0_0= ruleinclusive_or_expression ) ) ( (lv_logical_and_expression_linha_1_0= rulelogical_and_expression_linha ) ) ) ;
    public final EObject rulelogical_and_expression() throws RecognitionException {
        EObject current = null;

        EObject lv_inclusive_or_expression_0_0 = null;

        EObject lv_logical_and_expression_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:9544:2: ( ( ( (lv_inclusive_or_expression_0_0= ruleinclusive_or_expression ) ) ( (lv_logical_and_expression_linha_1_0= rulelogical_and_expression_linha ) ) ) )
            // InternalAnsic.g:9545:2: ( ( (lv_inclusive_or_expression_0_0= ruleinclusive_or_expression ) ) ( (lv_logical_and_expression_linha_1_0= rulelogical_and_expression_linha ) ) )
            {
            // InternalAnsic.g:9545:2: ( ( (lv_inclusive_or_expression_0_0= ruleinclusive_or_expression ) ) ( (lv_logical_and_expression_linha_1_0= rulelogical_and_expression_linha ) ) )
            // InternalAnsic.g:9546:3: ( (lv_inclusive_or_expression_0_0= ruleinclusive_or_expression ) ) ( (lv_logical_and_expression_linha_1_0= rulelogical_and_expression_linha ) )
            {
            // InternalAnsic.g:9546:3: ( (lv_inclusive_or_expression_0_0= ruleinclusive_or_expression ) )
            // InternalAnsic.g:9547:4: (lv_inclusive_or_expression_0_0= ruleinclusive_or_expression )
            {
            // InternalAnsic.g:9547:4: (lv_inclusive_or_expression_0_0= ruleinclusive_or_expression )
            // InternalAnsic.g:9548:5: lv_inclusive_or_expression_0_0= ruleinclusive_or_expression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLogical_and_expressionAccess().getInclusive_or_expressionInclusive_or_expressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_42);
            lv_inclusive_or_expression_0_0=ruleinclusive_or_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLogical_and_expressionRule());
              					}
              					set(
              						current,
              						"inclusive_or_expression",
              						lv_inclusive_or_expression_0_0,
              						"org.xtext.example.Ansic.inclusive_or_expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:9565:3: ( (lv_logical_and_expression_linha_1_0= rulelogical_and_expression_linha ) )
            // InternalAnsic.g:9566:4: (lv_logical_and_expression_linha_1_0= rulelogical_and_expression_linha )
            {
            // InternalAnsic.g:9566:4: (lv_logical_and_expression_linha_1_0= rulelogical_and_expression_linha )
            // InternalAnsic.g:9567:5: lv_logical_and_expression_linha_1_0= rulelogical_and_expression_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLogical_and_expressionAccess().getLogical_and_expression_linhaLogical_and_expression_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_logical_and_expression_linha_1_0=rulelogical_and_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLogical_and_expressionRule());
              					}
              					set(
              						current,
              						"logical_and_expression_linha",
              						lv_logical_and_expression_linha_1_0,
              						"org.xtext.example.Ansic.logical_and_expression_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulelogical_and_expression"


    // $ANTLR start "entryRulelogical_and_expression_linha"
    // InternalAnsic.g:9588:1: entryRulelogical_and_expression_linha returns [EObject current=null] : iv_rulelogical_and_expression_linha= rulelogical_and_expression_linha EOF ;
    public final EObject entryRulelogical_and_expression_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_rulelogical_and_expression_linha = null;


        try {
            // InternalAnsic.g:9588:69: (iv_rulelogical_and_expression_linha= rulelogical_and_expression_linha EOF )
            // InternalAnsic.g:9589:2: iv_rulelogical_and_expression_linha= rulelogical_and_expression_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogical_and_expression_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulelogical_and_expression_linha=rulelogical_and_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulelogical_and_expression_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulelogical_and_expression_linha"


    // $ANTLR start "rulelogical_and_expression_linha"
    // InternalAnsic.g:9595:1: rulelogical_and_expression_linha returns [EObject current=null] : ( () (otherlv_1= 'and' ( (lv_inclusive_or_expression_2_0= ruleinclusive_or_expression ) ) ( (lv_logical_and_expression_linha_3_0= rulelogical_and_expression_linha ) ) )? ) ;
    public final EObject rulelogical_and_expression_linha() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_inclusive_or_expression_2_0 = null;

        EObject lv_logical_and_expression_linha_3_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:9601:2: ( ( () (otherlv_1= 'and' ( (lv_inclusive_or_expression_2_0= ruleinclusive_or_expression ) ) ( (lv_logical_and_expression_linha_3_0= rulelogical_and_expression_linha ) ) )? ) )
            // InternalAnsic.g:9602:2: ( () (otherlv_1= 'and' ( (lv_inclusive_or_expression_2_0= ruleinclusive_or_expression ) ) ( (lv_logical_and_expression_linha_3_0= rulelogical_and_expression_linha ) ) )? )
            {
            // InternalAnsic.g:9602:2: ( () (otherlv_1= 'and' ( (lv_inclusive_or_expression_2_0= ruleinclusive_or_expression ) ) ( (lv_logical_and_expression_linha_3_0= rulelogical_and_expression_linha ) ) )? )
            // InternalAnsic.g:9603:3: () (otherlv_1= 'and' ( (lv_inclusive_or_expression_2_0= ruleinclusive_or_expression ) ) ( (lv_logical_and_expression_linha_3_0= rulelogical_and_expression_linha ) ) )?
            {
            // InternalAnsic.g:9603:3: ()
            // InternalAnsic.g:9604:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getLogical_and_expression_linhaAccess().getLogicalAndExpressionLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:9613:3: (otherlv_1= 'and' ( (lv_inclusive_or_expression_2_0= ruleinclusive_or_expression ) ) ( (lv_logical_and_expression_linha_3_0= rulelogical_and_expression_linha ) ) )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==99) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // InternalAnsic.g:9614:4: otherlv_1= 'and' ( (lv_inclusive_or_expression_2_0= ruleinclusive_or_expression ) ) ( (lv_logical_and_expression_linha_3_0= rulelogical_and_expression_linha ) )
                    {
                    otherlv_1=(Token)match(input,99,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getLogical_and_expression_linhaAccess().getAndKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:9618:4: ( (lv_inclusive_or_expression_2_0= ruleinclusive_or_expression ) )
                    // InternalAnsic.g:9619:5: (lv_inclusive_or_expression_2_0= ruleinclusive_or_expression )
                    {
                    // InternalAnsic.g:9619:5: (lv_inclusive_or_expression_2_0= ruleinclusive_or_expression )
                    // InternalAnsic.g:9620:6: lv_inclusive_or_expression_2_0= ruleinclusive_or_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLogical_and_expression_linhaAccess().getInclusive_or_expressionInclusive_or_expressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_42);
                    lv_inclusive_or_expression_2_0=ruleinclusive_or_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLogical_and_expression_linhaRule());
                      						}
                      						set(
                      							current,
                      							"inclusive_or_expression",
                      							lv_inclusive_or_expression_2_0,
                      							"org.xtext.example.Ansic.inclusive_or_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:9637:4: ( (lv_logical_and_expression_linha_3_0= rulelogical_and_expression_linha ) )
                    // InternalAnsic.g:9638:5: (lv_logical_and_expression_linha_3_0= rulelogical_and_expression_linha )
                    {
                    // InternalAnsic.g:9638:5: (lv_logical_and_expression_linha_3_0= rulelogical_and_expression_linha )
                    // InternalAnsic.g:9639:6: lv_logical_and_expression_linha_3_0= rulelogical_and_expression_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLogical_and_expression_linhaAccess().getLogical_and_expression_linhaLogical_and_expression_linhaParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_logical_and_expression_linha_3_0=rulelogical_and_expression_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLogical_and_expression_linhaRule());
                      						}
                      						set(
                      							current,
                      							"logical_and_expression_linha",
                      							lv_logical_and_expression_linha_3_0,
                      							"org.xtext.example.Ansic.logical_and_expression_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulelogical_and_expression_linha"


    // $ANTLR start "entryRulelogical_or_expression"
    // InternalAnsic.g:9661:1: entryRulelogical_or_expression returns [EObject current=null] : iv_rulelogical_or_expression= rulelogical_or_expression EOF ;
    public final EObject entryRulelogical_or_expression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulelogical_or_expression = null;


        try {
            // InternalAnsic.g:9661:62: (iv_rulelogical_or_expression= rulelogical_or_expression EOF )
            // InternalAnsic.g:9662:2: iv_rulelogical_or_expression= rulelogical_or_expression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogical_or_expressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulelogical_or_expression=rulelogical_or_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulelogical_or_expression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulelogical_or_expression"


    // $ANTLR start "rulelogical_or_expression"
    // InternalAnsic.g:9668:1: rulelogical_or_expression returns [EObject current=null] : ( ( (lv_logical_and_expression_0_0= rulelogical_and_expression ) ) ( (lv_logical_or_expression_linha_1_0= rulelogical_or_expression_linha ) ) ) ;
    public final EObject rulelogical_or_expression() throws RecognitionException {
        EObject current = null;

        EObject lv_logical_and_expression_0_0 = null;

        EObject lv_logical_or_expression_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:9674:2: ( ( ( (lv_logical_and_expression_0_0= rulelogical_and_expression ) ) ( (lv_logical_or_expression_linha_1_0= rulelogical_or_expression_linha ) ) ) )
            // InternalAnsic.g:9675:2: ( ( (lv_logical_and_expression_0_0= rulelogical_and_expression ) ) ( (lv_logical_or_expression_linha_1_0= rulelogical_or_expression_linha ) ) )
            {
            // InternalAnsic.g:9675:2: ( ( (lv_logical_and_expression_0_0= rulelogical_and_expression ) ) ( (lv_logical_or_expression_linha_1_0= rulelogical_or_expression_linha ) ) )
            // InternalAnsic.g:9676:3: ( (lv_logical_and_expression_0_0= rulelogical_and_expression ) ) ( (lv_logical_or_expression_linha_1_0= rulelogical_or_expression_linha ) )
            {
            // InternalAnsic.g:9676:3: ( (lv_logical_and_expression_0_0= rulelogical_and_expression ) )
            // InternalAnsic.g:9677:4: (lv_logical_and_expression_0_0= rulelogical_and_expression )
            {
            // InternalAnsic.g:9677:4: (lv_logical_and_expression_0_0= rulelogical_and_expression )
            // InternalAnsic.g:9678:5: lv_logical_and_expression_0_0= rulelogical_and_expression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLogical_or_expressionAccess().getLogical_and_expressionLogical_and_expressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_43);
            lv_logical_and_expression_0_0=rulelogical_and_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLogical_or_expressionRule());
              					}
              					set(
              						current,
              						"logical_and_expression",
              						lv_logical_and_expression_0_0,
              						"org.xtext.example.Ansic.logical_and_expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:9695:3: ( (lv_logical_or_expression_linha_1_0= rulelogical_or_expression_linha ) )
            // InternalAnsic.g:9696:4: (lv_logical_or_expression_linha_1_0= rulelogical_or_expression_linha )
            {
            // InternalAnsic.g:9696:4: (lv_logical_or_expression_linha_1_0= rulelogical_or_expression_linha )
            // InternalAnsic.g:9697:5: lv_logical_or_expression_linha_1_0= rulelogical_or_expression_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLogical_or_expressionAccess().getLogical_or_expression_linhaLogical_or_expression_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_logical_or_expression_linha_1_0=rulelogical_or_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLogical_or_expressionRule());
              					}
              					set(
              						current,
              						"logical_or_expression_linha",
              						lv_logical_or_expression_linha_1_0,
              						"org.xtext.example.Ansic.logical_or_expression_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulelogical_or_expression"


    // $ANTLR start "entryRulelogical_or_expression_linha"
    // InternalAnsic.g:9718:1: entryRulelogical_or_expression_linha returns [EObject current=null] : iv_rulelogical_or_expression_linha= rulelogical_or_expression_linha EOF ;
    public final EObject entryRulelogical_or_expression_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_rulelogical_or_expression_linha = null;


        try {
            // InternalAnsic.g:9718:68: (iv_rulelogical_or_expression_linha= rulelogical_or_expression_linha EOF )
            // InternalAnsic.g:9719:2: iv_rulelogical_or_expression_linha= rulelogical_or_expression_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogical_or_expression_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulelogical_or_expression_linha=rulelogical_or_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulelogical_or_expression_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulelogical_or_expression_linha"


    // $ANTLR start "rulelogical_or_expression_linha"
    // InternalAnsic.g:9725:1: rulelogical_or_expression_linha returns [EObject current=null] : ( () (otherlv_1= 'or' ( (lv_logical_and_expression_2_0= rulelogical_and_expression ) ) ( (lv_logical_or_expression_linha_3_0= rulelogical_or_expression_linha ) ) )? ) ;
    public final EObject rulelogical_or_expression_linha() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_logical_and_expression_2_0 = null;

        EObject lv_logical_or_expression_linha_3_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:9731:2: ( ( () (otherlv_1= 'or' ( (lv_logical_and_expression_2_0= rulelogical_and_expression ) ) ( (lv_logical_or_expression_linha_3_0= rulelogical_or_expression_linha ) ) )? ) )
            // InternalAnsic.g:9732:2: ( () (otherlv_1= 'or' ( (lv_logical_and_expression_2_0= rulelogical_and_expression ) ) ( (lv_logical_or_expression_linha_3_0= rulelogical_or_expression_linha ) ) )? )
            {
            // InternalAnsic.g:9732:2: ( () (otherlv_1= 'or' ( (lv_logical_and_expression_2_0= rulelogical_and_expression ) ) ( (lv_logical_or_expression_linha_3_0= rulelogical_or_expression_linha ) ) )? )
            // InternalAnsic.g:9733:3: () (otherlv_1= 'or' ( (lv_logical_and_expression_2_0= rulelogical_and_expression ) ) ( (lv_logical_or_expression_linha_3_0= rulelogical_or_expression_linha ) ) )?
            {
            // InternalAnsic.g:9733:3: ()
            // InternalAnsic.g:9734:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getLogical_or_expression_linhaAccess().getLogicalOrExpressionLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:9743:3: (otherlv_1= 'or' ( (lv_logical_and_expression_2_0= rulelogical_and_expression ) ) ( (lv_logical_or_expression_linha_3_0= rulelogical_or_expression_linha ) ) )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==100) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalAnsic.g:9744:4: otherlv_1= 'or' ( (lv_logical_and_expression_2_0= rulelogical_and_expression ) ) ( (lv_logical_or_expression_linha_3_0= rulelogical_or_expression_linha ) )
                    {
                    otherlv_1=(Token)match(input,100,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getLogical_or_expression_linhaAccess().getOrKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:9748:4: ( (lv_logical_and_expression_2_0= rulelogical_and_expression ) )
                    // InternalAnsic.g:9749:5: (lv_logical_and_expression_2_0= rulelogical_and_expression )
                    {
                    // InternalAnsic.g:9749:5: (lv_logical_and_expression_2_0= rulelogical_and_expression )
                    // InternalAnsic.g:9750:6: lv_logical_and_expression_2_0= rulelogical_and_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLogical_or_expression_linhaAccess().getLogical_and_expressionLogical_and_expressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_43);
                    lv_logical_and_expression_2_0=rulelogical_and_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLogical_or_expression_linhaRule());
                      						}
                      						set(
                      							current,
                      							"logical_and_expression",
                      							lv_logical_and_expression_2_0,
                      							"org.xtext.example.Ansic.logical_and_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:9767:4: ( (lv_logical_or_expression_linha_3_0= rulelogical_or_expression_linha ) )
                    // InternalAnsic.g:9768:5: (lv_logical_or_expression_linha_3_0= rulelogical_or_expression_linha )
                    {
                    // InternalAnsic.g:9768:5: (lv_logical_or_expression_linha_3_0= rulelogical_or_expression_linha )
                    // InternalAnsic.g:9769:6: lv_logical_or_expression_linha_3_0= rulelogical_or_expression_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLogical_or_expression_linhaAccess().getLogical_or_expression_linhaLogical_or_expression_linhaParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_logical_or_expression_linha_3_0=rulelogical_or_expression_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLogical_or_expression_linhaRule());
                      						}
                      						set(
                      							current,
                      							"logical_or_expression_linha",
                      							lv_logical_or_expression_linha_3_0,
                      							"org.xtext.example.Ansic.logical_or_expression_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulelogical_or_expression_linha"


    // $ANTLR start "entryRuleconditional_expression"
    // InternalAnsic.g:9791:1: entryRuleconditional_expression returns [EObject current=null] : iv_ruleconditional_expression= ruleconditional_expression EOF ;
    public final EObject entryRuleconditional_expression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleconditional_expression = null;


        try {
            // InternalAnsic.g:9791:63: (iv_ruleconditional_expression= ruleconditional_expression EOF )
            // InternalAnsic.g:9792:2: iv_ruleconditional_expression= ruleconditional_expression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditional_expressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleconditional_expression=ruleconditional_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleconditional_expression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleconditional_expression"


    // $ANTLR start "ruleconditional_expression"
    // InternalAnsic.g:9798:1: ruleconditional_expression returns [EObject current=null] : ( ( (lv_logical_or_expression_0_0= rulelogical_or_expression ) ) ( (lv_conditional_expression_linha_1_0= ruleconditional_expression_linha ) ) ) ;
    public final EObject ruleconditional_expression() throws RecognitionException {
        EObject current = null;

        EObject lv_logical_or_expression_0_0 = null;

        EObject lv_conditional_expression_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:9804:2: ( ( ( (lv_logical_or_expression_0_0= rulelogical_or_expression ) ) ( (lv_conditional_expression_linha_1_0= ruleconditional_expression_linha ) ) ) )
            // InternalAnsic.g:9805:2: ( ( (lv_logical_or_expression_0_0= rulelogical_or_expression ) ) ( (lv_conditional_expression_linha_1_0= ruleconditional_expression_linha ) ) )
            {
            // InternalAnsic.g:9805:2: ( ( (lv_logical_or_expression_0_0= rulelogical_or_expression ) ) ( (lv_conditional_expression_linha_1_0= ruleconditional_expression_linha ) ) )
            // InternalAnsic.g:9806:3: ( (lv_logical_or_expression_0_0= rulelogical_or_expression ) ) ( (lv_conditional_expression_linha_1_0= ruleconditional_expression_linha ) )
            {
            // InternalAnsic.g:9806:3: ( (lv_logical_or_expression_0_0= rulelogical_or_expression ) )
            // InternalAnsic.g:9807:4: (lv_logical_or_expression_0_0= rulelogical_or_expression )
            {
            // InternalAnsic.g:9807:4: (lv_logical_or_expression_0_0= rulelogical_or_expression )
            // InternalAnsic.g:9808:5: lv_logical_or_expression_0_0= rulelogical_or_expression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConditional_expressionAccess().getLogical_or_expressionLogical_or_expressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_44);
            lv_logical_or_expression_0_0=rulelogical_or_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConditional_expressionRule());
              					}
              					set(
              						current,
              						"logical_or_expression",
              						lv_logical_or_expression_0_0,
              						"org.xtext.example.Ansic.logical_or_expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:9825:3: ( (lv_conditional_expression_linha_1_0= ruleconditional_expression_linha ) )
            // InternalAnsic.g:9826:4: (lv_conditional_expression_linha_1_0= ruleconditional_expression_linha )
            {
            // InternalAnsic.g:9826:4: (lv_conditional_expression_linha_1_0= ruleconditional_expression_linha )
            // InternalAnsic.g:9827:5: lv_conditional_expression_linha_1_0= ruleconditional_expression_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConditional_expressionAccess().getConditional_expression_linhaConditional_expression_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_conditional_expression_linha_1_0=ruleconditional_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConditional_expressionRule());
              					}
              					set(
              						current,
              						"conditional_expression_linha",
              						lv_conditional_expression_linha_1_0,
              						"org.xtext.example.Ansic.conditional_expression_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleconditional_expression"


    // $ANTLR start "entryRuleconditional_expression_linha"
    // InternalAnsic.g:9848:1: entryRuleconditional_expression_linha returns [EObject current=null] : iv_ruleconditional_expression_linha= ruleconditional_expression_linha EOF ;
    public final EObject entryRuleconditional_expression_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleconditional_expression_linha = null;


        try {
            // InternalAnsic.g:9848:69: (iv_ruleconditional_expression_linha= ruleconditional_expression_linha EOF )
            // InternalAnsic.g:9849:2: iv_ruleconditional_expression_linha= ruleconditional_expression_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditional_expression_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleconditional_expression_linha=ruleconditional_expression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleconditional_expression_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleconditional_expression_linha"


    // $ANTLR start "ruleconditional_expression_linha"
    // InternalAnsic.g:9855:1: ruleconditional_expression_linha returns [EObject current=null] : ( () (otherlv_1= '?' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ':' ( (lv_conditional_expression_4_0= ruleconditional_expression ) ) ( (lv_conditional_expression_linha_5_0= ruleconditional_expression_linha ) ) )? ) ;
    public final EObject ruleconditional_expression_linha() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_expression_2_0 = null;

        EObject lv_conditional_expression_4_0 = null;

        EObject lv_conditional_expression_linha_5_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:9861:2: ( ( () (otherlv_1= '?' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ':' ( (lv_conditional_expression_4_0= ruleconditional_expression ) ) ( (lv_conditional_expression_linha_5_0= ruleconditional_expression_linha ) ) )? ) )
            // InternalAnsic.g:9862:2: ( () (otherlv_1= '?' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ':' ( (lv_conditional_expression_4_0= ruleconditional_expression ) ) ( (lv_conditional_expression_linha_5_0= ruleconditional_expression_linha ) ) )? )
            {
            // InternalAnsic.g:9862:2: ( () (otherlv_1= '?' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ':' ( (lv_conditional_expression_4_0= ruleconditional_expression ) ) ( (lv_conditional_expression_linha_5_0= ruleconditional_expression_linha ) ) )? )
            // InternalAnsic.g:9863:3: () (otherlv_1= '?' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ':' ( (lv_conditional_expression_4_0= ruleconditional_expression ) ) ( (lv_conditional_expression_linha_5_0= ruleconditional_expression_linha ) ) )?
            {
            // InternalAnsic.g:9863:3: ()
            // InternalAnsic.g:9864:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getConditional_expression_linhaAccess().getConditionalExpressionLinhaAcctionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:9873:3: (otherlv_1= '?' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ':' ( (lv_conditional_expression_4_0= ruleconditional_expression ) ) ( (lv_conditional_expression_linha_5_0= ruleconditional_expression_linha ) ) )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==101) ) {
                int LA74_1 = input.LA(2);

                if ( (synpred170_InternalAnsic()) ) {
                    alt74=1;
                }
            }
            switch (alt74) {
                case 1 :
                    // InternalAnsic.g:9874:4: otherlv_1= '?' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ':' ( (lv_conditional_expression_4_0= ruleconditional_expression ) ) ( (lv_conditional_expression_linha_5_0= ruleconditional_expression_linha ) )
                    {
                    otherlv_1=(Token)match(input,101,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getConditional_expression_linhaAccess().getQuestionMarkKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:9878:4: ( (lv_expression_2_0= ruleexpression ) )
                    // InternalAnsic.g:9879:5: (lv_expression_2_0= ruleexpression )
                    {
                    // InternalAnsic.g:9879:5: (lv_expression_2_0= ruleexpression )
                    // InternalAnsic.g:9880:6: lv_expression_2_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConditional_expression_linhaAccess().getExpressionExpressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_16);
                    lv_expression_2_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConditional_expression_linhaRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_2_0,
                      							"org.xtext.example.Ansic.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,58,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getConditional_expression_linhaAccess().getColonKeyword_1_2());
                      			
                    }
                    // InternalAnsic.g:9901:4: ( (lv_conditional_expression_4_0= ruleconditional_expression ) )
                    // InternalAnsic.g:9902:5: (lv_conditional_expression_4_0= ruleconditional_expression )
                    {
                    // InternalAnsic.g:9902:5: (lv_conditional_expression_4_0= ruleconditional_expression )
                    // InternalAnsic.g:9903:6: lv_conditional_expression_4_0= ruleconditional_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConditional_expression_linhaAccess().getConditional_expressionConditional_expressionParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_44);
                    lv_conditional_expression_4_0=ruleconditional_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConditional_expression_linhaRule());
                      						}
                      						set(
                      							current,
                      							"conditional_expression",
                      							lv_conditional_expression_4_0,
                      							"org.xtext.example.Ansic.conditional_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:9920:4: ( (lv_conditional_expression_linha_5_0= ruleconditional_expression_linha ) )
                    // InternalAnsic.g:9921:5: (lv_conditional_expression_linha_5_0= ruleconditional_expression_linha )
                    {
                    // InternalAnsic.g:9921:5: (lv_conditional_expression_linha_5_0= ruleconditional_expression_linha )
                    // InternalAnsic.g:9922:6: lv_conditional_expression_linha_5_0= ruleconditional_expression_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConditional_expression_linhaAccess().getConditional_expression_linhaConditional_expression_linhaParserRuleCall_1_4_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_conditional_expression_linha_5_0=ruleconditional_expression_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConditional_expression_linhaRule());
                      						}
                      						set(
                      							current,
                      							"conditional_expression_linha",
                      							lv_conditional_expression_linha_5_0,
                      							"org.xtext.example.Ansic.conditional_expression_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleconditional_expression_linha"


    // $ANTLR start "entryRuleassignment_expression"
    // InternalAnsic.g:9944:1: entryRuleassignment_expression returns [EObject current=null] : iv_ruleassignment_expression= ruleassignment_expression EOF ;
    public final EObject entryRuleassignment_expression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleassignment_expression = null;


        try {
            // InternalAnsic.g:9944:62: (iv_ruleassignment_expression= ruleassignment_expression EOF )
            // InternalAnsic.g:9945:2: iv_ruleassignment_expression= ruleassignment_expression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssignment_expressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleassignment_expression=ruleassignment_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleassignment_expression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleassignment_expression"


    // $ANTLR start "ruleassignment_expression"
    // InternalAnsic.g:9951:1: ruleassignment_expression returns [EObject current=null] : ( ( (lv_conditional_expression_0_0= ruleconditional_expression ) ) | ( ( (lv_unary_expression_1_0= ruleunary_expression ) ) ( (lv_assignment_operator_2_0= ruleassignment_operator ) ) ( (lv_assignment_expression_3_0= ruleassignment_expression ) ) ) ) ;
    public final EObject ruleassignment_expression() throws RecognitionException {
        EObject current = null;

        EObject lv_conditional_expression_0_0 = null;

        EObject lv_unary_expression_1_0 = null;

        AntlrDatatypeRuleToken lv_assignment_operator_2_0 = null;

        EObject lv_assignment_expression_3_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:9957:2: ( ( ( (lv_conditional_expression_0_0= ruleconditional_expression ) ) | ( ( (lv_unary_expression_1_0= ruleunary_expression ) ) ( (lv_assignment_operator_2_0= ruleassignment_operator ) ) ( (lv_assignment_expression_3_0= ruleassignment_expression ) ) ) ) )
            // InternalAnsic.g:9958:2: ( ( (lv_conditional_expression_0_0= ruleconditional_expression ) ) | ( ( (lv_unary_expression_1_0= ruleunary_expression ) ) ( (lv_assignment_operator_2_0= ruleassignment_operator ) ) ( (lv_assignment_expression_3_0= ruleassignment_expression ) ) ) )
            {
            // InternalAnsic.g:9958:2: ( ( (lv_conditional_expression_0_0= ruleconditional_expression ) ) | ( ( (lv_unary_expression_1_0= ruleunary_expression ) ) ( (lv_assignment_operator_2_0= ruleassignment_operator ) ) ( (lv_assignment_expression_3_0= ruleassignment_expression ) ) ) )
            int alt75=2;
            alt75 = dfa75.predict(input);
            switch (alt75) {
                case 1 :
                    // InternalAnsic.g:9959:3: ( (lv_conditional_expression_0_0= ruleconditional_expression ) )
                    {
                    // InternalAnsic.g:9959:3: ( (lv_conditional_expression_0_0= ruleconditional_expression ) )
                    // InternalAnsic.g:9960:4: (lv_conditional_expression_0_0= ruleconditional_expression )
                    {
                    // InternalAnsic.g:9960:4: (lv_conditional_expression_0_0= ruleconditional_expression )
                    // InternalAnsic.g:9961:5: lv_conditional_expression_0_0= ruleconditional_expression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAssignment_expressionAccess().getConditional_expressionConditional_expressionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_conditional_expression_0_0=ruleconditional_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getAssignment_expressionRule());
                      					}
                      					set(
                      						current,
                      						"conditional_expression",
                      						lv_conditional_expression_0_0,
                      						"org.xtext.example.Ansic.conditional_expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:9979:3: ( ( (lv_unary_expression_1_0= ruleunary_expression ) ) ( (lv_assignment_operator_2_0= ruleassignment_operator ) ) ( (lv_assignment_expression_3_0= ruleassignment_expression ) ) )
                    {
                    // InternalAnsic.g:9979:3: ( ( (lv_unary_expression_1_0= ruleunary_expression ) ) ( (lv_assignment_operator_2_0= ruleassignment_operator ) ) ( (lv_assignment_expression_3_0= ruleassignment_expression ) ) )
                    // InternalAnsic.g:9980:4: ( (lv_unary_expression_1_0= ruleunary_expression ) ) ( (lv_assignment_operator_2_0= ruleassignment_operator ) ) ( (lv_assignment_expression_3_0= ruleassignment_expression ) )
                    {
                    // InternalAnsic.g:9980:4: ( (lv_unary_expression_1_0= ruleunary_expression ) )
                    // InternalAnsic.g:9981:5: (lv_unary_expression_1_0= ruleunary_expression )
                    {
                    // InternalAnsic.g:9981:5: (lv_unary_expression_1_0= ruleunary_expression )
                    // InternalAnsic.g:9982:6: lv_unary_expression_1_0= ruleunary_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAssignment_expressionAccess().getUnary_expressionUnary_expressionParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_45);
                    lv_unary_expression_1_0=ruleunary_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAssignment_expressionRule());
                      						}
                      						set(
                      							current,
                      							"unary_expression",
                      							lv_unary_expression_1_0,
                      							"org.xtext.example.Ansic.unary_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:9999:4: ( (lv_assignment_operator_2_0= ruleassignment_operator ) )
                    // InternalAnsic.g:10000:5: (lv_assignment_operator_2_0= ruleassignment_operator )
                    {
                    // InternalAnsic.g:10000:5: (lv_assignment_operator_2_0= ruleassignment_operator )
                    // InternalAnsic.g:10001:6: lv_assignment_operator_2_0= ruleassignment_operator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAssignment_expressionAccess().getAssignment_operatorAssignment_operatorParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_8);
                    lv_assignment_operator_2_0=ruleassignment_operator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAssignment_expressionRule());
                      						}
                      						set(
                      							current,
                      							"assignment_operator",
                      							lv_assignment_operator_2_0,
                      							"org.xtext.example.Ansic.assignment_operator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:10018:4: ( (lv_assignment_expression_3_0= ruleassignment_expression ) )
                    // InternalAnsic.g:10019:5: (lv_assignment_expression_3_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:10019:5: (lv_assignment_expression_3_0= ruleassignment_expression )
                    // InternalAnsic.g:10020:6: lv_assignment_expression_3_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAssignment_expressionAccess().getAssignment_expressionAssignment_expressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_assignment_expression_3_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAssignment_expressionRule());
                      						}
                      						set(
                      							current,
                      							"assignment_expression",
                      							lv_assignment_expression_3_0,
                      							"org.xtext.example.Ansic.assignment_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleassignment_expression"


    // $ANTLR start "entryRuleassignment_operator"
    // InternalAnsic.g:10042:1: entryRuleassignment_operator returns [String current=null] : iv_ruleassignment_operator= ruleassignment_operator EOF ;
    public final String entryRuleassignment_operator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleassignment_operator = null;


        try {
            // InternalAnsic.g:10042:59: (iv_ruleassignment_operator= ruleassignment_operator EOF )
            // InternalAnsic.g:10043:2: iv_ruleassignment_operator= ruleassignment_operator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssignment_operatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleassignment_operator=ruleassignment_operator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleassignment_operator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleassignment_operator"


    // $ANTLR start "ruleassignment_operator"
    // InternalAnsic.g:10049:1: ruleassignment_operator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '=' | kw= '*=' | kw= '/=' | kw= '%=' | kw= '+=' | kw= '-=' | kw= '<<=' | kw= '>>=' | kw= '&=' | kw= '^=' | kw= '|=' ) ;
    public final AntlrDatatypeRuleToken ruleassignment_operator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalAnsic.g:10055:2: ( (kw= '=' | kw= '*=' | kw= '/=' | kw= '%=' | kw= '+=' | kw= '-=' | kw= '<<=' | kw= '>>=' | kw= '&=' | kw= '^=' | kw= '|=' ) )
            // InternalAnsic.g:10056:2: (kw= '=' | kw= '*=' | kw= '/=' | kw= '%=' | kw= '+=' | kw= '-=' | kw= '<<=' | kw= '>>=' | kw= '&=' | kw= '^=' | kw= '|=' )
            {
            // InternalAnsic.g:10056:2: (kw= '=' | kw= '*=' | kw= '/=' | kw= '%=' | kw= '+=' | kw= '-=' | kw= '<<=' | kw= '>>=' | kw= '&=' | kw= '^=' | kw= '|=' )
            int alt76=11;
            switch ( input.LA(1) ) {
            case 54:
                {
                alt76=1;
                }
                break;
            case 102:
                {
                alt76=2;
                }
                break;
            case 103:
                {
                alt76=3;
                }
                break;
            case 104:
                {
                alt76=4;
                }
                break;
            case 105:
                {
                alt76=5;
                }
                break;
            case 106:
                {
                alt76=6;
                }
                break;
            case 107:
                {
                alt76=7;
                }
                break;
            case 108:
                {
                alt76=8;
                }
                break;
            case 109:
                {
                alt76=9;
                }
                break;
            case 110:
                {
                alt76=10;
                }
                break;
            case 111:
                {
                alt76=11;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 76, 0, input);

                throw nvae;
            }

            switch (alt76) {
                case 1 :
                    // InternalAnsic.g:10057:3: kw= '='
                    {
                    kw=(Token)match(input,54,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAssignment_operatorAccess().getEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsic.g:10063:3: kw= '*='
                    {
                    kw=(Token)match(input,102,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAssignment_operatorAccess().getAsteriskEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAnsic.g:10069:3: kw= '/='
                    {
                    kw=(Token)match(input,103,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAssignment_operatorAccess().getSolidusEqualsSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAnsic.g:10075:3: kw= '%='
                    {
                    kw=(Token)match(input,104,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAssignment_operatorAccess().getPercentSignEqualsSignKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalAnsic.g:10081:3: kw= '+='
                    {
                    kw=(Token)match(input,105,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAssignment_operatorAccess().getPlusSignEqualsSignKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalAnsic.g:10087:3: kw= '-='
                    {
                    kw=(Token)match(input,106,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAssignment_operatorAccess().getHyphenMinusEqualsSignKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalAnsic.g:10093:3: kw= '<<='
                    {
                    kw=(Token)match(input,107,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAssignment_operatorAccess().getLessThanSignLessThanSignEqualsSignKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalAnsic.g:10099:3: kw= '>>='
                    {
                    kw=(Token)match(input,108,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAssignment_operatorAccess().getGreaterThanSignGreaterThanSignEqualsSignKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalAnsic.g:10105:3: kw= '&='
                    {
                    kw=(Token)match(input,109,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAssignment_operatorAccess().getAmpersandEqualsSignKeyword_8());
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalAnsic.g:10111:3: kw= '^='
                    {
                    kw=(Token)match(input,110,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAssignment_operatorAccess().getCircumflexAccentEqualsSignKeyword_9());
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalAnsic.g:10117:3: kw= '|='
                    {
                    kw=(Token)match(input,111,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAssignment_operatorAccess().getVerticalLineEqualsSignKeyword_10());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleassignment_operator"


    // $ANTLR start "entryRuleunary_operator"
    // InternalAnsic.g:10126:1: entryRuleunary_operator returns [String current=null] : iv_ruleunary_operator= ruleunary_operator EOF ;
    public final String entryRuleunary_operator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleunary_operator = null;


        try {
            // InternalAnsic.g:10126:54: (iv_ruleunary_operator= ruleunary_operator EOF )
            // InternalAnsic.g:10127:2: iv_ruleunary_operator= ruleunary_operator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnary_operatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleunary_operator=ruleunary_operator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleunary_operator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleunary_operator"


    // $ANTLR start "ruleunary_operator"
    // InternalAnsic.g:10133:1: ruleunary_operator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '&' | kw= '*' | kw= '+' | kw= '-' | kw= '~' | kw= '!' ) ;
    public final AntlrDatatypeRuleToken ruleunary_operator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalAnsic.g:10139:2: ( (kw= '&' | kw= '*' | kw= '+' | kw= '-' | kw= '~' | kw= '!' ) )
            // InternalAnsic.g:10140:2: (kw= '&' | kw= '*' | kw= '+' | kw= '-' | kw= '~' | kw= '!' )
            {
            // InternalAnsic.g:10140:2: (kw= '&' | kw= '*' | kw= '+' | kw= '-' | kw= '~' | kw= '!' )
            int alt77=6;
            switch ( input.LA(1) ) {
            case 96:
                {
                alt77=1;
                }
                break;
            case 64:
                {
                alt77=2;
                }
                break;
            case 79:
                {
                alt77=3;
                }
                break;
            case 80:
                {
                alt77=4;
                }
                break;
            case 112:
                {
                alt77=5;
                }
                break;
            case 113:
                {
                alt77=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 77, 0, input);

                throw nvae;
            }

            switch (alt77) {
                case 1 :
                    // InternalAnsic.g:10141:3: kw= '&'
                    {
                    kw=(Token)match(input,96,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnary_operatorAccess().getAmpersandKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAnsic.g:10147:3: kw= '*'
                    {
                    kw=(Token)match(input,64,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnary_operatorAccess().getAsteriskKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAnsic.g:10153:3: kw= '+'
                    {
                    kw=(Token)match(input,79,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnary_operatorAccess().getPlusSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAnsic.g:10159:3: kw= '-'
                    {
                    kw=(Token)match(input,80,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnary_operatorAccess().getHyphenMinusKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalAnsic.g:10165:3: kw= '~'
                    {
                    kw=(Token)match(input,112,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnary_operatorAccess().getTildeKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalAnsic.g:10171:3: kw= '!'
                    {
                    kw=(Token)match(input,113,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUnary_operatorAccess().getExclamationMarkKeyword_5());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleunary_operator"


    // $ANTLR start "entryRuletype_name"
    // InternalAnsic.g:10180:1: entryRuletype_name returns [EObject current=null] : iv_ruletype_name= ruletype_name EOF ;
    public final EObject entryRuletype_name() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletype_name = null;


        try {
            // InternalAnsic.g:10180:50: (iv_ruletype_name= ruletype_name EOF )
            // InternalAnsic.g:10181:2: iv_ruletype_name= ruletype_name EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getType_nameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletype_name=ruletype_name();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletype_name; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletype_name"


    // $ANTLR start "ruletype_name"
    // InternalAnsic.g:10187:1: ruletype_name returns [EObject current=null] : ( ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) ) | ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) ) ) ;
    public final EObject ruletype_name() throws RecognitionException {
        EObject current = null;

        EObject lv_specifier_qualifier_list_0_0 = null;

        EObject lv_abstract_declarator_1_0 = null;

        EObject lv_specifier_qualifier_list_2_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:10193:2: ( ( ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) ) | ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) ) ) )
            // InternalAnsic.g:10194:2: ( ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) ) | ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) ) )
            {
            // InternalAnsic.g:10194:2: ( ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) ) | ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) ) )
            int alt78=2;
            alt78 = dfa78.predict(input);
            switch (alt78) {
                case 1 :
                    // InternalAnsic.g:10195:3: ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) )
                    {
                    // InternalAnsic.g:10195:3: ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) )
                    // InternalAnsic.g:10196:4: ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) )
                    {
                    // InternalAnsic.g:10196:4: ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) )
                    // InternalAnsic.g:10197:5: (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list )
                    {
                    // InternalAnsic.g:10197:5: (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list )
                    // InternalAnsic.g:10198:6: lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getType_nameAccess().getSpecifier_qualifier_listSpecifier_qualifier_listParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_24);
                    lv_specifier_qualifier_list_0_0=rulespecifier_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getType_nameRule());
                      						}
                      						set(
                      							current,
                      							"specifier_qualifier_list",
                      							lv_specifier_qualifier_list_0_0,
                      							"org.xtext.example.Ansic.specifier_qualifier_list");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:10215:4: ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) )
                    // InternalAnsic.g:10216:5: (lv_abstract_declarator_1_0= ruleabstract_declarator )
                    {
                    // InternalAnsic.g:10216:5: (lv_abstract_declarator_1_0= ruleabstract_declarator )
                    // InternalAnsic.g:10217:6: lv_abstract_declarator_1_0= ruleabstract_declarator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getType_nameAccess().getAbstract_declaratorAbstract_declaratorParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_abstract_declarator_1_0=ruleabstract_declarator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getType_nameRule());
                      						}
                      						set(
                      							current,
                      							"abstract_declarator",
                      							lv_abstract_declarator_1_0,
                      							"org.xtext.example.Ansic.abstract_declarator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:10236:3: ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) )
                    {
                    // InternalAnsic.g:10236:3: ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) )
                    // InternalAnsic.g:10237:4: (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list )
                    {
                    // InternalAnsic.g:10237:4: (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list )
                    // InternalAnsic.g:10238:5: lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getType_nameAccess().getSpecifier_qualifier_listSpecifier_qualifier_listParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_specifier_qualifier_list_2_0=rulespecifier_qualifier_list();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getType_nameRule());
                      					}
                      					set(
                      						current,
                      						"specifier_qualifier_list",
                      						lv_specifier_qualifier_list_2_0,
                      						"org.xtext.example.Ansic.specifier_qualifier_list");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletype_name"


    // $ANTLR start "entryRuleexpression"
    // InternalAnsic.g:10259:1: entryRuleexpression returns [EObject current=null] : iv_ruleexpression= ruleexpression EOF ;
    public final EObject entryRuleexpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleexpression = null;


        try {
            // InternalAnsic.g:10259:51: (iv_ruleexpression= ruleexpression EOF )
            // InternalAnsic.g:10260:2: iv_ruleexpression= ruleexpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleexpression=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleexpression"


    // $ANTLR start "ruleexpression"
    // InternalAnsic.g:10266:1: ruleexpression returns [EObject current=null] : ( ( (lv_assignment_expression_0_0= ruleassignment_expression ) ) ( (lv_expression_linha_1_0= ruleexpression_linha ) ) ) ;
    public final EObject ruleexpression() throws RecognitionException {
        EObject current = null;

        EObject lv_assignment_expression_0_0 = null;

        EObject lv_expression_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:10272:2: ( ( ( (lv_assignment_expression_0_0= ruleassignment_expression ) ) ( (lv_expression_linha_1_0= ruleexpression_linha ) ) ) )
            // InternalAnsic.g:10273:2: ( ( (lv_assignment_expression_0_0= ruleassignment_expression ) ) ( (lv_expression_linha_1_0= ruleexpression_linha ) ) )
            {
            // InternalAnsic.g:10273:2: ( ( (lv_assignment_expression_0_0= ruleassignment_expression ) ) ( (lv_expression_linha_1_0= ruleexpression_linha ) ) )
            // InternalAnsic.g:10274:3: ( (lv_assignment_expression_0_0= ruleassignment_expression ) ) ( (lv_expression_linha_1_0= ruleexpression_linha ) )
            {
            // InternalAnsic.g:10274:3: ( (lv_assignment_expression_0_0= ruleassignment_expression ) )
            // InternalAnsic.g:10275:4: (lv_assignment_expression_0_0= ruleassignment_expression )
            {
            // InternalAnsic.g:10275:4: (lv_assignment_expression_0_0= ruleassignment_expression )
            // InternalAnsic.g:10276:5: lv_assignment_expression_0_0= ruleassignment_expression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExpressionAccess().getAssignment_expressionAssignment_expressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_12);
            lv_assignment_expression_0_0=ruleassignment_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExpressionRule());
              					}
              					set(
              						current,
              						"assignment_expression",
              						lv_assignment_expression_0_0,
              						"org.xtext.example.Ansic.assignment_expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:10293:3: ( (lv_expression_linha_1_0= ruleexpression_linha ) )
            // InternalAnsic.g:10294:4: (lv_expression_linha_1_0= ruleexpression_linha )
            {
            // InternalAnsic.g:10294:4: (lv_expression_linha_1_0= ruleexpression_linha )
            // InternalAnsic.g:10295:5: lv_expression_linha_1_0= ruleexpression_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExpressionAccess().getExpression_linhaExpression_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_linha_1_0=ruleexpression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExpressionRule());
              					}
              					set(
              						current,
              						"expression_linha",
              						lv_expression_linha_1_0,
              						"org.xtext.example.Ansic.expression_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleexpression"


    // $ANTLR start "entryRuleexpression_linha"
    // InternalAnsic.g:10316:1: entryRuleexpression_linha returns [EObject current=null] : iv_ruleexpression_linha= ruleexpression_linha EOF ;
    public final EObject entryRuleexpression_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleexpression_linha = null;


        try {
            // InternalAnsic.g:10316:57: (iv_ruleexpression_linha= ruleexpression_linha EOF )
            // InternalAnsic.g:10317:2: iv_ruleexpression_linha= ruleexpression_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpression_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleexpression_linha=ruleexpression_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexpression_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleexpression_linha"


    // $ANTLR start "ruleexpression_linha"
    // InternalAnsic.g:10323:1: ruleexpression_linha returns [EObject current=null] : ( () (otherlv_1= ',' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) ( (lv_expression_linha_3_0= ruleexpression_linha ) ) )? ) ;
    public final EObject ruleexpression_linha() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_assignment_expression_2_0 = null;

        EObject lv_expression_linha_3_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:10329:2: ( ( () (otherlv_1= ',' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) ( (lv_expression_linha_3_0= ruleexpression_linha ) ) )? ) )
            // InternalAnsic.g:10330:2: ( () (otherlv_1= ',' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) ( (lv_expression_linha_3_0= ruleexpression_linha ) ) )? )
            {
            // InternalAnsic.g:10330:2: ( () (otherlv_1= ',' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) ( (lv_expression_linha_3_0= ruleexpression_linha ) ) )? )
            // InternalAnsic.g:10331:3: () (otherlv_1= ',' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) ( (lv_expression_linha_3_0= ruleexpression_linha ) ) )?
            {
            // InternalAnsic.g:10331:3: ()
            // InternalAnsic.g:10332:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getExpression_linhaAccess().getExpressionLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:10341:3: (otherlv_1= ',' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) ( (lv_expression_linha_3_0= ruleexpression_linha ) ) )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==53) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // InternalAnsic.g:10342:4: otherlv_1= ',' ( (lv_assignment_expression_2_0= ruleassignment_expression ) ) ( (lv_expression_linha_3_0= ruleexpression_linha ) )
                    {
                    otherlv_1=(Token)match(input,53,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getExpression_linhaAccess().getCommaKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:10346:4: ( (lv_assignment_expression_2_0= ruleassignment_expression ) )
                    // InternalAnsic.g:10347:5: (lv_assignment_expression_2_0= ruleassignment_expression )
                    {
                    // InternalAnsic.g:10347:5: (lv_assignment_expression_2_0= ruleassignment_expression )
                    // InternalAnsic.g:10348:6: lv_assignment_expression_2_0= ruleassignment_expression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpression_linhaAccess().getAssignment_expressionAssignment_expressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_assignment_expression_2_0=ruleassignment_expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpression_linhaRule());
                      						}
                      						set(
                      							current,
                      							"assignment_expression",
                      							lv_assignment_expression_2_0,
                      							"org.xtext.example.Ansic.assignment_expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:10365:4: ( (lv_expression_linha_3_0= ruleexpression_linha ) )
                    // InternalAnsic.g:10366:5: (lv_expression_linha_3_0= ruleexpression_linha )
                    {
                    // InternalAnsic.g:10366:5: (lv_expression_linha_3_0= ruleexpression_linha )
                    // InternalAnsic.g:10367:6: lv_expression_linha_3_0= ruleexpression_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpression_linhaAccess().getExpression_linhaExpression_linhaParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_linha_3_0=ruleexpression_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpression_linhaRule());
                      						}
                      						set(
                      							current,
                      							"expression_linha",
                      							lv_expression_linha_3_0,
                      							"org.xtext.example.Ansic.expression_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleexpression_linha"


    // $ANTLR start "entryRuleconstant_expression"
    // InternalAnsic.g:10389:1: entryRuleconstant_expression returns [EObject current=null] : iv_ruleconstant_expression= ruleconstant_expression EOF ;
    public final EObject entryRuleconstant_expression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleconstant_expression = null;


        try {
            // InternalAnsic.g:10389:60: (iv_ruleconstant_expression= ruleconstant_expression EOF )
            // InternalAnsic.g:10390:2: iv_ruleconstant_expression= ruleconstant_expression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstant_expressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleconstant_expression=ruleconstant_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleconstant_expression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleconstant_expression"


    // $ANTLR start "ruleconstant_expression"
    // InternalAnsic.g:10396:1: ruleconstant_expression returns [EObject current=null] : ( (lv_conditional_expression_0_0= ruleconditional_expression ) ) ;
    public final EObject ruleconstant_expression() throws RecognitionException {
        EObject current = null;

        EObject lv_conditional_expression_0_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:10402:2: ( ( (lv_conditional_expression_0_0= ruleconditional_expression ) ) )
            // InternalAnsic.g:10403:2: ( (lv_conditional_expression_0_0= ruleconditional_expression ) )
            {
            // InternalAnsic.g:10403:2: ( (lv_conditional_expression_0_0= ruleconditional_expression ) )
            // InternalAnsic.g:10404:3: (lv_conditional_expression_0_0= ruleconditional_expression )
            {
            // InternalAnsic.g:10404:3: (lv_conditional_expression_0_0= ruleconditional_expression )
            // InternalAnsic.g:10405:4: lv_conditional_expression_0_0= ruleconditional_expression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getConstant_expressionAccess().getConditional_expressionConditional_expressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_conditional_expression_0_0=ruleconditional_expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getConstant_expressionRule());
              				}
              				set(
              					current,
              					"conditional_expression",
              					lv_conditional_expression_0_0,
              					"org.xtext.example.Ansic.conditional_expression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleconstant_expression"


    // $ANTLR start "entryRuleinit_declarator_list"
    // InternalAnsic.g:10425:1: entryRuleinit_declarator_list returns [EObject current=null] : iv_ruleinit_declarator_list= ruleinit_declarator_list EOF ;
    public final EObject entryRuleinit_declarator_list() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleinit_declarator_list = null;


        try {
            // InternalAnsic.g:10425:61: (iv_ruleinit_declarator_list= ruleinit_declarator_list EOF )
            // InternalAnsic.g:10426:2: iv_ruleinit_declarator_list= ruleinit_declarator_list EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInit_declarator_listRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleinit_declarator_list=ruleinit_declarator_list();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleinit_declarator_list; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleinit_declarator_list"


    // $ANTLR start "ruleinit_declarator_list"
    // InternalAnsic.g:10432:1: ruleinit_declarator_list returns [EObject current=null] : ( ( (lv_init_declarator_0_0= ruleinit_declarator ) ) ( (lv_init_declarator_list_linha_1_0= ruleinit_declarator_list_linha ) ) ) ;
    public final EObject ruleinit_declarator_list() throws RecognitionException {
        EObject current = null;

        EObject lv_init_declarator_0_0 = null;

        EObject lv_init_declarator_list_linha_1_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:10438:2: ( ( ( (lv_init_declarator_0_0= ruleinit_declarator ) ) ( (lv_init_declarator_list_linha_1_0= ruleinit_declarator_list_linha ) ) ) )
            // InternalAnsic.g:10439:2: ( ( (lv_init_declarator_0_0= ruleinit_declarator ) ) ( (lv_init_declarator_list_linha_1_0= ruleinit_declarator_list_linha ) ) )
            {
            // InternalAnsic.g:10439:2: ( ( (lv_init_declarator_0_0= ruleinit_declarator ) ) ( (lv_init_declarator_list_linha_1_0= ruleinit_declarator_list_linha ) ) )
            // InternalAnsic.g:10440:3: ( (lv_init_declarator_0_0= ruleinit_declarator ) ) ( (lv_init_declarator_list_linha_1_0= ruleinit_declarator_list_linha ) )
            {
            // InternalAnsic.g:10440:3: ( (lv_init_declarator_0_0= ruleinit_declarator ) )
            // InternalAnsic.g:10441:4: (lv_init_declarator_0_0= ruleinit_declarator )
            {
            // InternalAnsic.g:10441:4: (lv_init_declarator_0_0= ruleinit_declarator )
            // InternalAnsic.g:10442:5: lv_init_declarator_0_0= ruleinit_declarator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getInit_declarator_listAccess().getInit_declaratorInit_declaratorParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_12);
            lv_init_declarator_0_0=ruleinit_declarator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getInit_declarator_listRule());
              					}
              					set(
              						current,
              						"init_declarator",
              						lv_init_declarator_0_0,
              						"org.xtext.example.Ansic.init_declarator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAnsic.g:10459:3: ( (lv_init_declarator_list_linha_1_0= ruleinit_declarator_list_linha ) )
            // InternalAnsic.g:10460:4: (lv_init_declarator_list_linha_1_0= ruleinit_declarator_list_linha )
            {
            // InternalAnsic.g:10460:4: (lv_init_declarator_list_linha_1_0= ruleinit_declarator_list_linha )
            // InternalAnsic.g:10461:5: lv_init_declarator_list_linha_1_0= ruleinit_declarator_list_linha
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getInit_declarator_listAccess().getInit_declarator_list_linhaInit_declarator_list_linhaParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_init_declarator_list_linha_1_0=ruleinit_declarator_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getInit_declarator_listRule());
              					}
              					set(
              						current,
              						"init_declarator_list_linha",
              						lv_init_declarator_list_linha_1_0,
              						"org.xtext.example.Ansic.init_declarator_list_linha");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleinit_declarator_list"


    // $ANTLR start "entryRuleinit_declarator_list_linha"
    // InternalAnsic.g:10482:1: entryRuleinit_declarator_list_linha returns [EObject current=null] : iv_ruleinit_declarator_list_linha= ruleinit_declarator_list_linha EOF ;
    public final EObject entryRuleinit_declarator_list_linha() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleinit_declarator_list_linha = null;


        try {
            // InternalAnsic.g:10482:67: (iv_ruleinit_declarator_list_linha= ruleinit_declarator_list_linha EOF )
            // InternalAnsic.g:10483:2: iv_ruleinit_declarator_list_linha= ruleinit_declarator_list_linha EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInit_declarator_list_linhaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleinit_declarator_list_linha=ruleinit_declarator_list_linha();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleinit_declarator_list_linha; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleinit_declarator_list_linha"


    // $ANTLR start "ruleinit_declarator_list_linha"
    // InternalAnsic.g:10489:1: ruleinit_declarator_list_linha returns [EObject current=null] : ( () (otherlv_1= ',' ( (lv_init_declarator_2_0= ruleinit_declarator ) ) ( (lv_init_declarator_list_linha_3_0= ruleinit_declarator_list_linha ) ) )? ) ;
    public final EObject ruleinit_declarator_list_linha() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_init_declarator_2_0 = null;

        EObject lv_init_declarator_list_linha_3_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:10495:2: ( ( () (otherlv_1= ',' ( (lv_init_declarator_2_0= ruleinit_declarator ) ) ( (lv_init_declarator_list_linha_3_0= ruleinit_declarator_list_linha ) ) )? ) )
            // InternalAnsic.g:10496:2: ( () (otherlv_1= ',' ( (lv_init_declarator_2_0= ruleinit_declarator ) ) ( (lv_init_declarator_list_linha_3_0= ruleinit_declarator_list_linha ) ) )? )
            {
            // InternalAnsic.g:10496:2: ( () (otherlv_1= ',' ( (lv_init_declarator_2_0= ruleinit_declarator ) ) ( (lv_init_declarator_list_linha_3_0= ruleinit_declarator_list_linha ) ) )? )
            // InternalAnsic.g:10497:3: () (otherlv_1= ',' ( (lv_init_declarator_2_0= ruleinit_declarator ) ) ( (lv_init_declarator_list_linha_3_0= ruleinit_declarator_list_linha ) ) )?
            {
            // InternalAnsic.g:10497:3: ()
            // InternalAnsic.g:10498:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getInit_declarator_list_linhaAccess().getInitDecclaratorListLinhaActionAction_0(),
              					current);
              			
            }

            }

            // InternalAnsic.g:10507:3: (otherlv_1= ',' ( (lv_init_declarator_2_0= ruleinit_declarator ) ) ( (lv_init_declarator_list_linha_3_0= ruleinit_declarator_list_linha ) ) )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==53) ) {
                int LA80_1 = input.LA(2);

                if ( (LA80_1==RULE_ID||LA80_1==31||LA80_1==64) ) {
                    alt80=1;
                }
            }
            switch (alt80) {
                case 1 :
                    // InternalAnsic.g:10508:4: otherlv_1= ',' ( (lv_init_declarator_2_0= ruleinit_declarator ) ) ( (lv_init_declarator_list_linha_3_0= ruleinit_declarator_list_linha ) )
                    {
                    otherlv_1=(Token)match(input,53,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getInit_declarator_list_linhaAccess().getCommaKeyword_1_0());
                      			
                    }
                    // InternalAnsic.g:10512:4: ( (lv_init_declarator_2_0= ruleinit_declarator ) )
                    // InternalAnsic.g:10513:5: (lv_init_declarator_2_0= ruleinit_declarator )
                    {
                    // InternalAnsic.g:10513:5: (lv_init_declarator_2_0= ruleinit_declarator )
                    // InternalAnsic.g:10514:6: lv_init_declarator_2_0= ruleinit_declarator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInit_declarator_list_linhaAccess().getInit_declaratorInit_declaratorParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_init_declarator_2_0=ruleinit_declarator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInit_declarator_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"init_declarator",
                      							lv_init_declarator_2_0,
                      							"org.xtext.example.Ansic.init_declarator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAnsic.g:10531:4: ( (lv_init_declarator_list_linha_3_0= ruleinit_declarator_list_linha ) )
                    // InternalAnsic.g:10532:5: (lv_init_declarator_list_linha_3_0= ruleinit_declarator_list_linha )
                    {
                    // InternalAnsic.g:10532:5: (lv_init_declarator_list_linha_3_0= ruleinit_declarator_list_linha )
                    // InternalAnsic.g:10533:6: lv_init_declarator_list_linha_3_0= ruleinit_declarator_list_linha
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInit_declarator_list_linhaAccess().getInit_declarator_list_linhaInit_declarator_list_linhaParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_init_declarator_list_linha_3_0=ruleinit_declarator_list_linha();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInit_declarator_list_linhaRule());
                      						}
                      						set(
                      							current,
                      							"init_declarator_list_linha",
                      							lv_init_declarator_list_linha_3_0,
                      							"org.xtext.example.Ansic.init_declarator_list_linha");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleinit_declarator_list_linha"


    // $ANTLR start "entryRuleinit_declarator"
    // InternalAnsic.g:10555:1: entryRuleinit_declarator returns [EObject current=null] : iv_ruleinit_declarator= ruleinit_declarator EOF ;
    public final EObject entryRuleinit_declarator() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleinit_declarator = null;


        try {
            // InternalAnsic.g:10555:56: (iv_ruleinit_declarator= ruleinit_declarator EOF )
            // InternalAnsic.g:10556:2: iv_ruleinit_declarator= ruleinit_declarator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInit_declaratorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleinit_declarator=ruleinit_declarator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleinit_declarator; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleinit_declarator"


    // $ANTLR start "ruleinit_declarator"
    // InternalAnsic.g:10562:1: ruleinit_declarator returns [EObject current=null] : ( ( ( (lv_declarator_0_0= ruledeclarator ) ) otherlv_1= '=' ( (lv_initializer_2_0= ruleinitializer ) ) ) | ( (lv_declarator_3_0= ruledeclarator ) ) ) ;
    public final EObject ruleinit_declarator() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_declarator_0_0 = null;

        EObject lv_initializer_2_0 = null;

        EObject lv_declarator_3_0 = null;



        	enterRule();

        try {
            // InternalAnsic.g:10568:2: ( ( ( ( (lv_declarator_0_0= ruledeclarator ) ) otherlv_1= '=' ( (lv_initializer_2_0= ruleinitializer ) ) ) | ( (lv_declarator_3_0= ruledeclarator ) ) ) )
            // InternalAnsic.g:10569:2: ( ( ( (lv_declarator_0_0= ruledeclarator ) ) otherlv_1= '=' ( (lv_initializer_2_0= ruleinitializer ) ) ) | ( (lv_declarator_3_0= ruledeclarator ) ) )
            {
            // InternalAnsic.g:10569:2: ( ( ( (lv_declarator_0_0= ruledeclarator ) ) otherlv_1= '=' ( (lv_initializer_2_0= ruleinitializer ) ) ) | ( (lv_declarator_3_0= ruledeclarator ) ) )
            int alt81=2;
            switch ( input.LA(1) ) {
            case 64:
                {
                int LA81_1 = input.LA(2);

                if ( (synpred190_InternalAnsic()) ) {
                    alt81=1;
                }
                else if ( (true) ) {
                    alt81=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 81, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
                {
                int LA81_2 = input.LA(2);

                if ( (synpred190_InternalAnsic()) ) {
                    alt81=1;
                }
                else if ( (true) ) {
                    alt81=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 81, 2, input);

                    throw nvae;
                }
                }
                break;
            case 31:
                {
                int LA81_3 = input.LA(2);

                if ( (synpred190_InternalAnsic()) ) {
                    alt81=1;
                }
                else if ( (true) ) {
                    alt81=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 81, 3, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 81, 0, input);

                throw nvae;
            }

            switch (alt81) {
                case 1 :
                    // InternalAnsic.g:10570:3: ( ( (lv_declarator_0_0= ruledeclarator ) ) otherlv_1= '=' ( (lv_initializer_2_0= ruleinitializer ) ) )
                    {
                    // InternalAnsic.g:10570:3: ( ( (lv_declarator_0_0= ruledeclarator ) ) otherlv_1= '=' ( (lv_initializer_2_0= ruleinitializer ) ) )
                    // InternalAnsic.g:10571:4: ( (lv_declarator_0_0= ruledeclarator ) ) otherlv_1= '=' ( (lv_initializer_2_0= ruleinitializer ) )
                    {
                    // InternalAnsic.g:10571:4: ( (lv_declarator_0_0= ruledeclarator ) )
                    // InternalAnsic.g:10572:5: (lv_declarator_0_0= ruledeclarator )
                    {
                    // InternalAnsic.g:10572:5: (lv_declarator_0_0= ruledeclarator )
                    // InternalAnsic.g:10573:6: lv_declarator_0_0= ruledeclarator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInit_declaratorAccess().getDeclaratorDeclaratorParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_13);
                    lv_declarator_0_0=ruledeclarator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInit_declaratorRule());
                      						}
                      						set(
                      							current,
                      							"declarator",
                      							lv_declarator_0_0,
                      							"org.xtext.example.Ansic.declarator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,54,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getInit_declaratorAccess().getEqualsSignKeyword_0_1());
                      			
                    }
                    // InternalAnsic.g:10594:4: ( (lv_initializer_2_0= ruleinitializer ) )
                    // InternalAnsic.g:10595:5: (lv_initializer_2_0= ruleinitializer )
                    {
                    // InternalAnsic.g:10595:5: (lv_initializer_2_0= ruleinitializer )
                    // InternalAnsic.g:10596:6: lv_initializer_2_0= ruleinitializer
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInit_declaratorAccess().getInitializerInitializerParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_initializer_2_0=ruleinitializer();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInit_declaratorRule());
                      						}
                      						set(
                      							current,
                      							"initializer",
                      							lv_initializer_2_0,
                      							"org.xtext.example.Ansic.initializer");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:10615:3: ( (lv_declarator_3_0= ruledeclarator ) )
                    {
                    // InternalAnsic.g:10615:3: ( (lv_declarator_3_0= ruledeclarator ) )
                    // InternalAnsic.g:10616:4: (lv_declarator_3_0= ruledeclarator )
                    {
                    // InternalAnsic.g:10616:4: (lv_declarator_3_0= ruledeclarator )
                    // InternalAnsic.g:10617:5: lv_declarator_3_0= ruledeclarator
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getInit_declaratorAccess().getDeclaratorDeclaratorParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_declarator_3_0=ruledeclarator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getInit_declaratorRule());
                      					}
                      					set(
                      						current,
                      						"declarator",
                      						lv_declarator_3_0,
                      						"org.xtext.example.Ansic.declarator");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleinit_declarator"


    // $ANTLR start "entryRulestring_ufcg"
    // InternalAnsic.g:10638:1: entryRulestring_ufcg returns [EObject current=null] : iv_rulestring_ufcg= rulestring_ufcg EOF ;
    public final EObject entryRulestring_ufcg() throws RecognitionException {
        EObject current = null;

        EObject iv_rulestring_ufcg = null;


        try {
            // InternalAnsic.g:10638:52: (iv_rulestring_ufcg= rulestring_ufcg EOF )
            // InternalAnsic.g:10639:2: iv_rulestring_ufcg= rulestring_ufcg EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getString_ufcgRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulestring_ufcg=rulestring_ufcg();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulestring_ufcg; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulestring_ufcg"


    // $ANTLR start "rulestring_ufcg"
    // InternalAnsic.g:10645:1: rulestring_ufcg returns [EObject current=null] : ( ( (lv_string_literal_0_0= RULE_STRING_LITERAL ) ) | ( (lv___func___1_0= '__func__' ) ) ) ;
    public final EObject rulestring_ufcg() throws RecognitionException {
        EObject current = null;

        Token lv_string_literal_0_0=null;
        Token lv___func___1_0=null;


        	enterRule();

        try {
            // InternalAnsic.g:10651:2: ( ( ( (lv_string_literal_0_0= RULE_STRING_LITERAL ) ) | ( (lv___func___1_0= '__func__' ) ) ) )
            // InternalAnsic.g:10652:2: ( ( (lv_string_literal_0_0= RULE_STRING_LITERAL ) ) | ( (lv___func___1_0= '__func__' ) ) )
            {
            // InternalAnsic.g:10652:2: ( ( (lv_string_literal_0_0= RULE_STRING_LITERAL ) ) | ( (lv___func___1_0= '__func__' ) ) )
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==RULE_STRING_LITERAL) ) {
                alt82=1;
            }
            else if ( (LA82_0==114) ) {
                alt82=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 82, 0, input);

                throw nvae;
            }
            switch (alt82) {
                case 1 :
                    // InternalAnsic.g:10653:3: ( (lv_string_literal_0_0= RULE_STRING_LITERAL ) )
                    {
                    // InternalAnsic.g:10653:3: ( (lv_string_literal_0_0= RULE_STRING_LITERAL ) )
                    // InternalAnsic.g:10654:4: (lv_string_literal_0_0= RULE_STRING_LITERAL )
                    {
                    // InternalAnsic.g:10654:4: (lv_string_literal_0_0= RULE_STRING_LITERAL )
                    // InternalAnsic.g:10655:5: lv_string_literal_0_0= RULE_STRING_LITERAL
                    {
                    lv_string_literal_0_0=(Token)match(input,RULE_STRING_LITERAL,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_literal_0_0, grammarAccess.getString_ufcgAccess().getString_literalSTRING_LITERALTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getString_ufcgRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string_literal",
                      						lv_string_literal_0_0,
                      						"org.xtext.example.Ansic.STRING_LITERAL");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:10672:3: ( (lv___func___1_0= '__func__' ) )
                    {
                    // InternalAnsic.g:10672:3: ( (lv___func___1_0= '__func__' ) )
                    // InternalAnsic.g:10673:4: (lv___func___1_0= '__func__' )
                    {
                    // InternalAnsic.g:10673:4: (lv___func___1_0= '__func__' )
                    // InternalAnsic.g:10674:5: lv___func___1_0= '__func__'
                    {
                    lv___func___1_0=(Token)match(input,114,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv___func___1_0, grammarAccess.getString_ufcgAccess().get__func____func__Keyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getString_ufcgRule());
                      					}
                      					setWithLastConsumed(current, "__func__", lv___func___1_0, "__func__");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulestring_ufcg"


    // $ANTLR start "entryRuleconstant"
    // InternalAnsic.g:10690:1: entryRuleconstant returns [EObject current=null] : iv_ruleconstant= ruleconstant EOF ;
    public final EObject entryRuleconstant() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleconstant = null;


        try {
            // InternalAnsic.g:10690:49: (iv_ruleconstant= ruleconstant EOF )
            // InternalAnsic.g:10691:2: iv_ruleconstant= ruleconstant EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstantRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleconstant=ruleconstant();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleconstant; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleconstant"


    // $ANTLR start "ruleconstant"
    // InternalAnsic.g:10697:1: ruleconstant returns [EObject current=null] : ( ( (lv_i_constant_0_0= RULE_I_CONSTANT ) ) | ( (lv_f_constant_1_0= RULE_F_CONSTANT ) ) | ( (lv_enumz_2_0= 'enum' ) ) ) ;
    public final EObject ruleconstant() throws RecognitionException {
        EObject current = null;

        Token lv_i_constant_0_0=null;
        Token lv_f_constant_1_0=null;
        Token lv_enumz_2_0=null;


        	enterRule();

        try {
            // InternalAnsic.g:10703:2: ( ( ( (lv_i_constant_0_0= RULE_I_CONSTANT ) ) | ( (lv_f_constant_1_0= RULE_F_CONSTANT ) ) | ( (lv_enumz_2_0= 'enum' ) ) ) )
            // InternalAnsic.g:10704:2: ( ( (lv_i_constant_0_0= RULE_I_CONSTANT ) ) | ( (lv_f_constant_1_0= RULE_F_CONSTANT ) ) | ( (lv_enumz_2_0= 'enum' ) ) )
            {
            // InternalAnsic.g:10704:2: ( ( (lv_i_constant_0_0= RULE_I_CONSTANT ) ) | ( (lv_f_constant_1_0= RULE_F_CONSTANT ) ) | ( (lv_enumz_2_0= 'enum' ) ) )
            int alt83=3;
            switch ( input.LA(1) ) {
            case RULE_I_CONSTANT:
                {
                alt83=1;
                }
                break;
            case RULE_F_CONSTANT:
                {
                alt83=2;
                }
                break;
            case 50:
                {
                alt83=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 83, 0, input);

                throw nvae;
            }

            switch (alt83) {
                case 1 :
                    // InternalAnsic.g:10705:3: ( (lv_i_constant_0_0= RULE_I_CONSTANT ) )
                    {
                    // InternalAnsic.g:10705:3: ( (lv_i_constant_0_0= RULE_I_CONSTANT ) )
                    // InternalAnsic.g:10706:4: (lv_i_constant_0_0= RULE_I_CONSTANT )
                    {
                    // InternalAnsic.g:10706:4: (lv_i_constant_0_0= RULE_I_CONSTANT )
                    // InternalAnsic.g:10707:5: lv_i_constant_0_0= RULE_I_CONSTANT
                    {
                    lv_i_constant_0_0=(Token)match(input,RULE_I_CONSTANT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_i_constant_0_0, grammarAccess.getConstantAccess().getI_constantI_CONSTANTTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getConstantRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"i_constant",
                      						lv_i_constant_0_0,
                      						"org.xtext.example.Ansic.I_CONSTANT");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAnsic.g:10724:3: ( (lv_f_constant_1_0= RULE_F_CONSTANT ) )
                    {
                    // InternalAnsic.g:10724:3: ( (lv_f_constant_1_0= RULE_F_CONSTANT ) )
                    // InternalAnsic.g:10725:4: (lv_f_constant_1_0= RULE_F_CONSTANT )
                    {
                    // InternalAnsic.g:10725:4: (lv_f_constant_1_0= RULE_F_CONSTANT )
                    // InternalAnsic.g:10726:5: lv_f_constant_1_0= RULE_F_CONSTANT
                    {
                    lv_f_constant_1_0=(Token)match(input,RULE_F_CONSTANT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_f_constant_1_0, grammarAccess.getConstantAccess().getF_constantF_CONSTANTTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getConstantRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"f_constant",
                      						lv_f_constant_1_0,
                      						"org.xtext.example.Ansic.F_CONSTANT");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalAnsic.g:10743:3: ( (lv_enumz_2_0= 'enum' ) )
                    {
                    // InternalAnsic.g:10743:3: ( (lv_enumz_2_0= 'enum' ) )
                    // InternalAnsic.g:10744:4: (lv_enumz_2_0= 'enum' )
                    {
                    // InternalAnsic.g:10744:4: (lv_enumz_2_0= 'enum' )
                    // InternalAnsic.g:10745:5: lv_enumz_2_0= 'enum'
                    {
                    lv_enumz_2_0=(Token)match(input,50,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_enumz_2_0, grammarAccess.getConstantAccess().getEnumzEnumKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getConstantRule());
                      					}
                      					setWithLastConsumed(current, "enumz", lv_enumz_2_0, "enum");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleconstant"

    // $ANTLR start synpred1_InternalAnsic
    public final void synpred1_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_function_definitio_0_0 = null;


        // InternalAnsic.g:178:3: ( ( (lv_function_definitio_0_0= rulefunction_definition ) ) )
        // InternalAnsic.g:178:3: ( (lv_function_definitio_0_0= rulefunction_definition ) )
        {
        // InternalAnsic.g:178:3: ( (lv_function_definitio_0_0= rulefunction_definition ) )
        // InternalAnsic.g:179:4: (lv_function_definitio_0_0= rulefunction_definition )
        {
        // InternalAnsic.g:179:4: (lv_function_definitio_0_0= rulefunction_definition )
        // InternalAnsic.g:180:5: lv_function_definitio_0_0= rulefunction_definition
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getExternal_declarationAccess().getFunction_definitioFunction_definitionParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_definitio_0_0=rulefunction_definition();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred1_InternalAnsic

    // $ANTLR start synpred2_InternalAnsic
    public final void synpred2_InternalAnsic_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_storage_class_specifier_0_0 = null;

        EObject lv_declaration_specifiers_1_0 = null;


        // InternalAnsic.g:236:3: ( ( ( (lv_storage_class_specifier_0_0= rulestorage_class_specifier ) ) ( (lv_declaration_specifiers_1_0= ruledeclaration_specifiers ) ) ) )
        // InternalAnsic.g:236:3: ( ( (lv_storage_class_specifier_0_0= rulestorage_class_specifier ) ) ( (lv_declaration_specifiers_1_0= ruledeclaration_specifiers ) ) )
        {
        // InternalAnsic.g:236:3: ( ( (lv_storage_class_specifier_0_0= rulestorage_class_specifier ) ) ( (lv_declaration_specifiers_1_0= ruledeclaration_specifiers ) ) )
        // InternalAnsic.g:237:4: ( (lv_storage_class_specifier_0_0= rulestorage_class_specifier ) ) ( (lv_declaration_specifiers_1_0= ruledeclaration_specifiers ) )
        {
        // InternalAnsic.g:237:4: ( (lv_storage_class_specifier_0_0= rulestorage_class_specifier ) )
        // InternalAnsic.g:238:5: (lv_storage_class_specifier_0_0= rulestorage_class_specifier )
        {
        // InternalAnsic.g:238:5: (lv_storage_class_specifier_0_0= rulestorage_class_specifier )
        // InternalAnsic.g:239:6: lv_storage_class_specifier_0_0= rulestorage_class_specifier
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getStorage_class_specifierStorage_class_specifierParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_storage_class_specifier_0_0=rulestorage_class_specifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:256:4: ( (lv_declaration_specifiers_1_0= ruledeclaration_specifiers ) )
        // InternalAnsic.g:257:5: (lv_declaration_specifiers_1_0= ruledeclaration_specifiers )
        {
        // InternalAnsic.g:257:5: (lv_declaration_specifiers_1_0= ruledeclaration_specifiers )
        // InternalAnsic.g:258:6: lv_declaration_specifiers_1_0= ruledeclaration_specifiers
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_declaration_specifiers_1_0=ruledeclaration_specifiers();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred2_InternalAnsic

    // $ANTLR start synpred3_InternalAnsic
    public final void synpred3_InternalAnsic_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_storage_class_specifier_2_0 = null;


        // InternalAnsic.g:277:3: ( ( (lv_storage_class_specifier_2_0= rulestorage_class_specifier ) ) )
        // InternalAnsic.g:277:3: ( (lv_storage_class_specifier_2_0= rulestorage_class_specifier ) )
        {
        // InternalAnsic.g:277:3: ( (lv_storage_class_specifier_2_0= rulestorage_class_specifier ) )
        // InternalAnsic.g:278:4: (lv_storage_class_specifier_2_0= rulestorage_class_specifier )
        {
        // InternalAnsic.g:278:4: (lv_storage_class_specifier_2_0= rulestorage_class_specifier )
        // InternalAnsic.g:279:5: lv_storage_class_specifier_2_0= rulestorage_class_specifier
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getStorage_class_specifierStorage_class_specifierParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_storage_class_specifier_2_0=rulestorage_class_specifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred3_InternalAnsic

    // $ANTLR start synpred4_InternalAnsic
    public final void synpred4_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_type_specifier_3_0 = null;

        EObject lv_declaration_specifiers_4_0 = null;


        // InternalAnsic.g:297:3: ( ( ( (lv_type_specifier_3_0= ruletype_specifier ) ) ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) ) )
        // InternalAnsic.g:297:3: ( ( (lv_type_specifier_3_0= ruletype_specifier ) ) ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) )
        {
        // InternalAnsic.g:297:3: ( ( (lv_type_specifier_3_0= ruletype_specifier ) ) ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) )
        // InternalAnsic.g:298:4: ( (lv_type_specifier_3_0= ruletype_specifier ) ) ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) )
        {
        // InternalAnsic.g:298:4: ( (lv_type_specifier_3_0= ruletype_specifier ) )
        // InternalAnsic.g:299:5: (lv_type_specifier_3_0= ruletype_specifier )
        {
        // InternalAnsic.g:299:5: (lv_type_specifier_3_0= ruletype_specifier )
        // InternalAnsic.g:300:6: lv_type_specifier_3_0= ruletype_specifier
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getType_specifierType_specifierParserRuleCall_2_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_type_specifier_3_0=ruletype_specifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:317:4: ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) )
        // InternalAnsic.g:318:5: (lv_declaration_specifiers_4_0= ruledeclaration_specifiers )
        {
        // InternalAnsic.g:318:5: (lv_declaration_specifiers_4_0= ruledeclaration_specifiers )
        // InternalAnsic.g:319:6: lv_declaration_specifiers_4_0= ruledeclaration_specifiers
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_2_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_declaration_specifiers_4_0=ruledeclaration_specifiers();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred4_InternalAnsic

    // $ANTLR start synpred5_InternalAnsic
    public final void synpred5_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_type_specifier_5_0 = null;


        // InternalAnsic.g:338:3: ( ( (lv_type_specifier_5_0= ruletype_specifier ) ) )
        // InternalAnsic.g:338:3: ( (lv_type_specifier_5_0= ruletype_specifier ) )
        {
        // InternalAnsic.g:338:3: ( (lv_type_specifier_5_0= ruletype_specifier ) )
        // InternalAnsic.g:339:4: (lv_type_specifier_5_0= ruletype_specifier )
        {
        // InternalAnsic.g:339:4: (lv_type_specifier_5_0= ruletype_specifier )
        // InternalAnsic.g:340:5: lv_type_specifier_5_0= ruletype_specifier
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getType_specifierType_specifierParserRuleCall_3_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_type_specifier_5_0=ruletype_specifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred5_InternalAnsic

    // $ANTLR start synpred6_InternalAnsic
    public final void synpred6_InternalAnsic_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_type_qualifier_6_0 = null;

        EObject lv_declaration_specifiers_7_0 = null;


        // InternalAnsic.g:358:3: ( ( ( (lv_type_qualifier_6_0= ruletype_qualifier ) ) ( (lv_declaration_specifiers_7_0= ruledeclaration_specifiers ) ) ) )
        // InternalAnsic.g:358:3: ( ( (lv_type_qualifier_6_0= ruletype_qualifier ) ) ( (lv_declaration_specifiers_7_0= ruledeclaration_specifiers ) ) )
        {
        // InternalAnsic.g:358:3: ( ( (lv_type_qualifier_6_0= ruletype_qualifier ) ) ( (lv_declaration_specifiers_7_0= ruledeclaration_specifiers ) ) )
        // InternalAnsic.g:359:4: ( (lv_type_qualifier_6_0= ruletype_qualifier ) ) ( (lv_declaration_specifiers_7_0= ruledeclaration_specifiers ) )
        {
        // InternalAnsic.g:359:4: ( (lv_type_qualifier_6_0= ruletype_qualifier ) )
        // InternalAnsic.g:360:5: (lv_type_qualifier_6_0= ruletype_qualifier )
        {
        // InternalAnsic.g:360:5: (lv_type_qualifier_6_0= ruletype_qualifier )
        // InternalAnsic.g:361:6: lv_type_qualifier_6_0= ruletype_qualifier
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getType_qualifierType_qualifierParserRuleCall_4_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_type_qualifier_6_0=ruletype_qualifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:378:4: ( (lv_declaration_specifiers_7_0= ruledeclaration_specifiers ) )
        // InternalAnsic.g:379:5: (lv_declaration_specifiers_7_0= ruledeclaration_specifiers )
        {
        // InternalAnsic.g:379:5: (lv_declaration_specifiers_7_0= ruledeclaration_specifiers )
        // InternalAnsic.g:380:6: lv_declaration_specifiers_7_0= ruledeclaration_specifiers
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_4_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_declaration_specifiers_7_0=ruledeclaration_specifiers();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred6_InternalAnsic

    // $ANTLR start synpred7_InternalAnsic
    public final void synpred7_InternalAnsic_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_type_qualifier_8_0 = null;


        // InternalAnsic.g:399:3: ( ( (lv_type_qualifier_8_0= ruletype_qualifier ) ) )
        // InternalAnsic.g:399:3: ( (lv_type_qualifier_8_0= ruletype_qualifier ) )
        {
        // InternalAnsic.g:399:3: ( (lv_type_qualifier_8_0= ruletype_qualifier ) )
        // InternalAnsic.g:400:4: (lv_type_qualifier_8_0= ruletype_qualifier )
        {
        // InternalAnsic.g:400:4: (lv_type_qualifier_8_0= ruletype_qualifier )
        // InternalAnsic.g:401:5: lv_type_qualifier_8_0= ruletype_qualifier
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getType_qualifierType_qualifierParserRuleCall_5_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_type_qualifier_8_0=ruletype_qualifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred7_InternalAnsic

    // $ANTLR start synpred8_InternalAnsic
    public final void synpred8_InternalAnsic_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_function_specifier_9_0 = null;

        EObject lv_declaration_specifiers_10_0 = null;


        // InternalAnsic.g:419:3: ( ( ( (lv_function_specifier_9_0= rulefunction_specifier ) ) ( (lv_declaration_specifiers_10_0= ruledeclaration_specifiers ) ) ) )
        // InternalAnsic.g:419:3: ( ( (lv_function_specifier_9_0= rulefunction_specifier ) ) ( (lv_declaration_specifiers_10_0= ruledeclaration_specifiers ) ) )
        {
        // InternalAnsic.g:419:3: ( ( (lv_function_specifier_9_0= rulefunction_specifier ) ) ( (lv_declaration_specifiers_10_0= ruledeclaration_specifiers ) ) )
        // InternalAnsic.g:420:4: ( (lv_function_specifier_9_0= rulefunction_specifier ) ) ( (lv_declaration_specifiers_10_0= ruledeclaration_specifiers ) )
        {
        // InternalAnsic.g:420:4: ( (lv_function_specifier_9_0= rulefunction_specifier ) )
        // InternalAnsic.g:421:5: (lv_function_specifier_9_0= rulefunction_specifier )
        {
        // InternalAnsic.g:421:5: (lv_function_specifier_9_0= rulefunction_specifier )
        // InternalAnsic.g:422:6: lv_function_specifier_9_0= rulefunction_specifier
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getFunction_specifierFunction_specifierParserRuleCall_6_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_function_specifier_9_0=rulefunction_specifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:439:4: ( (lv_declaration_specifiers_10_0= ruledeclaration_specifiers ) )
        // InternalAnsic.g:440:5: (lv_declaration_specifiers_10_0= ruledeclaration_specifiers )
        {
        // InternalAnsic.g:440:5: (lv_declaration_specifiers_10_0= ruledeclaration_specifiers )
        // InternalAnsic.g:441:6: lv_declaration_specifiers_10_0= ruledeclaration_specifiers
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_6_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_declaration_specifiers_10_0=ruledeclaration_specifiers();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred8_InternalAnsic

    // $ANTLR start synpred9_InternalAnsic
    public final void synpred9_InternalAnsic_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_function_specifier_11_0 = null;


        // InternalAnsic.g:460:3: ( ( (lv_function_specifier_11_0= rulefunction_specifier ) ) )
        // InternalAnsic.g:460:3: ( (lv_function_specifier_11_0= rulefunction_specifier ) )
        {
        // InternalAnsic.g:460:3: ( (lv_function_specifier_11_0= rulefunction_specifier ) )
        // InternalAnsic.g:461:4: (lv_function_specifier_11_0= rulefunction_specifier )
        {
        // InternalAnsic.g:461:4: (lv_function_specifier_11_0= rulefunction_specifier )
        // InternalAnsic.g:462:5: lv_function_specifier_11_0= rulefunction_specifier
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getFunction_specifierFunction_specifierParserRuleCall_7_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_specifier_11_0=rulefunction_specifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred9_InternalAnsic

    // $ANTLR start synpred10_InternalAnsic
    public final void synpred10_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_alignment_specifier_12_0 = null;

        EObject lv_declaration_specifiers_13_0 = null;


        // InternalAnsic.g:480:3: ( ( ( (lv_alignment_specifier_12_0= rulealignment_specifier ) ) ( (lv_declaration_specifiers_13_0= ruledeclaration_specifiers ) ) ) )
        // InternalAnsic.g:480:3: ( ( (lv_alignment_specifier_12_0= rulealignment_specifier ) ) ( (lv_declaration_specifiers_13_0= ruledeclaration_specifiers ) ) )
        {
        // InternalAnsic.g:480:3: ( ( (lv_alignment_specifier_12_0= rulealignment_specifier ) ) ( (lv_declaration_specifiers_13_0= ruledeclaration_specifiers ) ) )
        // InternalAnsic.g:481:4: ( (lv_alignment_specifier_12_0= rulealignment_specifier ) ) ( (lv_declaration_specifiers_13_0= ruledeclaration_specifiers ) )
        {
        // InternalAnsic.g:481:4: ( (lv_alignment_specifier_12_0= rulealignment_specifier ) )
        // InternalAnsic.g:482:5: (lv_alignment_specifier_12_0= rulealignment_specifier )
        {
        // InternalAnsic.g:482:5: (lv_alignment_specifier_12_0= rulealignment_specifier )
        // InternalAnsic.g:483:6: lv_alignment_specifier_12_0= rulealignment_specifier
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getAlignment_specifierAlignment_specifierParserRuleCall_8_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_alignment_specifier_12_0=rulealignment_specifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:500:4: ( (lv_declaration_specifiers_13_0= ruledeclaration_specifiers ) )
        // InternalAnsic.g:501:5: (lv_declaration_specifiers_13_0= ruledeclaration_specifiers )
        {
        // InternalAnsic.g:501:5: (lv_declaration_specifiers_13_0= ruledeclaration_specifiers )
        // InternalAnsic.g:502:6: lv_declaration_specifiers_13_0= ruledeclaration_specifiers
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDeclaration_specifiersAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_8_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_declaration_specifiers_13_0=ruledeclaration_specifiers();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred10_InternalAnsic

    // $ANTLR start synpred31_InternalAnsic
    public final void synpred31_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_enumerator_list_2_0 = null;


        // InternalAnsic.g:860:3: ( (otherlv_0= 'enum' otherlv_1= '{' ( (lv_enumerator_list_2_0= ruleenumerator_list ) ) otherlv_3= '}' ) )
        // InternalAnsic.g:860:3: (otherlv_0= 'enum' otherlv_1= '{' ( (lv_enumerator_list_2_0= ruleenumerator_list ) ) otherlv_3= '}' )
        {
        // InternalAnsic.g:860:3: (otherlv_0= 'enum' otherlv_1= '{' ( (lv_enumerator_list_2_0= ruleenumerator_list ) ) otherlv_3= '}' )
        // InternalAnsic.g:861:4: otherlv_0= 'enum' otherlv_1= '{' ( (lv_enumerator_list_2_0= ruleenumerator_list ) ) otherlv_3= '}'
        {
        otherlv_0=(Token)match(input,50,FOLLOW_9); if (state.failed) return ;
        otherlv_1=(Token)match(input,51,FOLLOW_10); if (state.failed) return ;
        // InternalAnsic.g:869:4: ( (lv_enumerator_list_2_0= ruleenumerator_list ) )
        // InternalAnsic.g:870:5: (lv_enumerator_list_2_0= ruleenumerator_list )
        {
        // InternalAnsic.g:870:5: (lv_enumerator_list_2_0= ruleenumerator_list )
        // InternalAnsic.g:871:6: lv_enumerator_list_2_0= ruleenumerator_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getEnum_specifierAccess().getEnumerator_listEnumerator_listParserRuleCall_0_2_0());
          					
        }
        pushFollow(FOLLOW_11);
        lv_enumerator_list_2_0=ruleenumerator_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_3=(Token)match(input,52,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred31_InternalAnsic

    // $ANTLR start synpred32_InternalAnsic
    public final void synpred32_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_enumerator_list_6_0 = null;


        // InternalAnsic.g:894:3: ( (otherlv_4= 'enum' otherlv_5= '{' ( (lv_enumerator_list_6_0= ruleenumerator_list ) ) otherlv_7= ',' otherlv_8= '}' ) )
        // InternalAnsic.g:894:3: (otherlv_4= 'enum' otherlv_5= '{' ( (lv_enumerator_list_6_0= ruleenumerator_list ) ) otherlv_7= ',' otherlv_8= '}' )
        {
        // InternalAnsic.g:894:3: (otherlv_4= 'enum' otherlv_5= '{' ( (lv_enumerator_list_6_0= ruleenumerator_list ) ) otherlv_7= ',' otherlv_8= '}' )
        // InternalAnsic.g:895:4: otherlv_4= 'enum' otherlv_5= '{' ( (lv_enumerator_list_6_0= ruleenumerator_list ) ) otherlv_7= ',' otherlv_8= '}'
        {
        otherlv_4=(Token)match(input,50,FOLLOW_9); if (state.failed) return ;
        otherlv_5=(Token)match(input,51,FOLLOW_10); if (state.failed) return ;
        // InternalAnsic.g:903:4: ( (lv_enumerator_list_6_0= ruleenumerator_list ) )
        // InternalAnsic.g:904:5: (lv_enumerator_list_6_0= ruleenumerator_list )
        {
        // InternalAnsic.g:904:5: (lv_enumerator_list_6_0= ruleenumerator_list )
        // InternalAnsic.g:905:6: lv_enumerator_list_6_0= ruleenumerator_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getEnum_specifierAccess().getEnumerator_listEnumerator_listParserRuleCall_1_2_0());
          					
        }
        pushFollow(FOLLOW_12);
        lv_enumerator_list_6_0=ruleenumerator_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_7=(Token)match(input,53,FOLLOW_11); if (state.failed) return ;
        otherlv_8=(Token)match(input,52,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred32_InternalAnsic

    // $ANTLR start synpred33_InternalAnsic
    public final void synpred33_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_9=null;
        Token lv_identifier_10_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_enumerator_list_12_0 = null;


        // InternalAnsic.g:932:3: ( (otherlv_9= 'enum' ( (lv_identifier_10_0= RULE_ID ) ) otherlv_11= '{' ( (lv_enumerator_list_12_0= ruleenumerator_list ) ) otherlv_13= '}' ) )
        // InternalAnsic.g:932:3: (otherlv_9= 'enum' ( (lv_identifier_10_0= RULE_ID ) ) otherlv_11= '{' ( (lv_enumerator_list_12_0= ruleenumerator_list ) ) otherlv_13= '}' )
        {
        // InternalAnsic.g:932:3: (otherlv_9= 'enum' ( (lv_identifier_10_0= RULE_ID ) ) otherlv_11= '{' ( (lv_enumerator_list_12_0= ruleenumerator_list ) ) otherlv_13= '}' )
        // InternalAnsic.g:933:4: otherlv_9= 'enum' ( (lv_identifier_10_0= RULE_ID ) ) otherlv_11= '{' ( (lv_enumerator_list_12_0= ruleenumerator_list ) ) otherlv_13= '}'
        {
        otherlv_9=(Token)match(input,50,FOLLOW_10); if (state.failed) return ;
        // InternalAnsic.g:937:4: ( (lv_identifier_10_0= RULE_ID ) )
        // InternalAnsic.g:938:5: (lv_identifier_10_0= RULE_ID )
        {
        // InternalAnsic.g:938:5: (lv_identifier_10_0= RULE_ID )
        // InternalAnsic.g:939:6: lv_identifier_10_0= RULE_ID
        {
        lv_identifier_10_0=(Token)match(input,RULE_ID,FOLLOW_9); if (state.failed) return ;

        }


        }

        otherlv_11=(Token)match(input,51,FOLLOW_10); if (state.failed) return ;
        // InternalAnsic.g:959:4: ( (lv_enumerator_list_12_0= ruleenumerator_list ) )
        // InternalAnsic.g:960:5: (lv_enumerator_list_12_0= ruleenumerator_list )
        {
        // InternalAnsic.g:960:5: (lv_enumerator_list_12_0= ruleenumerator_list )
        // InternalAnsic.g:961:6: lv_enumerator_list_12_0= ruleenumerator_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getEnum_specifierAccess().getEnumerator_listEnumerator_listParserRuleCall_2_3_0());
          					
        }
        pushFollow(FOLLOW_11);
        lv_enumerator_list_12_0=ruleenumerator_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_13=(Token)match(input,52,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred33_InternalAnsic

    // $ANTLR start synpred34_InternalAnsic
    public final void synpred34_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        Token lv_identifier_15_0=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        EObject lv_enumerator_list_17_0 = null;


        // InternalAnsic.g:984:3: ( (otherlv_14= 'enum' ( (lv_identifier_15_0= RULE_ID ) ) otherlv_16= '{' ( (lv_enumerator_list_17_0= ruleenumerator_list ) ) otherlv_18= ',' otherlv_19= '}' ) )
        // InternalAnsic.g:984:3: (otherlv_14= 'enum' ( (lv_identifier_15_0= RULE_ID ) ) otherlv_16= '{' ( (lv_enumerator_list_17_0= ruleenumerator_list ) ) otherlv_18= ',' otherlv_19= '}' )
        {
        // InternalAnsic.g:984:3: (otherlv_14= 'enum' ( (lv_identifier_15_0= RULE_ID ) ) otherlv_16= '{' ( (lv_enumerator_list_17_0= ruleenumerator_list ) ) otherlv_18= ',' otherlv_19= '}' )
        // InternalAnsic.g:985:4: otherlv_14= 'enum' ( (lv_identifier_15_0= RULE_ID ) ) otherlv_16= '{' ( (lv_enumerator_list_17_0= ruleenumerator_list ) ) otherlv_18= ',' otherlv_19= '}'
        {
        otherlv_14=(Token)match(input,50,FOLLOW_10); if (state.failed) return ;
        // InternalAnsic.g:989:4: ( (lv_identifier_15_0= RULE_ID ) )
        // InternalAnsic.g:990:5: (lv_identifier_15_0= RULE_ID )
        {
        // InternalAnsic.g:990:5: (lv_identifier_15_0= RULE_ID )
        // InternalAnsic.g:991:6: lv_identifier_15_0= RULE_ID
        {
        lv_identifier_15_0=(Token)match(input,RULE_ID,FOLLOW_9); if (state.failed) return ;

        }


        }

        otherlv_16=(Token)match(input,51,FOLLOW_10); if (state.failed) return ;
        // InternalAnsic.g:1011:4: ( (lv_enumerator_list_17_0= ruleenumerator_list ) )
        // InternalAnsic.g:1012:5: (lv_enumerator_list_17_0= ruleenumerator_list )
        {
        // InternalAnsic.g:1012:5: (lv_enumerator_list_17_0= ruleenumerator_list )
        // InternalAnsic.g:1013:6: lv_enumerator_list_17_0= ruleenumerator_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getEnum_specifierAccess().getEnumerator_listEnumerator_listParserRuleCall_3_3_0());
          					
        }
        pushFollow(FOLLOW_12);
        lv_enumerator_list_17_0=ruleenumerator_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_18=(Token)match(input,53,FOLLOW_11); if (state.failed) return ;
        otherlv_19=(Token)match(input,52,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred34_InternalAnsic

    // $ANTLR start synpred41_InternalAnsic
    public final void synpred41_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_specifier_qualifier_list_0_0 = null;


        // InternalAnsic.g:1686:3: ( ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) otherlv_1= ';' ) )
        // InternalAnsic.g:1686:3: ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) otherlv_1= ';' )
        {
        // InternalAnsic.g:1686:3: ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) otherlv_1= ';' )
        // InternalAnsic.g:1687:4: ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) otherlv_1= ';'
        {
        // InternalAnsic.g:1687:4: ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) )
        // InternalAnsic.g:1688:5: (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list )
        {
        // InternalAnsic.g:1688:5: (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list )
        // InternalAnsic.g:1689:6: lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStruct_declarationAccess().getSpecifier_qualifier_listSpecifier_qualifier_listParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_14);
        lv_specifier_qualifier_list_0_0=rulespecifier_qualifier_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,57,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred41_InternalAnsic

    // $ANTLR start synpred42_InternalAnsic
    public final void synpred42_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        EObject lv_specifier_qualifier_list_2_0 = null;

        EObject lv_struct_declarator_list_3_0 = null;


        // InternalAnsic.g:1712:3: ( ( ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) ) ( (lv_struct_declarator_list_3_0= rulestruct_declarator_list ) ) otherlv_4= ';' ) )
        // InternalAnsic.g:1712:3: ( ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) ) ( (lv_struct_declarator_list_3_0= rulestruct_declarator_list ) ) otherlv_4= ';' )
        {
        // InternalAnsic.g:1712:3: ( ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) ) ( (lv_struct_declarator_list_3_0= rulestruct_declarator_list ) ) otherlv_4= ';' )
        // InternalAnsic.g:1713:4: ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) ) ( (lv_struct_declarator_list_3_0= rulestruct_declarator_list ) ) otherlv_4= ';'
        {
        // InternalAnsic.g:1713:4: ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) )
        // InternalAnsic.g:1714:5: (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list )
        {
        // InternalAnsic.g:1714:5: (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list )
        // InternalAnsic.g:1715:6: lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStruct_declarationAccess().getSpecifier_qualifier_listSpecifier_qualifier_listParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_15);
        lv_specifier_qualifier_list_2_0=rulespecifier_qualifier_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:1732:4: ( (lv_struct_declarator_list_3_0= rulestruct_declarator_list ) )
        // InternalAnsic.g:1733:5: (lv_struct_declarator_list_3_0= rulestruct_declarator_list )
        {
        // InternalAnsic.g:1733:5: (lv_struct_declarator_list_3_0= rulestruct_declarator_list )
        // InternalAnsic.g:1734:6: lv_struct_declarator_list_3_0= rulestruct_declarator_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStruct_declarationAccess().getStruct_declarator_listStruct_declarator_listParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_14);
        lv_struct_declarator_list_3_0=rulestruct_declarator_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_4=(Token)match(input,57,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred42_InternalAnsic

    // $ANTLR start synpred45_InternalAnsic
    public final void synpred45_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        EObject lv_declarator_2_0 = null;

        EObject lv_constant_expression_4_0 = null;


        // InternalAnsic.g:1951:3: ( ( ( (lv_declarator_2_0= ruledeclarator ) ) otherlv_3= ':' ( (lv_constant_expression_4_0= ruleconstant_expression ) ) ) )
        // InternalAnsic.g:1951:3: ( ( (lv_declarator_2_0= ruledeclarator ) ) otherlv_3= ':' ( (lv_constant_expression_4_0= ruleconstant_expression ) ) )
        {
        // InternalAnsic.g:1951:3: ( ( (lv_declarator_2_0= ruledeclarator ) ) otherlv_3= ':' ( (lv_constant_expression_4_0= ruleconstant_expression ) ) )
        // InternalAnsic.g:1952:4: ( (lv_declarator_2_0= ruledeclarator ) ) otherlv_3= ':' ( (lv_constant_expression_4_0= ruleconstant_expression ) )
        {
        // InternalAnsic.g:1952:4: ( (lv_declarator_2_0= ruledeclarator ) )
        // InternalAnsic.g:1953:5: (lv_declarator_2_0= ruledeclarator )
        {
        // InternalAnsic.g:1953:5: (lv_declarator_2_0= ruledeclarator )
        // InternalAnsic.g:1954:6: lv_declarator_2_0= ruledeclarator
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStruct_declaratorAccess().getDeclaratorDeclaratorParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_16);
        lv_declarator_2_0=ruledeclarator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_3=(Token)match(input,58,FOLLOW_8); if (state.failed) return ;
        // InternalAnsic.g:1975:4: ( (lv_constant_expression_4_0= ruleconstant_expression ) )
        // InternalAnsic.g:1976:5: (lv_constant_expression_4_0= ruleconstant_expression )
        {
        // InternalAnsic.g:1976:5: (lv_constant_expression_4_0= ruleconstant_expression )
        // InternalAnsic.g:1977:6: lv_constant_expression_4_0= ruleconstant_expression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStruct_declaratorAccess().getConstant_expressionConstant_expressionParserRuleCall_1_2_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_constant_expression_4_0=ruleconstant_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred45_InternalAnsic

    // $ANTLR start synpred46_InternalAnsic
    public final void synpred46_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_type_specifier_0_0 = null;

        EObject lv_specifier_qualifier_list_1_0 = null;


        // InternalAnsic.g:2034:3: ( ( ( (lv_type_specifier_0_0= ruletype_specifier ) ) ( (lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list ) ) ) )
        // InternalAnsic.g:2034:3: ( ( (lv_type_specifier_0_0= ruletype_specifier ) ) ( (lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list ) ) )
        {
        // InternalAnsic.g:2034:3: ( ( (lv_type_specifier_0_0= ruletype_specifier ) ) ( (lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list ) ) )
        // InternalAnsic.g:2035:4: ( (lv_type_specifier_0_0= ruletype_specifier ) ) ( (lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list ) )
        {
        // InternalAnsic.g:2035:4: ( (lv_type_specifier_0_0= ruletype_specifier ) )
        // InternalAnsic.g:2036:5: (lv_type_specifier_0_0= ruletype_specifier )
        {
        // InternalAnsic.g:2036:5: (lv_type_specifier_0_0= ruletype_specifier )
        // InternalAnsic.g:2037:6: lv_type_specifier_0_0= ruletype_specifier
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getSpecifier_qualifier_listAccess().getType_specifierType_specifierParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_6);
        lv_type_specifier_0_0=ruletype_specifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:2054:4: ( (lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list ) )
        // InternalAnsic.g:2055:5: (lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list )
        {
        // InternalAnsic.g:2055:5: (lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list )
        // InternalAnsic.g:2056:6: lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getSpecifier_qualifier_listAccess().getSpecifier_qualifier_listSpecifier_qualifier_listParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_specifier_qualifier_list_1_0=rulespecifier_qualifier_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred46_InternalAnsic

    // $ANTLR start synpred47_InternalAnsic
    public final void synpred47_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_type_specifier_2_0 = null;


        // InternalAnsic.g:2075:3: ( ( (lv_type_specifier_2_0= ruletype_specifier ) ) )
        // InternalAnsic.g:2075:3: ( (lv_type_specifier_2_0= ruletype_specifier ) )
        {
        // InternalAnsic.g:2075:3: ( (lv_type_specifier_2_0= ruletype_specifier ) )
        // InternalAnsic.g:2076:4: (lv_type_specifier_2_0= ruletype_specifier )
        {
        // InternalAnsic.g:2076:4: (lv_type_specifier_2_0= ruletype_specifier )
        // InternalAnsic.g:2077:5: lv_type_specifier_2_0= ruletype_specifier
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSpecifier_qualifier_listAccess().getType_specifierType_specifierParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_type_specifier_2_0=ruletype_specifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred47_InternalAnsic

    // $ANTLR start synpred48_InternalAnsic
    public final void synpred48_InternalAnsic_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_type_qualifier_3_0 = null;

        EObject lv_specifier_qualifier_list_4_0 = null;


        // InternalAnsic.g:2095:3: ( ( ( (lv_type_qualifier_3_0= ruletype_qualifier ) ) ( (lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list ) ) ) )
        // InternalAnsic.g:2095:3: ( ( (lv_type_qualifier_3_0= ruletype_qualifier ) ) ( (lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list ) ) )
        {
        // InternalAnsic.g:2095:3: ( ( (lv_type_qualifier_3_0= ruletype_qualifier ) ) ( (lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list ) ) )
        // InternalAnsic.g:2096:4: ( (lv_type_qualifier_3_0= ruletype_qualifier ) ) ( (lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list ) )
        {
        // InternalAnsic.g:2096:4: ( (lv_type_qualifier_3_0= ruletype_qualifier ) )
        // InternalAnsic.g:2097:5: (lv_type_qualifier_3_0= ruletype_qualifier )
        {
        // InternalAnsic.g:2097:5: (lv_type_qualifier_3_0= ruletype_qualifier )
        // InternalAnsic.g:2098:6: lv_type_qualifier_3_0= ruletype_qualifier
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getSpecifier_qualifier_listAccess().getType_qualifierType_qualifierParserRuleCall_2_0_0());
          					
        }
        pushFollow(FOLLOW_6);
        lv_type_qualifier_3_0=ruletype_qualifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:2115:4: ( (lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list ) )
        // InternalAnsic.g:2116:5: (lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list )
        {
        // InternalAnsic.g:2116:5: (lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list )
        // InternalAnsic.g:2117:6: lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getSpecifier_qualifier_listAccess().getSpecifier_qualifier_listSpecifier_qualifier_listParserRuleCall_2_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_specifier_qualifier_list_4_0=rulespecifier_qualifier_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred48_InternalAnsic

    // $ANTLR start synpred54_InternalAnsic
    public final void synpred54_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_declaration_specifiers_0_0 = null;


        // InternalAnsic.g:2228:3: ( ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) otherlv_1= ';' ) )
        // InternalAnsic.g:2228:3: ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) otherlv_1= ';' )
        {
        // InternalAnsic.g:2228:3: ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) otherlv_1= ';' )
        // InternalAnsic.g:2229:4: ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) otherlv_1= ';'
        {
        // InternalAnsic.g:2229:4: ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) )
        // InternalAnsic.g:2230:5: (lv_declaration_specifiers_0_0= ruledeclaration_specifiers )
        {
        // InternalAnsic.g:2230:5: (lv_declaration_specifiers_0_0= ruledeclaration_specifiers )
        // InternalAnsic.g:2231:6: lv_declaration_specifiers_0_0= ruledeclaration_specifiers
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDeclarationAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_14);
        lv_declaration_specifiers_0_0=ruledeclaration_specifiers();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,57,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred54_InternalAnsic

    // $ANTLR start synpred55_InternalAnsic
    public final void synpred55_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        EObject lv_declaration_specifiers_2_0 = null;

        EObject lv_init_declarator_list_3_0 = null;


        // InternalAnsic.g:2254:3: ( ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_init_declarator_list_3_0= ruleinit_declarator_list ) ) otherlv_4= ';' ) )
        // InternalAnsic.g:2254:3: ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_init_declarator_list_3_0= ruleinit_declarator_list ) ) otherlv_4= ';' )
        {
        // InternalAnsic.g:2254:3: ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_init_declarator_list_3_0= ruleinit_declarator_list ) ) otherlv_4= ';' )
        // InternalAnsic.g:2255:4: ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_init_declarator_list_3_0= ruleinit_declarator_list ) ) otherlv_4= ';'
        {
        // InternalAnsic.g:2255:4: ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) )
        // InternalAnsic.g:2256:5: (lv_declaration_specifiers_2_0= ruledeclaration_specifiers )
        {
        // InternalAnsic.g:2256:5: (lv_declaration_specifiers_2_0= ruledeclaration_specifiers )
        // InternalAnsic.g:2257:6: lv_declaration_specifiers_2_0= ruledeclaration_specifiers
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDeclarationAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_17);
        lv_declaration_specifiers_2_0=ruledeclaration_specifiers();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:2274:4: ( (lv_init_declarator_list_3_0= ruleinit_declarator_list ) )
        // InternalAnsic.g:2275:5: (lv_init_declarator_list_3_0= ruleinit_declarator_list )
        {
        // InternalAnsic.g:2275:5: (lv_init_declarator_list_3_0= ruleinit_declarator_list )
        // InternalAnsic.g:2276:6: lv_init_declarator_list_3_0= ruleinit_declarator_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDeclarationAccess().getInit_declarator_listInit_declarator_listParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_14);
        lv_init_declarator_list_3_0=ruleinit_declarator_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_4=(Token)match(input,57,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred55_InternalAnsic

    // $ANTLR start synpred56_InternalAnsic
    public final void synpred56_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_declaration_specifiers_0_0 = null;

        EObject lv_declarator_1_0 = null;

        EObject lv_declaration_list_2_0 = null;

        EObject lv_compound_statement_3_0 = null;


        // InternalAnsic.g:2337:3: ( ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) ( (lv_declaration_list_2_0= ruledeclaration_list ) ) ( (lv_compound_statement_3_0= rulecompound_statement ) ) ) )
        // InternalAnsic.g:2337:3: ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) ( (lv_declaration_list_2_0= ruledeclaration_list ) ) ( (lv_compound_statement_3_0= rulecompound_statement ) ) )
        {
        // InternalAnsic.g:2337:3: ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) ( (lv_declaration_list_2_0= ruledeclaration_list ) ) ( (lv_compound_statement_3_0= rulecompound_statement ) ) )
        // InternalAnsic.g:2338:4: ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) ( (lv_declaration_list_2_0= ruledeclaration_list ) ) ( (lv_compound_statement_3_0= rulecompound_statement ) )
        {
        // InternalAnsic.g:2338:4: ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) )
        // InternalAnsic.g:2339:5: (lv_declaration_specifiers_0_0= ruledeclaration_specifiers )
        {
        // InternalAnsic.g:2339:5: (lv_declaration_specifiers_0_0= ruledeclaration_specifiers )
        // InternalAnsic.g:2340:6: lv_declaration_specifiers_0_0= ruledeclaration_specifiers
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getFunction_definitionAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_17);
        lv_declaration_specifiers_0_0=ruledeclaration_specifiers();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:2357:4: ( (lv_declarator_1_0= ruledeclarator ) )
        // InternalAnsic.g:2358:5: (lv_declarator_1_0= ruledeclarator )
        {
        // InternalAnsic.g:2358:5: (lv_declarator_1_0= ruledeclarator )
        // InternalAnsic.g:2359:6: lv_declarator_1_0= ruledeclarator
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getFunction_definitionAccess().getDeclaratorDeclaratorParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_3);
        lv_declarator_1_0=ruledeclarator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:2376:4: ( (lv_declaration_list_2_0= ruledeclaration_list ) )
        // InternalAnsic.g:2377:5: (lv_declaration_list_2_0= ruledeclaration_list )
        {
        // InternalAnsic.g:2377:5: (lv_declaration_list_2_0= ruledeclaration_list )
        // InternalAnsic.g:2378:6: lv_declaration_list_2_0= ruledeclaration_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getFunction_definitionAccess().getDeclaration_listDeclaration_listParserRuleCall_0_2_0());
          					
        }
        pushFollow(FOLLOW_9);
        lv_declaration_list_2_0=ruledeclaration_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:2395:4: ( (lv_compound_statement_3_0= rulecompound_statement ) )
        // InternalAnsic.g:2396:5: (lv_compound_statement_3_0= rulecompound_statement )
        {
        // InternalAnsic.g:2396:5: (lv_compound_statement_3_0= rulecompound_statement )
        // InternalAnsic.g:2397:6: lv_compound_statement_3_0= rulecompound_statement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getFunction_definitionAccess().getCompound_statementCompound_statementParserRuleCall_0_3_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_compound_statement_3_0=rulecompound_statement();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred56_InternalAnsic

    // $ANTLR start synpred59_InternalAnsic
    public final void synpred59_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_0=null;
        EObject lv_type_qualifier_list_1_0 = null;

        EObject lv_pointer_2_0 = null;


        // InternalAnsic.g:2699:3: ( (otherlv_0= '*' ( (lv_type_qualifier_list_1_0= ruletype_qualifier_list ) ) ( (lv_pointer_2_0= rulepointer ) ) ) )
        // InternalAnsic.g:2699:3: (otherlv_0= '*' ( (lv_type_qualifier_list_1_0= ruletype_qualifier_list ) ) ( (lv_pointer_2_0= rulepointer ) ) )
        {
        // InternalAnsic.g:2699:3: (otherlv_0= '*' ( (lv_type_qualifier_list_1_0= ruletype_qualifier_list ) ) ( (lv_pointer_2_0= rulepointer ) ) )
        // InternalAnsic.g:2700:4: otherlv_0= '*' ( (lv_type_qualifier_list_1_0= ruletype_qualifier_list ) ) ( (lv_pointer_2_0= rulepointer ) )
        {
        otherlv_0=(Token)match(input,64,FOLLOW_18); if (state.failed) return ;
        // InternalAnsic.g:2704:4: ( (lv_type_qualifier_list_1_0= ruletype_qualifier_list ) )
        // InternalAnsic.g:2705:5: (lv_type_qualifier_list_1_0= ruletype_qualifier_list )
        {
        // InternalAnsic.g:2705:5: (lv_type_qualifier_list_1_0= ruletype_qualifier_list )
        // InternalAnsic.g:2706:6: lv_type_qualifier_list_1_0= ruletype_qualifier_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPointerAccess().getType_qualifier_listType_qualifier_listParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_19);
        lv_type_qualifier_list_1_0=ruletype_qualifier_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:2723:4: ( (lv_pointer_2_0= rulepointer ) )
        // InternalAnsic.g:2724:5: (lv_pointer_2_0= rulepointer )
        {
        // InternalAnsic.g:2724:5: (lv_pointer_2_0= rulepointer )
        // InternalAnsic.g:2725:6: lv_pointer_2_0= rulepointer
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPointerAccess().getPointerPointerParserRuleCall_0_2_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_pointer_2_0=rulepointer();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred59_InternalAnsic

    // $ANTLR start synpred60_InternalAnsic
    public final void synpred60_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        EObject lv_type_qualifier_list_4_0 = null;


        // InternalAnsic.g:2744:3: ( (otherlv_3= '*' ( (lv_type_qualifier_list_4_0= ruletype_qualifier_list ) ) ) )
        // InternalAnsic.g:2744:3: (otherlv_3= '*' ( (lv_type_qualifier_list_4_0= ruletype_qualifier_list ) ) )
        {
        // InternalAnsic.g:2744:3: (otherlv_3= '*' ( (lv_type_qualifier_list_4_0= ruletype_qualifier_list ) ) )
        // InternalAnsic.g:2745:4: otherlv_3= '*' ( (lv_type_qualifier_list_4_0= ruletype_qualifier_list ) )
        {
        otherlv_3=(Token)match(input,64,FOLLOW_18); if (state.failed) return ;
        // InternalAnsic.g:2749:4: ( (lv_type_qualifier_list_4_0= ruletype_qualifier_list ) )
        // InternalAnsic.g:2750:5: (lv_type_qualifier_list_4_0= ruletype_qualifier_list )
        {
        // InternalAnsic.g:2750:5: (lv_type_qualifier_list_4_0= ruletype_qualifier_list )
        // InternalAnsic.g:2751:6: lv_type_qualifier_list_4_0= ruletype_qualifier_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPointerAccess().getType_qualifier_listType_qualifier_listParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_type_qualifier_list_4_0=ruletype_qualifier_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred60_InternalAnsic

    // $ANTLR start synpred61_InternalAnsic
    public final void synpred61_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        EObject lv_pointer_6_0 = null;


        // InternalAnsic.g:2770:3: ( (otherlv_5= '*' ( (lv_pointer_6_0= rulepointer ) ) ) )
        // InternalAnsic.g:2770:3: (otherlv_5= '*' ( (lv_pointer_6_0= rulepointer ) ) )
        {
        // InternalAnsic.g:2770:3: (otherlv_5= '*' ( (lv_pointer_6_0= rulepointer ) ) )
        // InternalAnsic.g:2771:4: otherlv_5= '*' ( (lv_pointer_6_0= rulepointer ) )
        {
        otherlv_5=(Token)match(input,64,FOLLOW_19); if (state.failed) return ;
        // InternalAnsic.g:2775:4: ( (lv_pointer_6_0= rulepointer ) )
        // InternalAnsic.g:2776:5: (lv_pointer_6_0= rulepointer )
        {
        // InternalAnsic.g:2776:5: (lv_pointer_6_0= rulepointer )
        // InternalAnsic.g:2777:6: lv_pointer_6_0= rulepointer
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPointerAccess().getPointerPointerParserRuleCall_2_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_pointer_6_0=rulepointer();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred61_InternalAnsic

    // $ANTLR start synpred65_InternalAnsic
    public final void synpred65_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_0=null;
        Token otherlv_1=null;

        // InternalAnsic.g:3121:3: ( (otherlv_0= '[' otherlv_1= ']' ) )
        // InternalAnsic.g:3121:3: (otherlv_0= '[' otherlv_1= ']' )
        {
        // InternalAnsic.g:3121:3: (otherlv_0= '[' otherlv_1= ']' )
        // InternalAnsic.g:3122:4: otherlv_0= '[' otherlv_1= ']'
        {
        otherlv_0=(Token)match(input,65,FOLLOW_21); if (state.failed) return ;
        otherlv_1=(Token)match(input,66,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred65_InternalAnsic

    // $ANTLR start synpred66_InternalAnsic
    public final void synpred66_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;

        // InternalAnsic.g:3132:3: ( (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' ) )
        // InternalAnsic.g:3132:3: (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' )
        {
        // InternalAnsic.g:3132:3: (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' )
        // InternalAnsic.g:3133:4: otherlv_2= '[' otherlv_3= '*' otherlv_4= ']'
        {
        otherlv_2=(Token)match(input,65,FOLLOW_19); if (state.failed) return ;
        otherlv_3=(Token)match(input,64,FOLLOW_21); if (state.failed) return ;
        otherlv_4=(Token)match(input,66,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred66_InternalAnsic

    // $ANTLR start synpred67_InternalAnsic
    public final void synpred67_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        EObject lv_type_qualifier_list_7_0 = null;

        EObject lv_assignment_expression_8_0 = null;


        // InternalAnsic.g:3147:3: ( (otherlv_5= '[' otherlv_6= 'static' ( (lv_type_qualifier_list_7_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' ) )
        // InternalAnsic.g:3147:3: (otherlv_5= '[' otherlv_6= 'static' ( (lv_type_qualifier_list_7_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' )
        {
        // InternalAnsic.g:3147:3: (otherlv_5= '[' otherlv_6= 'static' ( (lv_type_qualifier_list_7_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' )
        // InternalAnsic.g:3148:4: otherlv_5= '[' otherlv_6= 'static' ( (lv_type_qualifier_list_7_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']'
        {
        otherlv_5=(Token)match(input,65,FOLLOW_22); if (state.failed) return ;
        otherlv_6=(Token)match(input,60,FOLLOW_18); if (state.failed) return ;
        // InternalAnsic.g:3156:4: ( (lv_type_qualifier_list_7_0= ruletype_qualifier_list ) )
        // InternalAnsic.g:3157:5: (lv_type_qualifier_list_7_0= ruletype_qualifier_list )
        {
        // InternalAnsic.g:3157:5: (lv_type_qualifier_list_7_0= ruletype_qualifier_list )
        // InternalAnsic.g:3158:6: lv_type_qualifier_list_7_0= ruletype_qualifier_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getType_qualifier_listType_qualifier_listParserRuleCall_2_2_0());
          					
        }
        pushFollow(FOLLOW_8);
        lv_type_qualifier_list_7_0=ruletype_qualifier_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:3175:4: ( (lv_assignment_expression_8_0= ruleassignment_expression ) )
        // InternalAnsic.g:3176:5: (lv_assignment_expression_8_0= ruleassignment_expression )
        {
        // InternalAnsic.g:3176:5: (lv_assignment_expression_8_0= ruleassignment_expression )
        // InternalAnsic.g:3177:6: lv_assignment_expression_8_0= ruleassignment_expression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getAssignment_expressionAssignment_expressionParserRuleCall_2_3_0());
          					
        }
        pushFollow(FOLLOW_21);
        lv_assignment_expression_8_0=ruleassignment_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_9=(Token)match(input,66,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred67_InternalAnsic

    // $ANTLR start synpred68_InternalAnsic
    public final void synpred68_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_assignment_expression_12_0 = null;


        // InternalAnsic.g:3200:3: ( (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' ) )
        // InternalAnsic.g:3200:3: (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' )
        {
        // InternalAnsic.g:3200:3: (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' )
        // InternalAnsic.g:3201:4: otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']'
        {
        otherlv_10=(Token)match(input,65,FOLLOW_22); if (state.failed) return ;
        otherlv_11=(Token)match(input,60,FOLLOW_8); if (state.failed) return ;
        // InternalAnsic.g:3209:4: ( (lv_assignment_expression_12_0= ruleassignment_expression ) )
        // InternalAnsic.g:3210:5: (lv_assignment_expression_12_0= ruleassignment_expression )
        {
        // InternalAnsic.g:3210:5: (lv_assignment_expression_12_0= ruleassignment_expression )
        // InternalAnsic.g:3211:6: lv_assignment_expression_12_0= ruleassignment_expression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getAssignment_expressionAssignment_expressionParserRuleCall_3_2_0());
          					
        }
        pushFollow(FOLLOW_21);
        lv_assignment_expression_12_0=ruleassignment_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_13=(Token)match(input,66,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred68_InternalAnsic

    // $ANTLR start synpred69_InternalAnsic
    public final void synpred69_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        EObject lv_type_qualifier_list_15_0 = null;


        // InternalAnsic.g:3234:3: ( (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) otherlv_16= '*' otherlv_17= ']' ) )
        // InternalAnsic.g:3234:3: (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) otherlv_16= '*' otherlv_17= ']' )
        {
        // InternalAnsic.g:3234:3: (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) otherlv_16= '*' otherlv_17= ']' )
        // InternalAnsic.g:3235:4: otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) otherlv_16= '*' otherlv_17= ']'
        {
        otherlv_14=(Token)match(input,65,FOLLOW_18); if (state.failed) return ;
        // InternalAnsic.g:3239:4: ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) )
        // InternalAnsic.g:3240:5: (lv_type_qualifier_list_15_0= ruletype_qualifier_list )
        {
        // InternalAnsic.g:3240:5: (lv_type_qualifier_list_15_0= ruletype_qualifier_list )
        // InternalAnsic.g:3241:6: lv_type_qualifier_list_15_0= ruletype_qualifier_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getType_qualifier_listType_qualifier_listParserRuleCall_4_1_0());
          					
        }
        pushFollow(FOLLOW_19);
        lv_type_qualifier_list_15_0=ruletype_qualifier_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_16=(Token)match(input,64,FOLLOW_21); if (state.failed) return ;
        otherlv_17=(Token)match(input,66,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred69_InternalAnsic

    // $ANTLR start synpred70_InternalAnsic
    public final void synpred70_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        EObject lv_type_qualifier_list_19_0 = null;

        EObject lv_assignment_expression_21_0 = null;


        // InternalAnsic.g:3268:3: ( (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' ) )
        // InternalAnsic.g:3268:3: (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' )
        {
        // InternalAnsic.g:3268:3: (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' )
        // InternalAnsic.g:3269:4: otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']'
        {
        otherlv_18=(Token)match(input,65,FOLLOW_18); if (state.failed) return ;
        // InternalAnsic.g:3273:4: ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) )
        // InternalAnsic.g:3274:5: (lv_type_qualifier_list_19_0= ruletype_qualifier_list )
        {
        // InternalAnsic.g:3274:5: (lv_type_qualifier_list_19_0= ruletype_qualifier_list )
        // InternalAnsic.g:3275:6: lv_type_qualifier_list_19_0= ruletype_qualifier_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getType_qualifier_listType_qualifier_listParserRuleCall_5_1_0());
          					
        }
        pushFollow(FOLLOW_22);
        lv_type_qualifier_list_19_0=ruletype_qualifier_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_20=(Token)match(input,60,FOLLOW_8); if (state.failed) return ;
        // InternalAnsic.g:3296:4: ( (lv_assignment_expression_21_0= ruleassignment_expression ) )
        // InternalAnsic.g:3297:5: (lv_assignment_expression_21_0= ruleassignment_expression )
        {
        // InternalAnsic.g:3297:5: (lv_assignment_expression_21_0= ruleassignment_expression )
        // InternalAnsic.g:3298:6: lv_assignment_expression_21_0= ruleassignment_expression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getAssignment_expressionAssignment_expressionParserRuleCall_5_3_0());
          					
        }
        pushFollow(FOLLOW_21);
        lv_assignment_expression_21_0=ruleassignment_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_22=(Token)match(input,66,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred70_InternalAnsic

    // $ANTLR start synpred71_InternalAnsic
    public final void synpred71_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_23=null;
        Token otherlv_26=null;
        EObject lv_type_qualifier_list_24_0 = null;

        EObject lv_assignment_expression_25_0 = null;


        // InternalAnsic.g:3321:3: ( (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_25_0= ruleassignment_expression ) ) otherlv_26= ']' ) )
        // InternalAnsic.g:3321:3: (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_25_0= ruleassignment_expression ) ) otherlv_26= ']' )
        {
        // InternalAnsic.g:3321:3: (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_25_0= ruleassignment_expression ) ) otherlv_26= ']' )
        // InternalAnsic.g:3322:4: otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_25_0= ruleassignment_expression ) ) otherlv_26= ']'
        {
        otherlv_23=(Token)match(input,65,FOLLOW_18); if (state.failed) return ;
        // InternalAnsic.g:3326:4: ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) )
        // InternalAnsic.g:3327:5: (lv_type_qualifier_list_24_0= ruletype_qualifier_list )
        {
        // InternalAnsic.g:3327:5: (lv_type_qualifier_list_24_0= ruletype_qualifier_list )
        // InternalAnsic.g:3328:6: lv_type_qualifier_list_24_0= ruletype_qualifier_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getType_qualifier_listType_qualifier_listParserRuleCall_6_1_0());
          					
        }
        pushFollow(FOLLOW_8);
        lv_type_qualifier_list_24_0=ruletype_qualifier_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:3345:4: ( (lv_assignment_expression_25_0= ruleassignment_expression ) )
        // InternalAnsic.g:3346:5: (lv_assignment_expression_25_0= ruleassignment_expression )
        {
        // InternalAnsic.g:3346:5: (lv_assignment_expression_25_0= ruleassignment_expression )
        // InternalAnsic.g:3347:6: lv_assignment_expression_25_0= ruleassignment_expression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getAssignment_expressionAssignment_expressionParserRuleCall_6_2_0());
          					
        }
        pushFollow(FOLLOW_21);
        lv_assignment_expression_25_0=ruleassignment_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_26=(Token)match(input,66,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred71_InternalAnsic

    // $ANTLR start synpred72_InternalAnsic
    public final void synpred72_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_27=null;
        Token otherlv_29=null;
        EObject lv_type_qualifier_list_28_0 = null;


        // InternalAnsic.g:3370:3: ( (otherlv_27= '[' ( (lv_type_qualifier_list_28_0= ruletype_qualifier_list ) ) otherlv_29= ']' ) )
        // InternalAnsic.g:3370:3: (otherlv_27= '[' ( (lv_type_qualifier_list_28_0= ruletype_qualifier_list ) ) otherlv_29= ']' )
        {
        // InternalAnsic.g:3370:3: (otherlv_27= '[' ( (lv_type_qualifier_list_28_0= ruletype_qualifier_list ) ) otherlv_29= ']' )
        // InternalAnsic.g:3371:4: otherlv_27= '[' ( (lv_type_qualifier_list_28_0= ruletype_qualifier_list ) ) otherlv_29= ']'
        {
        otherlv_27=(Token)match(input,65,FOLLOW_18); if (state.failed) return ;
        // InternalAnsic.g:3375:4: ( (lv_type_qualifier_list_28_0= ruletype_qualifier_list ) )
        // InternalAnsic.g:3376:5: (lv_type_qualifier_list_28_0= ruletype_qualifier_list )
        {
        // InternalAnsic.g:3376:5: (lv_type_qualifier_list_28_0= ruletype_qualifier_list )
        // InternalAnsic.g:3377:6: lv_type_qualifier_list_28_0= ruletype_qualifier_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getType_qualifier_listType_qualifier_listParserRuleCall_7_1_0());
          					
        }
        pushFollow(FOLLOW_21);
        lv_type_qualifier_list_28_0=ruletype_qualifier_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_29=(Token)match(input,66,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred72_InternalAnsic

    // $ANTLR start synpred73_InternalAnsic
    public final void synpred73_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_30=null;
        Token otherlv_32=null;
        EObject lv_assignment_expression_31_0 = null;


        // InternalAnsic.g:3400:3: ( (otherlv_30= '[' ( (lv_assignment_expression_31_0= ruleassignment_expression ) ) otherlv_32= ']' ) )
        // InternalAnsic.g:3400:3: (otherlv_30= '[' ( (lv_assignment_expression_31_0= ruleassignment_expression ) ) otherlv_32= ']' )
        {
        // InternalAnsic.g:3400:3: (otherlv_30= '[' ( (lv_assignment_expression_31_0= ruleassignment_expression ) ) otherlv_32= ']' )
        // InternalAnsic.g:3401:4: otherlv_30= '[' ( (lv_assignment_expression_31_0= ruleassignment_expression ) ) otherlv_32= ']'
        {
        otherlv_30=(Token)match(input,65,FOLLOW_8); if (state.failed) return ;
        // InternalAnsic.g:3405:4: ( (lv_assignment_expression_31_0= ruleassignment_expression ) )
        // InternalAnsic.g:3406:5: (lv_assignment_expression_31_0= ruleassignment_expression )
        {
        // InternalAnsic.g:3406:5: (lv_assignment_expression_31_0= ruleassignment_expression )
        // InternalAnsic.g:3407:6: lv_assignment_expression_31_0= ruleassignment_expression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getAssignment_expressionAssignment_expressionParserRuleCall_8_1_0());
          					
        }
        pushFollow(FOLLOW_21);
        lv_assignment_expression_31_0=ruleassignment_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_32=(Token)match(input,66,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred73_InternalAnsic

    // $ANTLR start synpred74_InternalAnsic
    public final void synpred74_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_33=null;
        Token otherlv_35=null;
        EObject lv_parameter_type_list_34_0 = null;


        // InternalAnsic.g:3430:3: ( (otherlv_33= '(' ( (lv_parameter_type_list_34_0= ruleparameter_type_list ) ) otherlv_35= ')' ) )
        // InternalAnsic.g:3430:3: (otherlv_33= '(' ( (lv_parameter_type_list_34_0= ruleparameter_type_list ) ) otherlv_35= ')' )
        {
        // InternalAnsic.g:3430:3: (otherlv_33= '(' ( (lv_parameter_type_list_34_0= ruleparameter_type_list ) ) otherlv_35= ')' )
        // InternalAnsic.g:3431:4: otherlv_33= '(' ( (lv_parameter_type_list_34_0= ruleparameter_type_list ) ) otherlv_35= ')'
        {
        otherlv_33=(Token)match(input,31,FOLLOW_4); if (state.failed) return ;
        // InternalAnsic.g:3435:4: ( (lv_parameter_type_list_34_0= ruleparameter_type_list ) )
        // InternalAnsic.g:3436:5: (lv_parameter_type_list_34_0= ruleparameter_type_list )
        {
        // InternalAnsic.g:3436:5: (lv_parameter_type_list_34_0= ruleparameter_type_list )
        // InternalAnsic.g:3437:6: lv_parameter_type_list_34_0= ruleparameter_type_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDirect_declarator_complementoAccess().getParameter_type_listParameter_type_listParserRuleCall_9_1_0());
          					
        }
        pushFollow(FOLLOW_7);
        lv_parameter_type_list_34_0=ruleparameter_type_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_35=(Token)match(input,32,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred74_InternalAnsic

    // $ANTLR start synpred75_InternalAnsic
    public final void synpred75_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_36=null;
        Token otherlv_37=null;

        // InternalAnsic.g:3460:3: ( (otherlv_36= '(' otherlv_37= ')' ) )
        // InternalAnsic.g:3460:3: (otherlv_36= '(' otherlv_37= ')' )
        {
        // InternalAnsic.g:3460:3: (otherlv_36= '(' otherlv_37= ')' )
        // InternalAnsic.g:3461:4: otherlv_36= '(' otherlv_37= ')'
        {
        otherlv_36=(Token)match(input,31,FOLLOW_7); if (state.failed) return ;
        otherlv_37=(Token)match(input,32,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred75_InternalAnsic

    // $ANTLR start synpred76_InternalAnsic
    public final void synpred76_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_parameter_list_0_0 = null;


        // InternalAnsic.g:3519:3: ( ( ( (lv_parameter_list_0_0= ruleparameter_list ) ) otherlv_1= ',' otherlv_2= '...' ) )
        // InternalAnsic.g:3519:3: ( ( (lv_parameter_list_0_0= ruleparameter_list ) ) otherlv_1= ',' otherlv_2= '...' )
        {
        // InternalAnsic.g:3519:3: ( ( (lv_parameter_list_0_0= ruleparameter_list ) ) otherlv_1= ',' otherlv_2= '...' )
        // InternalAnsic.g:3520:4: ( (lv_parameter_list_0_0= ruleparameter_list ) ) otherlv_1= ',' otherlv_2= '...'
        {
        // InternalAnsic.g:3520:4: ( (lv_parameter_list_0_0= ruleparameter_list ) )
        // InternalAnsic.g:3521:5: (lv_parameter_list_0_0= ruleparameter_list )
        {
        // InternalAnsic.g:3521:5: (lv_parameter_list_0_0= ruleparameter_list )
        // InternalAnsic.g:3522:6: lv_parameter_list_0_0= ruleparameter_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getParameter_type_listAccess().getParameter_listParameter_listParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_12);
        lv_parameter_list_0_0=ruleparameter_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,53,FOLLOW_23); if (state.failed) return ;
        otherlv_2=(Token)match(input,67,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred76_InternalAnsic

    // $ANTLR start synpred78_InternalAnsic
    public final void synpred78_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_declaration_specifiers_0_0 = null;

        EObject lv_declarator_1_0 = null;


        // InternalAnsic.g:3717:3: ( ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) ) )
        // InternalAnsic.g:3717:3: ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) )
        {
        // InternalAnsic.g:3717:3: ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) )
        // InternalAnsic.g:3718:4: ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) )
        {
        // InternalAnsic.g:3718:4: ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) )
        // InternalAnsic.g:3719:5: (lv_declaration_specifiers_0_0= ruledeclaration_specifiers )
        {
        // InternalAnsic.g:3719:5: (lv_declaration_specifiers_0_0= ruledeclaration_specifiers )
        // InternalAnsic.g:3720:6: lv_declaration_specifiers_0_0= ruledeclaration_specifiers
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getParameter_declarationAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_17);
        lv_declaration_specifiers_0_0=ruledeclaration_specifiers();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:3737:4: ( (lv_declarator_1_0= ruledeclarator ) )
        // InternalAnsic.g:3738:5: (lv_declarator_1_0= ruledeclarator )
        {
        // InternalAnsic.g:3738:5: (lv_declarator_1_0= ruledeclarator )
        // InternalAnsic.g:3739:6: lv_declarator_1_0= ruledeclarator
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getParameter_declarationAccess().getDeclaratorDeclaratorParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_declarator_1_0=ruledeclarator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred78_InternalAnsic

    // $ANTLR start synpred79_InternalAnsic
    public final void synpred79_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_declaration_specifiers_2_0 = null;

        EObject lv_abstract_declarator_3_0 = null;


        // InternalAnsic.g:3758:3: ( ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_abstract_declarator_3_0= ruleabstract_declarator ) ) ) )
        // InternalAnsic.g:3758:3: ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_abstract_declarator_3_0= ruleabstract_declarator ) ) )
        {
        // InternalAnsic.g:3758:3: ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_abstract_declarator_3_0= ruleabstract_declarator ) ) )
        // InternalAnsic.g:3759:4: ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_abstract_declarator_3_0= ruleabstract_declarator ) )
        {
        // InternalAnsic.g:3759:4: ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) )
        // InternalAnsic.g:3760:5: (lv_declaration_specifiers_2_0= ruledeclaration_specifiers )
        {
        // InternalAnsic.g:3760:5: (lv_declaration_specifiers_2_0= ruledeclaration_specifiers )
        // InternalAnsic.g:3761:6: lv_declaration_specifiers_2_0= ruledeclaration_specifiers
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getParameter_declarationAccess().getDeclaration_specifiersDeclaration_specifiersParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_24);
        lv_declaration_specifiers_2_0=ruledeclaration_specifiers();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:3778:4: ( (lv_abstract_declarator_3_0= ruleabstract_declarator ) )
        // InternalAnsic.g:3779:5: (lv_abstract_declarator_3_0= ruleabstract_declarator )
        {
        // InternalAnsic.g:3779:5: (lv_abstract_declarator_3_0= ruleabstract_declarator )
        // InternalAnsic.g:3780:6: lv_abstract_declarator_3_0= ruleabstract_declarator
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getParameter_declarationAccess().getAbstract_declaratorAbstract_declaratorParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_abstract_declarator_3_0=ruleabstract_declarator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred79_InternalAnsic

    // $ANTLR start synpred80_InternalAnsic
    public final void synpred80_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_pointer_0_0 = null;

        EObject lv_direct_abstract_declarator_1_0 = null;


        // InternalAnsic.g:3837:3: ( ( ( (lv_pointer_0_0= rulepointer ) ) ( (lv_direct_abstract_declarator_1_0= ruledirect_abstract_declarator ) ) ) )
        // InternalAnsic.g:3837:3: ( ( (lv_pointer_0_0= rulepointer ) ) ( (lv_direct_abstract_declarator_1_0= ruledirect_abstract_declarator ) ) )
        {
        // InternalAnsic.g:3837:3: ( ( (lv_pointer_0_0= rulepointer ) ) ( (lv_direct_abstract_declarator_1_0= ruledirect_abstract_declarator ) ) )
        // InternalAnsic.g:3838:4: ( (lv_pointer_0_0= rulepointer ) ) ( (lv_direct_abstract_declarator_1_0= ruledirect_abstract_declarator ) )
        {
        // InternalAnsic.g:3838:4: ( (lv_pointer_0_0= rulepointer ) )
        // InternalAnsic.g:3839:5: (lv_pointer_0_0= rulepointer )
        {
        // InternalAnsic.g:3839:5: (lv_pointer_0_0= rulepointer )
        // InternalAnsic.g:3840:6: lv_pointer_0_0= rulepointer
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getAbstract_declaratorAccess().getPointerPointerParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_24);
        lv_pointer_0_0=rulepointer();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:3857:4: ( (lv_direct_abstract_declarator_1_0= ruledirect_abstract_declarator ) )
        // InternalAnsic.g:3858:5: (lv_direct_abstract_declarator_1_0= ruledirect_abstract_declarator )
        {
        // InternalAnsic.g:3858:5: (lv_direct_abstract_declarator_1_0= ruledirect_abstract_declarator )
        // InternalAnsic.g:3859:6: lv_direct_abstract_declarator_1_0= ruledirect_abstract_declarator
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getAbstract_declaratorAccess().getDirect_abstract_declaratorDirect_abstract_declaratorParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_direct_abstract_declarator_1_0=ruledirect_abstract_declarator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred80_InternalAnsic

    // $ANTLR start synpred81_InternalAnsic
    public final void synpred81_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_pointer_2_0 = null;


        // InternalAnsic.g:3878:3: ( ( (lv_pointer_2_0= rulepointer ) ) )
        // InternalAnsic.g:3878:3: ( (lv_pointer_2_0= rulepointer ) )
        {
        // InternalAnsic.g:3878:3: ( (lv_pointer_2_0= rulepointer ) )
        // InternalAnsic.g:3879:4: (lv_pointer_2_0= rulepointer )
        {
        // InternalAnsic.g:3879:4: (lv_pointer_2_0= rulepointer )
        // InternalAnsic.g:3880:5: lv_pointer_2_0= rulepointer
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getAbstract_declaratorAccess().getPointerPointerParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_pointer_2_0=rulepointer();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred81_InternalAnsic

    // $ANTLR start synpred82_InternalAnsic
    public final void synpred82_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_abstract_declarator_1_0 = null;


        // InternalAnsic.g:3937:4: ( (otherlv_0= '(' ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) otherlv_2= ')' ) )
        // InternalAnsic.g:3937:4: (otherlv_0= '(' ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) otherlv_2= ')' )
        {
        // InternalAnsic.g:3937:4: (otherlv_0= '(' ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) otherlv_2= ')' )
        // InternalAnsic.g:3938:5: otherlv_0= '(' ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) otherlv_2= ')'
        {
        otherlv_0=(Token)match(input,31,FOLLOW_24); if (state.failed) return ;
        // InternalAnsic.g:3942:5: ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) )
        // InternalAnsic.g:3943:6: (lv_abstract_declarator_1_0= ruleabstract_declarator )
        {
        // InternalAnsic.g:3943:6: (lv_abstract_declarator_1_0= ruleabstract_declarator )
        // InternalAnsic.g:3944:7: lv_abstract_declarator_1_0= ruleabstract_declarator
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getAbstract_declaratorAbstract_declaratorParserRuleCall_0_0_1_0());
          						
        }
        pushFollow(FOLLOW_7);
        lv_abstract_declarator_1_0=ruleabstract_declarator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_2=(Token)match(input,32,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred82_InternalAnsic

    // $ANTLR start synpred83_InternalAnsic
    public final void synpred83_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        Token otherlv_4=null;

        // InternalAnsic.g:3967:4: ( (otherlv_3= '[' otherlv_4= ']' ) )
        // InternalAnsic.g:3967:4: (otherlv_3= '[' otherlv_4= ']' )
        {
        // InternalAnsic.g:3967:4: (otherlv_3= '[' otherlv_4= ']' )
        // InternalAnsic.g:3968:5: otherlv_3= '[' otherlv_4= ']'
        {
        otherlv_3=(Token)match(input,65,FOLLOW_21); if (state.failed) return ;
        otherlv_4=(Token)match(input,66,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred83_InternalAnsic

    // $ANTLR start synpred84_InternalAnsic
    public final void synpred84_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;

        // InternalAnsic.g:3978:4: ( (otherlv_5= '[' otherlv_6= '*' otherlv_7= ']' ) )
        // InternalAnsic.g:3978:4: (otherlv_5= '[' otherlv_6= '*' otherlv_7= ']' )
        {
        // InternalAnsic.g:3978:4: (otherlv_5= '[' otherlv_6= '*' otherlv_7= ']' )
        // InternalAnsic.g:3979:5: otherlv_5= '[' otherlv_6= '*' otherlv_7= ']'
        {
        otherlv_5=(Token)match(input,65,FOLLOW_19); if (state.failed) return ;
        otherlv_6=(Token)match(input,64,FOLLOW_21); if (state.failed) return ;
        otherlv_7=(Token)match(input,66,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred84_InternalAnsic

    // $ANTLR start synpred85_InternalAnsic
    public final void synpred85_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_12=null;
        EObject lv_type_qualifier_list_10_0 = null;

        EObject lv_assignment_expression_11_0 = null;


        // InternalAnsic.g:3993:4: ( (otherlv_8= '[' otherlv_9= 'static' ( (lv_type_qualifier_list_10_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_11_0= ruleassignment_expression ) ) otherlv_12= ']' ) )
        // InternalAnsic.g:3993:4: (otherlv_8= '[' otherlv_9= 'static' ( (lv_type_qualifier_list_10_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_11_0= ruleassignment_expression ) ) otherlv_12= ']' )
        {
        // InternalAnsic.g:3993:4: (otherlv_8= '[' otherlv_9= 'static' ( (lv_type_qualifier_list_10_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_11_0= ruleassignment_expression ) ) otherlv_12= ']' )
        // InternalAnsic.g:3994:5: otherlv_8= '[' otherlv_9= 'static' ( (lv_type_qualifier_list_10_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_11_0= ruleassignment_expression ) ) otherlv_12= ']'
        {
        otherlv_8=(Token)match(input,65,FOLLOW_22); if (state.failed) return ;
        otherlv_9=(Token)match(input,60,FOLLOW_18); if (state.failed) return ;
        // InternalAnsic.g:4002:5: ( (lv_type_qualifier_list_10_0= ruletype_qualifier_list ) )
        // InternalAnsic.g:4003:6: (lv_type_qualifier_list_10_0= ruletype_qualifier_list )
        {
        // InternalAnsic.g:4003:6: (lv_type_qualifier_list_10_0= ruletype_qualifier_list )
        // InternalAnsic.g:4004:7: lv_type_qualifier_list_10_0= ruletype_qualifier_list
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getType_qualifier_listType_qualifier_listParserRuleCall_0_3_2_0());
          						
        }
        pushFollow(FOLLOW_8);
        lv_type_qualifier_list_10_0=ruletype_qualifier_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:4021:5: ( (lv_assignment_expression_11_0= ruleassignment_expression ) )
        // InternalAnsic.g:4022:6: (lv_assignment_expression_11_0= ruleassignment_expression )
        {
        // InternalAnsic.g:4022:6: (lv_assignment_expression_11_0= ruleassignment_expression )
        // InternalAnsic.g:4023:7: lv_assignment_expression_11_0= ruleassignment_expression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getAssignment_expressionAssignment_expressionParserRuleCall_0_3_3_0());
          						
        }
        pushFollow(FOLLOW_21);
        lv_assignment_expression_11_0=ruleassignment_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_12=(Token)match(input,66,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred85_InternalAnsic

    // $ANTLR start synpred86_InternalAnsic
    public final void synpred86_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        EObject lv_assignment_expression_15_0 = null;


        // InternalAnsic.g:4046:4: ( (otherlv_13= '[' otherlv_14= 'static' ( (lv_assignment_expression_15_0= ruleassignment_expression ) ) otherlv_16= ']' ) )
        // InternalAnsic.g:4046:4: (otherlv_13= '[' otherlv_14= 'static' ( (lv_assignment_expression_15_0= ruleassignment_expression ) ) otherlv_16= ']' )
        {
        // InternalAnsic.g:4046:4: (otherlv_13= '[' otherlv_14= 'static' ( (lv_assignment_expression_15_0= ruleassignment_expression ) ) otherlv_16= ']' )
        // InternalAnsic.g:4047:5: otherlv_13= '[' otherlv_14= 'static' ( (lv_assignment_expression_15_0= ruleassignment_expression ) ) otherlv_16= ']'
        {
        otherlv_13=(Token)match(input,65,FOLLOW_22); if (state.failed) return ;
        otherlv_14=(Token)match(input,60,FOLLOW_8); if (state.failed) return ;
        // InternalAnsic.g:4055:5: ( (lv_assignment_expression_15_0= ruleassignment_expression ) )
        // InternalAnsic.g:4056:6: (lv_assignment_expression_15_0= ruleassignment_expression )
        {
        // InternalAnsic.g:4056:6: (lv_assignment_expression_15_0= ruleassignment_expression )
        // InternalAnsic.g:4057:7: lv_assignment_expression_15_0= ruleassignment_expression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getAssignment_expressionAssignment_expressionParserRuleCall_0_4_2_0());
          						
        }
        pushFollow(FOLLOW_21);
        lv_assignment_expression_15_0=ruleassignment_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_16=(Token)match(input,66,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred86_InternalAnsic

    // $ANTLR start synpred87_InternalAnsic
    public final void synpred87_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        EObject lv_type_qualifier_list_18_0 = null;

        EObject lv_assignment_expression_20_0 = null;


        // InternalAnsic.g:4080:4: ( (otherlv_17= '[' ( (lv_type_qualifier_list_18_0= ruletype_qualifier_list ) ) otherlv_19= 'static' ( (lv_assignment_expression_20_0= ruleassignment_expression ) ) otherlv_21= ']' ) )
        // InternalAnsic.g:4080:4: (otherlv_17= '[' ( (lv_type_qualifier_list_18_0= ruletype_qualifier_list ) ) otherlv_19= 'static' ( (lv_assignment_expression_20_0= ruleassignment_expression ) ) otherlv_21= ']' )
        {
        // InternalAnsic.g:4080:4: (otherlv_17= '[' ( (lv_type_qualifier_list_18_0= ruletype_qualifier_list ) ) otherlv_19= 'static' ( (lv_assignment_expression_20_0= ruleassignment_expression ) ) otherlv_21= ']' )
        // InternalAnsic.g:4081:5: otherlv_17= '[' ( (lv_type_qualifier_list_18_0= ruletype_qualifier_list ) ) otherlv_19= 'static' ( (lv_assignment_expression_20_0= ruleassignment_expression ) ) otherlv_21= ']'
        {
        otherlv_17=(Token)match(input,65,FOLLOW_18); if (state.failed) return ;
        // InternalAnsic.g:4085:5: ( (lv_type_qualifier_list_18_0= ruletype_qualifier_list ) )
        // InternalAnsic.g:4086:6: (lv_type_qualifier_list_18_0= ruletype_qualifier_list )
        {
        // InternalAnsic.g:4086:6: (lv_type_qualifier_list_18_0= ruletype_qualifier_list )
        // InternalAnsic.g:4087:7: lv_type_qualifier_list_18_0= ruletype_qualifier_list
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getType_qualifier_listType_qualifier_listParserRuleCall_0_5_1_0());
          						
        }
        pushFollow(FOLLOW_22);
        lv_type_qualifier_list_18_0=ruletype_qualifier_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_19=(Token)match(input,60,FOLLOW_8); if (state.failed) return ;
        // InternalAnsic.g:4108:5: ( (lv_assignment_expression_20_0= ruleassignment_expression ) )
        // InternalAnsic.g:4109:6: (lv_assignment_expression_20_0= ruleassignment_expression )
        {
        // InternalAnsic.g:4109:6: (lv_assignment_expression_20_0= ruleassignment_expression )
        // InternalAnsic.g:4110:7: lv_assignment_expression_20_0= ruleassignment_expression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getAssignment_expressionAssignment_expressionParserRuleCall_0_5_3_0());
          						
        }
        pushFollow(FOLLOW_21);
        lv_assignment_expression_20_0=ruleassignment_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_21=(Token)match(input,66,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred87_InternalAnsic

    // $ANTLR start synpred88_InternalAnsic
    public final void synpred88_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_22=null;
        Token otherlv_25=null;
        EObject lv_type_qualifier_list_23_0 = null;

        EObject lv_assignment_expression_24_0 = null;


        // InternalAnsic.g:4133:4: ( (otherlv_22= '[' ( (lv_type_qualifier_list_23_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_24_0= ruleassignment_expression ) ) otherlv_25= ']' ) )
        // InternalAnsic.g:4133:4: (otherlv_22= '[' ( (lv_type_qualifier_list_23_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_24_0= ruleassignment_expression ) ) otherlv_25= ']' )
        {
        // InternalAnsic.g:4133:4: (otherlv_22= '[' ( (lv_type_qualifier_list_23_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_24_0= ruleassignment_expression ) ) otherlv_25= ']' )
        // InternalAnsic.g:4134:5: otherlv_22= '[' ( (lv_type_qualifier_list_23_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_24_0= ruleassignment_expression ) ) otherlv_25= ']'
        {
        otherlv_22=(Token)match(input,65,FOLLOW_18); if (state.failed) return ;
        // InternalAnsic.g:4138:5: ( (lv_type_qualifier_list_23_0= ruletype_qualifier_list ) )
        // InternalAnsic.g:4139:6: (lv_type_qualifier_list_23_0= ruletype_qualifier_list )
        {
        // InternalAnsic.g:4139:6: (lv_type_qualifier_list_23_0= ruletype_qualifier_list )
        // InternalAnsic.g:4140:7: lv_type_qualifier_list_23_0= ruletype_qualifier_list
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getType_qualifier_listType_qualifier_listParserRuleCall_0_6_1_0());
          						
        }
        pushFollow(FOLLOW_8);
        lv_type_qualifier_list_23_0=ruletype_qualifier_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:4157:5: ( (lv_assignment_expression_24_0= ruleassignment_expression ) )
        // InternalAnsic.g:4158:6: (lv_assignment_expression_24_0= ruleassignment_expression )
        {
        // InternalAnsic.g:4158:6: (lv_assignment_expression_24_0= ruleassignment_expression )
        // InternalAnsic.g:4159:7: lv_assignment_expression_24_0= ruleassignment_expression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getAssignment_expressionAssignment_expressionParserRuleCall_0_6_2_0());
          						
        }
        pushFollow(FOLLOW_21);
        lv_assignment_expression_24_0=ruleassignment_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_25=(Token)match(input,66,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred88_InternalAnsic

    // $ANTLR start synpred89_InternalAnsic
    public final void synpred89_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_26=null;
        Token otherlv_28=null;
        EObject lv_type_qualifier_list_27_0 = null;


        // InternalAnsic.g:4182:4: ( (otherlv_26= '[' ( (lv_type_qualifier_list_27_0= ruletype_qualifier_list ) ) otherlv_28= ']' ) )
        // InternalAnsic.g:4182:4: (otherlv_26= '[' ( (lv_type_qualifier_list_27_0= ruletype_qualifier_list ) ) otherlv_28= ']' )
        {
        // InternalAnsic.g:4182:4: (otherlv_26= '[' ( (lv_type_qualifier_list_27_0= ruletype_qualifier_list ) ) otherlv_28= ']' )
        // InternalAnsic.g:4183:5: otherlv_26= '[' ( (lv_type_qualifier_list_27_0= ruletype_qualifier_list ) ) otherlv_28= ']'
        {
        otherlv_26=(Token)match(input,65,FOLLOW_18); if (state.failed) return ;
        // InternalAnsic.g:4187:5: ( (lv_type_qualifier_list_27_0= ruletype_qualifier_list ) )
        // InternalAnsic.g:4188:6: (lv_type_qualifier_list_27_0= ruletype_qualifier_list )
        {
        // InternalAnsic.g:4188:6: (lv_type_qualifier_list_27_0= ruletype_qualifier_list )
        // InternalAnsic.g:4189:7: lv_type_qualifier_list_27_0= ruletype_qualifier_list
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getType_qualifier_listType_qualifier_listParserRuleCall_0_7_1_0());
          						
        }
        pushFollow(FOLLOW_21);
        lv_type_qualifier_list_27_0=ruletype_qualifier_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_28=(Token)match(input,66,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred89_InternalAnsic

    // $ANTLR start synpred90_InternalAnsic
    public final void synpred90_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_29=null;
        Token otherlv_31=null;
        EObject lv_assignment_expression_30_0 = null;


        // InternalAnsic.g:4212:4: ( (otherlv_29= '[' ( (lv_assignment_expression_30_0= ruleassignment_expression ) ) otherlv_31= ']' ) )
        // InternalAnsic.g:4212:4: (otherlv_29= '[' ( (lv_assignment_expression_30_0= ruleassignment_expression ) ) otherlv_31= ']' )
        {
        // InternalAnsic.g:4212:4: (otherlv_29= '[' ( (lv_assignment_expression_30_0= ruleassignment_expression ) ) otherlv_31= ']' )
        // InternalAnsic.g:4213:5: otherlv_29= '[' ( (lv_assignment_expression_30_0= ruleassignment_expression ) ) otherlv_31= ']'
        {
        otherlv_29=(Token)match(input,65,FOLLOW_8); if (state.failed) return ;
        // InternalAnsic.g:4217:5: ( (lv_assignment_expression_30_0= ruleassignment_expression ) )
        // InternalAnsic.g:4218:6: (lv_assignment_expression_30_0= ruleassignment_expression )
        {
        // InternalAnsic.g:4218:6: (lv_assignment_expression_30_0= ruleassignment_expression )
        // InternalAnsic.g:4219:7: lv_assignment_expression_30_0= ruleassignment_expression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getDirect_abstract_declaratorAccess().getAssignment_expressionAssignment_expressionParserRuleCall_0_8_1_0());
          						
        }
        pushFollow(FOLLOW_21);
        lv_assignment_expression_30_0=ruleassignment_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_31=(Token)match(input,66,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred90_InternalAnsic

    // $ANTLR start synpred91_InternalAnsic
    public final void synpred91_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_32=null;
        Token otherlv_33=null;

        // InternalAnsic.g:4242:4: ( (otherlv_32= '(' otherlv_33= ')' ) )
        // InternalAnsic.g:4242:4: (otherlv_32= '(' otherlv_33= ')' )
        {
        // InternalAnsic.g:4242:4: (otherlv_32= '(' otherlv_33= ')' )
        // InternalAnsic.g:4243:5: otherlv_32= '(' otherlv_33= ')'
        {
        otherlv_32=(Token)match(input,31,FOLLOW_7); if (state.failed) return ;
        otherlv_33=(Token)match(input,32,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred91_InternalAnsic

    // $ANTLR start synpred92_InternalAnsic
    public final void synpred92_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_init_declarator_list_1_0 = null;


        // InternalAnsic.g:4321:3: ( (otherlv_0= '{' ( (lv_init_declarator_list_1_0= ruleinitializer_list ) ) otherlv_2= '}' ) )
        // InternalAnsic.g:4321:3: (otherlv_0= '{' ( (lv_init_declarator_list_1_0= ruleinitializer_list ) ) otherlv_2= '}' )
        {
        // InternalAnsic.g:4321:3: (otherlv_0= '{' ( (lv_init_declarator_list_1_0= ruleinitializer_list ) ) otherlv_2= '}' )
        // InternalAnsic.g:4322:4: otherlv_0= '{' ( (lv_init_declarator_list_1_0= ruleinitializer_list ) ) otherlv_2= '}'
        {
        otherlv_0=(Token)match(input,51,FOLLOW_25); if (state.failed) return ;
        // InternalAnsic.g:4326:4: ( (lv_init_declarator_list_1_0= ruleinitializer_list ) )
        // InternalAnsic.g:4327:5: (lv_init_declarator_list_1_0= ruleinitializer_list )
        {
        // InternalAnsic.g:4327:5: (lv_init_declarator_list_1_0= ruleinitializer_list )
        // InternalAnsic.g:4328:6: lv_init_declarator_list_1_0= ruleinitializer_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getInitializerAccess().getInit_declarator_listInitializer_listParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_11);
        lv_init_declarator_list_1_0=ruleinitializer_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_2=(Token)match(input,52,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred92_InternalAnsic

    // $ANTLR start synpred93_InternalAnsic
    public final void synpred93_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_init_declarator_list_4_0 = null;


        // InternalAnsic.g:4351:3: ( (otherlv_3= '{' ( (lv_init_declarator_list_4_0= ruleinitializer_list ) ) otherlv_5= ',' otherlv_6= '}' ) )
        // InternalAnsic.g:4351:3: (otherlv_3= '{' ( (lv_init_declarator_list_4_0= ruleinitializer_list ) ) otherlv_5= ',' otherlv_6= '}' )
        {
        // InternalAnsic.g:4351:3: (otherlv_3= '{' ( (lv_init_declarator_list_4_0= ruleinitializer_list ) ) otherlv_5= ',' otherlv_6= '}' )
        // InternalAnsic.g:4352:4: otherlv_3= '{' ( (lv_init_declarator_list_4_0= ruleinitializer_list ) ) otherlv_5= ',' otherlv_6= '}'
        {
        otherlv_3=(Token)match(input,51,FOLLOW_25); if (state.failed) return ;
        // InternalAnsic.g:4356:4: ( (lv_init_declarator_list_4_0= ruleinitializer_list ) )
        // InternalAnsic.g:4357:5: (lv_init_declarator_list_4_0= ruleinitializer_list )
        {
        // InternalAnsic.g:4357:5: (lv_init_declarator_list_4_0= ruleinitializer_list )
        // InternalAnsic.g:4358:6: lv_init_declarator_list_4_0= ruleinitializer_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getInitializerAccess().getInit_declarator_listInitializer_listParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_12);
        lv_init_declarator_list_4_0=ruleinitializer_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_5=(Token)match(input,53,FOLLOW_11); if (state.failed) return ;
        otherlv_6=(Token)match(input,52,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred93_InternalAnsic

    // $ANTLR start synpred95_InternalAnsic
    public final void synpred95_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_0=null;
        Token otherlv_1=null;

        // InternalAnsic.g:4492:3: ( (otherlv_0= '[' otherlv_1= ']' ) )
        // InternalAnsic.g:4492:3: (otherlv_0= '[' otherlv_1= ']' )
        {
        // InternalAnsic.g:4492:3: (otherlv_0= '[' otherlv_1= ']' )
        // InternalAnsic.g:4493:4: otherlv_0= '[' otherlv_1= ']'
        {
        otherlv_0=(Token)match(input,65,FOLLOW_21); if (state.failed) return ;
        otherlv_1=(Token)match(input,66,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred95_InternalAnsic

    // $ANTLR start synpred96_InternalAnsic
    public final void synpred96_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;

        // InternalAnsic.g:4503:3: ( (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' ) )
        // InternalAnsic.g:4503:3: (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' )
        {
        // InternalAnsic.g:4503:3: (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' )
        // InternalAnsic.g:4504:4: otherlv_2= '[' otherlv_3= '*' otherlv_4= ']'
        {
        otherlv_2=(Token)match(input,65,FOLLOW_19); if (state.failed) return ;
        otherlv_3=(Token)match(input,64,FOLLOW_21); if (state.failed) return ;
        otherlv_4=(Token)match(input,66,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred96_InternalAnsic

    // $ANTLR start synpred97_InternalAnsic
    public final void synpred97_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        EObject this_type_qualifier_list_7 = null;

        EObject lv_assignment_expression_8_0 = null;


        // InternalAnsic.g:4518:3: ( (otherlv_5= '[' otherlv_6= 'static' this_type_qualifier_list_7= ruletype_qualifier_list ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' ) )
        // InternalAnsic.g:4518:3: (otherlv_5= '[' otherlv_6= 'static' this_type_qualifier_list_7= ruletype_qualifier_list ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' )
        {
        // InternalAnsic.g:4518:3: (otherlv_5= '[' otherlv_6= 'static' this_type_qualifier_list_7= ruletype_qualifier_list ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' )
        // InternalAnsic.g:4519:4: otherlv_5= '[' otherlv_6= 'static' this_type_qualifier_list_7= ruletype_qualifier_list ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']'
        {
        otherlv_5=(Token)match(input,65,FOLLOW_22); if (state.failed) return ;
        otherlv_6=(Token)match(input,60,FOLLOW_18); if (state.failed) return ;
        pushFollow(FOLLOW_8);
        this_type_qualifier_list_7=ruletype_qualifier_list();

        state._fsp--;
        if (state.failed) return ;
        // InternalAnsic.g:4538:4: ( (lv_assignment_expression_8_0= ruleassignment_expression ) )
        // InternalAnsic.g:4539:5: (lv_assignment_expression_8_0= ruleassignment_expression )
        {
        // InternalAnsic.g:4539:5: (lv_assignment_expression_8_0= ruleassignment_expression )
        // InternalAnsic.g:4540:6: lv_assignment_expression_8_0= ruleassignment_expression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDirect_abstract_declarator_complementAccess().getAssignment_expressionAssignment_expressionParserRuleCall_2_3_0());
          					
        }
        pushFollow(FOLLOW_21);
        lv_assignment_expression_8_0=ruleassignment_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_9=(Token)match(input,66,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred97_InternalAnsic

    // $ANTLR start synpred98_InternalAnsic
    public final void synpred98_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_assignment_expression_12_0 = null;


        // InternalAnsic.g:4563:3: ( (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' ) )
        // InternalAnsic.g:4563:3: (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' )
        {
        // InternalAnsic.g:4563:3: (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' )
        // InternalAnsic.g:4564:4: otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']'
        {
        otherlv_10=(Token)match(input,65,FOLLOW_22); if (state.failed) return ;
        otherlv_11=(Token)match(input,60,FOLLOW_8); if (state.failed) return ;
        // InternalAnsic.g:4572:4: ( (lv_assignment_expression_12_0= ruleassignment_expression ) )
        // InternalAnsic.g:4573:5: (lv_assignment_expression_12_0= ruleassignment_expression )
        {
        // InternalAnsic.g:4573:5: (lv_assignment_expression_12_0= ruleassignment_expression )
        // InternalAnsic.g:4574:6: lv_assignment_expression_12_0= ruleassignment_expression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDirect_abstract_declarator_complementAccess().getAssignment_expressionAssignment_expressionParserRuleCall_3_2_0());
          					
        }
        pushFollow(FOLLOW_21);
        lv_assignment_expression_12_0=ruleassignment_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_13=(Token)match(input,66,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred98_InternalAnsic

    // $ANTLR start synpred99_InternalAnsic
    public final void synpred99_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        Token otherlv_17=null;
        EObject lv_type_qualifier_list_15_0 = null;

        EObject lv_assignment_expression_16_0 = null;


        // InternalAnsic.g:4597:3: ( (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_16_0= ruleassignment_expression ) ) otherlv_17= ']' ) )
        // InternalAnsic.g:4597:3: (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_16_0= ruleassignment_expression ) ) otherlv_17= ']' )
        {
        // InternalAnsic.g:4597:3: (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_16_0= ruleassignment_expression ) ) otherlv_17= ']' )
        // InternalAnsic.g:4598:4: otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_16_0= ruleassignment_expression ) ) otherlv_17= ']'
        {
        otherlv_14=(Token)match(input,65,FOLLOW_18); if (state.failed) return ;
        // InternalAnsic.g:4602:4: ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) )
        // InternalAnsic.g:4603:5: (lv_type_qualifier_list_15_0= ruletype_qualifier_list )
        {
        // InternalAnsic.g:4603:5: (lv_type_qualifier_list_15_0= ruletype_qualifier_list )
        // InternalAnsic.g:4604:6: lv_type_qualifier_list_15_0= ruletype_qualifier_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDirect_abstract_declarator_complementAccess().getType_qualifier_listType_qualifier_listParserRuleCall_4_1_0());
          					
        }
        pushFollow(FOLLOW_8);
        lv_type_qualifier_list_15_0=ruletype_qualifier_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:4621:4: ( (lv_assignment_expression_16_0= ruleassignment_expression ) )
        // InternalAnsic.g:4622:5: (lv_assignment_expression_16_0= ruleassignment_expression )
        {
        // InternalAnsic.g:4622:5: (lv_assignment_expression_16_0= ruleassignment_expression )
        // InternalAnsic.g:4623:6: lv_assignment_expression_16_0= ruleassignment_expression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDirect_abstract_declarator_complementAccess().getAssignment_expressionAssignment_expressionParserRuleCall_4_2_0());
          					
        }
        pushFollow(FOLLOW_21);
        lv_assignment_expression_16_0=ruleassignment_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_17=(Token)match(input,66,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred99_InternalAnsic

    // $ANTLR start synpred100_InternalAnsic
    public final void synpred100_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        EObject lv_type_qualifier_list_19_0 = null;

        EObject lv_assignment_expression_21_0 = null;


        // InternalAnsic.g:4646:3: ( (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' ) )
        // InternalAnsic.g:4646:3: (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' )
        {
        // InternalAnsic.g:4646:3: (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' )
        // InternalAnsic.g:4647:4: otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']'
        {
        otherlv_18=(Token)match(input,65,FOLLOW_18); if (state.failed) return ;
        // InternalAnsic.g:4651:4: ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) )
        // InternalAnsic.g:4652:5: (lv_type_qualifier_list_19_0= ruletype_qualifier_list )
        {
        // InternalAnsic.g:4652:5: (lv_type_qualifier_list_19_0= ruletype_qualifier_list )
        // InternalAnsic.g:4653:6: lv_type_qualifier_list_19_0= ruletype_qualifier_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDirect_abstract_declarator_complementAccess().getType_qualifier_listType_qualifier_listParserRuleCall_5_1_0());
          					
        }
        pushFollow(FOLLOW_22);
        lv_type_qualifier_list_19_0=ruletype_qualifier_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_20=(Token)match(input,60,FOLLOW_8); if (state.failed) return ;
        // InternalAnsic.g:4674:4: ( (lv_assignment_expression_21_0= ruleassignment_expression ) )
        // InternalAnsic.g:4675:5: (lv_assignment_expression_21_0= ruleassignment_expression )
        {
        // InternalAnsic.g:4675:5: (lv_assignment_expression_21_0= ruleassignment_expression )
        // InternalAnsic.g:4676:6: lv_assignment_expression_21_0= ruleassignment_expression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDirect_abstract_declarator_complementAccess().getAssignment_expressionAssignment_expressionParserRuleCall_5_3_0());
          					
        }
        pushFollow(FOLLOW_21);
        lv_assignment_expression_21_0=ruleassignment_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_22=(Token)match(input,66,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred100_InternalAnsic

    // $ANTLR start synpred101_InternalAnsic
    public final void synpred101_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_23=null;
        Token otherlv_25=null;
        EObject lv_type_qualifier_list_24_0 = null;


        // InternalAnsic.g:4699:3: ( (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) otherlv_25= ']' ) )
        // InternalAnsic.g:4699:3: (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) otherlv_25= ']' )
        {
        // InternalAnsic.g:4699:3: (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) otherlv_25= ']' )
        // InternalAnsic.g:4700:4: otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) otherlv_25= ']'
        {
        otherlv_23=(Token)match(input,65,FOLLOW_18); if (state.failed) return ;
        // InternalAnsic.g:4704:4: ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) )
        // InternalAnsic.g:4705:5: (lv_type_qualifier_list_24_0= ruletype_qualifier_list )
        {
        // InternalAnsic.g:4705:5: (lv_type_qualifier_list_24_0= ruletype_qualifier_list )
        // InternalAnsic.g:4706:6: lv_type_qualifier_list_24_0= ruletype_qualifier_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDirect_abstract_declarator_complementAccess().getType_qualifier_listType_qualifier_listParserRuleCall_6_1_0());
          					
        }
        pushFollow(FOLLOW_21);
        lv_type_qualifier_list_24_0=ruletype_qualifier_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_25=(Token)match(input,66,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred101_InternalAnsic

    // $ANTLR start synpred102_InternalAnsic
    public final void synpred102_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_26=null;
        Token otherlv_28=null;
        EObject lv_assignment_expression_27_0 = null;


        // InternalAnsic.g:4729:3: ( (otherlv_26= '[' ( (lv_assignment_expression_27_0= ruleassignment_expression ) ) otherlv_28= ']' ) )
        // InternalAnsic.g:4729:3: (otherlv_26= '[' ( (lv_assignment_expression_27_0= ruleassignment_expression ) ) otherlv_28= ']' )
        {
        // InternalAnsic.g:4729:3: (otherlv_26= '[' ( (lv_assignment_expression_27_0= ruleassignment_expression ) ) otherlv_28= ']' )
        // InternalAnsic.g:4730:4: otherlv_26= '[' ( (lv_assignment_expression_27_0= ruleassignment_expression ) ) otherlv_28= ']'
        {
        otherlv_26=(Token)match(input,65,FOLLOW_8); if (state.failed) return ;
        // InternalAnsic.g:4734:4: ( (lv_assignment_expression_27_0= ruleassignment_expression ) )
        // InternalAnsic.g:4735:5: (lv_assignment_expression_27_0= ruleassignment_expression )
        {
        // InternalAnsic.g:4735:5: (lv_assignment_expression_27_0= ruleassignment_expression )
        // InternalAnsic.g:4736:6: lv_assignment_expression_27_0= ruleassignment_expression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDirect_abstract_declarator_complementAccess().getAssignment_expressionAssignment_expressionParserRuleCall_7_1_0());
          					
        }
        pushFollow(FOLLOW_21);
        lv_assignment_expression_27_0=ruleassignment_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_28=(Token)match(input,66,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred102_InternalAnsic

    // $ANTLR start synpred103_InternalAnsic
    public final void synpred103_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_29=null;
        Token otherlv_30=null;

        // InternalAnsic.g:4759:3: ( (otherlv_29= '(' otherlv_30= ')' ) )
        // InternalAnsic.g:4759:3: (otherlv_29= '(' otherlv_30= ')' )
        {
        // InternalAnsic.g:4759:3: (otherlv_29= '(' otherlv_30= ')' )
        // InternalAnsic.g:4760:4: otherlv_29= '(' otherlv_30= ')'
        {
        otherlv_29=(Token)match(input,31,FOLLOW_7); if (state.failed) return ;
        otherlv_30=(Token)match(input,32,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred103_InternalAnsic

    // $ANTLR start synpred112_InternalAnsic
    public final void synpred112_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_primary_expression_0_0 = null;

        EObject lv_postfix_expression_linha_1_0 = null;


        // InternalAnsic.g:5493:3: ( ( ( (lv_primary_expression_0_0= ruleprimary_expression ) ) ( (lv_postfix_expression_linha_1_0= rulepostfix_expression_linha ) ) ) )
        // InternalAnsic.g:5493:3: ( ( (lv_primary_expression_0_0= ruleprimary_expression ) ) ( (lv_postfix_expression_linha_1_0= rulepostfix_expression_linha ) ) )
        {
        // InternalAnsic.g:5493:3: ( ( (lv_primary_expression_0_0= ruleprimary_expression ) ) ( (lv_postfix_expression_linha_1_0= rulepostfix_expression_linha ) ) )
        // InternalAnsic.g:5494:4: ( (lv_primary_expression_0_0= ruleprimary_expression ) ) ( (lv_postfix_expression_linha_1_0= rulepostfix_expression_linha ) )
        {
        // InternalAnsic.g:5494:4: ( (lv_primary_expression_0_0= ruleprimary_expression ) )
        // InternalAnsic.g:5495:5: (lv_primary_expression_0_0= ruleprimary_expression )
        {
        // InternalAnsic.g:5495:5: (lv_primary_expression_0_0= ruleprimary_expression )
        // InternalAnsic.g:5496:6: lv_primary_expression_0_0= ruleprimary_expression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPostfix_expressionAccess().getPrimary_expressionPrimary_expressionParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_27);
        lv_primary_expression_0_0=ruleprimary_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:5513:4: ( (lv_postfix_expression_linha_1_0= rulepostfix_expression_linha ) )
        // InternalAnsic.g:5514:5: (lv_postfix_expression_linha_1_0= rulepostfix_expression_linha )
        {
        // InternalAnsic.g:5514:5: (lv_postfix_expression_linha_1_0= rulepostfix_expression_linha )
        // InternalAnsic.g:5515:6: lv_postfix_expression_linha_1_0= rulepostfix_expression_linha
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPostfix_expressionAccess().getPostfix_expression_linhaPostfix_expression_linhaParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_postfix_expression_linha_1_0=rulepostfix_expression_linha();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred112_InternalAnsic

    // $ANTLR start synpred113_InternalAnsic
    public final void synpred113_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject this_type_name_3 = null;

        EObject lv_initializer_list_6_0 = null;

        EObject lv_postfix_expression_linha_8_0 = null;


        // InternalAnsic.g:5534:3: ( (otherlv_2= '(' this_type_name_3= ruletype_name otherlv_4= ')' otherlv_5= '{' ( (lv_initializer_list_6_0= ruleinitializer_list ) ) otherlv_7= '}' ( (lv_postfix_expression_linha_8_0= rulepostfix_expression_linha ) ) ) )
        // InternalAnsic.g:5534:3: (otherlv_2= '(' this_type_name_3= ruletype_name otherlv_4= ')' otherlv_5= '{' ( (lv_initializer_list_6_0= ruleinitializer_list ) ) otherlv_7= '}' ( (lv_postfix_expression_linha_8_0= rulepostfix_expression_linha ) ) )
        {
        // InternalAnsic.g:5534:3: (otherlv_2= '(' this_type_name_3= ruletype_name otherlv_4= ')' otherlv_5= '{' ( (lv_initializer_list_6_0= ruleinitializer_list ) ) otherlv_7= '}' ( (lv_postfix_expression_linha_8_0= rulepostfix_expression_linha ) ) )
        // InternalAnsic.g:5535:4: otherlv_2= '(' this_type_name_3= ruletype_name otherlv_4= ')' otherlv_5= '{' ( (lv_initializer_list_6_0= ruleinitializer_list ) ) otherlv_7= '}' ( (lv_postfix_expression_linha_8_0= rulepostfix_expression_linha ) )
        {
        otherlv_2=(Token)match(input,31,FOLLOW_6); if (state.failed) return ;
        pushFollow(FOLLOW_7);
        this_type_name_3=ruletype_name();

        state._fsp--;
        if (state.failed) return ;
        otherlv_4=(Token)match(input,32,FOLLOW_9); if (state.failed) return ;
        otherlv_5=(Token)match(input,51,FOLLOW_25); if (state.failed) return ;
        // InternalAnsic.g:5558:4: ( (lv_initializer_list_6_0= ruleinitializer_list ) )
        // InternalAnsic.g:5559:5: (lv_initializer_list_6_0= ruleinitializer_list )
        {
        // InternalAnsic.g:5559:5: (lv_initializer_list_6_0= ruleinitializer_list )
        // InternalAnsic.g:5560:6: lv_initializer_list_6_0= ruleinitializer_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPostfix_expressionAccess().getInitializer_listInitializer_listParserRuleCall_1_4_0());
          					
        }
        pushFollow(FOLLOW_11);
        lv_initializer_list_6_0=ruleinitializer_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_7=(Token)match(input,52,FOLLOW_27); if (state.failed) return ;
        // InternalAnsic.g:5581:4: ( (lv_postfix_expression_linha_8_0= rulepostfix_expression_linha ) )
        // InternalAnsic.g:5582:5: (lv_postfix_expression_linha_8_0= rulepostfix_expression_linha )
        {
        // InternalAnsic.g:5582:5: (lv_postfix_expression_linha_8_0= rulepostfix_expression_linha )
        // InternalAnsic.g:5583:6: lv_postfix_expression_linha_8_0= rulepostfix_expression_linha
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPostfix_expressionAccess().getPostfix_expression_linhaPostfix_expression_linhaParserRuleCall_1_6_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_postfix_expression_linha_8_0=rulepostfix_expression_linha();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred113_InternalAnsic

    // $ANTLR start synpred114_InternalAnsic
    public final void synpred114_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_postfix_expression_complement_1_0 = null;

        EObject lv_postfix_expression_linha_2_0 = null;


        // InternalAnsic.g:5703:4: ( ( (lv_postfix_expression_complement_1_0= rulepostfix_expression_complement ) ) ( (lv_postfix_expression_linha_2_0= rulepostfix_expression_linha ) ) )
        // InternalAnsic.g:5703:4: ( (lv_postfix_expression_complement_1_0= rulepostfix_expression_complement ) ) ( (lv_postfix_expression_linha_2_0= rulepostfix_expression_linha ) )
        {
        // InternalAnsic.g:5703:4: ( (lv_postfix_expression_complement_1_0= rulepostfix_expression_complement ) )
        // InternalAnsic.g:5704:5: (lv_postfix_expression_complement_1_0= rulepostfix_expression_complement )
        {
        // InternalAnsic.g:5704:5: (lv_postfix_expression_complement_1_0= rulepostfix_expression_complement )
        // InternalAnsic.g:5705:6: lv_postfix_expression_complement_1_0= rulepostfix_expression_complement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPostfix_expression_linhaAccess().getPostfix_expression_complementPostfix_expression_complementParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_27);
        lv_postfix_expression_complement_1_0=rulepostfix_expression_complement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:5722:4: ( (lv_postfix_expression_linha_2_0= rulepostfix_expression_linha ) )
        // InternalAnsic.g:5723:5: (lv_postfix_expression_linha_2_0= rulepostfix_expression_linha )
        {
        // InternalAnsic.g:5723:5: (lv_postfix_expression_linha_2_0= rulepostfix_expression_linha )
        // InternalAnsic.g:5724:6: lv_postfix_expression_linha_2_0= rulepostfix_expression_linha
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPostfix_expression_linhaAccess().getPostfix_expression_linhaPostfix_expression_linhaParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_postfix_expression_linha_2_0=rulepostfix_expression_linha();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred114_InternalAnsic

    // $ANTLR start synpred130_InternalAnsic
    public final void synpred130_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_7=null;
        EObject lv_unary_expression_8_0 = null;


        // InternalAnsic.g:6738:3: ( (otherlv_7= 'sizeof' ( (lv_unary_expression_8_0= ruleunary_expression ) ) ) )
        // InternalAnsic.g:6738:3: (otherlv_7= 'sizeof' ( (lv_unary_expression_8_0= ruleunary_expression ) ) )
        {
        // InternalAnsic.g:6738:3: (otherlv_7= 'sizeof' ( (lv_unary_expression_8_0= ruleunary_expression ) ) )
        // InternalAnsic.g:6739:4: otherlv_7= 'sizeof' ( (lv_unary_expression_8_0= ruleunary_expression ) )
        {
        otherlv_7=(Token)match(input,75,FOLLOW_8); if (state.failed) return ;
        // InternalAnsic.g:6743:4: ( (lv_unary_expression_8_0= ruleunary_expression ) )
        // InternalAnsic.g:6744:5: (lv_unary_expression_8_0= ruleunary_expression )
        {
        // InternalAnsic.g:6744:5: (lv_unary_expression_8_0= ruleunary_expression )
        // InternalAnsic.g:6745:6: lv_unary_expression_8_0= ruleunary_expression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getUnary_expressionAccess().getUnary_expressionUnary_expressionParserRuleCall_4_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_unary_expression_8_0=ruleunary_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred130_InternalAnsic

    // $ANTLR start synpred131_InternalAnsic
    public final void synpred131_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_type_name_11_0 = null;


        // InternalAnsic.g:6764:3: ( (otherlv_9= 'sizeof' otherlv_10= '(' ( (lv_type_name_11_0= ruletype_name ) ) otherlv_12= ')' ) )
        // InternalAnsic.g:6764:3: (otherlv_9= 'sizeof' otherlv_10= '(' ( (lv_type_name_11_0= ruletype_name ) ) otherlv_12= ')' )
        {
        // InternalAnsic.g:6764:3: (otherlv_9= 'sizeof' otherlv_10= '(' ( (lv_type_name_11_0= ruletype_name ) ) otherlv_12= ')' )
        // InternalAnsic.g:6765:4: otherlv_9= 'sizeof' otherlv_10= '(' ( (lv_type_name_11_0= ruletype_name ) ) otherlv_12= ')'
        {
        otherlv_9=(Token)match(input,75,FOLLOW_5); if (state.failed) return ;
        otherlv_10=(Token)match(input,31,FOLLOW_6); if (state.failed) return ;
        // InternalAnsic.g:6773:4: ( (lv_type_name_11_0= ruletype_name ) )
        // InternalAnsic.g:6774:5: (lv_type_name_11_0= ruletype_name )
        {
        // InternalAnsic.g:6774:5: (lv_type_name_11_0= ruletype_name )
        // InternalAnsic.g:6775:6: lv_type_name_11_0= ruletype_name
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getUnary_expressionAccess().getType_nameType_nameParserRuleCall_5_2_0());
          					
        }
        pushFollow(FOLLOW_7);
        lv_type_name_11_0=ruletype_name();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_12=(Token)match(input,32,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred131_InternalAnsic

    // $ANTLR start synpred132_InternalAnsic
    public final void synpred132_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_unary_expression_0_0 = null;


        // InternalAnsic.g:6850:3: ( ( (lv_unary_expression_0_0= ruleunary_expression ) ) )
        // InternalAnsic.g:6850:3: ( (lv_unary_expression_0_0= ruleunary_expression ) )
        {
        // InternalAnsic.g:6850:3: ( (lv_unary_expression_0_0= ruleunary_expression ) )
        // InternalAnsic.g:6851:4: (lv_unary_expression_0_0= ruleunary_expression )
        {
        // InternalAnsic.g:6851:4: (lv_unary_expression_0_0= ruleunary_expression )
        // InternalAnsic.g:6852:5: lv_unary_expression_0_0= ruleunary_expression
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getCast_expressionAccess().getUnary_expressionUnary_expressionParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_unary_expression_0_0=ruleunary_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred132_InternalAnsic

    // $ANTLR start synpred133_InternalAnsic
    public final void synpred133_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_multiplicative_expression_complement_1_0 = null;

        EObject lv_multiplicative_expression_linha_2_0 = null;


        // InternalAnsic.g:7005:4: ( ( (lv_multiplicative_expression_complement_1_0= rulemultiplicative_expression_complement ) ) ( (lv_multiplicative_expression_linha_2_0= rulemultiplicative_expression_linha ) ) )
        // InternalAnsic.g:7005:4: ( (lv_multiplicative_expression_complement_1_0= rulemultiplicative_expression_complement ) ) ( (lv_multiplicative_expression_linha_2_0= rulemultiplicative_expression_linha ) )
        {
        // InternalAnsic.g:7005:4: ( (lv_multiplicative_expression_complement_1_0= rulemultiplicative_expression_complement ) )
        // InternalAnsic.g:7006:5: (lv_multiplicative_expression_complement_1_0= rulemultiplicative_expression_complement )
        {
        // InternalAnsic.g:7006:5: (lv_multiplicative_expression_complement_1_0= rulemultiplicative_expression_complement )
        // InternalAnsic.g:7007:6: lv_multiplicative_expression_complement_1_0= rulemultiplicative_expression_complement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getMultiplicative_expression_linhaAccess().getMultiplicative_expression_complementMultiplicative_expression_complementParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_30);
        lv_multiplicative_expression_complement_1_0=rulemultiplicative_expression_complement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:7024:4: ( (lv_multiplicative_expression_linha_2_0= rulemultiplicative_expression_linha ) )
        // InternalAnsic.g:7025:5: (lv_multiplicative_expression_linha_2_0= rulemultiplicative_expression_linha )
        {
        // InternalAnsic.g:7025:5: (lv_multiplicative_expression_linha_2_0= rulemultiplicative_expression_linha )
        // InternalAnsic.g:7026:6: lv_multiplicative_expression_linha_2_0= rulemultiplicative_expression_linha
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getMultiplicative_expression_linhaAccess().getMultiplicative_expression_linhaMultiplicative_expression_linhaParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_multiplicative_expression_linha_2_0=rulemultiplicative_expression_linha();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred133_InternalAnsic

    // $ANTLR start synpred136_InternalAnsic
    public final void synpred136_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_additive_expression_complement_1_0 = null;

        EObject lv_additive_expression_linha_2_0 = null;


        // InternalAnsic.g:7227:4: ( ( (lv_additive_expression_complement_1_0= ruleadditive_expression_complement ) ) ( (lv_additive_expression_linha_2_0= ruleadditive_expression_linha ) ) )
        // InternalAnsic.g:7227:4: ( (lv_additive_expression_complement_1_0= ruleadditive_expression_complement ) ) ( (lv_additive_expression_linha_2_0= ruleadditive_expression_linha ) )
        {
        // InternalAnsic.g:7227:4: ( (lv_additive_expression_complement_1_0= ruleadditive_expression_complement ) )
        // InternalAnsic.g:7228:5: (lv_additive_expression_complement_1_0= ruleadditive_expression_complement )
        {
        // InternalAnsic.g:7228:5: (lv_additive_expression_complement_1_0= ruleadditive_expression_complement )
        // InternalAnsic.g:7229:6: lv_additive_expression_complement_1_0= ruleadditive_expression_complement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getAdditive_expression_linhaAccess().getAdditive_expression_complementAdditive_expression_complementParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_31);
        lv_additive_expression_complement_1_0=ruleadditive_expression_complement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:7246:4: ( (lv_additive_expression_linha_2_0= ruleadditive_expression_linha ) )
        // InternalAnsic.g:7247:5: (lv_additive_expression_linha_2_0= ruleadditive_expression_linha )
        {
        // InternalAnsic.g:7247:5: (lv_additive_expression_linha_2_0= ruleadditive_expression_linha )
        // InternalAnsic.g:7248:6: lv_additive_expression_linha_2_0= ruleadditive_expression_linha
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getAdditive_expression_linhaAccess().getAdditive_expression_linhaAdditive_expression_linhaParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_additive_expression_linha_2_0=ruleadditive_expression_linha();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred136_InternalAnsic

    // $ANTLR start synpred138_InternalAnsic
    public final void synpred138_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_shift_expression_complement_1_0 = null;

        EObject lv_shift_expression_linha_2_0 = null;


        // InternalAnsic.g:7423:4: ( ( (lv_shift_expression_complement_1_0= ruleshift_expression_complement ) ) ( (lv_shift_expression_linha_2_0= ruleshift_expression_linha ) ) )
        // InternalAnsic.g:7423:4: ( (lv_shift_expression_complement_1_0= ruleshift_expression_complement ) ) ( (lv_shift_expression_linha_2_0= ruleshift_expression_linha ) )
        {
        // InternalAnsic.g:7423:4: ( (lv_shift_expression_complement_1_0= ruleshift_expression_complement ) )
        // InternalAnsic.g:7424:5: (lv_shift_expression_complement_1_0= ruleshift_expression_complement )
        {
        // InternalAnsic.g:7424:5: (lv_shift_expression_complement_1_0= ruleshift_expression_complement )
        // InternalAnsic.g:7425:6: lv_shift_expression_complement_1_0= ruleshift_expression_complement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getShift_expression_linhaAccess().getShift_expression_complementShift_expression_complementParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_32);
        lv_shift_expression_complement_1_0=ruleshift_expression_complement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:7442:4: ( (lv_shift_expression_linha_2_0= ruleshift_expression_linha ) )
        // InternalAnsic.g:7443:5: (lv_shift_expression_linha_2_0= ruleshift_expression_linha )
        {
        // InternalAnsic.g:7443:5: (lv_shift_expression_linha_2_0= ruleshift_expression_linha )
        // InternalAnsic.g:7444:6: lv_shift_expression_linha_2_0= ruleshift_expression_linha
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getShift_expression_linhaAccess().getShift_expression_linhaShift_expression_linhaParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_shift_expression_linha_2_0=ruleshift_expression_linha();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred138_InternalAnsic

    // $ANTLR start synpred154_InternalAnsic
    public final void synpred154_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_16=null;
        EObject lv_expression_statement_14_0 = null;

        EObject lv_expression_statement2_15_0 = null;

        EObject lv_statement_17_0 = null;


        // InternalAnsic.g:8187:3: ( (otherlv_12= 'for' otherlv_13= '(' ( (lv_expression_statement_14_0= ruleexpression_statement ) ) ( (lv_expression_statement2_15_0= ruleexpression_statement ) ) otherlv_16= ')' ( (lv_statement_17_0= rulestatement ) ) ) )
        // InternalAnsic.g:8187:3: (otherlv_12= 'for' otherlv_13= '(' ( (lv_expression_statement_14_0= ruleexpression_statement ) ) ( (lv_expression_statement2_15_0= ruleexpression_statement ) ) otherlv_16= ')' ( (lv_statement_17_0= rulestatement ) ) )
        {
        // InternalAnsic.g:8187:3: (otherlv_12= 'for' otherlv_13= '(' ( (lv_expression_statement_14_0= ruleexpression_statement ) ) ( (lv_expression_statement2_15_0= ruleexpression_statement ) ) otherlv_16= ')' ( (lv_statement_17_0= rulestatement ) ) )
        // InternalAnsic.g:8188:4: otherlv_12= 'for' otherlv_13= '(' ( (lv_expression_statement_14_0= ruleexpression_statement ) ) ( (lv_expression_statement2_15_0= ruleexpression_statement ) ) otherlv_16= ')' ( (lv_statement_17_0= rulestatement ) )
        {
        otherlv_12=(Token)match(input,91,FOLLOW_5); if (state.failed) return ;
        otherlv_13=(Token)match(input,31,FOLLOW_36); if (state.failed) return ;
        // InternalAnsic.g:8196:4: ( (lv_expression_statement_14_0= ruleexpression_statement ) )
        // InternalAnsic.g:8197:5: (lv_expression_statement_14_0= ruleexpression_statement )
        {
        // InternalAnsic.g:8197:5: (lv_expression_statement_14_0= ruleexpression_statement )
        // InternalAnsic.g:8198:6: lv_expression_statement_14_0= ruleexpression_statement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getIteration_statementAccess().getExpression_statementExpression_statementParserRuleCall_2_2_0());
          					
        }
        pushFollow(FOLLOW_36);
        lv_expression_statement_14_0=ruleexpression_statement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:8215:4: ( (lv_expression_statement2_15_0= ruleexpression_statement ) )
        // InternalAnsic.g:8216:5: (lv_expression_statement2_15_0= ruleexpression_statement )
        {
        // InternalAnsic.g:8216:5: (lv_expression_statement2_15_0= ruleexpression_statement )
        // InternalAnsic.g:8217:6: lv_expression_statement2_15_0= ruleexpression_statement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getIteration_statementAccess().getExpression_statement2Expression_statementParserRuleCall_2_3_0());
          					
        }
        pushFollow(FOLLOW_7);
        lv_expression_statement2_15_0=ruleexpression_statement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_16=(Token)match(input,32,FOLLOW_34); if (state.failed) return ;
        // InternalAnsic.g:8238:4: ( (lv_statement_17_0= rulestatement ) )
        // InternalAnsic.g:8239:5: (lv_statement_17_0= rulestatement )
        {
        // InternalAnsic.g:8239:5: (lv_statement_17_0= rulestatement )
        // InternalAnsic.g:8240:6: lv_statement_17_0= rulestatement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getIteration_statementAccess().getStatementStatementParserRuleCall_2_5_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_statement_17_0=rulestatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred154_InternalAnsic

    // $ANTLR start synpred155_InternalAnsic
    public final void synpred155_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_23=null;
        EObject lv_expression_statement_20_0 = null;

        EObject lv_expression_statement2_21_0 = null;

        EObject lv_expression_22_0 = null;

        EObject lv_statement_24_0 = null;


        // InternalAnsic.g:8259:3: ( (otherlv_18= 'for' otherlv_19= '(' ( (lv_expression_statement_20_0= ruleexpression_statement ) ) ( (lv_expression_statement2_21_0= ruleexpression_statement ) ) ( (lv_expression_22_0= ruleexpression ) ) otherlv_23= ')' ( (lv_statement_24_0= rulestatement ) ) ) )
        // InternalAnsic.g:8259:3: (otherlv_18= 'for' otherlv_19= '(' ( (lv_expression_statement_20_0= ruleexpression_statement ) ) ( (lv_expression_statement2_21_0= ruleexpression_statement ) ) ( (lv_expression_22_0= ruleexpression ) ) otherlv_23= ')' ( (lv_statement_24_0= rulestatement ) ) )
        {
        // InternalAnsic.g:8259:3: (otherlv_18= 'for' otherlv_19= '(' ( (lv_expression_statement_20_0= ruleexpression_statement ) ) ( (lv_expression_statement2_21_0= ruleexpression_statement ) ) ( (lv_expression_22_0= ruleexpression ) ) otherlv_23= ')' ( (lv_statement_24_0= rulestatement ) ) )
        // InternalAnsic.g:8260:4: otherlv_18= 'for' otherlv_19= '(' ( (lv_expression_statement_20_0= ruleexpression_statement ) ) ( (lv_expression_statement2_21_0= ruleexpression_statement ) ) ( (lv_expression_22_0= ruleexpression ) ) otherlv_23= ')' ( (lv_statement_24_0= rulestatement ) )
        {
        otherlv_18=(Token)match(input,91,FOLLOW_5); if (state.failed) return ;
        otherlv_19=(Token)match(input,31,FOLLOW_36); if (state.failed) return ;
        // InternalAnsic.g:8268:4: ( (lv_expression_statement_20_0= ruleexpression_statement ) )
        // InternalAnsic.g:8269:5: (lv_expression_statement_20_0= ruleexpression_statement )
        {
        // InternalAnsic.g:8269:5: (lv_expression_statement_20_0= ruleexpression_statement )
        // InternalAnsic.g:8270:6: lv_expression_statement_20_0= ruleexpression_statement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getIteration_statementAccess().getExpression_statementExpression_statementParserRuleCall_3_2_0());
          					
        }
        pushFollow(FOLLOW_36);
        lv_expression_statement_20_0=ruleexpression_statement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:8287:4: ( (lv_expression_statement2_21_0= ruleexpression_statement ) )
        // InternalAnsic.g:8288:5: (lv_expression_statement2_21_0= ruleexpression_statement )
        {
        // InternalAnsic.g:8288:5: (lv_expression_statement2_21_0= ruleexpression_statement )
        // InternalAnsic.g:8289:6: lv_expression_statement2_21_0= ruleexpression_statement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getIteration_statementAccess().getExpression_statement2Expression_statementParserRuleCall_3_3_0());
          					
        }
        pushFollow(FOLLOW_8);
        lv_expression_statement2_21_0=ruleexpression_statement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:8306:4: ( (lv_expression_22_0= ruleexpression ) )
        // InternalAnsic.g:8307:5: (lv_expression_22_0= ruleexpression )
        {
        // InternalAnsic.g:8307:5: (lv_expression_22_0= ruleexpression )
        // InternalAnsic.g:8308:6: lv_expression_22_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getIteration_statementAccess().getExpressionExpressionParserRuleCall_3_4_0());
          					
        }
        pushFollow(FOLLOW_7);
        lv_expression_22_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_23=(Token)match(input,32,FOLLOW_34); if (state.failed) return ;
        // InternalAnsic.g:8329:4: ( (lv_statement_24_0= rulestatement ) )
        // InternalAnsic.g:8330:5: (lv_statement_24_0= rulestatement )
        {
        // InternalAnsic.g:8330:5: (lv_statement_24_0= rulestatement )
        // InternalAnsic.g:8331:6: lv_statement_24_0= rulestatement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getIteration_statementAccess().getStatementStatementParserRuleCall_3_6_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_statement_24_0=rulestatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred155_InternalAnsic

    // $ANTLR start synpred156_InternalAnsic
    public final void synpred156_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_25=null;
        Token otherlv_26=null;
        Token otherlv_29=null;
        EObject lv_declaration_27_0 = null;

        EObject lv_expression_statement_28_0 = null;

        EObject lv_statement_30_0 = null;


        // InternalAnsic.g:8350:3: ( (otherlv_25= 'for' otherlv_26= '(' ( (lv_declaration_27_0= ruledeclaration ) ) ( (lv_expression_statement_28_0= ruleexpression_statement ) ) otherlv_29= ')' ( (lv_statement_30_0= rulestatement ) ) ) )
        // InternalAnsic.g:8350:3: (otherlv_25= 'for' otherlv_26= '(' ( (lv_declaration_27_0= ruledeclaration ) ) ( (lv_expression_statement_28_0= ruleexpression_statement ) ) otherlv_29= ')' ( (lv_statement_30_0= rulestatement ) ) )
        {
        // InternalAnsic.g:8350:3: (otherlv_25= 'for' otherlv_26= '(' ( (lv_declaration_27_0= ruledeclaration ) ) ( (lv_expression_statement_28_0= ruleexpression_statement ) ) otherlv_29= ')' ( (lv_statement_30_0= rulestatement ) ) )
        // InternalAnsic.g:8351:4: otherlv_25= 'for' otherlv_26= '(' ( (lv_declaration_27_0= ruledeclaration ) ) ( (lv_expression_statement_28_0= ruleexpression_statement ) ) otherlv_29= ')' ( (lv_statement_30_0= rulestatement ) )
        {
        otherlv_25=(Token)match(input,91,FOLLOW_5); if (state.failed) return ;
        otherlv_26=(Token)match(input,31,FOLLOW_3); if (state.failed) return ;
        // InternalAnsic.g:8359:4: ( (lv_declaration_27_0= ruledeclaration ) )
        // InternalAnsic.g:8360:5: (lv_declaration_27_0= ruledeclaration )
        {
        // InternalAnsic.g:8360:5: (lv_declaration_27_0= ruledeclaration )
        // InternalAnsic.g:8361:6: lv_declaration_27_0= ruledeclaration
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getIteration_statementAccess().getDeclarationDeclarationParserRuleCall_4_2_0());
          					
        }
        pushFollow(FOLLOW_36);
        lv_declaration_27_0=ruledeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:8378:4: ( (lv_expression_statement_28_0= ruleexpression_statement ) )
        // InternalAnsic.g:8379:5: (lv_expression_statement_28_0= ruleexpression_statement )
        {
        // InternalAnsic.g:8379:5: (lv_expression_statement_28_0= ruleexpression_statement )
        // InternalAnsic.g:8380:6: lv_expression_statement_28_0= ruleexpression_statement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getIteration_statementAccess().getExpression_statementExpression_statementParserRuleCall_4_3_0());
          					
        }
        pushFollow(FOLLOW_7);
        lv_expression_statement_28_0=ruleexpression_statement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_29=(Token)match(input,32,FOLLOW_34); if (state.failed) return ;
        // InternalAnsic.g:8401:4: ( (lv_statement_30_0= rulestatement ) )
        // InternalAnsic.g:8402:5: (lv_statement_30_0= rulestatement )
        {
        // InternalAnsic.g:8402:5: (lv_statement_30_0= rulestatement )
        // InternalAnsic.g:8403:6: lv_statement_30_0= rulestatement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getIteration_statementAccess().getStatementStatementParserRuleCall_4_5_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_statement_30_0=rulestatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred156_InternalAnsic

    // $ANTLR start synpred157_InternalAnsic
    public final void synpred157_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_expression_2_0 = null;

        EObject lv_statement_4_0 = null;

        EObject lv_statement2_6_0 = null;


        // InternalAnsic.g:8531:3: ( (otherlv_0= 'if' otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_statement_4_0= rulestatement ) ) otherlv_5= 'else' ( (lv_statement2_6_0= rulestatement ) ) ) )
        // InternalAnsic.g:8531:3: (otherlv_0= 'if' otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_statement_4_0= rulestatement ) ) otherlv_5= 'else' ( (lv_statement2_6_0= rulestatement ) ) )
        {
        // InternalAnsic.g:8531:3: (otherlv_0= 'if' otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_statement_4_0= rulestatement ) ) otherlv_5= 'else' ( (lv_statement2_6_0= rulestatement ) ) )
        // InternalAnsic.g:8532:4: otherlv_0= 'if' otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ')' ( (lv_statement_4_0= rulestatement ) ) otherlv_5= 'else' ( (lv_statement2_6_0= rulestatement ) )
        {
        otherlv_0=(Token)match(input,92,FOLLOW_5); if (state.failed) return ;
        otherlv_1=(Token)match(input,31,FOLLOW_8); if (state.failed) return ;
        // InternalAnsic.g:8540:4: ( (lv_expression_2_0= ruleexpression ) )
        // InternalAnsic.g:8541:5: (lv_expression_2_0= ruleexpression )
        {
        // InternalAnsic.g:8541:5: (lv_expression_2_0= ruleexpression )
        // InternalAnsic.g:8542:6: lv_expression_2_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getSelection_statementAccess().getExpressionExpressionParserRuleCall_0_2_0());
          					
        }
        pushFollow(FOLLOW_7);
        lv_expression_2_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_3=(Token)match(input,32,FOLLOW_34); if (state.failed) return ;
        // InternalAnsic.g:8563:4: ( (lv_statement_4_0= rulestatement ) )
        // InternalAnsic.g:8564:5: (lv_statement_4_0= rulestatement )
        {
        // InternalAnsic.g:8564:5: (lv_statement_4_0= rulestatement )
        // InternalAnsic.g:8565:6: lv_statement_4_0= rulestatement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getSelection_statementAccess().getStatementStatementParserRuleCall_0_4_0());
          					
        }
        pushFollow(FOLLOW_37);
        lv_statement_4_0=rulestatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_5=(Token)match(input,93,FOLLOW_34); if (state.failed) return ;
        // InternalAnsic.g:8586:4: ( (lv_statement2_6_0= rulestatement ) )
        // InternalAnsic.g:8587:5: (lv_statement2_6_0= rulestatement )
        {
        // InternalAnsic.g:8587:5: (lv_statement2_6_0= rulestatement )
        // InternalAnsic.g:8588:6: lv_statement2_6_0= rulestatement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getSelection_statementAccess().getStatement2StatementParserRuleCall_0_6_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_statement2_6_0=rulestatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred157_InternalAnsic

    // $ANTLR start synpred158_InternalAnsic
    public final void synpred158_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        EObject lv_expression_9_0 = null;

        EObject lv_statement_11_0 = null;


        // InternalAnsic.g:8607:3: ( (otherlv_7= 'if' otherlv_8= '(' ( (lv_expression_9_0= ruleexpression ) ) otherlv_10= ')' ( (lv_statement_11_0= rulestatement ) ) ) )
        // InternalAnsic.g:8607:3: (otherlv_7= 'if' otherlv_8= '(' ( (lv_expression_9_0= ruleexpression ) ) otherlv_10= ')' ( (lv_statement_11_0= rulestatement ) ) )
        {
        // InternalAnsic.g:8607:3: (otherlv_7= 'if' otherlv_8= '(' ( (lv_expression_9_0= ruleexpression ) ) otherlv_10= ')' ( (lv_statement_11_0= rulestatement ) ) )
        // InternalAnsic.g:8608:4: otherlv_7= 'if' otherlv_8= '(' ( (lv_expression_9_0= ruleexpression ) ) otherlv_10= ')' ( (lv_statement_11_0= rulestatement ) )
        {
        otherlv_7=(Token)match(input,92,FOLLOW_5); if (state.failed) return ;
        otherlv_8=(Token)match(input,31,FOLLOW_8); if (state.failed) return ;
        // InternalAnsic.g:8616:4: ( (lv_expression_9_0= ruleexpression ) )
        // InternalAnsic.g:8617:5: (lv_expression_9_0= ruleexpression )
        {
        // InternalAnsic.g:8617:5: (lv_expression_9_0= ruleexpression )
        // InternalAnsic.g:8618:6: lv_expression_9_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getSelection_statementAccess().getExpressionExpressionParserRuleCall_1_2_0());
          					
        }
        pushFollow(FOLLOW_7);
        lv_expression_9_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_10=(Token)match(input,32,FOLLOW_34); if (state.failed) return ;
        // InternalAnsic.g:8639:4: ( (lv_statement_11_0= rulestatement ) )
        // InternalAnsic.g:8640:5: (lv_statement_11_0= rulestatement )
        {
        // InternalAnsic.g:8640:5: (lv_statement_11_0= rulestatement )
        // InternalAnsic.g:8641:6: lv_statement_11_0= rulestatement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getSelection_statementAccess().getStatementStatementParserRuleCall_1_4_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_statement_11_0=rulestatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred158_InternalAnsic

    // $ANTLR start synpred165_InternalAnsic
    public final void synpred165_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_equality_expression_2_0 = null;

        EObject lv_and_expression_linha_3_0 = null;


        // InternalAnsic.g:9224:4: (otherlv_1= '&' ( (lv_equality_expression_2_0= ruleequality_expression ) ) ( (lv_and_expression_linha_3_0= ruleand_expression_linha ) ) )
        // InternalAnsic.g:9224:4: otherlv_1= '&' ( (lv_equality_expression_2_0= ruleequality_expression ) ) ( (lv_and_expression_linha_3_0= ruleand_expression_linha ) )
        {
        otherlv_1=(Token)match(input,96,FOLLOW_8); if (state.failed) return ;
        // InternalAnsic.g:9228:4: ( (lv_equality_expression_2_0= ruleequality_expression ) )
        // InternalAnsic.g:9229:5: (lv_equality_expression_2_0= ruleequality_expression )
        {
        // InternalAnsic.g:9229:5: (lv_equality_expression_2_0= ruleequality_expression )
        // InternalAnsic.g:9230:6: lv_equality_expression_2_0= ruleequality_expression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getAnd_expression_linhaAccess().getEquality_expressionEquality_expressionParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_39);
        lv_equality_expression_2_0=ruleequality_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:9247:4: ( (lv_and_expression_linha_3_0= ruleand_expression_linha ) )
        // InternalAnsic.g:9248:5: (lv_and_expression_linha_3_0= ruleand_expression_linha )
        {
        // InternalAnsic.g:9248:5: (lv_and_expression_linha_3_0= ruleand_expression_linha )
        // InternalAnsic.g:9249:6: lv_and_expression_linha_3_0= ruleand_expression_linha
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getAnd_expression_linhaAccess().getAnd_expression_linhaAnd_expression_linhaParserRuleCall_1_2_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_and_expression_linha_3_0=ruleand_expression_linha();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred165_InternalAnsic

    // $ANTLR start synpred170_InternalAnsic
    public final void synpred170_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_expression_2_0 = null;

        EObject lv_conditional_expression_4_0 = null;

        EObject lv_conditional_expression_linha_5_0 = null;


        // InternalAnsic.g:9874:4: (otherlv_1= '?' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ':' ( (lv_conditional_expression_4_0= ruleconditional_expression ) ) ( (lv_conditional_expression_linha_5_0= ruleconditional_expression_linha ) ) )
        // InternalAnsic.g:9874:4: otherlv_1= '?' ( (lv_expression_2_0= ruleexpression ) ) otherlv_3= ':' ( (lv_conditional_expression_4_0= ruleconditional_expression ) ) ( (lv_conditional_expression_linha_5_0= ruleconditional_expression_linha ) )
        {
        otherlv_1=(Token)match(input,101,FOLLOW_8); if (state.failed) return ;
        // InternalAnsic.g:9878:4: ( (lv_expression_2_0= ruleexpression ) )
        // InternalAnsic.g:9879:5: (lv_expression_2_0= ruleexpression )
        {
        // InternalAnsic.g:9879:5: (lv_expression_2_0= ruleexpression )
        // InternalAnsic.g:9880:6: lv_expression_2_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getConditional_expression_linhaAccess().getExpressionExpressionParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_16);
        lv_expression_2_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_3=(Token)match(input,58,FOLLOW_8); if (state.failed) return ;
        // InternalAnsic.g:9901:4: ( (lv_conditional_expression_4_0= ruleconditional_expression ) )
        // InternalAnsic.g:9902:5: (lv_conditional_expression_4_0= ruleconditional_expression )
        {
        // InternalAnsic.g:9902:5: (lv_conditional_expression_4_0= ruleconditional_expression )
        // InternalAnsic.g:9903:6: lv_conditional_expression_4_0= ruleconditional_expression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getConditional_expression_linhaAccess().getConditional_expressionConditional_expressionParserRuleCall_1_3_0());
          					
        }
        pushFollow(FOLLOW_44);
        lv_conditional_expression_4_0=ruleconditional_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:9920:4: ( (lv_conditional_expression_linha_5_0= ruleconditional_expression_linha ) )
        // InternalAnsic.g:9921:5: (lv_conditional_expression_linha_5_0= ruleconditional_expression_linha )
        {
        // InternalAnsic.g:9921:5: (lv_conditional_expression_linha_5_0= ruleconditional_expression_linha )
        // InternalAnsic.g:9922:6: lv_conditional_expression_linha_5_0= ruleconditional_expression_linha
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getConditional_expression_linhaAccess().getConditional_expression_linhaConditional_expression_linhaParserRuleCall_1_4_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_conditional_expression_linha_5_0=ruleconditional_expression_linha();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred170_InternalAnsic

    // $ANTLR start synpred171_InternalAnsic
    public final void synpred171_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_conditional_expression_0_0 = null;


        // InternalAnsic.g:9959:3: ( ( (lv_conditional_expression_0_0= ruleconditional_expression ) ) )
        // InternalAnsic.g:9959:3: ( (lv_conditional_expression_0_0= ruleconditional_expression ) )
        {
        // InternalAnsic.g:9959:3: ( (lv_conditional_expression_0_0= ruleconditional_expression ) )
        // InternalAnsic.g:9960:4: (lv_conditional_expression_0_0= ruleconditional_expression )
        {
        // InternalAnsic.g:9960:4: (lv_conditional_expression_0_0= ruleconditional_expression )
        // InternalAnsic.g:9961:5: lv_conditional_expression_0_0= ruleconditional_expression
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getAssignment_expressionAccess().getConditional_expressionConditional_expressionParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_conditional_expression_0_0=ruleconditional_expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred171_InternalAnsic

    // $ANTLR start synpred187_InternalAnsic
    public final void synpred187_InternalAnsic_fragment() throws RecognitionException {   
        EObject lv_specifier_qualifier_list_0_0 = null;

        EObject lv_abstract_declarator_1_0 = null;


        // InternalAnsic.g:10195:3: ( ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) ) )
        // InternalAnsic.g:10195:3: ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) )
        {
        // InternalAnsic.g:10195:3: ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) )
        // InternalAnsic.g:10196:4: ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) )
        {
        // InternalAnsic.g:10196:4: ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) )
        // InternalAnsic.g:10197:5: (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list )
        {
        // InternalAnsic.g:10197:5: (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list )
        // InternalAnsic.g:10198:6: lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getType_nameAccess().getSpecifier_qualifier_listSpecifier_qualifier_listParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_24);
        lv_specifier_qualifier_list_0_0=rulespecifier_qualifier_list();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalAnsic.g:10215:4: ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) )
        // InternalAnsic.g:10216:5: (lv_abstract_declarator_1_0= ruleabstract_declarator )
        {
        // InternalAnsic.g:10216:5: (lv_abstract_declarator_1_0= ruleabstract_declarator )
        // InternalAnsic.g:10217:6: lv_abstract_declarator_1_0= ruleabstract_declarator
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getType_nameAccess().getAbstract_declaratorAbstract_declaratorParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_abstract_declarator_1_0=ruleabstract_declarator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred187_InternalAnsic

    // $ANTLR start synpred190_InternalAnsic
    public final void synpred190_InternalAnsic_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_declarator_0_0 = null;

        EObject lv_initializer_2_0 = null;


        // InternalAnsic.g:10570:3: ( ( ( (lv_declarator_0_0= ruledeclarator ) ) otherlv_1= '=' ( (lv_initializer_2_0= ruleinitializer ) ) ) )
        // InternalAnsic.g:10570:3: ( ( (lv_declarator_0_0= ruledeclarator ) ) otherlv_1= '=' ( (lv_initializer_2_0= ruleinitializer ) ) )
        {
        // InternalAnsic.g:10570:3: ( ( (lv_declarator_0_0= ruledeclarator ) ) otherlv_1= '=' ( (lv_initializer_2_0= ruleinitializer ) ) )
        // InternalAnsic.g:10571:4: ( (lv_declarator_0_0= ruledeclarator ) ) otherlv_1= '=' ( (lv_initializer_2_0= ruleinitializer ) )
        {
        // InternalAnsic.g:10571:4: ( (lv_declarator_0_0= ruledeclarator ) )
        // InternalAnsic.g:10572:5: (lv_declarator_0_0= ruledeclarator )
        {
        // InternalAnsic.g:10572:5: (lv_declarator_0_0= ruledeclarator )
        // InternalAnsic.g:10573:6: lv_declarator_0_0= ruledeclarator
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getInit_declaratorAccess().getDeclaratorDeclaratorParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_13);
        lv_declarator_0_0=ruledeclarator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,54,FOLLOW_25); if (state.failed) return ;
        // InternalAnsic.g:10594:4: ( (lv_initializer_2_0= ruleinitializer ) )
        // InternalAnsic.g:10595:5: (lv_initializer_2_0= ruleinitializer )
        {
        // InternalAnsic.g:10595:5: (lv_initializer_2_0= ruleinitializer )
        // InternalAnsic.g:10596:6: lv_initializer_2_0= ruleinitializer
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getInit_declaratorAccess().getInitializerInitializerParserRuleCall_0_2_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_initializer_2_0=ruleinitializer();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred190_InternalAnsic

    // Delegated rules

    public final boolean synpred48_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred48_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred69_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred69_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred101_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred101_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred56_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred56_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred93_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred93_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred98_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred98_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred72_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred72_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred85_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred85_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred130_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred130_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred31_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred73_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred73_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred60_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred60_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred156_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred156_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred114_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred114_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred81_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred81_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred71_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred71_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred92_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred92_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred97_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred97_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred102_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred102_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred86_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred86_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred171_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred171_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred165_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred165_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred65_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred65_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred87_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred87_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred138_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred138_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred66_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred66_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred82_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred82_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred113_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred113_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred155_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred155_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred55_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred55_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred76_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred76_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred61_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred61_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred158_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred158_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred70_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred70_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred170_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred170_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred187_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred187_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred103_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred103_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred79_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred79_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred59_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred59_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred91_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred91_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred154_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred154_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred67_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred67_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred88_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred88_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred46_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred133_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred133_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred112_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred112_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred83_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred83_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred54_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred54_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred33_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred41_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred41_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred75_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred75_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred96_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred96_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred84_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred84_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred136_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred136_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred157_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred157_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred47_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred78_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred78_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred131_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred131_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred90_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred90_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred99_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred99_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred190_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred190_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred95_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred95_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred74_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred74_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred132_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred132_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred80_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred80_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred68_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred68_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred89_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred89_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred100_InternalAnsic() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred100_InternalAnsic_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA1 dfa1 = new DFA1(this);
    protected DFA2 dfa2 = new DFA2(this);
    protected DFA14 dfa14 = new DFA14(this);
    protected DFA17 dfa17 = new DFA17(this);
    protected DFA19 dfa19 = new DFA19(this);
    protected DFA20 dfa20 = new DFA20(this);
    protected DFA27 dfa27 = new DFA27(this);
    protected DFA28 dfa28 = new DFA28(this);
    protected DFA30 dfa30 = new DFA30(this);
    protected DFA32 dfa32 = new DFA32(this);
    protected DFA33 dfa33 = new DFA33(this);
    protected DFA35 dfa35 = new DFA35(this);
    protected DFA41 dfa41 = new DFA41(this);
    protected DFA42 dfa42 = new DFA42(this);
    protected DFA49 dfa49 = new DFA49(this);
    protected DFA50 dfa50 = new DFA50(this);
    protected DFA51 dfa51 = new DFA51(this);
    protected DFA53 dfa53 = new DFA53(this);
    protected DFA55 dfa55 = new DFA55(this);
    protected DFA69 dfa69 = new DFA69(this);
    protected DFA75 dfa75 = new DFA75(this);
    protected DFA78 dfa78 = new DFA78(this);
    static final String dfa_1s = "\37\uffff";
    static final String dfa_2s = "\1\34\34\0\2\uffff";
    static final String dfa_3s = "\1\107\34\0\2\uffff";
    static final String dfa_4s = "\35\uffff\1\2\1\1";
    static final String dfa_5s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\2\uffff}>";
    static final String[] dfa_6s = {
            "\1\32\1\33\1\34\2\uffff\1\27\1\30\1\31\1\23\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\1\1\26\4\uffff\1\24\1\25\2\uffff\1\2\1\3\1\4\1\5\1\6\7\uffff\1\35",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "177:2: ( ( (lv_function_definitio_0_0= rulefunction_definition ) ) | ( (lv_declaration_1_0= ruledeclaration ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA1_1 = input.LA(1);

                         
                        int index1_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA1_2 = input.LA(1);

                         
                        int index1_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA1_3 = input.LA(1);

                         
                        int index1_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA1_4 = input.LA(1);

                         
                        int index1_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA1_5 = input.LA(1);

                         
                        int index1_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA1_6 = input.LA(1);

                         
                        int index1_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA1_7 = input.LA(1);

                         
                        int index1_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA1_8 = input.LA(1);

                         
                        int index1_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA1_9 = input.LA(1);

                         
                        int index1_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA1_10 = input.LA(1);

                         
                        int index1_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA1_11 = input.LA(1);

                         
                        int index1_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA1_12 = input.LA(1);

                         
                        int index1_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA1_13 = input.LA(1);

                         
                        int index1_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA1_14 = input.LA(1);

                         
                        int index1_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA1_15 = input.LA(1);

                         
                        int index1_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA1_16 = input.LA(1);

                         
                        int index1_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA1_17 = input.LA(1);

                         
                        int index1_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA1_18 = input.LA(1);

                         
                        int index1_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA1_19 = input.LA(1);

                         
                        int index1_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA1_20 = input.LA(1);

                         
                        int index1_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA1_21 = input.LA(1);

                         
                        int index1_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA1_22 = input.LA(1);

                         
                        int index1_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA1_23 = input.LA(1);

                         
                        int index1_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA1_24 = input.LA(1);

                         
                        int index1_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA1_25 = input.LA(1);

                         
                        int index1_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA1_26 = input.LA(1);

                         
                        int index1_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA1_27 = input.LA(1);

                         
                        int index1_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA1_28 = input.LA(1);

                         
                        int index1_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index1_28);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 1, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_7s = "\47\uffff";
    static final String dfa_8s = "\1\34\34\0\12\uffff";
    static final String dfa_9s = "\1\77\34\0\12\uffff";
    static final String dfa_10s = "\35\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12";
    static final String dfa_11s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\12\uffff}>";
    static final String[] dfa_12s = {
            "\1\32\1\33\1\34\2\uffff\1\27\1\30\1\31\1\23\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\1\1\26\4\uffff\1\24\1\25\2\uffff\1\2\1\3\1\4\1\5\1\6",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA2 extends DFA {

        public DFA2(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 2;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "235:2: ( ( ( (lv_storage_class_specifier_0_0= rulestorage_class_specifier ) ) ( (lv_declaration_specifiers_1_0= ruledeclaration_specifiers ) ) ) | ( (lv_storage_class_specifier_2_0= rulestorage_class_specifier ) ) | ( ( (lv_type_specifier_3_0= ruletype_specifier ) ) ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) ) | ( (lv_type_specifier_5_0= ruletype_specifier ) ) | ( ( (lv_type_qualifier_6_0= ruletype_qualifier ) ) ( (lv_declaration_specifiers_7_0= ruledeclaration_specifiers ) ) ) | ( (lv_type_qualifier_8_0= ruletype_qualifier ) ) | ( ( (lv_function_specifier_9_0= rulefunction_specifier ) ) ( (lv_declaration_specifiers_10_0= ruledeclaration_specifiers ) ) ) | ( (lv_function_specifier_11_0= rulefunction_specifier ) ) | ( ( (lv_alignment_specifier_12_0= rulealignment_specifier ) ) ( (lv_declaration_specifiers_13_0= ruledeclaration_specifiers ) ) ) | ( (lv_alignment_specifier_14_0= rulealignment_specifier ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA2_1 = input.LA(1);

                         
                        int index2_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred3_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred4_InternalAnsic()) ) {s = 31;}

                        else if ( (synpred5_InternalAnsic()) ) {s = 32;}

                         
                        input.seek(index2_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA2_2 = input.LA(1);

                         
                        int index2_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred3_InternalAnsic()) ) {s = 30;}

                         
                        input.seek(index2_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA2_3 = input.LA(1);

                         
                        int index2_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred3_InternalAnsic()) ) {s = 30;}

                         
                        input.seek(index2_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA2_4 = input.LA(1);

                         
                        int index2_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred3_InternalAnsic()) ) {s = 30;}

                         
                        input.seek(index2_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA2_5 = input.LA(1);

                         
                        int index2_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred3_InternalAnsic()) ) {s = 30;}

                         
                        input.seek(index2_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA2_6 = input.LA(1);

                         
                        int index2_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred3_InternalAnsic()) ) {s = 30;}

                         
                        input.seek(index2_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA2_7 = input.LA(1);

                         
                        int index2_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalAnsic()) ) {s = 31;}

                        else if ( (synpred5_InternalAnsic()) ) {s = 32;}

                         
                        input.seek(index2_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA2_8 = input.LA(1);

                         
                        int index2_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalAnsic()) ) {s = 31;}

                        else if ( (synpred5_InternalAnsic()) ) {s = 32;}

                         
                        input.seek(index2_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA2_9 = input.LA(1);

                         
                        int index2_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalAnsic()) ) {s = 31;}

                        else if ( (synpred5_InternalAnsic()) ) {s = 32;}

                         
                        input.seek(index2_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA2_10 = input.LA(1);

                         
                        int index2_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalAnsic()) ) {s = 31;}

                        else if ( (synpred5_InternalAnsic()) ) {s = 32;}

                         
                        input.seek(index2_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA2_11 = input.LA(1);

                         
                        int index2_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalAnsic()) ) {s = 31;}

                        else if ( (synpred5_InternalAnsic()) ) {s = 32;}

                         
                        input.seek(index2_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA2_12 = input.LA(1);

                         
                        int index2_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalAnsic()) ) {s = 31;}

                        else if ( (synpred5_InternalAnsic()) ) {s = 32;}

                         
                        input.seek(index2_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA2_13 = input.LA(1);

                         
                        int index2_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalAnsic()) ) {s = 31;}

                        else if ( (synpred5_InternalAnsic()) ) {s = 32;}

                         
                        input.seek(index2_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA2_14 = input.LA(1);

                         
                        int index2_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalAnsic()) ) {s = 31;}

                        else if ( (synpred5_InternalAnsic()) ) {s = 32;}

                         
                        input.seek(index2_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA2_15 = input.LA(1);

                         
                        int index2_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalAnsic()) ) {s = 31;}

                        else if ( (synpred5_InternalAnsic()) ) {s = 32;}

                         
                        input.seek(index2_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA2_16 = input.LA(1);

                         
                        int index2_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalAnsic()) ) {s = 31;}

                        else if ( (synpred5_InternalAnsic()) ) {s = 32;}

                         
                        input.seek(index2_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA2_17 = input.LA(1);

                         
                        int index2_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalAnsic()) ) {s = 31;}

                        else if ( (synpred5_InternalAnsic()) ) {s = 32;}

                         
                        input.seek(index2_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA2_18 = input.LA(1);

                         
                        int index2_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalAnsic()) ) {s = 31;}

                        else if ( (synpred5_InternalAnsic()) ) {s = 32;}

                         
                        input.seek(index2_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA2_19 = input.LA(1);

                         
                        int index2_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalAnsic()) ) {s = 31;}

                        else if ( (synpred5_InternalAnsic()) ) {s = 32;}

                        else if ( (synpred6_InternalAnsic()) ) {s = 33;}

                        else if ( (synpred7_InternalAnsic()) ) {s = 34;}

                         
                        input.seek(index2_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA2_20 = input.LA(1);

                         
                        int index2_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalAnsic()) ) {s = 31;}

                        else if ( (synpred5_InternalAnsic()) ) {s = 32;}

                         
                        input.seek(index2_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA2_21 = input.LA(1);

                         
                        int index2_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalAnsic()) ) {s = 31;}

                        else if ( (synpred5_InternalAnsic()) ) {s = 32;}

                         
                        input.seek(index2_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA2_22 = input.LA(1);

                         
                        int index2_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalAnsic()) ) {s = 31;}

                        else if ( (synpred5_InternalAnsic()) ) {s = 32;}

                         
                        input.seek(index2_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA2_23 = input.LA(1);

                         
                        int index2_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_InternalAnsic()) ) {s = 33;}

                        else if ( (synpred7_InternalAnsic()) ) {s = 34;}

                         
                        input.seek(index2_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA2_24 = input.LA(1);

                         
                        int index2_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_InternalAnsic()) ) {s = 33;}

                        else if ( (synpred7_InternalAnsic()) ) {s = 34;}

                         
                        input.seek(index2_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA2_25 = input.LA(1);

                         
                        int index2_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_InternalAnsic()) ) {s = 33;}

                        else if ( (synpred7_InternalAnsic()) ) {s = 34;}

                         
                        input.seek(index2_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA2_26 = input.LA(1);

                         
                        int index2_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalAnsic()) ) {s = 35;}

                        else if ( (synpred9_InternalAnsic()) ) {s = 36;}

                         
                        input.seek(index2_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA2_27 = input.LA(1);

                         
                        int index2_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalAnsic()) ) {s = 35;}

                        else if ( (synpred9_InternalAnsic()) ) {s = 36;}

                         
                        input.seek(index2_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA2_28 = input.LA(1);

                         
                        int index2_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalAnsic()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index2_28);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 2, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_13s = "\30\uffff";
    static final String dfa_14s = "\1\41\24\0\3\uffff";
    static final String dfa_15s = "\1\107\24\0\3\uffff";
    static final String dfa_16s = "\25\uffff\1\3\1\1\1\2";
    static final String dfa_17s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\3\uffff}>";
    static final String[] dfa_18s = {
            "\1\22\1\23\1\24\1\15\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\21\1\20\4\uffff\1\16\1\17\16\uffff\1\25",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final char[] dfa_14 = DFA.unpackEncodedStringToUnsignedChars(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[][] dfa_18 = unpackEncodedStringArray(dfa_18s);

    class DFA14 extends DFA {

        public DFA14(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 14;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_14;
            this.max = dfa_15;
            this.accept = dfa_16;
            this.special = dfa_17;
            this.transition = dfa_18;
        }
        public String getDescription() {
            return "1685:2: ( ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) otherlv_1= ';' ) | ( ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) ) ( (lv_struct_declarator_list_3_0= rulestruct_declarator_list ) ) otherlv_4= ';' ) | ( (lv_static_assert_declaration_5_0= rulestatic_assert_declaration ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA14_1 = input.LA(1);

                         
                        int index14_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA14_2 = input.LA(1);

                         
                        int index14_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA14_3 = input.LA(1);

                         
                        int index14_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA14_4 = input.LA(1);

                         
                        int index14_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA14_5 = input.LA(1);

                         
                        int index14_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA14_6 = input.LA(1);

                         
                        int index14_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA14_7 = input.LA(1);

                         
                        int index14_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA14_8 = input.LA(1);

                         
                        int index14_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA14_9 = input.LA(1);

                         
                        int index14_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA14_10 = input.LA(1);

                         
                        int index14_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA14_11 = input.LA(1);

                         
                        int index14_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA14_12 = input.LA(1);

                         
                        int index14_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA14_13 = input.LA(1);

                         
                        int index14_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA14_14 = input.LA(1);

                         
                        int index14_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA14_15 = input.LA(1);

                         
                        int index14_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA14_16 = input.LA(1);

                         
                        int index14_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA14_17 = input.LA(1);

                         
                        int index14_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA14_18 = input.LA(1);

                         
                        int index14_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA14_19 = input.LA(1);

                         
                        int index14_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA14_20 = input.LA(1);

                         
                        int index14_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred42_InternalAnsic()) ) {s = 23;}

                         
                        input.seek(index14_20);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 14, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_19s = "\31\uffff";
    static final String dfa_20s = "\1\41\24\0\4\uffff";
    static final String dfa_21s = "\1\70\24\0\4\uffff";
    static final String dfa_22s = "\25\uffff\1\1\1\2\1\3\1\4";
    static final String dfa_23s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\4\uffff}>";
    static final String[] dfa_24s = {
            "\1\22\1\23\1\24\1\15\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\21\1\20\4\uffff\1\16\1\17",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final char[] dfa_20 = DFA.unpackEncodedStringToUnsignedChars(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[][] dfa_24 = unpackEncodedStringArray(dfa_24s);

    class DFA17 extends DFA {

        public DFA17(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 17;
            this.eot = dfa_19;
            this.eof = dfa_19;
            this.min = dfa_20;
            this.max = dfa_21;
            this.accept = dfa_22;
            this.special = dfa_23;
            this.transition = dfa_24;
        }
        public String getDescription() {
            return "2033:2: ( ( ( (lv_type_specifier_0_0= ruletype_specifier ) ) ( (lv_specifier_qualifier_list_1_0= rulespecifier_qualifier_list ) ) ) | ( (lv_type_specifier_2_0= ruletype_specifier ) ) | ( ( (lv_type_qualifier_3_0= ruletype_qualifier ) ) ( (lv_specifier_qualifier_list_4_0= rulespecifier_qualifier_list ) ) ) | ( (lv_type_qualifier_5_0= ruletype_qualifier ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA17_1 = input.LA(1);

                         
                        int index17_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalAnsic()) ) {s = 21;}

                        else if ( (synpred47_InternalAnsic()) ) {s = 22;}

                         
                        input.seek(index17_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA17_2 = input.LA(1);

                         
                        int index17_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalAnsic()) ) {s = 21;}

                        else if ( (synpred47_InternalAnsic()) ) {s = 22;}

                         
                        input.seek(index17_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA17_3 = input.LA(1);

                         
                        int index17_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalAnsic()) ) {s = 21;}

                        else if ( (synpred47_InternalAnsic()) ) {s = 22;}

                         
                        input.seek(index17_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA17_4 = input.LA(1);

                         
                        int index17_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalAnsic()) ) {s = 21;}

                        else if ( (synpred47_InternalAnsic()) ) {s = 22;}

                         
                        input.seek(index17_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA17_5 = input.LA(1);

                         
                        int index17_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalAnsic()) ) {s = 21;}

                        else if ( (synpred47_InternalAnsic()) ) {s = 22;}

                         
                        input.seek(index17_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA17_6 = input.LA(1);

                         
                        int index17_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalAnsic()) ) {s = 21;}

                        else if ( (synpred47_InternalAnsic()) ) {s = 22;}

                         
                        input.seek(index17_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA17_7 = input.LA(1);

                         
                        int index17_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalAnsic()) ) {s = 21;}

                        else if ( (synpred47_InternalAnsic()) ) {s = 22;}

                         
                        input.seek(index17_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA17_8 = input.LA(1);

                         
                        int index17_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalAnsic()) ) {s = 21;}

                        else if ( (synpred47_InternalAnsic()) ) {s = 22;}

                         
                        input.seek(index17_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA17_9 = input.LA(1);

                         
                        int index17_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalAnsic()) ) {s = 21;}

                        else if ( (synpred47_InternalAnsic()) ) {s = 22;}

                         
                        input.seek(index17_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA17_10 = input.LA(1);

                         
                        int index17_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalAnsic()) ) {s = 21;}

                        else if ( (synpred47_InternalAnsic()) ) {s = 22;}

                         
                        input.seek(index17_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA17_11 = input.LA(1);

                         
                        int index17_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalAnsic()) ) {s = 21;}

                        else if ( (synpred47_InternalAnsic()) ) {s = 22;}

                         
                        input.seek(index17_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA17_12 = input.LA(1);

                         
                        int index17_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalAnsic()) ) {s = 21;}

                        else if ( (synpred47_InternalAnsic()) ) {s = 22;}

                         
                        input.seek(index17_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA17_13 = input.LA(1);

                         
                        int index17_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalAnsic()) ) {s = 21;}

                        else if ( (synpred47_InternalAnsic()) ) {s = 22;}

                        else if ( (synpred48_InternalAnsic()) ) {s = 23;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index17_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA17_14 = input.LA(1);

                         
                        int index17_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalAnsic()) ) {s = 21;}

                        else if ( (synpred47_InternalAnsic()) ) {s = 22;}

                         
                        input.seek(index17_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA17_15 = input.LA(1);

                         
                        int index17_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalAnsic()) ) {s = 21;}

                        else if ( (synpred47_InternalAnsic()) ) {s = 22;}

                         
                        input.seek(index17_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA17_16 = input.LA(1);

                         
                        int index17_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalAnsic()) ) {s = 21;}

                        else if ( (synpred47_InternalAnsic()) ) {s = 22;}

                         
                        input.seek(index17_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA17_17 = input.LA(1);

                         
                        int index17_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalAnsic()) ) {s = 21;}

                        else if ( (synpred47_InternalAnsic()) ) {s = 22;}

                         
                        input.seek(index17_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA17_18 = input.LA(1);

                         
                        int index17_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred48_InternalAnsic()) ) {s = 23;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index17_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA17_19 = input.LA(1);

                         
                        int index17_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred48_InternalAnsic()) ) {s = 23;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index17_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA17_20 = input.LA(1);

                         
                        int index17_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred48_InternalAnsic()) ) {s = 23;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index17_20);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 17, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_25s = "\40\uffff";
    static final String dfa_26s = "\1\34\34\0\3\uffff";
    static final String dfa_27s = "\1\107\34\0\3\uffff";
    static final String dfa_28s = "\35\uffff\1\3\1\1\1\2";
    static final String dfa_29s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\3\uffff}>";
    static final String[] dfa_30s = {
            "\1\32\1\33\1\34\2\uffff\1\27\1\30\1\31\1\23\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\1\1\26\4\uffff\1\24\1\25\2\uffff\1\2\1\3\1\4\1\5\1\6\7\uffff\1\35",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final char[] dfa_26 = DFA.unpackEncodedStringToUnsignedChars(dfa_26s);
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[][] dfa_30 = unpackEncodedStringArray(dfa_30s);

    class DFA19 extends DFA {

        public DFA19(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 19;
            this.eot = dfa_25;
            this.eof = dfa_25;
            this.min = dfa_26;
            this.max = dfa_27;
            this.accept = dfa_28;
            this.special = dfa_29;
            this.transition = dfa_30;
        }
        public String getDescription() {
            return "2227:2: ( ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) otherlv_1= ';' ) | ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_init_declarator_list_3_0= ruleinit_declarator_list ) ) otherlv_4= ';' ) | ( (lv_static_assert_declaration_5_0= rulestatic_assert_declaration ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA19_1 = input.LA(1);

                         
                        int index19_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA19_2 = input.LA(1);

                         
                        int index19_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA19_3 = input.LA(1);

                         
                        int index19_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA19_4 = input.LA(1);

                         
                        int index19_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA19_5 = input.LA(1);

                         
                        int index19_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA19_6 = input.LA(1);

                         
                        int index19_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA19_7 = input.LA(1);

                         
                        int index19_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA19_8 = input.LA(1);

                         
                        int index19_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA19_9 = input.LA(1);

                         
                        int index19_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA19_10 = input.LA(1);

                         
                        int index19_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA19_11 = input.LA(1);

                         
                        int index19_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA19_12 = input.LA(1);

                         
                        int index19_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA19_13 = input.LA(1);

                         
                        int index19_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA19_14 = input.LA(1);

                         
                        int index19_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA19_15 = input.LA(1);

                         
                        int index19_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA19_16 = input.LA(1);

                         
                        int index19_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA19_17 = input.LA(1);

                         
                        int index19_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA19_18 = input.LA(1);

                         
                        int index19_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA19_19 = input.LA(1);

                         
                        int index19_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA19_20 = input.LA(1);

                         
                        int index19_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA19_21 = input.LA(1);

                         
                        int index19_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA19_22 = input.LA(1);

                         
                        int index19_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA19_23 = input.LA(1);

                         
                        int index19_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA19_24 = input.LA(1);

                         
                        int index19_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA19_25 = input.LA(1);

                         
                        int index19_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA19_26 = input.LA(1);

                         
                        int index19_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA19_27 = input.LA(1);

                         
                        int index19_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA19_28 = input.LA(1);

                         
                        int index19_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalAnsic()) ) {s = 30;}

                        else if ( (synpred55_InternalAnsic()) ) {s = 31;}

                         
                        input.seek(index19_28);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 19, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_31s = "\1\77\34\0\2\uffff";
    static final String dfa_32s = "\35\uffff\1\1\1\2";
    static final String[] dfa_33s = {
            "\1\32\1\33\1\34\2\uffff\1\27\1\30\1\31\1\23\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\1\1\26\4\uffff\1\24\1\25\2\uffff\1\2\1\3\1\4\1\5\1\6",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_31 = DFA.unpackEncodedStringToUnsignedChars(dfa_31s);
    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[][] dfa_33 = unpackEncodedStringArray(dfa_33s);

    class DFA20 extends DFA {

        public DFA20(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 20;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_31;
            this.accept = dfa_32;
            this.special = dfa_5;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "2336:2: ( ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) ( (lv_declaration_list_2_0= ruledeclaration_list ) ) ( (lv_compound_statement_3_0= rulecompound_statement ) ) ) | ( ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) ( (lv_declarator_5_0= ruledeclarator ) ) ( (lv_compound_statement_6_0= rulecompound_statement ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA20_1 = input.LA(1);

                         
                        int index20_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA20_2 = input.LA(1);

                         
                        int index20_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA20_3 = input.LA(1);

                         
                        int index20_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA20_4 = input.LA(1);

                         
                        int index20_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA20_5 = input.LA(1);

                         
                        int index20_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA20_6 = input.LA(1);

                         
                        int index20_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA20_7 = input.LA(1);

                         
                        int index20_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA20_8 = input.LA(1);

                         
                        int index20_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA20_9 = input.LA(1);

                         
                        int index20_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA20_10 = input.LA(1);

                         
                        int index20_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA20_11 = input.LA(1);

                         
                        int index20_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA20_12 = input.LA(1);

                         
                        int index20_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA20_13 = input.LA(1);

                         
                        int index20_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA20_14 = input.LA(1);

                         
                        int index20_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA20_15 = input.LA(1);

                         
                        int index20_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA20_16 = input.LA(1);

                         
                        int index20_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA20_17 = input.LA(1);

                         
                        int index20_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA20_18 = input.LA(1);

                         
                        int index20_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA20_19 = input.LA(1);

                         
                        int index20_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA20_20 = input.LA(1);

                         
                        int index20_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA20_21 = input.LA(1);

                         
                        int index20_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA20_22 = input.LA(1);

                         
                        int index20_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA20_23 = input.LA(1);

                         
                        int index20_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA20_24 = input.LA(1);

                         
                        int index20_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA20_25 = input.LA(1);

                         
                        int index20_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA20_26 = input.LA(1);

                         
                        int index20_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA20_27 = input.LA(1);

                         
                        int index20_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA20_28 = input.LA(1);

                         
                        int index20_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred56_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index20_28);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 20, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_34s = "\17\uffff";
    static final String dfa_35s = "\1\37\2\0\14\uffff";
    static final String dfa_36s = "\1\101\2\0\14\uffff";
    static final String dfa_37s = "\3\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14";
    static final String dfa_38s = "\1\uffff\1\0\1\1\14\uffff}>";
    static final String[] dfa_39s = {
            "\1\2\41\uffff\1\1",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[][] dfa_39 = unpackEncodedStringArray(dfa_39s);

    class DFA27 extends DFA {

        public DFA27(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 27;
            this.eot = dfa_34;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_38;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "3120:2: ( (otherlv_0= '[' otherlv_1= ']' ) | (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' ) | (otherlv_5= '[' otherlv_6= 'static' ( (lv_type_qualifier_list_7_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' ) | (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' ) | (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) otherlv_16= '*' otherlv_17= ']' ) | (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' ) | (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_25_0= ruleassignment_expression ) ) otherlv_26= ']' ) | (otherlv_27= '[' ( (lv_type_qualifier_list_28_0= ruletype_qualifier_list ) ) otherlv_29= ']' ) | (otherlv_30= '[' ( (lv_assignment_expression_31_0= ruleassignment_expression ) ) otherlv_32= ']' ) | (otherlv_33= '(' ( (lv_parameter_type_list_34_0= ruleparameter_type_list ) ) otherlv_35= ')' ) | (otherlv_36= '(' otherlv_37= ')' ) | (otherlv_38= '(' ( (lv_identifier_list_39_0= ruleidentifier_list ) ) otherlv_40= ')' ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA27_1 = input.LA(1);

                         
                        int index27_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred65_InternalAnsic()) ) {s = 3;}

                        else if ( (synpred66_InternalAnsic()) ) {s = 4;}

                        else if ( (synpred67_InternalAnsic()) ) {s = 5;}

                        else if ( (synpred68_InternalAnsic()) ) {s = 6;}

                        else if ( (synpred69_InternalAnsic()) ) {s = 7;}

                        else if ( (synpred70_InternalAnsic()) ) {s = 8;}

                        else if ( (synpred71_InternalAnsic()) ) {s = 9;}

                        else if ( (synpred72_InternalAnsic()) ) {s = 10;}

                        else if ( (synpred73_InternalAnsic()) ) {s = 11;}

                         
                        input.seek(index27_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA27_2 = input.LA(1);

                         
                        int index27_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalAnsic()) ) {s = 12;}

                        else if ( (synpred75_InternalAnsic()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index27_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 27, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA28 extends DFA {

        public DFA28(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 28;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_31;
            this.accept = dfa_32;
            this.special = dfa_5;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "3518:2: ( ( ( (lv_parameter_list_0_0= ruleparameter_list ) ) otherlv_1= ',' otherlv_2= '...' ) | ( (lv_parameter_list_3_0= ruleparameter_list ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA28_1 = input.LA(1);

                         
                        int index28_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA28_2 = input.LA(1);

                         
                        int index28_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA28_3 = input.LA(1);

                         
                        int index28_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA28_4 = input.LA(1);

                         
                        int index28_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA28_5 = input.LA(1);

                         
                        int index28_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA28_6 = input.LA(1);

                         
                        int index28_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA28_7 = input.LA(1);

                         
                        int index28_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA28_8 = input.LA(1);

                         
                        int index28_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA28_9 = input.LA(1);

                         
                        int index28_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA28_10 = input.LA(1);

                         
                        int index28_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA28_11 = input.LA(1);

                         
                        int index28_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA28_12 = input.LA(1);

                         
                        int index28_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA28_13 = input.LA(1);

                         
                        int index28_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA28_14 = input.LA(1);

                         
                        int index28_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA28_15 = input.LA(1);

                         
                        int index28_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA28_16 = input.LA(1);

                         
                        int index28_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA28_17 = input.LA(1);

                         
                        int index28_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA28_18 = input.LA(1);

                         
                        int index28_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA28_19 = input.LA(1);

                         
                        int index28_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA28_20 = input.LA(1);

                         
                        int index28_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA28_21 = input.LA(1);

                         
                        int index28_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA28_22 = input.LA(1);

                         
                        int index28_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA28_23 = input.LA(1);

                         
                        int index28_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA28_24 = input.LA(1);

                         
                        int index28_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA28_25 = input.LA(1);

                         
                        int index28_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA28_26 = input.LA(1);

                         
                        int index28_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA28_27 = input.LA(1);

                         
                        int index28_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA28_28 = input.LA(1);

                         
                        int index28_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalAnsic()) ) {s = 29;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index28_28);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 28, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_40s = "\1\77\34\0\3\uffff";
    static final String dfa_41s = "\35\uffff\1\1\1\2\1\3";
    static final String[] dfa_42s = {
            "\1\32\1\33\1\34\2\uffff\1\27\1\30\1\31\1\23\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\1\1\26\4\uffff\1\24\1\25\2\uffff\1\2\1\3\1\4\1\5\1\6",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };
    static final char[] dfa_40 = DFA.unpackEncodedStringToUnsignedChars(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final short[][] dfa_42 = unpackEncodedStringArray(dfa_42s);

    class DFA30 extends DFA {

        public DFA30(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 30;
            this.eot = dfa_25;
            this.eof = dfa_25;
            this.min = dfa_26;
            this.max = dfa_40;
            this.accept = dfa_41;
            this.special = dfa_29;
            this.transition = dfa_42;
        }
        public String getDescription() {
            return "3716:2: ( ( ( (lv_declaration_specifiers_0_0= ruledeclaration_specifiers ) ) ( (lv_declarator_1_0= ruledeclarator ) ) ) | ( ( (lv_declaration_specifiers_2_0= ruledeclaration_specifiers ) ) ( (lv_abstract_declarator_3_0= ruleabstract_declarator ) ) ) | ( (lv_declaration_specifiers_4_0= ruledeclaration_specifiers ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA30_1 = input.LA(1);

                         
                        int index30_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred79_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index30_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA30_2 = input.LA(1);

                         
                        int index30_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred79_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index30_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA30_3 = input.LA(1);

                         
                        int index30_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred79_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index30_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA30_4 = input.LA(1);

                         
                        int index30_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred79_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index30_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA30_5 = input.LA(1);

                         
                        int index30_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred79_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index30_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA30_6 = input.LA(1);

                         
                        int index30_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred79_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index30_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA30_7 = input.LA(1);

                         
                        int index30_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred79_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index30_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA30_8 = input.LA(1);

                         
                        int index30_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred79_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index30_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA30_9 = input.LA(1);

                         
                        int index30_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred79_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index30_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA30_10 = input.LA(1);

                         
                        int index30_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred79_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index30_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA30_11 = input.LA(1);

                         
                        int index30_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred79_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index30_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA30_12 = input.LA(1);

                         
                        int index30_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred79_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index30_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA30_13 = input.LA(1);

                         
                        int index30_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred79_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index30_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA30_14 = input.LA(1);

                         
                        int index30_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred79_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index30_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA30_15 = input.LA(1);

                         
                        int index30_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred79_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index30_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA30_16 = input.LA(1);

                         
                        int index30_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred79_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index30_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA30_17 = input.LA(1);

                         
                        int index30_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred79_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index30_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA30_18 = input.LA(1);

                         
                        int index30_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred79_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index30_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA30_19 = input.LA(1);

                         
                        int index30_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred79_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index30_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA30_20 = input.LA(1);

                         
                        int index30_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred79_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index30_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA30_21 = input.LA(1);

                         
                        int index30_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred79_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index30_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA30_22 = input.LA(1);

                         
                        int index30_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred79_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index30_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA30_23 = input.LA(1);

                         
                        int index30_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred79_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index30_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA30_24 = input.LA(1);

                         
                        int index30_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred79_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index30_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA30_25 = input.LA(1);

                         
                        int index30_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred79_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index30_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA30_26 = input.LA(1);

                         
                        int index30_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred79_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index30_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA30_27 = input.LA(1);

                         
                        int index30_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred79_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index30_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA30_28 = input.LA(1);

                         
                        int index30_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalAnsic()) ) {s = 29;}

                        else if ( (synpred79_InternalAnsic()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index30_28);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 30, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_43s = "\16\uffff";
    static final String dfa_44s = "\1\37\2\0\13\uffff";
    static final String dfa_45s = "\1\101\2\0\13\uffff";
    static final String dfa_46s = "\3\uffff\1\1\1\12\1\13\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11";
    static final String dfa_47s = "\1\uffff\1\0\1\1\13\uffff}>";
    static final String[] dfa_48s = {
            "\1\1\41\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final char[] dfa_44 = DFA.unpackEncodedStringToUnsignedChars(dfa_44s);
    static final char[] dfa_45 = DFA.unpackEncodedStringToUnsignedChars(dfa_45s);
    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final short[] dfa_47 = DFA.unpackEncodedString(dfa_47s);
    static final short[][] dfa_48 = unpackEncodedStringArray(dfa_48s);

    class DFA32 extends DFA {

        public DFA32(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 32;
            this.eot = dfa_43;
            this.eof = dfa_43;
            this.min = dfa_44;
            this.max = dfa_45;
            this.accept = dfa_46;
            this.special = dfa_47;
            this.transition = dfa_48;
        }
        public String getDescription() {
            return "3936:3: ( (otherlv_0= '(' ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) otherlv_2= ')' ) | (otherlv_3= '[' otherlv_4= ']' ) | (otherlv_5= '[' otherlv_6= '*' otherlv_7= ']' ) | (otherlv_8= '[' otherlv_9= 'static' ( (lv_type_qualifier_list_10_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_11_0= ruleassignment_expression ) ) otherlv_12= ']' ) | (otherlv_13= '[' otherlv_14= 'static' ( (lv_assignment_expression_15_0= ruleassignment_expression ) ) otherlv_16= ']' ) | (otherlv_17= '[' ( (lv_type_qualifier_list_18_0= ruletype_qualifier_list ) ) otherlv_19= 'static' ( (lv_assignment_expression_20_0= ruleassignment_expression ) ) otherlv_21= ']' ) | (otherlv_22= '[' ( (lv_type_qualifier_list_23_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_24_0= ruleassignment_expression ) ) otherlv_25= ']' ) | (otherlv_26= '[' ( (lv_type_qualifier_list_27_0= ruletype_qualifier_list ) ) otherlv_28= ']' ) | (otherlv_29= '[' ( (lv_assignment_expression_30_0= ruleassignment_expression ) ) otherlv_31= ']' ) | (otherlv_32= '(' otherlv_33= ')' ) | (otherlv_34= '(' ( (lv_parameter_type_list_35_0= ruleparameter_type_list ) ) otherlv_36= ')' ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA32_1 = input.LA(1);

                         
                        int index32_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred82_InternalAnsic()) ) {s = 3;}

                        else if ( (synpred91_InternalAnsic()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index32_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA32_2 = input.LA(1);

                         
                        int index32_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred83_InternalAnsic()) ) {s = 6;}

                        else if ( (synpred84_InternalAnsic()) ) {s = 7;}

                        else if ( (synpred85_InternalAnsic()) ) {s = 8;}

                        else if ( (synpred86_InternalAnsic()) ) {s = 9;}

                        else if ( (synpred87_InternalAnsic()) ) {s = 10;}

                        else if ( (synpred88_InternalAnsic()) ) {s = 11;}

                        else if ( (synpred89_InternalAnsic()) ) {s = 12;}

                        else if ( (synpred90_InternalAnsic()) ) {s = 13;}

                         
                        input.seek(index32_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 32, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_49s = "\26\uffff";
    static final String dfa_50s = "\1\4\1\0\24\uffff";
    static final String dfa_51s = "\1\162\1\0\24\uffff";
    static final String dfa_52s = "\2\uffff\1\3\21\uffff\1\1\1\2";
    static final String dfa_53s = "\1\uffff\1\0\24\uffff}>";
    static final String[] dfa_54s = {
            "\4\2\27\uffff\1\2\22\uffff\1\2\1\1\14\uffff\1\2\3\uffff\1\2\4\uffff\4\2\2\uffff\2\2\17\uffff\1\2\17\uffff\3\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final char[] dfa_50 = DFA.unpackEncodedStringToUnsignedChars(dfa_50s);
    static final char[] dfa_51 = DFA.unpackEncodedStringToUnsignedChars(dfa_51s);
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final short[] dfa_53 = DFA.unpackEncodedString(dfa_53s);
    static final short[][] dfa_54 = unpackEncodedStringArray(dfa_54s);

    class DFA33 extends DFA {

        public DFA33(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 33;
            this.eot = dfa_49;
            this.eof = dfa_49;
            this.min = dfa_50;
            this.max = dfa_51;
            this.accept = dfa_52;
            this.special = dfa_53;
            this.transition = dfa_54;
        }
        public String getDescription() {
            return "4320:2: ( (otherlv_0= '{' ( (lv_init_declarator_list_1_0= ruleinitializer_list ) ) otherlv_2= '}' ) | (otherlv_3= '{' ( (lv_init_declarator_list_4_0= ruleinitializer_list ) ) otherlv_5= ',' otherlv_6= '}' ) | ( (lv_assignment_expression_7_0= ruleassignment_expression ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA33_1 = input.LA(1);

                         
                        int index33_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred92_InternalAnsic()) ) {s = 20;}

                        else if ( (synpred93_InternalAnsic()) ) {s = 21;}

                         
                        input.seek(index33_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 33, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_55s = "\15\uffff";
    static final String dfa_56s = "\1\37\2\0\12\uffff";
    static final String dfa_57s = "\1\101\2\0\12\uffff";
    static final String dfa_58s = "\3\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12";
    static final String dfa_59s = "\1\uffff\1\0\1\1\12\uffff}>";
    static final String[] dfa_60s = {
            "\1\2\41\uffff\1\1",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final char[] dfa_56 = DFA.unpackEncodedStringToUnsignedChars(dfa_56s);
    static final char[] dfa_57 = DFA.unpackEncodedStringToUnsignedChars(dfa_57s);
    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final short[][] dfa_60 = unpackEncodedStringArray(dfa_60s);

    class DFA35 extends DFA {

        public DFA35(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 35;
            this.eot = dfa_55;
            this.eof = dfa_55;
            this.min = dfa_56;
            this.max = dfa_57;
            this.accept = dfa_58;
            this.special = dfa_59;
            this.transition = dfa_60;
        }
        public String getDescription() {
            return "4491:2: ( (otherlv_0= '[' otherlv_1= ']' ) | (otherlv_2= '[' otherlv_3= '*' otherlv_4= ']' ) | (otherlv_5= '[' otherlv_6= 'static' this_type_qualifier_list_7= ruletype_qualifier_list ( (lv_assignment_expression_8_0= ruleassignment_expression ) ) otherlv_9= ']' ) | (otherlv_10= '[' otherlv_11= 'static' ( (lv_assignment_expression_12_0= ruleassignment_expression ) ) otherlv_13= ']' ) | (otherlv_14= '[' ( (lv_type_qualifier_list_15_0= ruletype_qualifier_list ) ) ( (lv_assignment_expression_16_0= ruleassignment_expression ) ) otherlv_17= ']' ) | (otherlv_18= '[' ( (lv_type_qualifier_list_19_0= ruletype_qualifier_list ) ) otherlv_20= 'static' ( (lv_assignment_expression_21_0= ruleassignment_expression ) ) otherlv_22= ']' ) | (otherlv_23= '[' ( (lv_type_qualifier_list_24_0= ruletype_qualifier_list ) ) otherlv_25= ']' ) | (otherlv_26= '[' ( (lv_assignment_expression_27_0= ruleassignment_expression ) ) otherlv_28= ']' ) | (otherlv_29= '(' otherlv_30= ')' ) | (otherlv_31= '(' ( (lv_parameter_type_list_32_0= ruleparameter_type_list ) ) otherlv_33= ')' ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA35_1 = input.LA(1);

                         
                        int index35_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalAnsic()) ) {s = 3;}

                        else if ( (synpred96_InternalAnsic()) ) {s = 4;}

                        else if ( (synpred97_InternalAnsic()) ) {s = 5;}

                        else if ( (synpred98_InternalAnsic()) ) {s = 6;}

                        else if ( (synpred99_InternalAnsic()) ) {s = 7;}

                        else if ( (synpred100_InternalAnsic()) ) {s = 8;}

                        else if ( (synpred101_InternalAnsic()) ) {s = 9;}

                        else if ( (synpred102_InternalAnsic()) ) {s = 10;}

                         
                        input.seek(index35_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA35_2 = input.LA(1);

                         
                        int index35_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalAnsic()) ) {s = 11;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index35_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 35, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_61s = "\13\uffff";
    static final String dfa_62s = "\1\4\6\uffff\1\0\3\uffff";
    static final String dfa_63s = "\1\162\6\uffff\1\0\3\uffff";
    static final String dfa_64s = "\1\uffff\1\1\7\uffff\1\2\1\3";
    static final String dfa_65s = "\7\uffff\1\0\3\uffff}>";
    static final String[] dfa_66s = {
            "\4\1\27\uffff\1\7\22\uffff\1\1\21\uffff\1\1\55\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final char[] dfa_62 = DFA.unpackEncodedStringToUnsignedChars(dfa_62s);
    static final char[] dfa_63 = DFA.unpackEncodedStringToUnsignedChars(dfa_63s);
    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final short[][] dfa_66 = unpackEncodedStringArray(dfa_66s);

    class DFA41 extends DFA {

        public DFA41(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 41;
            this.eot = dfa_61;
            this.eof = dfa_61;
            this.min = dfa_62;
            this.max = dfa_63;
            this.accept = dfa_64;
            this.special = dfa_65;
            this.transition = dfa_66;
        }
        public String getDescription() {
            return "5492:2: ( ( ( (lv_primary_expression_0_0= ruleprimary_expression ) ) ( (lv_postfix_expression_linha_1_0= rulepostfix_expression_linha ) ) ) | (otherlv_2= '(' this_type_name_3= ruletype_name otherlv_4= ')' otherlv_5= '{' ( (lv_initializer_list_6_0= ruleinitializer_list ) ) otherlv_7= '}' ( (lv_postfix_expression_linha_8_0= rulepostfix_expression_linha ) ) ) | (otherlv_9= '(' this_type_name_10= ruletype_name otherlv_11= ')' otherlv_12= '{' ( (lv_initializer_list_13_0= ruleinitializer_list ) ) otherlv_14= ',' otherlv_15= '}' ( (lv_postfix_expression_linha_16_0= rulepostfix_expression_linha ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA41_7 = input.LA(1);

                         
                        int index41_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_InternalAnsic()) ) {s = 1;}

                        else if ( (synpred113_InternalAnsic()) ) {s = 9;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index41_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 41, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_67s = "\134\uffff";
    static final String dfa_68s = "\1\7\133\uffff";
    static final String dfa_69s = "\1\4\1\uffff\1\0\2\uffff\2\0\125\uffff";
    static final String dfa_70s = "\1\162\1\uffff\1\0\2\uffff\2\0\125\uffff";
    static final String dfa_71s = "\1\uffff\1\1\5\uffff\1\2\124\uffff";
    static final String dfa_72s = "\2\uffff\1\0\2\uffff\1\1\1\2\125\uffff}>";
    static final String[] dfa_73s = {
            "\4\7\24\uffff\3\7\1\2\41\7\1\1\1\7\1\uffff\2\7\1\1\1\7\1\1\1\5\1\6\50\7",
            "",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_67 = DFA.unpackEncodedString(dfa_67s);
    static final short[] dfa_68 = DFA.unpackEncodedString(dfa_68s);
    static final char[] dfa_69 = DFA.unpackEncodedStringToUnsignedChars(dfa_69s);
    static final char[] dfa_70 = DFA.unpackEncodedStringToUnsignedChars(dfa_70s);
    static final short[] dfa_71 = DFA.unpackEncodedString(dfa_71s);
    static final short[] dfa_72 = DFA.unpackEncodedString(dfa_72s);
    static final short[][] dfa_73 = unpackEncodedStringArray(dfa_73s);

    class DFA42 extends DFA {

        public DFA42(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 42;
            this.eot = dfa_67;
            this.eof = dfa_68;
            this.min = dfa_69;
            this.max = dfa_70;
            this.accept = dfa_71;
            this.special = dfa_72;
            this.transition = dfa_73;
        }
        public String getDescription() {
            return "5702:3: ( ( (lv_postfix_expression_complement_1_0= rulepostfix_expression_complement ) ) ( (lv_postfix_expression_linha_2_0= rulepostfix_expression_linha ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA42_2 = input.LA(1);

                         
                        int index42_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred114_InternalAnsic()) ) {s = 1;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index42_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA42_5 = input.LA(1);

                         
                        int index42_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred114_InternalAnsic()) ) {s = 1;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index42_5);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA42_6 = input.LA(1);

                         
                        int index42_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred114_InternalAnsic()) ) {s = 1;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index42_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 42, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_74s = "\25\uffff";
    static final String dfa_75s = "\1\4\20\uffff\1\0\3\uffff";
    static final String dfa_76s = "\1\162\20\uffff\1\0\3\uffff";
    static final String dfa_77s = "\1\uffff\1\1\7\uffff\1\2\1\3\1\4\6\uffff\1\7\1\5\1\6";
    static final String dfa_78s = "\21\uffff\1\0\3\uffff}>";
    static final String[] dfa_79s = {
            "\4\1\27\uffff\1\1\22\uffff\1\1\15\uffff\1\13\3\uffff\1\1\4\uffff\1\11\1\12\1\21\1\22\2\uffff\2\13\17\uffff\1\13\17\uffff\2\13\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_74 = DFA.unpackEncodedString(dfa_74s);
    static final char[] dfa_75 = DFA.unpackEncodedStringToUnsignedChars(dfa_75s);
    static final char[] dfa_76 = DFA.unpackEncodedStringToUnsignedChars(dfa_76s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final short[] dfa_78 = DFA.unpackEncodedString(dfa_78s);
    static final short[][] dfa_79 = unpackEncodedStringArray(dfa_79s);

    class DFA49 extends DFA {

        public DFA49(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 49;
            this.eot = dfa_74;
            this.eof = dfa_74;
            this.min = dfa_75;
            this.max = dfa_76;
            this.accept = dfa_77;
            this.special = dfa_78;
            this.transition = dfa_79;
        }
        public String getDescription() {
            return "6624:2: ( ( (lv_postfix_expression_0_0= rulepostfix_expression ) ) | (otherlv_1= '++' ( (lv_unary_expression_2_0= ruleunary_expression ) ) ) | (otherlv_3= '--' ( (lv_unary_expression_4_0= ruleunary_expression ) ) ) | ( ( (lv_unary_operator_5_0= ruleunary_operator ) ) ( (lv_cast_expression_6_0= rulecast_expression ) ) ) | (otherlv_7= 'sizeof' ( (lv_unary_expression_8_0= ruleunary_expression ) ) ) | (otherlv_9= 'sizeof' otherlv_10= '(' ( (lv_type_name_11_0= ruletype_name ) ) otherlv_12= ')' ) | (otherlv_13= '_Alignof' otherlv_14= '(' ( (lv_type_name_15_0= ruletype_name ) ) otherlv_16= ')' ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA49_17 = input.LA(1);

                         
                        int index49_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalAnsic()) ) {s = 19;}

                        else if ( (synpred131_InternalAnsic()) ) {s = 20;}

                         
                        input.seek(index49_17);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 49, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_80s = "\24\uffff";
    static final String dfa_81s = "\1\4\6\uffff\1\0\14\uffff";
    static final String dfa_82s = "\1\162\6\uffff\1\0\14\uffff";
    static final String dfa_83s = "\1\uffff\1\1\21\uffff\1\2";
    static final String dfa_84s = "\7\uffff\1\0\14\uffff}>";
    static final String[] dfa_85s = {
            "\4\1\27\uffff\1\7\22\uffff\1\1\15\uffff\1\1\3\uffff\1\1\4\uffff\4\1\2\uffff\2\1\17\uffff\1\1\17\uffff\3\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_80 = DFA.unpackEncodedString(dfa_80s);
    static final char[] dfa_81 = DFA.unpackEncodedStringToUnsignedChars(dfa_81s);
    static final char[] dfa_82 = DFA.unpackEncodedStringToUnsignedChars(dfa_82s);
    static final short[] dfa_83 = DFA.unpackEncodedString(dfa_83s);
    static final short[] dfa_84 = DFA.unpackEncodedString(dfa_84s);
    static final short[][] dfa_85 = unpackEncodedStringArray(dfa_85s);

    class DFA50 extends DFA {

        public DFA50(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 50;
            this.eot = dfa_80;
            this.eof = dfa_80;
            this.min = dfa_81;
            this.max = dfa_82;
            this.accept = dfa_83;
            this.special = dfa_84;
            this.transition = dfa_85;
        }
        public String getDescription() {
            return "6849:2: ( ( (lv_unary_expression_0_0= ruleunary_expression ) ) | (otherlv_1= '(' ( (lv_type_name_2_0= ruletype_name ) ) otherlv_3= ')' ( (lv_cast_expression_4_0= rulecast_expression ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA50_7 = input.LA(1);

                         
                        int index50_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalAnsic()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index50_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 50, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_86s = "\116\uffff";
    static final String dfa_87s = "\1\4\115\uffff";
    static final String dfa_88s = "\1\4\1\0\114\uffff";
    static final String dfa_89s = "\1\162\1\0\114\uffff";
    static final String dfa_90s = "\2\uffff\1\1\1\uffff\1\2\111\uffff";
    static final String dfa_91s = "\1\uffff\1\0\114\uffff}>";
    static final String[] dfa_92s = {
            "\4\4\24\uffff\32\4\1\uffff\11\4\1\1\1\uffff\1\4\1\uffff\2\4\1\uffff\1\4\1\uffff\4\4\2\2\27\4\12\uffff\3\4",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_86 = DFA.unpackEncodedString(dfa_86s);
    static final short[] dfa_87 = DFA.unpackEncodedString(dfa_87s);
    static final char[] dfa_88 = DFA.unpackEncodedStringToUnsignedChars(dfa_88s);
    static final char[] dfa_89 = DFA.unpackEncodedStringToUnsignedChars(dfa_89s);
    static final short[] dfa_90 = DFA.unpackEncodedString(dfa_90s);
    static final short[] dfa_91 = DFA.unpackEncodedString(dfa_91s);
    static final short[][] dfa_92 = unpackEncodedStringArray(dfa_92s);

    class DFA51 extends DFA {

        public DFA51(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 51;
            this.eot = dfa_86;
            this.eof = dfa_87;
            this.min = dfa_88;
            this.max = dfa_89;
            this.accept = dfa_90;
            this.special = dfa_91;
            this.transition = dfa_92;
        }
        public String getDescription() {
            return "7004:3: ( ( (lv_multiplicative_expression_complement_1_0= rulemultiplicative_expression_complement ) ) ( (lv_multiplicative_expression_linha_2_0= rulemultiplicative_expression_linha ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA51_1 = input.LA(1);

                         
                        int index51_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalAnsic()) ) {s = 2;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index51_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 51, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_93s = "\115\uffff";
    static final String dfa_94s = "\1\3\114\uffff";
    static final String dfa_95s = "\1\4\2\0\112\uffff";
    static final String dfa_96s = "\1\162\2\0\112\uffff";
    static final String dfa_97s = "\3\uffff\1\2\110\uffff\1\1";
    static final String dfa_98s = "\1\uffff\1\0\1\1\112\uffff}>";
    static final String[] dfa_99s = {
            "\4\3\24\uffff\32\3\1\uffff\12\3\1\uffff\1\3\1\uffff\2\3\1\uffff\1\3\1\uffff\4\3\2\uffff\1\1\1\2\25\3\12\uffff\3\3",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_93 = DFA.unpackEncodedString(dfa_93s);
    static final short[] dfa_94 = DFA.unpackEncodedString(dfa_94s);
    static final char[] dfa_95 = DFA.unpackEncodedStringToUnsignedChars(dfa_95s);
    static final char[] dfa_96 = DFA.unpackEncodedStringToUnsignedChars(dfa_96s);
    static final short[] dfa_97 = DFA.unpackEncodedString(dfa_97s);
    static final short[] dfa_98 = DFA.unpackEncodedString(dfa_98s);
    static final short[][] dfa_99 = unpackEncodedStringArray(dfa_99s);

    class DFA53 extends DFA {

        public DFA53(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 53;
            this.eot = dfa_93;
            this.eof = dfa_94;
            this.min = dfa_95;
            this.max = dfa_96;
            this.accept = dfa_97;
            this.special = dfa_98;
            this.transition = dfa_99;
        }
        public String getDescription() {
            return "7226:3: ( ( (lv_additive_expression_complement_1_0= ruleadditive_expression_complement ) ) ( (lv_additive_expression_linha_2_0= ruleadditive_expression_linha ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA53_1 = input.LA(1);

                         
                        int index53_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalAnsic()) ) {s = 76;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index53_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA53_2 = input.LA(1);

                         
                        int index53_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalAnsic()) ) {s = 76;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index53_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 53, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_100s = {
            "\4\3\24\uffff\32\3\1\uffff\12\3\1\uffff\1\3\1\uffff\2\3\1\uffff\1\3\1\uffff\4\3\2\uffff\2\3\1\1\1\2\23\3\12\uffff\3\3",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_100 = unpackEncodedStringArray(dfa_100s);

    class DFA55 extends DFA {

        public DFA55(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 55;
            this.eot = dfa_93;
            this.eof = dfa_94;
            this.min = dfa_95;
            this.max = dfa_96;
            this.accept = dfa_97;
            this.special = dfa_98;
            this.transition = dfa_100;
        }
        public String getDescription() {
            return "7422:3: ( ( (lv_shift_expression_complement_1_0= ruleshift_expression_complement ) ) ( (lv_shift_expression_linha_2_0= ruleshift_expression_linha ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA55_1 = input.LA(1);

                         
                        int index55_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalAnsic()) ) {s = 76;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index55_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA55_2 = input.LA(1);

                         
                        int index55_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalAnsic()) ) {s = 76;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index55_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 55, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_101s = "\111\uffff";
    static final String dfa_102s = "\1\2\110\uffff";
    static final String dfa_103s = "\1\4\1\0\107\uffff";
    static final String dfa_104s = "\1\162\1\0\107\uffff";
    static final String dfa_105s = "\2\uffff\1\2\105\uffff\1\1";
    static final String dfa_106s = "\1\uffff\1\0\107\uffff}>";
    static final String[] dfa_107s = {
            "\4\2\24\uffff\32\2\1\uffff\12\2\1\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\4\2\2\uffff\2\2\4\uffff\13\2\1\1\5\2\12\uffff\3\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_101 = DFA.unpackEncodedString(dfa_101s);
    static final short[] dfa_102 = DFA.unpackEncodedString(dfa_102s);
    static final char[] dfa_103 = DFA.unpackEncodedStringToUnsignedChars(dfa_103s);
    static final char[] dfa_104 = DFA.unpackEncodedStringToUnsignedChars(dfa_104s);
    static final short[] dfa_105 = DFA.unpackEncodedString(dfa_105s);
    static final short[] dfa_106 = DFA.unpackEncodedString(dfa_106s);
    static final short[][] dfa_107 = unpackEncodedStringArray(dfa_107s);

    class DFA69 extends DFA {

        public DFA69(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 69;
            this.eot = dfa_101;
            this.eof = dfa_102;
            this.min = dfa_103;
            this.max = dfa_104;
            this.accept = dfa_105;
            this.special = dfa_106;
            this.transition = dfa_107;
        }
        public String getDescription() {
            return "9223:3: (otherlv_1= '&' ( (lv_equality_expression_2_0= ruleequality_expression ) ) ( (lv_and_expression_linha_3_0= ruleand_expression_linha ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA69_1 = input.LA(1);

                         
                        int index69_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred165_InternalAnsic()) ) {s = 72;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index69_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 69, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_108s = "\1\4\22\0\2\uffff";
    static final String dfa_109s = "\1\162\22\0\2\uffff";
    static final String dfa_110s = "\23\uffff\1\1\1\2";
    static final String dfa_111s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\2\uffff}>";
    static final String[] dfa_112s = {
            "\1\1\1\5\1\2\1\3\27\uffff\1\7\22\uffff\1\4\15\uffff\1\14\3\uffff\1\10\4\uffff\1\11\1\12\1\21\1\22\2\uffff\1\15\1\16\17\uffff\1\13\17\uffff\1\17\1\20\1\6",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_108 = DFA.unpackEncodedStringToUnsignedChars(dfa_108s);
    static final char[] dfa_109 = DFA.unpackEncodedStringToUnsignedChars(dfa_109s);
    static final short[] dfa_110 = DFA.unpackEncodedString(dfa_110s);
    static final short[] dfa_111 = DFA.unpackEncodedString(dfa_111s);
    static final short[][] dfa_112 = unpackEncodedStringArray(dfa_112s);

    class DFA75 extends DFA {

        public DFA75(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 75;
            this.eot = dfa_74;
            this.eof = dfa_74;
            this.min = dfa_108;
            this.max = dfa_109;
            this.accept = dfa_110;
            this.special = dfa_111;
            this.transition = dfa_112;
        }
        public String getDescription() {
            return "9958:2: ( ( (lv_conditional_expression_0_0= ruleconditional_expression ) ) | ( ( (lv_unary_expression_1_0= ruleunary_expression ) ) ( (lv_assignment_operator_2_0= ruleassignment_operator ) ) ( (lv_assignment_expression_3_0= ruleassignment_expression ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA75_1 = input.LA(1);

                         
                        int index75_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred171_InternalAnsic()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index75_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA75_2 = input.LA(1);

                         
                        int index75_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred171_InternalAnsic()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index75_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA75_3 = input.LA(1);

                         
                        int index75_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred171_InternalAnsic()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index75_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA75_4 = input.LA(1);

                         
                        int index75_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred171_InternalAnsic()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index75_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA75_5 = input.LA(1);

                         
                        int index75_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred171_InternalAnsic()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index75_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA75_6 = input.LA(1);

                         
                        int index75_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred171_InternalAnsic()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index75_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA75_7 = input.LA(1);

                         
                        int index75_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred171_InternalAnsic()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index75_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA75_8 = input.LA(1);

                         
                        int index75_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred171_InternalAnsic()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index75_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA75_9 = input.LA(1);

                         
                        int index75_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred171_InternalAnsic()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index75_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA75_10 = input.LA(1);

                         
                        int index75_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred171_InternalAnsic()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index75_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA75_11 = input.LA(1);

                         
                        int index75_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred171_InternalAnsic()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index75_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA75_12 = input.LA(1);

                         
                        int index75_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred171_InternalAnsic()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index75_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA75_13 = input.LA(1);

                         
                        int index75_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred171_InternalAnsic()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index75_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA75_14 = input.LA(1);

                         
                        int index75_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred171_InternalAnsic()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index75_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA75_15 = input.LA(1);

                         
                        int index75_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred171_InternalAnsic()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index75_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA75_16 = input.LA(1);

                         
                        int index75_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred171_InternalAnsic()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index75_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA75_17 = input.LA(1);

                         
                        int index75_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred171_InternalAnsic()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index75_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA75_18 = input.LA(1);

                         
                        int index75_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred171_InternalAnsic()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index75_18);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 75, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_113s = "\27\uffff";
    static final String dfa_114s = "\1\41\24\0\2\uffff";
    static final String dfa_115s = "\1\70\24\0\2\uffff";
    static final String dfa_116s = "\25\uffff\1\1\1\2";
    static final String dfa_117s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\2\uffff}>";
    static final String[] dfa_118s = {
            "\1\22\1\23\1\24\1\15\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\21\1\20\4\uffff\1\16\1\17",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_113 = DFA.unpackEncodedString(dfa_113s);
    static final char[] dfa_114 = DFA.unpackEncodedStringToUnsignedChars(dfa_114s);
    static final char[] dfa_115 = DFA.unpackEncodedStringToUnsignedChars(dfa_115s);
    static final short[] dfa_116 = DFA.unpackEncodedString(dfa_116s);
    static final short[] dfa_117 = DFA.unpackEncodedString(dfa_117s);
    static final short[][] dfa_118 = unpackEncodedStringArray(dfa_118s);

    class DFA78 extends DFA {

        public DFA78(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 78;
            this.eot = dfa_113;
            this.eof = dfa_113;
            this.min = dfa_114;
            this.max = dfa_115;
            this.accept = dfa_116;
            this.special = dfa_117;
            this.transition = dfa_118;
        }
        public String getDescription() {
            return "10194:2: ( ( ( (lv_specifier_qualifier_list_0_0= rulespecifier_qualifier_list ) ) ( (lv_abstract_declarator_1_0= ruleabstract_declarator ) ) ) | ( (lv_specifier_qualifier_list_2_0= rulespecifier_qualifier_list ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA78_1 = input.LA(1);

                         
                        int index78_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred187_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA78_2 = input.LA(1);

                         
                        int index78_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred187_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA78_3 = input.LA(1);

                         
                        int index78_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred187_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA78_4 = input.LA(1);

                         
                        int index78_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred187_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA78_5 = input.LA(1);

                         
                        int index78_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred187_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA78_6 = input.LA(1);

                         
                        int index78_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred187_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA78_7 = input.LA(1);

                         
                        int index78_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred187_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA78_8 = input.LA(1);

                         
                        int index78_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred187_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA78_9 = input.LA(1);

                         
                        int index78_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred187_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA78_10 = input.LA(1);

                         
                        int index78_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred187_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA78_11 = input.LA(1);

                         
                        int index78_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred187_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA78_12 = input.LA(1);

                         
                        int index78_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred187_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA78_13 = input.LA(1);

                         
                        int index78_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred187_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA78_14 = input.LA(1);

                         
                        int index78_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred187_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA78_15 = input.LA(1);

                         
                        int index78_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred187_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA78_16 = input.LA(1);

                         
                        int index78_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred187_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA78_17 = input.LA(1);

                         
                        int index78_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred187_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA78_18 = input.LA(1);

                         
                        int index78_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred187_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA78_19 = input.LA(1);

                         
                        int index78_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred187_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA78_20 = input.LA(1);

                         
                        int index78_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred187_InternalAnsic()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index78_20);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 78, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0xF987FFFE70000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0xF987FFFE70000000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0187FFFE00000000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x00040000800000F0L,0x0007000100019E11L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0400000080000010L,0x0000000000000001L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000080000010L,0x0000000000000001L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000001E00000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000080000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x1000000000000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000080000000L,0x0000000000000003L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x000C0000800000F0L,0x0007000100019E53L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0187FFFE00000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000080000000L,0x0000000000000742L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000042L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000000000L,0x0000000000006001L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000000000L,0x0000000000018000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000000000000L,0x0000000000060000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000000000000L,0x0000000000180000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x020C0000800000F0L,0x00070001DFE19E31L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x02040000800000F0L,0x0007000100019E11L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0xFB8FFFFEF00000F0L,0x00070001DFE19EB1L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0040000000000000L,0x0000FFC000000000L});

}